//Flysimware/Cessna 414A/Avionics
Garmin_Alt_Alerter_1000s_DEC#(L:GENERIC_ALERTER_THOUSANDTHS) 11 >  if{  (L:GENERIC_ALERTER_THOUSANDTHS, number) 11.111 - (>L:GENERIC_ALERTER_THOUSANDTHS, number)  10 div (>L:Alerter_GENERIC_ALERTER_THOUSANDTHS, number)  }  els{  (L:GENERIC_ALERTER_TEN_THOUSANDTHS) 11 >  if{  (L:GENERIC_ALERTER_TEN_THOUSANDTHS, number) 11.111 - (>L:GENERIC_ALERTER_TEN_THOUSANDTHS, number)  10 div (>L:Alerter_GENERIC_ALERTER_TEN_THOUSANDTHS, number)  99.999 (>L:GENERIC_ALERTER_THOUSANDTHS, number)  10 div (>L:Alerter_GENERIC_ALERTER_THOUSANDTHS, number)  } } 
Garmin_Alt_Alerter_1000s_INC#(L:GENERIC_ALERTER_THOUSANDTHS, number) 99 <  if{  (L:GENERIC_ALERTER_THOUSANDTHS, number) 11.111 + (>L:GENERIC_ALERTER_THOUSANDTHS, number)  10 div (>L:Alerter_GENERIC_ALERTER_THOUSANDTHS, number)  }  els{  0 (>L:GENERIC_ALERTER_THOUSANDTHS, number) (>L:Alerter_GENERIC_ALERTER_THOUSANDTHS, number)  (L:GENERIC_ALERTER_TEN_THOUSANDTHS, number) 11.111 + (>L:GENERIC_ALERTER_TEN_THOUSANDTHS, number) 10 div (>L:Alerter_GENERIC_ALERTER_TEN_THOUSANDTHS, number)  } 
Garmin_Alt_Alerter_100s_DEC#(L:GENERIC_ALERTER_HUNDREDTHS) 11 >  if{  (L:GENERIC_ALERTER_HUNDREDTHS, number) 11.111 - (>L:GENERIC_ALERTER_HUNDREDTHS, number)  10 div (>L:Alerter_GENERIC_ALERTER_HUNDREDTHS, number)  } 
Garmin_Alt_Alerter_100s_INC#(L:GENERIC_ALERTER_HUNDREDTHS) 99 <  if{  (L:GENERIC_ALERTER_HUNDREDTHS, number) 11.111 + (>L:GENERIC_ALERTER_HUNDREDTHS, number)  10 div (>L:Alerter_GENERIC_ALERTER_HUNDREDTHS, number)  } 
Garmin_Alt_Alerter_Altitude_Arm#(L:ALT_ARM_SWITCH) ! (>L:ALT_ARM_SWITCH)
Honeywell_Alt_Alerter_1000s_DEC#(>H:KNOB_ALT_SEL_1000_DEC)
Honeywell_Alt_Alerter_1000s_INC#(>H:KNOB_ALT_SEL_1000_INC)
Honeywell_Alt_Alerter_100s_DEC#(>H:KNOB_ALT_SEL_100_DEC)
Honeywell_Alt_Alerter_100s_INC#(>H:KNOB_ALT_SEL_100_INC)
//A2A SIM/Aerostar 600/Electrical
Battery_Master_Switch_Off#0 (>L:Battery1Switch)
Battery_Master_Switch_On#1 (>L:Battery1Switch)
Left_Engine_Alt_Switch_Off#0 (>L:Eng1_GeneratorSwitch)
Left_Engine_Alt_Switch_On#1 (>L:Eng1_GeneratorSwitch)
Left_Engine_Alt_Switch_Toggle#(L:Eng1_GeneratorSwitch) ! (>L:Eng1_GeneratorSwitch)
Master_Battery_Switch_Toggle#(L:Battery1Switch) ! (>L:Battery1Switch)
Right_Engine_Alt_Switch_Off#0 (>L:Eng2_GeneratorSwitch)
Right_Engine_Alt_Switch_On#1 (>L:Eng2_GeneratorSwitch)
Right_Engine_Alt_Switch_Toggle#(L:Eng2_GeneratorSwitch) ! (>L:Eng2_GeneratorSwitch)
//A2A SIM/Comanche 250/Air Condition and Pressurization
PA24_250_Clima_Cabin_Heat_Axis#@ 15 - 10.0 / 0 max 100 min (>L:CabinTempControl, percent)
PA24_250_Clima_Cabin_Vent_Left_Axis#@ 15 - 10.0 / 0 max 100 min (>L:CabinVentLeftLever, percent)
PA24_250_Clima_Cabin_Vent_Right_Axis#@ 15 - 10.0 / 0 max 100 min (>L:CabinVentRightLever, percent)
PA24_250_Clima_Windshield_Defrost_Axis#@ 15 - 10.0 / 0 max 100 min (>L:WindowDefrosterControlKnob, percent)
PA24_250_Clima_Cabin_Heat_Dec#(L:CabinTempControl, percent) 5 - 0 max (>L:CabinTempControl, percent)
PA24_250_Clima_Cabin_Heat_Inc#(L:CabinTempControl, percent) 5 + 100 min (>L:CabinTempControl, percent)
PA24_250_Clima_Cabin_Vent_Left_Dec#(L:CabinVentLeftLever, percent) 5 - 0 max (>L:CabinVentLeftLever, percent)
PA24_250_Clima_Cabin_Vent_Left_Inc#(L:CabinVentLeftLever, percent) 5 + 100 min (>L:CabinVentLeftLever, percent)
PA24_250_Clima_Cabin_Vent_Right_Dec#(L:CabinVentRightLever, percent) 5 - 0 max (>L:CabinVentRightLever, percent)
PA24_250_Clima_Cabin_Vent_Right_Inc#(L:CabinVentRightLever, percent) 5 + 100 min (>L:CabinVentRightLever, percent)
PA24_250_Clima_Windshield_Defrost_Dec#(L:WindowDefrosterControlKnob, percent) 5 - 0 max (>L:WindowDefrosterControlKnob, percent)
PA24_250_Clima_Windshield_Defrost_Inc#(L:WindowDefrosterControlKnob, percent) 5 + 100 min (>L:WindowDefrosterControlKnob, percent)
//A2A SIM/Comanche 250/Anti Ice
PA24_250_Defrost_Toggle#(L:WindowDefrosterControlKnob, percent) 0 == if{ 100 (>L:WindowDefrosterControlKnob, percent) } els{ 0 (>L:WindowDefrosterControlKnob, percent) }
//A2A SIM/Comanche 250/Anti-Ice
PA24_250_Carbheat_Toggle#(L:Eng1_CarbHeatSwitch, Number) 0 == if{ 100 (>L:Eng1_CarbHeatSwitch, Number) } els{ 0 (>L:Eng1_CarbHeatSwitch, Number) }
PA24_250_External_Pitot_Toggle#(L:PitotTubeCover, bool) ! (>L:PitotTubeCover, bool)
PA24_250_Pitot_Heat_Off#1 (>K:PITOT_HEAT_OFF)
PA24_250_Pitot_Heat_On#1 (>K:PITOT_HEAT_ON)
PA24_250_Pitot_Heat_Toggle#1 (>K:PITOT_HEAT_TOGGLE)
PA24_250_Primer_Lock#0 (>L:PrimerState, enum)
//A2A SIM/Comanche 250/Audio
PA24_250_Headphones_Nc_Off#0 (>L:NoiseCancellingSwitch, Number) (L:Headphones, Number) 2 == if{ 1 (>L:Headphones, Number) }
PA24_250_Headphones_Nc_On#1 (>L:NoiseCancellingSwitch, Number) (L:Headphones, Number) 1 == if{ 2 (>L:Headphones, Number) }
PA24_250_Headphones_Nc_Toggle#(L:NoiseCancellingSwitch, Number) ! (>L:NoiseCancellingSwitch, Number) (L:Headphones, Number) 2 == if{ 1 (>L:Headphones, Number) } els{ (L:Headphones, Number) 1 == if{ 2 (>L:Headphones, Number) } }
PA24_250_Headphones_Off#0 (>L:Headphones, Number)
PA24_250_Headphones_On#1 (L:NoiseCancellingSwitch, Number) == if{ 2 (>L:Headphones, Number) } els{ 1 (>L:Headphones, Number) }
PA24_250_Headphones_Toggle#(L:Headphones, Number) 1 >= if{ 0 (>L:Headphones, Number) } els{ 1 (L:NoiseCancellingSwitch, Number) == if{ 2 (>L:Headphones, Number) } els{ 1 (>L:Headphones, Number) } }
//A2A SIM/Comanche 250/Autopilot
PA24_250_Ap_Alt_Use#1 (>L:APAltSwitch, Number) 0 (>L:APAltSwitch, Number)
PA24_250_Ap_Disconnect_Push#1 (>L:ApDisconnectSwitch, Number)
PA24_250_Ap_Disconnect_Release#0 (>L:ApDisconnectSwitch, Number)
PA24_250_Ap_Disconnect_Use#1 (>L:ApDisconnectSwitch, Number) 0 (>L:ApDisconnectSwitch, Number)
PA24_250_Ap_Master_Off#0 (>H:A2A_AP_MASTER) 0 (>L:ApMaster, Number)
PA24_250_Ap_Master_On#1 (>H:A2A_AP_MASTER) 1 (>L:ApMaster, Number)
PA24_250_Ap_Master_Toggle#(L:ApMaster, Number) ! d (>H:A2A_AP_MASTER) (>L:ApMaster, Number)
PA24_250_Ap_Mode_Push#1 (>L:ApModePushSwitch, Number)
PA24_250_Ap_Mode_Release#0 (>L:ApModePushSwitch, Number)
PA24_250_Ap_Mode_Turn_Center#0 (>L:ApTurnKnob, Number)
PA24_250_Ap_Mode_Turn_Left#(L:ApTurnKnob, Number) 5 - -50 max (>L:ApTurnKnob, Number)
PA24_250_Ap_Mode_Turn_Right#(L:ApTurnKnob, Number) 5 + 50 min (>L:ApTurnKnob, Number)
PA24_250_Ap_Mode_Use#1 (>L:ApModePushSwitch, Number) 0 (>L:ApModePushSwitch, Number)
//A2A SIM/Comanche 250/Avionics
PA24_250_KLN90B_Left_Cursor_Button_Press#(>H:KLN90B_LeftCursor_Toggle) 100 (>L:BUTTON_KLN90B_CRSR_L, number)
PA24_250_KLN90B_Left_Cursor_Button_Release#0 (>L:BUTTON_KLN90B_CRSR_L, number)
PA24_250_Avionics_Master_Off#(A:AVIONICS MASTER SWITCH:1, Bool) 1 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) 1 (>H:A2A_AVIONICS_SWITCH) }
PA24_250_Avionics_Master_On#(A:AVIONICS MASTER SWITCH:1, Bool) 0 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) 1 (>H:A2A_AVIONICS_SWITCH) }
PA24_250_Avionics_Master_Toggle#1 (>K:TOGGLE_AVIONICS_MASTER) 1 (>H:A2A_AVIONICS_SWITCH)
PA24_250_Edm_830_Both_Push#1 (>L:BUTTON_EDM730_Step, enum) 1 (>L:BUTTON_EDM730_LF, enum)
PA24_250_Edm_830_Both_Release#0 (>L:BUTTON_EDM730_Step, enum) 0 (>L:BUTTON_EDM730_LF, enum)
PA24_250_Edm_830_Lf_Push#1 (>L:BUTTON_EDM730_LF, enum)
PA24_250_Edm_830_Lf_Release#0 (>L:BUTTON_EDM730_LF, enum)
PA24_250_Edm_830_Step_Push#1 (>L:BUTTON_EDM730_Step, enum)
PA24_250_Edm_830_Step_Release#0 (>L:BUTTON_EDM730_Step, enum)
PA24_250_Tablet_Avionics_Config_0_No_Gps#0 (>L:AvionicsConfiguration, Number) 0 (>L:AvionicsConfigurationSaved, Number)
PA24_250_Tablet_Avionics_Config_1_430#1 (>L:AvionicsConfiguration, Number) 1 (>L:AvionicsConfigurationSaved, Number)
PA24_250_Tablet_Avionics_Config_2_530#2 (>L:AvionicsConfiguration, Number) 2 (>L:AvionicsConfigurationSaved, Number)
PA24_250_Tablet_Avionics_Config_2_530_430#3 (>L:AvionicsConfiguration, Number) 3 (>L:AvionicsConfigurationSaved, Number)
PA24_250_Tablet_Avionics_Config_4_750#4 (>L:AvionicsConfiguration, Number) 4 (>L:AvionicsConfigurationSaved, Number)
//A2A SIM/Comanche 250/Controls
PA24_250_Flaps_Axis#(L:PA24-flaps_axis) 0 max 3 min (>L:LandFlapsPos, Number)
PA24_250_Flaps_Dec#(L:LandFlapsPos, Number) 1 - 0 max (>L:LandFlapsPos, Number)
PA24_250_Flaps_Inc#(L:LandFlapsPos, Number) 1 + 3 min (>L:LandFlapsPos, Number)
PA24_250_Flaps_To_0#0 (>L:LandFlapsPos, Number)
PA24_250_Flaps_To_09#1 (>L:LandFlapsPos, Number)
PA24_250_Flaps_To_18#2 (>L:LandFlapsPos, Number)
PA24_250_Flaps_To_27#3 (>L:LandFlapsPos, Number)
PA24_250_Rudder_Trim_Neutral#0 (>A:RUDDER TRIM PCT, percent scaler 16k)
PA24_250_Rudder_Trim_To_Left#(A:RUDDER TRIM PCT, percent scaler 16k) 100 - -16384 max (>A:RUDDER TRIM PCT, percent scaler 16k)
PA24_250_Rudder_Trim_To_Right#(A:RUDDER TRIM PCT, percent scaler 16k) 100 + 16384 min (>A:RUDDER TRIM PCT, percent scaler 16k)
PA24_250_Yoke_Left_Hide#1 (>L:YokeLeftVis, Number)
PA24_250_Yoke_Left_Show#0 (>L:YokeLeftVis, Number)
PA24_250_Yoke_Left_Toggle#(L:YokeLeftVis, Number) ! (>L:YokeLeftVis, Number)
PA24_250_Yoke_Right_Hide#1 (>L:YokeRightVis, Number)
PA24_250_Yoke_Right_Show#0 (>L:YokeRightVis, Number)
PA24_250_Yoke_Right_Toggle#(L:YokeRightVis, Number) ! (>L:YokeRightVis, Number)
//A2A SIM/Comanche 250/Electrical
PA24_250_Battery_Off#0 (>L:Battery1Switch, Bool)
PA24_250_Battery_On#1 (>L:Battery1Switch, Bool)
PA24_250_Battery_Toggle#(L:Battery1Switch, Bool) ! (>L:Battery1Switch, Bool)
PA24_250_Cb_01_Landing_Gear_Motor_In#1 (>L:BreakerLandingGearMotor, bool)
PA24_250_Cb_01_Landing_Gear_Motor_Out#0 (>L:BreakerLandingGearMotor, bool)
PA24_250_Cb_01_Landing_Gear_Motor_Toggle#(L:BreakerLandingGearMotor, bool) ! (>L:BreakerLandingGearMotor, bool)
PA24_250_Cb_02_Landing_Gear_Indicator_In#1 (>L:BreakerLandingGearIndicator, bool)
PA24_250_Cb_02_Landing_Gear_Indicator_Out#0 (>L:BreakerLandingGearIndicator, bool)
PA24_250_Cb_02_Landing_Gear_Indicator_Toggle#(L:BreakerLandingGearIndicator, bool) ! (>L:BreakerLandingGearIndicator, bool)
PA24_250_Cb_03_Generator_In#1 (>L:BreakerGeneratorOutput, bool)
PA24_250_Cb_03_Generator_Out#0 (>L:BreakerGeneratorOutput, bool)
PA24_250_Cb_03_Generator_Toggle#(L:BreakerGeneratorOutput, bool) ! (>L:BreakerGeneratorOutput, bool)
PA24_250_Cb_04_Light_Nav_In#1 (>L:BreakerLightNav, bool)
PA24_250_Cb_04_Light_Nav_Out#0 (>L:BreakerLightNav, bool)
PA24_250_Cb_04_Light_Nav_Toggle#(L:BreakerLightNav, bool) ! (>L:BreakerLightNav, bool)
PA24_250_Cb_05_Gauges_Dome_In#1 (>L:BreakerGaugesEngine, bool)
PA24_250_Cb_05_Gauges_Dome_Out#0 (>L:BreakerGaugesEngine, bool)
PA24_250_Cb_05_Gauges_Dome_Toggle#(L:BreakerGaugesEngine, bool) ! (>L:BreakerGaugesEngine, bool)
PA24_250_Cb_06_Light_Landing_In#1 (>L:BreakerLightLanding, bool)
PA24_250_Cb_06_Light_Landing_Out#0 (>L:BreakerLightLanding, bool)
PA24_250_Cb_06_Light_Landing_Toggle#(L:BreakerLightLanding, bool) ! (>L:BreakerLightLanding, bool)
PA24_250_Cb_07_Light_Beacon_In#1 (>L:BreakerLightBeacon, bool)
PA24_250_Cb_07_Light_Beacon_Out#0 (>L:BreakerLightBeacon, bool)
PA24_250_Cb_07_Light_Beacon_Toggle#(L:BreakerLightBeacon, bool) ! (>L:BreakerLightBeacon, bool)
PA24_250_Cb_08_Pitot_In#1 (>L:BreakerPitotHeat, bool)
PA24_250_Cb_08_Pitot_Out#0 (>L:BreakerPitotHeat, bool)
PA24_250_Cb_08_Pitot_Toggle#(L:BreakerPitotHeat, bool) ! (>L:BreakerPitotHeat, bool)
PA24_250_Cb_09_Nav_Com_2_In#(L:AvionicsConfiguration, Number) 0 == if{ 1 (>L:BreakerNavCom2, bool) } els{ 1 (>L:BreakerNavCom1, bool) }
PA24_250_Cb_09_Nav_Com_2_Out#(L:AvionicsConfiguration, Number) 0 == if{ 0 (>L:BreakerNavCom2, bool) } els{ 0 (>L:BreakerNavCom1, bool) }
PA24_250_Cb_09_Nav_Com_2_Toggle#(L:AvionicsConfiguration, Number) 0 == if{ (L:BreakerNavCom2, bool) ! (>L:BreakerNavCom2, bool) } els{ (L:BreakerNavCom1, bool) ! (>L:BreakerNavCom1, bool) }
PA24_250_Cb_10_Nav_Com_1_In#(L:AvionicsConfiguration, Number) 0 == if{ 1 (>L:BreakerNavCom1, bool) } els{ 1 (>L:BreakerNavCom2, bool) }
PA24_250_Cb_10_Nav_Com_1_Out#(L:AvionicsConfiguration, Number) 0 == if{ 0 (>L:BreakerNavCom1, bool) } els{ 0 (>L:BreakerNavCom2, bool) }
PA24_250_Cb_10_Nav_Com_1_Toggle#(L:BreakerNavCom2, bool) ! (>L:BreakerNavCom2, bool)
PA24_250_Cb_11_Stall_Warning_In#1 (>L:BreakerWarningStall, bool)
PA24_250_Cb_11_Stall_Warning_Out#0 (>L:BreakerWarningStall, bool)
PA24_250_Cb_11_Stall_Warning_Toggle#(L:BreakerWarningStall, bool) ! (>L:BreakerWarningStall, bool)
PA24_250_Cb_12_Starter_In#1 (>L:BreakerStarter, bool)
PA24_250_Cb_12_Starter_Out#0 (>L:BreakerStarter, bool)
PA24_250_Cb_12_Starter_Toggle#(L:BreakerStarter, bool) ! (>L:BreakerStarter, bool)
PA24_250_Cb_13_Autopilot_In#1 (>L:BreakerAutopilot, bool)
PA24_250_Cb_13_Autopilot_Out#0 (>L:BreakerAutopilot, bool)
PA24_250_Cb_13_Autopilot_Toggle#(L:BreakerAutopilot, bool) ! (>L:BreakerAutopilot, bool)
PA24_250_Cb_14_Gauges_Turncoord_In#1 (>L:BreakerGaugesTurnCoord, bool)
PA24_250_Cb_14_Gauges_Turncoord_Out#0 (>L:BreakerGaugesTurnCoord, bool)
PA24_250_Cb_14_Gauges_Turncoord_Toggle#(L:BreakerGaugesTurnCoord, bool) ! (>L:BreakerGaugesTurnCoord, bool)
PA24_250_Magneto_Both#3 (>K:MAGNETO1_SET)
PA24_250_Magneto_Left#2 (>K:MAGNETO1_SET)
PA24_250_Magneto_Off#0 (>K:MAGNETO1_SET)
PA24_250_Magneto_Right#1 (>K:MAGNETO1_SET)
//A2A SIM/Comanche 250/Engine
PA24_250_Carbheat_Axis#@ 15 - 10.0 / 0 max 100 min (>L:Eng1_CarbHeatSwitch, Number)
PA24_250_Carbheat_Dec#(L:Eng1_CarbHeatSwitch, Number) 10 - 0 max (>L:Eng1_CarbHeatSwitch, Number)
PA24_250_Carbheat_Inc#(L:Eng1_CarbHeatSwitch, Number) 10 + 100 min (>L:Eng1_CarbHeatSwitch, Number)
PA24_250_Carbheat_Off#0 (>L:Eng1_CarbHeatSwitch, Number)
PA24_250_Carbheat_On#100 (>L:Eng1_CarbHeatSwitch, Number)
PA24_250_Primer_Prime#1 (>K:TOGGLE_PRIMER1)
PA24_250_Primer_Unlock#1 (>L:PrimerState, enum)
PA24_250_Primer_Unlock_And_Prime#1 (>K:PA24-primer_unlock) 1 (>K:TOGGLE_PRIMER1)
PA24_250_Starter_Push#1 (>H:A2A_ENG1_STARTER_SWITCH) 1 (>L:Eng1_StarterSwitch, Number)
PA24_250_Starter_Release#1 (>H:A2A_ENG1_STARTER_SWITCH) 0 (>L:Eng1_StarterSwitch, Number)
//A2A SIM/Comanche 250/Flight Instrumentation
PA24_250_Hsi_Knob_To_Left#(L:HeadingSelectorPush, bool) if{ 1 (>K:GYRO_DRIFT_INC) } els{ 1 (>K:HEADING_BUG_DEC) }
PA24_250_Hsi_Knob_To_Right#(L:HeadingSelectorPush, bool) if{ 1 (>K:GYRO_DRIFT_DEC) } els{ 1 (>K:HEADING_BUG_INC) }
PA24_250_Hsi_Mode_Toggle#(L:HeadingSelectorPush, bool) ! (>L:HeadingSelectorPush, bool)
PA24_250_Marker_Inner_Turn_Axis#@ 15 - 10.0 / 0 max 100 min (>L:PushToTestMBIKnob, Number)
PA24_250_Marker_Middle_Turn_Axis#@ 15 - 10.0 / 0 max 100 min (>L:PushToTestMBMKnob, Number)
PA24_250_Hsi_Course_Dec#1 (>K:VOR1_OBI_DEC)
PA24_250_Hsi_Course_Inc#1 (>K:VOR1_OBI_INC)
PA24_250_Hsi_Drift_Dec#1 (>K:GYRO_DRIFT_DEC)
PA24_250_Hsi_Drift_Inc#1 (>K:GYRO_DRIFT_INC)
PA24_250_Hsi_Drift_To_Magnetic_Cheat#1 (>K:HEADING_GYRO_SET)
PA24_250_Hsi_Heading_Dec#1 (>K:HEADING_BUG_DEC)
PA24_250_Hsi_Heading_Inc#1 (>K:HEADING_BUG_INC)
PA24_250_Hsi_Heading_To_Magnetic_Cheat#0 (A:PLANE HEADING DEGREES MAGNETIC, Degrees) near (>K:2:HEADING_BUG_SET)
PA24_250_Hsi_Mode_Gyro#1 (>L:HeadingSelectorPush, bool)
PA24_250_Hsi_Mode_Heading#0 (>L:HeadingSelectorPush, bool)
PA24_250_Marker_All_Test#1 (>K:PA24-marker_inner_knob_use) 1 (>K:PA24-marker_outer_knob_use) 1 (>K:PA24-marker_middle_knob_use)
PA24_250_Marker_Inner_Knob_Push#1 (>L:PushToTestMBI, Number)
PA24_250_Marker_Inner_Knob_Release#0 (>L:PushToTestMBI, Number)
PA24_250_Marker_Inner_Knob_Use#1 (>L:PushToTestMBI, Number) 0 (>L:PushToTestMBI, Number)
PA24_250_Marker_Inner_Turn_Left#(L:PushToTestMBIKnob, Number) 5 + 100 min (>L:PushToTestMBIKnob, Number)
PA24_250_Marker_Inner_Turn_Right#(L:PushToTestMBIKnob, Number) 5 - 15 max (>L:PushToTestMBIKnob, Number)
PA24_250_Marker_Middle_Knob_Push#1 (>L:PushToTestMBM, Number)
PA24_250_Marker_Middle_Knob_Release#0 (>L:PushToTestMBM, Number)
PA24_250_Marker_Middle_Knob_Use#1 (>L:PushToTestMBM, Number) 0 (>L:PushToTestMBM, Number)
PA24_250_Marker_Middle_Turn_Left#(L:PushToTestMBMKnob, Number) 5 + 100 min (>L:PushToTestMBMKnob, Number)
PA24_250_Marker_Middle_Turn_Right#(L:PushToTestMBMKnob, Number) 5 - 15 max (>L:PushToTestMBMKnob, Number)
PA24_250_Marker_Outer_Knob_Push#1 (>L:PushToTestMBO, Number)
PA24_250_Marker_Outer_Knob_Release#0 (>L:PushToTestMBO, Number)
PA24_250_Marker_Outer_Knob_Use#1 (>L:PushToTestMBO, Number) 0 (>L:PushToTestMBO, Number)
PA24_250_Marker_Outer_Turn_Axis#(L:PA24-marker_outer_turn_axis) 15 max 100 min (>L:PushToTestMBOKnob, Number)
PA24_250_Marker_Outer_Turn_Left#(L:PushToTestMBOKnob, Number) 5 + 100 min (>L:PushToTestMBOKnob, Number)
PA24_250_Marker_Outer_Turn_Right#(L:PushToTestMBOKnob, Number) 5 - 15 max (>L:PushToTestMBOKnob, Number)
//A2A SIM/Comanche 250/Fuel
Fuel_Valve_Left_Axis#@ 300 / 0 max 100 min (>L:FSelComancheLeftState, percent)
Fuel_Valve_Right_Axis#@ 300 / 0 max 100 min (>L:FSelComancheRightState, percent)
PA24_250_Toggle_Aux_Fuel_Gauge_L_F#(>B:Switch_Fuel_Indicator_2States_Toggle)
PA24_250_Fuel_Indicator_Switch_Left_Aux#0 (>L:FuelIndicatorSwitch, Number)
PA24_250_Fuel_Indicator_Switch_Right_Aux#1 (>L:FuelIndicatorSwitch, Number)
PA24_250_Fuel_Indicator_Switch_Toggle#(L:FuelIndicatorSwitch, Number) ! (>L:FuelIndicatorSwitch, Number)
PA24_250_Fuel_Pump_Off#0 (>K:ELECT_FUEL_PUMP1_SET)
PA24_250_Fuel_Pump_On#1 (>K:ELECT_FUEL_PUMP1_SET)
PA24_250_Fuel_Pump_Toggle#(A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Bool) ! (>K:ELECT_FUEL_PUMP1_SET)
PA24_250_Fuel_Tank_Left_Down#(L:FSelComancheLeftState, Number) 1 - 0 max (>L:FSelComancheLeftState, Number)
PA24_250_Fuel_Tank_Left_Main#2 (>L:FSelComancheLeftState, Number)
PA24_250_Fuel_Tank_Left_Off#0 (>L:FSelComancheLeftState, Number)
PA24_250_Fuel_Tank_Left_Tip#1 (>L:FSelComancheLeftState, Number)
PA24_250_Fuel_Tank_Left_Up#(L:FSelComancheLeftState, Number) 1 + 2 min (>L:FSelComancheLeftState, Number)
PA24_250_Fuel_Tank_Right_Down#(L:FSelComancheRightState, Number) 1 - 0 max (>L:FSelComancheRightState, Number)
PA24_250_Fuel_Tank_Right_Main#2 (>L:FSelComancheRightState, Number)
PA24_250_Fuel_Tank_Right_Off#0 (>L:FSelComancheRightState, Number)
PA24_250_Fuel_Tank_Right_Tip#1 (>L:FSelComancheRightState, Number)
PA24_250_Fuel_Tank_Right_Up#(L:FSelComancheRightState, Number) 1 + 2 min (>L:FSelComancheRightState, Number)
//A2A SIM/Comanche 250/Gear
PA24_250_Parking_Brake_Toggle#(L:ParkingBrakePosition, bool) ! s0 (>L:ParkingBrakePosition, bool) l0 (>L:ParkingBrakeActive, bool) (>H:A2A_PARKING_BRAKE_POSITION)
PA24_Parking_Brake_Off#0 s0 (>L:ParkingBrakePosition, bool) l0 (>L:ParkingBrakeActive, bool) (>H:A2A_PARKING_BRAKE_POSITION)
PA24_Parking_Brake_On#1 s0 (>L:ParkingBrakePosition, bool) l0 (>L:ParkingBrakeActive, bool) (>H:A2A_PARKING_BRAKE_POSITION)
PA24_250_Gear_Emergency_Extend#1 (>L:EmergencyGearLever, Number)
PA24_250_Gear_Emergency_Retract#0 (>L:EmergencyGearLever, Number)
PA24_250_Gear_Emergency_Toggle#(L:EmergencyGearLever, Number) ! (>L:EmergencyGearLever, Number)
PA24_250_Gear_Landing_Down#2 (>L:LandingGearLeverPos, Number)
PA24_250_Gear_Landing_Off#1 (>L:LandingGearLeverPos, Number)
PA24_250_Gear_Landing_Up#0 (>L:LandingGearLeverPos, Number)
PA24_250_Parking_Brake_Realistic_Toggle#(L:RealisticParkingBrake, Number) 0 == if{ (L:ParkingBrakePosition, bool) ! (>L:ParkingBrakePosition, bool) 1 (>H:A2A_PARKING_BRAKE_POSITION) } els{ (L:ParkingBrakePosition, bool) 1 == if{ 0 (>L:ParkingBrakePosition, bool) 1 (>H:A2A_PARKING_BRAKE_POSITION) } els{ (L:BrakeLPosition, percent) 25 > (L:BrakeRPosition, percent) 25 > || if{ 1 (>L:ParkingBrakePosition, bool) 1 (>H:A2A_PARKING_BRAKE_POSITION) } } }
//A2A SIM/Comanche 250/Lights
PA24_250_Light_Portable_Dim_Axis#@ 15 - 10.0 / 0 max 100 min (>L:PortableLamp_Dimmer, Number)
PA24_250_Light_Portable_Direction_Horizontal_Axis#@ 15 - 10.0 / 0 max 100 min (>L:PortableLamp_Main_DragX, Number)
PA24_250_Light_Beacon_Off#1 (>K:BEACON_LIGHTS_OFF)
PA24_250_Light_Beacon_On#1 (>K:BEACON_LIGHTS_ON)
PA24_250_Light_Beacon_Toggle#1 (>K:TOGGLE_BEACON_LIGHTS)
PA24_250_Light_Flood_Red_Off#0 (>L:CabinRedLightSwitch, bool)
PA24_250_Light_Flood_Red_On#1 (>L:CabinRedLightSwitch, bool)
PA24_250_Light_Flood_Red_Toggle#(L:CabinRedLightSwitch, bool) ! (>L:CabinRedLightSwitch, bool)
PA24_250_Light_Flood1_Off#0 (>L:CabinFlood1LightSwitch, bool)
PA24_250_Light_Flood1_On#1 (>L:CabinFlood1LightSwitch, bool)
PA24_250_Light_Flood1_Toggle#(L:CabinFlood1LightSwitch, bool) ! (>L:CabinFlood1LightSwitch, bool)
PA24_250_Light_Flood2_Off#0 (>L:CabinFlood2LightSwitch, bool)
PA24_250_Light_Flood2_On#1 (>L:CabinFlood2LightSwitch, bool)
PA24_250_Light_Flood2_Toggle#(L:CabinFlood2LightSwitch, bool) ! (>L:CabinFlood2LightSwitch, bool)
PA24_250_Light_Landing_Left_Off#0 (>L:LandingLightLeftSwitch, bool)
PA24_250_Light_Landing_Left_On#1 (>L:LandingLightLeftSwitch, bool)
PA24_250_Light_Landing_Left_Toggle#(L:LandingLightLeftSwitch, bool) ! (>L:LandingLightLeftSwitch, bool)
PA24_250_Light_Landing_Right_Off#0 (>L:LandingLightRightSwitch, bool)
PA24_250_Light_Landing_Right_On#1 (>L:LandingLightRightSwitch, bool)
PA24_250_Light_Landing_Right_Toggle#(L:LandingLightRightSwitch, bool) ! (>L:LandingLightRightSwitch, bool)
PA24_250_Light_Nav_100#100 (>L:NavInstrLightSwitchPct, percent)
PA24_250_Light_Nav_Dec#(L:NavInstrLightSwitchPct, percent) 10 - 0 max (>L:NavInstrLightSwitchPct, percent)
PA24_250_Light_Nav_Inc#(L:NavInstrLightSwitchPct, percent) 10 + 100 min (>L:NavInstrLightSwitchPct, percent)
PA24_250_Light_Nav_Off#0 (>L:NavInstrLightSwitchPct, percent)
PA24_250_Light_Nav_Toggle#(L:NavInstrLightSwitchPct, percent) 0 > if{ 0 (>L:NavInstrLightSwitchPct, percent) } els{ 100 (>L:NavInstrLightSwitchPct, percent) }
PA24_250_Light_Portable_Colour_Red#1 (>L:PortableLamp_ColourSwitch, Number)
PA24_250_Light_Portable_Colour_Toggle#(L:PortableLamp_ColourSwitch, Number) ! (>L:PortableLamp_ColourSwitch, Number)
PA24_250_Light_Portable_Colour_White#0 (>L:PortableLamp_ColourSwitch, Number)
PA24_250_Light_Portable_Dim_Dec#(L:PortableLamp_Dimmer, Number) 5 - 0 max (>L:PortableLamp_Dimmer, Number)
PA24_250_Light_Portable_Dim_Inc#(L:PortableLamp_Dimmer, Number) 5 + 100 min (>L:PortableLamp_Dimmer, Number)
PA24_250_Light_Portable_Direction_Center#1 (>K:PA24-light_portable_direction_horizontal_center) 1 (>K:PA24-light_portable_direction_vertical_center)
PA24_250_Light_Portable_Direction_Horizontal_Center#0 (>L:PortableLamp_Main_DragX, Number)
PA24_250_Light_Portable_Direction_Horizontal_Dec#(L:PortableLamp_Main_DragX, Number) 5 - -50 max (>L:PortableLamp_Main_DragX, Number)
PA24_250_Light_Portable_Direction_Horizontal_Inc#(L:PortableLamp_Main_DragX, Number) 5 + 50 min (>L:PortableLamp_Main_DragX, Number)
PA24_250_Light_Portable_Direction_Vertical_Axis#(L:PA24-light_portable_direction_vertical_axis) -50 max 50 min (>L:PortableLamp_Main_DragY, Number)
PA24_250_Light_Portable_Direction_Vertical_Center#0 (>L:PortableLamp_Main_DragY, Number)
PA24_250_Light_Portable_Direction_Vertical_Dec#(L:PortableLamp_Main_DragY, Number) 5 - -50 max (>L:PortableLamp_Main_DragY, Number)
PA24_250_Light_Portable_Direction_Vertical_Inc#(L:PortableLamp_Main_DragY, Number) 5 + 50 min (>L:PortableLamp_Main_DragY, Number)
PA24_250_Light_Strobe_Off#1 (>K:STROBES_OFF)
PA24_250_Light_Strobe_On#1 (>K:STROBES_ON)
PA24_250_Light_Strobe_Toggle#1 (>K:STROBES_TOGGLE)
//A2A SIM/Comanche 250/Miscellaneous
PA24_250_Tablet_Position_Horizontal_Axis#@ 15 - 10.0 / 0 max 100 min (>L:TabletHorizontalPosition, Number)
PA24_250_Visor_Left_Axis#@ 15 - 10.0 / 0 max 100 min (>L:VisorLeftPercent, number)
PA24_250_Visor_Right_Axis#@ 15 - 10.0 / 0 max 100 min (>L:VisorRightPercent, number)
PA24_250_Controls_Locks_Dismount#0 (>L:ControlsLockLever, Number)
PA24_250_Controls_Locks_Mount#1 (>L:ControlsLockLever, Number)
PA24_250_Controls_Locks_Toggle#(L:ControlsLockLever, Number) ! (>L:ControlsLockLever, Number)
PA24_250_Door_Complete_Close#1 (>K:PA24-door_latch_unlock) 1 (>K:PA24-door_handle_open) 1 (>K:PA24-door_latch_lock)
PA24_250_Door_Complete_Open#1 (>K:PA24-door_latch_unlock) 1 (>K:PA24-door_handle_open)
PA24_250_Door_Complete_Toggle#(L:Door1Open, bool) ! if{ 1 (>K:PA24-door_complete_open) } els{ 1 (>K:PA24-door_complete_close) }
PA24_250_Door_Handle_Close#(L:Door1Handle, bool) ! (>L:Door1Handle, bool) 0 (>L:Door1Open, bool)
PA24_250_Door_Handle_Open#(L:Door1Handle, bool) ! (>L:Door1Handle, bool) (L:Door1Latch, bool) 0 == if{ 1 (>L:Door1Open, bool) }
PA24_250_Door_Handle_Toggle#(L:Door1Open, bool) 0 == if{ 1 (>K:PA24-door_handle_open) } els{ 1 (>K:PA24-door_handle_close) }
PA24_250_Door_Latch_Lock#1 (>L:Door1Latch, bool)
PA24_250_Door_Latch_Toggle#(L:Door1Latch, bool) ! (>L:Door1Latch, bool)
PA24_250_Door_Latch_Unlock#0 (>L:Door1Latch, bool)
PA24_250_Ext_Wheel_Chockl_Hide#0 (>L:vis_WheelChockL, Number)
PA24_250_External_Chock_Left_Toggle#(L:vis_WheelChockL, Number) ! (>L:vis_WheelChockL, Number)
PA24_250_External_Chock_Right_Toggle#(L:vis_WheelChockR, Number) ! (>L:vis_WheelChockR, Number)
PA24_250_External_Chocks_Toggle#(L:vis_WheelChockR, Number) 0 == if{ 1 (>L:vis_WheelChockR, Number) 1 (>L:vis_WheelChockL, Number) } els{ 0 (>L:vis_WheelChockR, Number) 0 (>L:vis_WheelChockL, Number) }
PA24_250_External_Tiedown_Tail_Toggle#(L:vis_Tail_TieDown, Number) ! (>L:vis_Tail_TieDown, Number)
PA24_250_External_Tiedown_Wing_Left_Toggle#(L:vis_WingLeft_TieDown, Number) ! (>L:vis_WingLeft_TieDown, Number)
PA24_250_External_Tiedown_Wing_Right_Toggle#(L:vis_WingRight_TieDown, Number) ! (>L:vis_WingRight_TieDown, Number)
PA24_250_External_Tiedowns_Toggle#(L:vis_WingRight_TieDown, Number) 0 == if{ 1 (>L:vis_WingRight_TieDown, Number) 1 (>L:vis_WingLeft_TieDown, Number) 1 (>L:vis_Tail_TieDown, Number) } els{ 0 (>L:vis_WingRight_TieDown, Number) 0 (>L:vis_WingLeft_TieDown, Number) 0 (>L:vis_Tail_TieDown, Number) }
PA24_250_Tablet_Hide#0 (>L:TabletStation, Number)
PA24_250_Tablet_Position_Depth_Axis#(L:PA24-tablet_position_depth_axis) -50 max 25 min (>L:TabletDepthPosition, Number)
PA24_250_Tablet_Position_Depth_Dec#(L:TabletDepthPosition, Number) 5 - -50 max (>L:TabletDepthPosition, Number)
PA24_250_Tablet_Position_Depth_Inc#(L:TabletDepthPosition, Number) 5 + 25 min (>L:TabletDepthPosition, Number)
PA24_250_Tablet_Position_Horizontal_Dec#(L:TabletHorizontalPosition, Number) 5 - 0 max (>L:TabletHorizontalPosition, Number)
PA24_250_Tablet_Position_Horizontal_Inc#(L:TabletHorizontalPosition, Number) 5 + 100 min (>L:TabletHorizontalPosition, Number)
PA24_250_Tablet_Position_Reset#-36 (>L:TabletVerticalPosition, Number) 0 (>L:TabletHorizontalPosition, Number) 0 (>L:TabletDepthPosition, Number)
PA24_250_Tablet_Position_Vertical_Axis#(L:PA24-tablet_position_vertical_axis) -39 max 36 min (>L:TabletVerticalPosition, Number)
PA24_250_Tablet_Position_Vertical_Dec#(L:TabletVerticalPosition, Number) 5 - -39 max 36 min (>L:TabletVerticalPosition, Number)
PA24_250_Tablet_Position_Vertical_Inc#(L:TabletVerticalPosition, Number) 5 + -39 max 36 min (>L:TabletVerticalPosition, Number)
PA24_250_Tablet_Show#1 (>L:TabletStation, Number)
PA24_250_Tablet_Toggle#(L:TabletStation, Number) ! (>L:TabletStation, Number)
PA24_250_Tablet_Weight_Baggage_050Lbs#50 (>L:BaggageWeight, lbs)
PA24_250_Tablet_Weight_Baggage_100Lbs#100 (>L:BaggageWeight, lbs)
PA24_250_Tablet_Weight_Baggage_150Lbs#150 (>L:BaggageWeight, lbs)
PA24_250_Tablet_Weight_Baggage_200Lbs#200 (>L:BaggageWeight, lbs)
PA24_250_Tablet_Weight_Baggage_Axis#(L:PA24-tablet_weight_baggage_axis) 0 max 300 min (>L:BaggageWeight, lbs)
PA24_250_Tablet_Weight_Fuel_0_Light#3 (>L:FuelLeftTipTank, gallon) 15 (>L:FuelLeftWingTank, gallon) 15 (>L:FuelRightWingTank, gallon) 3 (>L:FuelRightTipTank, gallon)
PA24_250_Tablet_Weight_Fuel_1_Medium#3 (>L:FuelLeftTipTank, gallon) 30 (>L:FuelLeftWingTank, gallon) 30 (>L:FuelRightWingTank, gallon) 3 (>L:FuelRightTipTank, gallon)
PA24_250_Tablet_Weight_Fuel_2_Heavy#15 (>L:FuelLeftTipTank, gallon) 30 (>L:FuelLeftWingTank, gallon) 30 (>L:FuelRightWingTank, gallon) 15 (>L:FuelRightTipTank, gallon)
PA24_250_Tablet_Weight_Fuel_Left_Tip_Dec#(L:FuelLeftTipTank, gallon) 1 - 0 max (>L:FuelLeftTipTank, gallon)
PA24_250_Tablet_Weight_Fuel_Left_Tip_Inc#(L:FuelLeftTipTank, gallon) 1 + 15 min (>L:FuelLeftTipTank, gallon)
PA24_250_Tablet_Weight_Fuel_Left_Wing_Dec#(L:FuelLeftWingTank, gallon) 1 - 0 max (>L:FuelLeftWingTank, gallon)
PA24_250_Tablet_Weight_Fuel_Left_Wing_Inc#(L:FuelLeftWingTank, gallon) 1 + 30 min (>L:FuelLeftWingTank, gallon)
PA24_250_Tablet_Weight_Fuel_Right_Tip_Dec#(L:FuelRightTipTank, gallon) 1 - 0 max (>L:FuelRightTipTank, gallon)
PA24_250_Tablet_Weight_Fuel_Right_Tip_Inc#(L:FuelRightTipTank, gallon) 1 + 15 min (>L:FuelRightTipTank, gallon)
PA24_250_Tablet_Weight_Fuel_Right_Wing_Dec#(L:FuelRightWingTank, gallon) 1 - 0 max (>L:FuelRightWingTank, gallon)
PA24_250_Tablet_Weight_Fuel_Right_Wing_Inc#(L:FuelRightWingTank, gallon) 1 + 30 min (>L:FuelRightWingTank, gallon)
PA24_250_Tablet_Weight_Seat_1_Toggle#(L:Seat1Character, Number) 0 == if{ 1 (>L:Seat1Character, Number) } els{ 0 (>L:Seat1Character, Number) }
PA24_250_Tablet_Weight_Seat_2_Toggle#(L:Seat2Character, Number) 0 == if{ 2 (>L:Seat2Character, Number) } els{ 0 (>L:Seat2Character, Number) }
PA24_250_Tablet_Weight_Seat_3_Toggle#(L:Seat3Character, Number) 0 == if{ 3 (>L:Seat3Character, Number) } els{ 0 (>L:Seat3Character, Number) }
PA24_250_Tablet_Weight_Seat_4_Toggle#(L:Seat4Character, Number) 0 == if{ 4 (>L:Seat4Character, Number) } els{ 0 (>L:Seat4Character, Number) }
PA24_250_Visor_Left_Down#(L:VisorLeftPercent, number) 5 + 100 min (>L:VisorLeftPercent, number)
PA24_250_Visor_Left_Up#(L:VisorLeftPercent, number) 5 - 0 max (>L:VisorLeftPercent, number)
PA24_250_Visor_Right_Down#(L:VisorRightPercent, number) 5 + 100 min (>L:VisorRightPercent, number)
PA24_250_Visor_Right_Up#(L:VisorRightPercent, number) 5 - 0 max (>L:VisorRightPercent, number)
PA24_250_Walkaround_02_Flaps_Right#100 (>L:WALKAROUND_FlapR_Drag, Number)
PA24_250_Walkaround_03_Aileron_Right#100 (>L:WALKAROUND_AileronR_Drag, Number) 
PA24_250_Walkaround_04_Fuel_Tip_Right_Close#0 (>L:FuelTipTankOpeningRightCap, Bool) 0 (>L:FuelTipTankOpeningRight, Bool)
PA24_250_Walkaround_04_Fuel_Tip_Right_Open#1 (>L:FuelTipTankOpeningRight, Bool) 1 (>L:FuelTipTankOpeningRightCap, Bool)
PA24_250_Walkaround_04_Fuel_Tip_Toggle#(L:FuelTipTankOpeningRight, Bool) 0 == if{ 1 (>K:PA24-walkaround_04_fuel_tip_right_open) } els{ 1 (>K:PA24-walkaround_04_fuel_tip_right_close) }
PA24_250_Walkaround_05_Bottle_Clear#0 (>L:WALKAROUND_BottleR_Drag, Number)
PA24_250_Walkaround_05_Bottle_Fill#100 (>L:WALKAROUND_BottleR_Drag, Number)
PA24_250_Walkaround_05_Bottle_Toggle#(L:WALKAROUND_BottleR_Drag, Number) 0 > if{ 0 (>L:WALKAROUND_BottleR_Drag, Number) } els{ 100 (>L:WALKAROUND_BottleR_Drag, Number) }
PA24_250_Walkaround_07_Fix_Light_R#0 (>L:F_LandingLight2, Bool)
PA24_250_Walkaround_08_Toggle_Tiedown#(L:vis_WingRight_TieDown, Bool) ! (>L:vis_WingRight_TieDown, Bool)
PA24_250_Walkaround_09_Fuel_Right_Close#0 (>L:FuelTankOpeningRightCap, Bool) 0 (>L:FuelTankOpeningRight, Bool)
PA24_250_Walkaround_09_Fuel_Right_Open#1 (>L:FuelTankOpeningRight, Bool) 1 (>L:FuelTankOpeningRightCap, Bool)
PA24_250_Walkaround_09_Fuel_Right_Toggle#(L:FuelTankOpeningRight, Bool) 0 == if{ 1 (>K:PA24-walkaround_09_fuel_right_open) } els{ 1 (>K:PA24-walkaround_09_fuel_right_close) }
PA24_250_Walkaround_10_Wheel_Chock_Toggle#(L:vis_WheelChockR, Bool) ! (>L:vis_WheelChockR, Bool)
PA24_250_Walkaround_11_Bottle_Clear#0 (>L:WALKAROUND_BottleC_Drag, Number) 0 (>L:FuelCheckPanel, Bool)
PA24_250_Walkaround_11_Bottle_Fill#1 (>L:FuelCheckPanel, Bool) 100 (>L:WALKAROUND_BottleC_Drag, Number)
PA24_250_Walkaround_11_Bottle_Fill_And_Clear#1 (>K:PA24-walkaround_11_bottle_fill) 1 (>K:PA24-walkaround_11_bottle_clear)
PA24_250_Walkaround_11_Bottle_Toggle#(L:FuelCheckPanel, Bool) 0 == if{ 1 (>K:PA24-walkaround_11_bottle_fill) } els{ 1 (>K:PA24-walkaround_11_bottle_clear) }
PA24_250_Walkaround_12_Rag_Clean#0 (>L:F_RagIntake, Bool)
PA24_250_Walkaround_13_Oil_Close#0 (>L:OilInspectionStick, Bool) 0 (>L:OilInspectionPanel, Bool)
PA24_250_Walkaround_13_Oil_Open#1 (>L:OilInspectionPanel, Bool) 1 (>L:OilInspectionStick, Bool)
PA24_250_Walkaround_13_Oil_Toggle#(L:OilInspectionStick, Bool) 0 == if{ 1 (>K:PA24-walkaround_13_oil_open) } els{ 1 (>K:PA24-walkaround_13_oil_close) }
PA24_250_Walkaround_14_Fuel_Left_Close#0 (>L:FuelTankOpeningLeftCap, Bool) 0 (>L:FuelTankOpeningLeft, Bool)
PA24_250_Walkaround_14_Fuel_Left_Open#1 (>L:FuelTankOpeningLeft, Bool) 1 (>L:FuelTankOpeningLeftCap, Bool)
PA24_250_Walkaround_14_Fuel_Left_Toggle#(L:FuelTankOpeningLeft, Bool) 0 == if{ 1 (>K:PA24-walkaround_14_fuel_left_open) } els{ 1 (>K:PA24-walkaround_14_fuel_left_close) }
PA24_250_Walkaround_15_Wheel_Chock_Left_Toggle#(L:vis_WheelChockL, Bool) ! (>L:vis_WheelChockL, Bool)
PA24_250_Walkaround_16_Pitot_Test_Start#1 (>L:PitotHeatCheck, Bool)
PA24_250_Walkaround_16_Pitot_Test_Stop#0 (>L:PitotHeatCheck, Bool)
PA24_250_Walkaround_16_Stall_Warn_Test_Start#1 (>L:Action_StallWarning,bool)
PA24_250_Walkaround_16_Stall_Warn_Test_Stop#0 (>L:Action_StallWarning,bool)
PA24_250_Walkaround_16_Tie_Pitot_Toggle#(L:vis_WingLeft_TieDown, Bool) 0 == if{ 1 (>L:vis_WingLeft_TieDown, Bool) 1 (>L:PitotTubeCover, Bool) } els{ 0 (>L:vis_WingLeft_TieDown, Bool) 0 (>L:PitotTubeCover, Bool) } 
PA24_250_Walkaround_17_Fix_Light_L#0 (>L:F_LandingLight1, Bool)
PA24_250_Walkaround_19_Fuel_Tip_Left_Close#0 (>L:FuelTipTankOpeningLeftCap, Bool) 0 (>L:FuelTipTankOpeningLeft, Bool)
PA24_250_Walkaround_19_Fuel_Tip_Left_Open#1 (>L:FuelTipTankOpeningLeft, Bool) 1 (>L:FuelTipTankOpeningLeftCap, Bool)
PA24_250_Walkaround_19_Fuel_Tip_Left_Toggle#(L:FuelTipTankOpeningLeft, Bool) 0 == if{ 1 (>K:PA24-walkaround_19_fuel_tip_left_open) } els{ 1 (>K:PA24-walkaround_19_fuel_tip_left_close) }
PA24_250_Walkaround_20_Bottle_Clear#0 (>L:WALKAROUND_BottleL_Drag, Number)
PA24_250_Walkaround_20_Bottle_Fill#100 (>L:WALKAROUND_BottleL_Drag, Number)
PA24_250_Walkaround_20_Bottle_Toggle#(L:WALKAROUND_BottleL_Drag, Number) 0 > if{ 0 (>L:WALKAROUND_BottleL_Drag, Number) } els{ 100 (>L:WALKAROUND_BottleL_Drag, Number) }
PA24_250_Walkaround_21_Aileron_Left#100 (>L:WALKAROUND_AileronL_Drag, Number)
PA24_250_Walkaround_22_Flaps_Left#100 (>L:WALKAROUND_FlapL_Drag, Number)
PA24_250_Walkaround_23_Static_Port_Left_Clear#0 (>L:F_StaticPort1, Number)
PA24_250_Walkaround_24_Rudder_Elevator#100 (>L:WALKAROUND_Rudder_Drag, Number) 100 (>L:WALKAROUND_Elevator_Drag, Number) 
PA24_250_Walkaround_24_Toggle_Tiedown_Tail#(L:vis_Tail_TieDown, Bool) ! (>L:vis_Tail_TieDown, Bool)
PA24_250_Walkaround_25_Static_Port_Right_Clear#0 (>L:F_StaticPort2, Number)
PA24_250_Walkaround_26_Baggage_Door_Toggle#(L:WALKAROUND_BaggageDoor_Click, Bool) ! (>L:WALKAROUND_BaggageDoor_Click, Bool)
PA24_250_Walkaround_Begin#2 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1, Number)
PA24_250_Walkaround_End#1 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1, Number)
PA24_250_Walkaround_Next#(A:CAMERA VIEW TYPE AND INDEX:0, Enum) 2 != (A:CAMERA VIEW TYPE AND INDEX:1, Number) 5 < or if{ 2 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } els{ (A:CAMERA VIEW TYPE AND INDEX:1, Number) 29 < if{ (A:CAMERA VIEW TYPE AND INDEX:1, Number) 1 + (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } els{ 1 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } }
PA24_250_Walkaround_Previous#(A:CAMERA VIEW TYPE AND INDEX:0, Enum) 2 != (A:CAMERA VIEW TYPE AND INDEX:1, Number) 5 < or if{ 2 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 29 (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } els{ (A:CAMERA VIEW TYPE AND INDEX:1, Number) 5 > if{ (A:CAMERA VIEW TYPE AND INDEX:1, Number) 1 - (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } els{ 1 (>A:CAMERA VIEW TYPE AND INDEX:0, Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1, Number) } }
PA24_250_Window_Left_Close#0 (>L:WindowLeft, bool)
PA24_250_Window_Left_Open#1 (>L:WindowLeft, bool)
PA24_250_Window_Left_Toggle#(L:WindowLeft, bool) ! (>L:WindowLeft, bool)
PA24_250_Window_Right_Close#0 (>L:WindowRight, bool)
PA24_250_Window_Right_Open#1 (>L:WindowRight, bool)
PA24_250_Window_Right_Toggle#(L:WindowRight, bool) ! (>L:WindowRight, bool)
//A2A SIM/Comanche 250/Navigation
Inner_Marker_Beacon_Push_To_Test#1 (>L:PushToTestMBI, bool) 0 (>L:PushToTestMBI, bool)
Middle_Marker_Beacon_push_to_test#1 (>L:PushToTestMBM, bool) 0 (>L:PushToTestMBM, bool)
Outer_Marker_Beacon_push_to_test#1 (>L:PushToTestMBO, bool) 0 (>L:PushToTestMBO, bool)
PA24_250_KLN90B_ALT_button_press#(>H:KLN90B_ALT_Push) 100 (>L:BUTTON_KLN90B_ALT, number)
PA24_250_KLN90B_ALT_button_release#0 (>L:BUTTON_KLN90B_ALT, number)
PA24_250_KLN90B_CLR_button_press#(>H:KLN90B_CLR_Push) 100 (>L:BUTTON_KLN90B_CLR, number)
PA24_250_KLN90B_CLR_button_release#0 (>L:BUTTON_KLN90B_CLR, number)
PA24_250_KLN90B_Direct_To_button_push#(>H:KLN90B_DCT_Push) 100 (>L:BUTTON_KLN90B_D, number)
PA24_250_KLN90B_Direct_To_button_release#0 (>L:BUTTON_KLN90B_D, number)
PA24_250_KLN90B_ENT_button_push#(>H:KLN90B_ENT_Push) 100 (>L:BUTTON_KLN90B_ENT, number)
PA24_250_KLN90B_ENT_button_release#0 (>L:BUTTON_KLN90B_ENT, number)
PA24_250_KLN90B_MSG_button_press#(>H:KLN90B_MSG_Push) 100 (>L:BUTTON_KLN90B_MSG, number)
PA24_250_KLN90B_MSG_button_release#0 (>L:BUTTON_KLN90B_MSG, number)
PA24_250_KLN90B_Right_Cursor_Button_Press#(>H:KLN90B_RightCursor_Toggle) 100 (>L:BUTTON_KLN90B_CRSR_R, number)
PA24_250_KLN90B_Right_Cursor_Button_Release#0 (>L:BUTTON_KLN90B_CRSR_R, number)
PA24_250_Ncs812_Nav_Ident_Pull#1 (>L:Nav1PullIdent, bool)
PA24_250_Kt76_Xpdr_Ident_Dim_Axis#(L:PA24-kt76_xpdr_ident_dim_axis) 15 max 100 min (>L:XpdrIdentKnob, Number)
PA24_250_Kt76_Xpdr_Ident_Dim_Dec#(L:XpdrIdentKnob, Number) 5 - 15 max (>L:XpdrIdentKnob, Number)
PA24_250_Kt76_Xpdr_Ident_Dim_Inc#(L:XpdrIdentKnob, Number) 5 + 100 min (>L:XpdrIdentKnob, Number)
PA24_250_Kt76_Xpdr_Mode_0_Off#0 (>L:XpdrModeKnobPos, Number)
PA24_250_Kt76_Xpdr_Mode_1_Standby#1 (>L:XpdrModeKnobPos, Number)
PA24_250_Kt76_Xpdr_Mode_2_On#2 (>L:XpdrModeKnobPos, Number)
PA24_250_Kt76_Xpdr_Mode_3_Alt#3 (>L:XpdrModeKnobPos, Number)
PA24_250_Kt76_Xpdr_Mode_4_Tst#4 (>L:XpdrModeKnobPos, Number)
PA24_250_Kt76_Xpdr_Mode_Axis#(L:PA24-kt76_xpdr_mode_axis) 0 max 4 min (>L:XpdrModeKnobPos, Number)
PA24_250_Kt76_Xpdr_Mode_Dec#(L:XpdrModeKnobPos, Number) 1 - 0 max (>L:XpdrModeKnobPos, Number)
PA24_250_Kt76_Xpdr_Mode_Inc#(L:XpdrModeKnobPos, Number) 1 + 4 min (>L:XpdrModeKnobPos, Number)
PA24_250_Ncs812_Dme_Function_0_Frq#0 (>L:DmeFunction)
PA24_250_Ncs812_Dme_Function_1_Dst#1 (>L:DmeFunction)
PA24_250_Ncs812_Dme_Function_2_Gs#2 (>L:DmeFunction)
PA24_250_Ncs812_Dme_Function_3_Tts#3 (>L:DmeFunction)
PA24_250_Ncs812_Dme_Function_4_Hld#4 (>L:DmeFunction)
PA24_250_Ncs812_Dme_Function_5_Hldfrq#5 (>L:DmeFunction)
PA24_250_Ncs812_Dme_Function_Dec#(L:DmeFunction) -- 0 max 5 min (>L:DmeFunction)
PA24_250_Ncs812_Dme_Function_Inc#(L:DmeFunction) ++ 0 max 5 min (>L:DmeFunction)
PA24_250_Ncs812_Nav_Ident_Push_Brg#0 (>L:Nav1PullIdent, bool)
PA24_250_Ncs812_Nav_Ident_Toggle#(L:Nav1PullIdent, bool) ! (>L:Nav1PullIdent, bool)
PA24_250_Ncs812_Nav_Swap_Push#1 (>L:Nav1StbySwitch, bool)
PA24_250_Ncs812_Nav_Swap_Release#0 (>L:Nav1StbySwitch, bool)
PA24_250_Ncs812_Nav_Swap_Use#1 (>L:Nav1StbySwitch, bool) 0 (>L:Nav1StbySwitch, bool)
PA24_250_Vor1_Course_Dec#1 (>K:VOR1_OBI_DEC)
PA24_250_Vor1_Course_Inc#1 (>K:VOR1_OBI_INC)
PA24_250_Vor2_Course_Dec#1 (>K:VOR2_OBI_DEC)
PA24_250_Vor2_Course_Inc#1 (>K:VOR2_OBI_INC)
//A2A SIM/Comanche 250/Radio
Marker_Beacon_Sensitivity_Hi#1 (>L:AudioSensSwitch,bool)
Marker_Beacon_Sensitivity_Lo#0 (>L:AudioSensSwitch,bool)
Marker_Mute#1 (>L:AudioMkrMuteSwitch, bool) 0 (>L:AudioMkrMuteSwitch, bool)
PA24_250_COM_Audio_ADF_Button_Toggle#(L:AudioAdf1HpSwitch,bool) ! (>L:AudioAdf1HpSwitch,bool)
PA24_250_COM_Audio_BOTH_Button_Toggle#(L:AudioBothHpSwitch,bool) ! (>L:AudioBothHpSwitch,bool)
PA24_250_COM_Audio_COM1__COM2_Toggle#(L:AudioComSwitch,bool) ! (>L:AudioComSwitch,bool)
PA24_250_COM_Audio_COM1_Button_Activate#0 (>L:AudioComSwitch,bool)
PA24_250_COM_Audio_COM2_Button_Activate#1 (>L:AudioComSwitch,bool)
PA24_250_COM_Audio_MKR_DME_Button_Toggle#(L:AudioMkrHpSwitch,bool) ! (>L:AudioMkrHpSwitch,bool)
PA24_250_COM_Audio_NAV1_Button_Toggle#(L:AudioNav1HpSwitch,bool) ! (>L:AudioNav1HpSwitch,bool)
PA24_250_COM_Audio_NAV2_Button_Toggle#(L:AudioNav2HpSwitch,bool) ! (>L:AudioNav2HpSwitch,bool)
PA24_250_COM_Audio_SPKR_Button_Toggle#(L:AudioSpkrSwitch,bool) ! (>L:AudioSpkrSwitch,bool)
PA24_250_Mk12_Com_Swap_Push#1 (>L:Com2StbySwitch, bool)
PA24_250_Mk12_Com_Swap_Release#0 (>L:Com2StbySwitch, bool)
PA24_250_Mk12_Com_Swap_Use#1 (>L:Com2StbySwitch, bool) 0 (>L:Com2StbySwitch, bool)
PA24_250_Mk12_Com_Volume_Axis#(L:PA24-mk12_com_volume_axis) 0 max 100 min d (>L:Com2OnOffVolume, Number) 0 > (>L:Com2OnOff, Number)
PA24_250_Mk12_Com_Volume_Dec#(L:Com2OnOffVolume, Number) 5 - 0 max d (>L:Com2OnOffVolume, Number) 0 > (>L:Com2OnOff, Number)
PA24_250_Mk12_Com_Volume_Inc#(L:Com2OnOffVolume, Number) 5 + 100 min (>L:Com2OnOffVolume, Number) 1 (>L:Com2OnOff, Number)
PA24_250_Mk12_Nav_Ident_Pull#1 (>L:Nav2PullIdent, bool)
PA24_250_Mk12_Nav_Ident_Push_Brg#0 (>L:Nav2PullIdent, bool)
PA24_250_Mk12_Nav_Swap_Push#1 (>L:Nav2StbySwitch, bool)
PA24_250_Mk12_Nav_Swap_Release#0 (>L:Nav2StbySwitch, bool)
PA24_250_Mk12_Nav_Swap_Use#1 (>L:Nav2StbySwitch, bool) 0 (>L:Nav2StbySwitch, bool)
PA24_250_Mk12_Onoff_Pull#1 (>L:Com2OnOffPull, Number)
PA24_250_Mk12_Onoff_Push#0 (>L:Com2OnOffPull, Number)
PA24_250_Mk12_Onoff_Push_Toggle#(L:Com2OnOffPull, Number) ! (>L:Com2OnOffPull, Number)
PA24_250_Ncs812_Com_Swap_Push#1 (>L:Com1StbySwitch, bool)
PA24_250_Ncs812_Com_Swap_Release#0 (>L:Com1StbySwitch, bool)
PA24_250_Ncs812_Com_Swap_Use#1 (>L:Com1StbySwitch, bool) 0 (>L:Com1StbySwitch, bool)
PA24_250_Ncs812_Com_Volume_Axis#(L:PA24-ncs812_com_volume_axis) 0 max 100 min d (>L:Com1OnOffVolume, Number) 0 > (>L:Com1OnOff, Number)
PA24_250_Ncs812_Com_Volume_Dec#(L:Com1OnOffVolume, Number) 5 - 0 max d (>L:Com1OnOffVolume, Number) 0 > (>L:Com1OnOff, Number)
PA24_250_Ncs812_Com_Volume_Inc#(L:Com1OnOffVolume, Number) 5 + 100 min (>L:Com1OnOffVolume, Number) 1 (>L:Com1OnOff, Number)
PA24_250_Ncs812_Onoff_Pull#1 (>L:Com1OnOffPull, Number)
PA24_250_Ncs812_Onoff_Push#0 (>L:Com1OnOffPull, Number)
PA24_250_Ncs812_Onoff_Push_Toggle#(L:Com1OnOffPull, Number) ! (>L:Com1OnOffPull, Number)
PA24_250_Radio_Channel_Spacing_25#0 (>L:ComChannelSpacing, bool)
PA24_250_Radio_Channel_Spacing_833#1 (>L:ComChannelSpacing, bool)
PA24_250_Radio_Channel_Spacing_Toggle#(L:ComChannelSpacing, bool) ! (>L:ComChannelSpacing, bool)
//AZURPOLY/TB30/EFIS
GS5_1_Knob_Dec#(>H:AS5_1_Knob_Dec)
GS5_1_Knob_Inc#(>H:AS5_1_Knob_Inc)
GS5_1_push_buttom#(>H:AS5_1_Knob_PUSH)
GS5_2_Knob_Dec#(>H:AS5_2_Knob_Dec)
GS5_2_Knob_Inc#(>H:AS5_2_Knob_Inc)
GS5_2_push_buttom#(>H:AS5_2_Knob_PUSH)
//AZURPOLY/TB30/Electrical
GYRO_Attitude_switch#(L:AZP_TB30_ATTITUDE_SUPPLY_ON, Bool) ! (>L:AZP_TB30_ATTITUDE_SUPPLY_ON, Bool)
//AZURPOLY/TB30/Flight Instruments
NAV_Source_selector#(L:AZP_TB30_NAV_SOURCE, Bool) ! (>L:AZP_TB30_NAV_SOURCE, Bool) (L:AZP_TB30_NAV_SOURCE, Bool) if{  (A:NAV OBS:1, degrees) (K:VOR2_SET) } els{  (A:NAV OBS:2, degrees) (K:VOR1_SET) }
//AZURPOLY/TB30/Interaction
EFB_button#(>H:AZP_TB30_TOGGLE_EFB_POWER)
//AZURPOLY/TB30/Radio
GNC255_C_N_Switch#(>H:RADIO_COM_CN_PUSH_2)
GNC255_Clear_buttom#(>H:RADIO_COM_CLR_PUSH_2)
GNC255_Enter_buttom#(>H:RADIO_COM_ENT_PUSH_2)
GNC255_Freq_large_Knob_Dec#(>H:RADIO_COM_Knob_Large_Dec_2)
GNC255_Freq_large_Knob_Inc#(>H:RADIO_COM_Knob_Large_Inc_2)
GNC255_Freq_small_Knob_Dec#(>H:RADIO_COM_Knob_Small_Dec_2)
GNC255_Freq_small_Knob_Inc#(>H:RADIO_COM_Knob_Small_Inc_2)
GNC255_Functon_buttom#(>H:RADIO_COM_FUNC_PUSH_2)
GNC255_Monitor_buttom#(>H:RADIO_COM_MON_PUSH_2)
GNC255_OBS_buttom#(>H:RADIO_COM_OBS_PUSH_2)
GNC255_Swap_buttom#(>H:RADIO_COM_SWAP_PUSH_2)
GNC255_T_F_buttom#(>H:RADIO_COM_TF_PUSH_2)
//Aerosoft/CRJ 550-700-1000/Air Condition / Pressurization
ASCRJ_AIRC_AFT_CARGO_AIRCOND_SWITCH#(L:ASCRJ_AIRC_AFT_CARGO, Bool) ! (>L:ASCRJ_AIRC_AFT_CARGO)
ASCRJ_AIRC_PACK_R_SWITCH# (L:ASCRJ_AIRC_PACK_R, Bool) ! (>L:ASCRJ_AIRC_PACK_R)
ASCRJ_AIRC_RECIC_FAN_SWCH_OFF#0 (>L:ASCRJ_AIRC_RECIRC_FAN)
ASCRJ_AIRC_RECIC_FAN_SWCH_ON#1 (>L:ASCRJ_AIRC_RECIRC_FAN)
ASCRJ_AIRC_RECIRC_FAN_SWITCH#(L:ASCRJ_AIRC_RECIRC_FAN, Bool) ! (>L:ASCRJ_AIRC_RECIRC_FAN)
ASCRJ_AIRC_RECIRC_FAN_SWITCH_OFF#0 (>L:ASCRJ_AIRC_RECIRC_FAN)
ASCRJ_AIRC_RECIRC_FAN_SWITCH_ON#1 (>L:ASCRJ_AIRC_RECIRC_FAN)
ASCRJ_AIRC_TEMPCTRL_CABIN_DEC# (L:ASCRJ_AIRC_TEMPCTRL_CABIN, Number) 0 > if{ (L:ASCRJ_AIRC_TEMPCTRL_CABIN, Number) -- (>L:ASCRJ_AIRC_TEMPCTRL_CABIN) }
ASCRJ_AIRC_TEMPCTRL_CABIN_INC# (L:ASCRJ_AIRC_TEMPCTRL_CABIN, Number) 26 < if{ (L:ASCRJ_AIRC_TEMPCTRL_CABIN, Number) ++ (>L:ASCRJ_AIRC_TEMPCTRL_CABIN) }
ASCRJ_AIRC_TEMPCTRL_CKPT_DEC# (L:ASCRJ_AIRC_TEMPCTRL_CKPT, Number) 0 > if{ (L:ASCRJ_AIRC_TEMPCTRL_CKPT, Number) -- (>L:ASCRJ_AIRC_TEMPCTRL_CKPT) }
ASCRJ_AIRC_TEMPCTRL_CKPT_INC# (L:ASCRJ_AIRC_TEMPCTRL_CKPT, Number) 26 < if{ (L:ASCRJ_AIRC_TEMPCTRL_CKPT, Number) ++ (>L:ASCRJ_AIRC_TEMPCTRL_CKPT) }
ASCRJ_PRESS_EMER_DEPRESS_BTN_REL#0 (>L:ASCRJ_PRESS_EMER_DEPRESS_ANIM) 1 (>L:ASCRJ_PRESS_EMER_DEPRESS)
ASCRJ_PRESS_EMER_DEPRESS_PRESS#1 (>L:ASCRJ_PRESS_EMER_DEPRESS_ANIM)
ASCRJ_PRESS_LDG_ELEV_KNOB_DEC# (L:ASCRJ_PRESS_LDG_ELEV, Number) 10 - dnor (>L:ASCRJ_PRESS_LDG_ELEV) (ASCRJ_PRESS_LDG_ELEV_CHANGE, Number) -- (>L:ASCRJ_PRESS_LDG_ELEV_CHANGE)
ASCRJ_PRESS_LDG_ELEV_KNOB_INC# (L:ASCRJ_PRESS_LDG_ELEV, Number) 10 + dnor (>L:ASCRJ_PRESS_LDG_ELEV) (ASCRJ_PRESS_LDG_ELEV_CHANGE, Number) ++ (>L:ASCRJ_PRESS_LDG_ELEV_CHANGE)
ASCRJ_PRESS_PRESS_CONT_BTN_PRESS#1 (>L:ASCRJ_PRESS_PRESS_CONT_ANIM)
ASCRJ_PRESS_PRESS_CONT_BTN_REL#0 (>L:ASCRJ_PRESS_PRESS_CONT_ANIM)
ASCRJ_ROT_LDG_ELEV_KNOB_DEC_FAST# (L:ASCRJ_PRESS_LDG_ELEV, Number) 1000 - dnor (>L:ASCRJ_PRESS_LDG_ELEV) (ASCRJ_PRESS_LDG_ELEV_CHANGE, Number) -- (>L:ASCRJ_PRESS_LDG_ELEV_CHANGE)
ASCRJ_ROT_LDG_ELEV_KNOB_INC_FAST# (L:ASCRJ_PRESS_LDG_ELEV, Number) 1000 + dnor (>L:ASCRJ_PRESS_LDG_ELEV) (ASCRJ_PRESS_LDG_ELEV_CHANGE, Number) ++ (>L:ASCRJ_PRESS_LDG_ELEV_CHANGE)
//Aerosoft/CRJ 550-700-1000/Air Conditioning and Pressurization
ASCRJ_AIRC_PACK_L_SWITCH# (L:ASCRJ_AIRC_PACK_L, Bool) ! (>L:ASCRJ_AIRC_PACK_L)
ASCRJ_OVHD_OXY_BUTTON_ON_PRESS#1 d (>L:ASCRJ_OVHD_OXY) (>L:ASCRJ_OVHD_OXY_ANIM) 1 (>L:ASCRJ_OVHD_OXY_GUARD) 15 (>L:ASCRJ_OVHD_OXY_GUARD_COUNT)
ASCRJ_OVHD_OXY_BUTTON_ON_RELEASE#0 (>L:ASCRJ_OVHD_OXY_ANIM)
//Aerosoft/CRJ 550-700-1000/Anti-Ice
ASCRJ_AICE_COWL_L_SWITCH#(L:ASCRJ_AICE_COWL_L, Bool) ! (>L:ASCRJ_AICE_COWL_L)
ASCRJ_AICE_COWL_L_SWITCH_OFF#0 (>L:ASCRJ_AICE_COWL_L)
ASCRJ_AICE_COWL_L_SWITCH_ON#1 (>L:ASCRJ_AICE_COWL_L)
ASCRJ_AICE_COWL_R_SWITCH#(L:ASCRJ_AICE_COWL_R, Bool) ! (>L:ASCRJ_AICE_COWL_R)
ASCRJ_AICE_COWL_R_SWITCH_OFF#0 (>L:ASCRJ_AICE_COWL_R)
ASCRJ_AICE_COWL_R_SWITCH_ON#1 (>L:ASCRJ_AICE_COWL_R)
ASCRJ_AICE_PHEAT_L_SWITCH#(L:ASCRJ_AICE_PHEAT_L, Bool) ! (>L:ASCRJ_AICE_PHEAT_L)
ASCRJ_AICE_PHEAT_L_SWITCH_OFF#0 (>L:ASCRJ_AICE_PHEAT_L)
ASCRJ_AICE_PHEAT_L_SWITCH_ON#1 (>L:ASCRJ_AICE_PHEAT_L)
ASCRJ_AICE_PHEAT_R_SWITCH#(L:ASCRJ_AICE_PHEAT_R, Bool) ! (>L:ASCRJ_AICE_PHEAT_R)
ASCRJ_AICE_PHEAT_R_SWITCH_OFF#0 (>L:ASCRJ_AICE_PHEAT_R)
ASCRJ_AICE_PHEAT_R_SWITCH_ON#1 (>L:ASCRJ_AICE_PHEAT_R)
ASCRJ_AICE_WING_SWITCH#(L:ASCRJ_AICE_WING, Bool) ! (>L:ASCRJ_AICE_WING)
ASCRJ_AICE_WING_SWITCH_OFF#0 (>L:ASCRJ_AICE_WING)
ASCRJ_AICE_WING_SWITCH_ON#1 (>L:ASCRJ_AICE_WING)
ASCRJ_AICE_WSHLD_L_SWITCH#(L:ASCRJ_AICE_WSHLD_L, Number) 0 == if{ 1 (>L:ASCRJ_AICE_WSHLD_L, Number) } els{ (L:ASCRJ_AICE_WSHLD_L, Number) 1 == if{ 2 (>L:ASCRJ_AICE_WSHLD_L, Number) } els{ (L:ASCRJ_AICE_WSHLD_L, Number) 2 == if{ 0 (>L:ASCRJ_AICE_WSHLD_L, Number) }
ASCRJ_AICE_WSHLD_L_SWITCH_HIGH#2 (>L:ASCRJ_AICE_WSHLD_L, Number)
ASCRJ_AICE_WSHLD_L_SWITCH_LOW#1 (>L:ASCRJ_AICE_WSHLD_L, Number)
ASCRJ_AICE_WSHLD_L_SWITCH_OFF#0 (>L:ASCRJ_AICE_WSHLD_L, Number)
ASCRJ_AICE_WSHLD_R_SWITCH#(L:ASCRJ_AICE_WSHLD_R, Number) 0 == if{ 1 (>L:ASCRJ_AICE_WSHLD_R, Number) } els{ (L:ASCRJ_AICE_WSHLD_R, Number) 1 == if{ 2 (>L:ASCRJ_AICE_WSHLD_R, Number) } els{ (L:ASCRJ_AICE_WSHLD_R, Number) 2 == if{ 0 (>L:ASCRJ_AICE_WSHLD_R, Number) }
ASCRJ_AICE_WSHLD_R_SWITCH_HIGH#2 (>L:ASCRJ_AICE_WSHLD_R, Number)
ASCRJ_AICE_WSHLD_R_SWITCH_LOW#1 (>L:ASCRJ_AICE_WSHLD_R, Number)
ASCRJ_AICE_WSHLD_R_SWITCH_OFF#0 (>L:ASCRJ_AICE_WSHLD_R, Number)
ASCRJ_AICE_WSHLD_TEST_BTN_PRESS#1 (>L:ASCRJ_AICE_WSHLD_TEST_ANIM)
ASCRJ_AICE_WSHLD_TEST_BTN_REL#0 (>L:ASCRJ_AICE_WSHLD_TEST_ANIM)
//Aerosoft/CRJ 550-700-1000/Autopilot
ASCRJ_AP_TOGGLE#(L:ASCRJ_FCP_AP_ENG_LED) if{ 1 (>L:ASCRJ_FCP_AP_DISC) }  els{ 0 (>L:ASCRJ_FCP_AP_DISC) 1 (>L:ASCRJ_FCP_AP_ENG) }
ASCRJ_FCP_12BANK_PRESS#1 (>L:ASCRJ_FCP_12BANK)
ASCRJ_FCP_12BANK_RELEASE#0 (>L:ASCRJ_FCP_12BANK)
ASCRJ_FCP_ALT_CANCEL_PRESS#1 (>L:ASCRJ_FCP_ALT_CANCEL)
ASCRJ_FCP_ALT_CANCEL_RELEASE#0 (>L:ASCRJ_FCP_ALT_CANCEL)
ASCRJ_FCP_ALT_PRESS#1 (>L:ASCRJ_FCP_ALT)
ASCRJ_FCP_ALT_RELEASE#0 (>L:ASCRJ_FCP_ALT)
ASCRJ_FCP_APPR_PRESS#1 (>L:ASCRJ_FCP_APPR)
ASCRJ_FCP_APPR_RELEASE#0 (>L:ASCRJ_FCP_APPR)
ASCRJ_FCP_AP_DISC_PRESS#(L:ASCRJ_FCP_AP_DISC, Bool) ! (>L:ASCRJ_FCP_AP_DISC)
ASCRJ_FCP_AP_DISC_RELEASE#(L:ASCRJ_FCP_AP_DISC, Bool) ! (>L:ASCRJ_FCP_AP_DISC)
ASCRJ_FCP_AP_ENG_PRESS#1 (>L:ASCRJ_FCP_AP_ENG)
ASCRJ_FCP_AP_ENG_RELEASE#0 (>L:ASCRJ_FCP_AP_ENG)
ASCRJ_FCP_BC_PRESS#1 (>L:ASCRJ_FCP_BC)
ASCRJ_FCP_BC_RELEASE#0 (>L:ASCRJ_FCP_BC)
ASCRJ_FCP_CRS1_DIRECT_PRESS#1 (>L:ASCRJ_FCP_CRS1_DIRECT)
ASCRJ_FCP_CRS1_DIRECT_RELEASE#0 (>L:ASCRJ_FCP_CRS1_DIRECT)
ASCRJ_FCP_CRS2_DIRECT_PRESS#1 (>L:ASCRJ_FCP_CRS2_DIRECT)
ASCRJ_FCP_CRS2_DIRECT_RELEASE#0 (>L:ASCRJ_FCP_CRS2_DIRECT)
ASCRJ_FCP_FD1_PRESS#1 (>L:ASCRJ_FCP_FD1)
ASCRJ_FCP_FD1_RELEASE#0 (>L:ASCRJ_FCP_FD1)
ASCRJ_FCP_FD2_PRESS#1 (>L:ASCRJ_FCP_FD2)
ASCRJ_FCP_FD2_RELEASE#0 (>L:ASCRJ_FCP_FD2)
ASCRJ_FCP_HDG_PRESS#1 (>L:ASCRJ_FCP_HDG)
ASCRJ_FCP_HDG_RELEASE#0 (>L:ASCRJ_FCP_HDG)
ASCRJ_FCP_HDG_SYNC_PRESS#1 (>L:ASCRJ_FCP_HDG_SYNC)
ASCRJ_FCP_HDG_SYNC_RELEASE#0 (>L:ASCRJ_FCP_HDG_SYNC)
ASCRJ_FCP_IAS_MACH_PRESS#1 (>L:ASCRJ_FCP_IAS_MACH)
ASCRJ_FCP_IAS_MACH_RELEASE#0 (>L:ASCRJ_FCP_IAS_MACH)
ASCRJ_FCP_NAV_PRESS#1 (>L:ASCRJ_FCP_NAV)
ASCRJ_FCP_NAV_RELEASE#0 (>L:ASCRJ_FCP_NAV)
ASCRJ_FCP_SPEED_MODE_PRESS#1 (>L:ASCRJ_FCP_SPEED_MODE)
ASCRJ_FCP_SPEED_MODE_RELEASE#0 (>L:ASCRJ_FCP_SPEED_MODE)
ASCRJ_FCP_SPEED_PRESS#1 (>L:ASCRJ_FCP_SPEED)
ASCRJ_FCP_SPEED_RELEASE#0 (>L:ASCRJ_FCP_SPEED)
ASCRJ_FCP_TURB_PRESS#1 (>L:ASCRJ_FCP_TURB)
ASCRJ_FCP_TURB_RELEASE#0 (>L:ASCRJ_FCP_TURB)
ASCRJ_FCP_VNAV_PRESS#1 (>L:ASCRJ_FCP_VNAV)
ASCRJ_FCP_VNAV_RELEASE#0 (>L:ASCRJ_FCP_VNAV)
ASCRJ_FCP_VS_PRESS#1 (>L:ASCRJ_FCP_VS)
ASCRJ_FCP_VS_RELEASE#0 (>L:ASCRJ_FCP_VS)
ASCRJ_FCP_XFR_PRESS#1 (>L:ASCRJ_FCP_XFR)
ASCRJ_FCP_XFR_RELEASE#0 (>L:ASCRJ_FCP_XFR)
ASCRJ_TQ_TOGA_SWITCH#1 (>L:ASCRJ_TQ_TOGA_1)
ASCRJ_FCP_ALT_SEL_DEC#(L:ASCRJ_FCP_ALT_CHANGE, number) -- (>L:ASCRJ_FCP_ALT_CHANGE)
ASCRJ_FCP_ALT_SEL_INC#(L:ASCRJ_FCP_ALT_CHANGE, number) ++ (>L:ASCRJ_FCP_ALT_CHANGE)
ASCRJ_FCP_CRS1_SEL_DEC#(L:ASCRJ_FCP_CRS1_CHANGE, number) -- (>L:ASCRJ_FCP_CRS1_CHANGE)
ASCRJ_FCP_CRS1_SEL_INC#(L:ASCRJ_FCP_CRS1_CHANGE, number) ++ (>L:ASCRJ_FCP_CRS1_CHANGE)
ASCRJ_FCP_CRS2_SEL_DEC#(L:ASCRJ_FCP_CRS2_CHANGE, number) -- (>L:ASCRJ_FCP_CRS2_CHANGE)
ASCRJ_FCP_CRS2_SEL_INC#(L:ASCRJ_FCP_CRS2_CHANGE, number) ++ (>L:ASCRJ_FCP_CRS2_CHANGE)
ASCRJ_FCP_HDG_SEL_DEC#(L:ASCRJ_FCP_HDG_CHANGE, number) -- (>L:ASCRJ_FCP_HDG_CHANGE)
ASCRJ_FCP_HDG_SEL_INC#(L:ASCRJ_FCP_HDG_CHANGE, number) ++ (>L:ASCRJ_FCP_HDG_CHANGE)
ASCRJ_FCP_SPEED_SEL_DEC#-1 (>L:ASCRJ_FCP_SPEED_CHANGE)
ASCRJ_FCP_SPEED_SEL_INC#1 (>L:ASCRJ_FCP_SPEED_CHANGE)
ASCRJ_FCP_WHEEL_SEL_DEC#(L:ASCRJ_FCP_WHEEL_CHANGE, number) -- (>L:ASCRJ_FCP_WHEEL_CHANGE)
ASCRJ_FCP_WHEEL_SEL_INC#(L:ASCRJ_FCP_WHEEL_CHANGE, number) ++ (>L:ASCRJ_FCP_WHEEL_CHANGE)
//Aerosoft/CRJ 550-700-1000/Avionics
ASCRJ_ECAM_AICE_PRESS#1 (>L:ASCRJ_ECAM_AICE)
ASCRJ_ECAM_AICE_RELEASE#0 (>L:ASCRJ_ECAM_AICE) 
ASCRJ_ECAM_CAS_PRESS#1 (>L:ASCRJ_ECAM_CAS)
ASCRJ_ECAM_CAS_RELEASE#0 (>L:ASCRJ_ECAM_CAS)
ASCRJ_ECAM_DOORS_PRESS#1 (>L:ASCRJ_ECAM_DOORS)
ASCRJ_ECAM_DOORS_RELEASE#0 (>L:ASCRJ_ECAM_DOORS) 
ASCRJ_ECAM_DOWN_PRESS#1 (>L:ASCRJ_ECAM_DOWN)
ASCRJ_ECAM_DOWN_RELEASE#0 (>L:ASCRJ_ECAM_DOWN)
ASCRJ_ECAM_ECS#1 (>L:ASCRJ_ECAM_ECS) 
ASCRJ_ECAM_ELEC_PRESS#1 (>L:ASCRJ_ECAM_ELEC)
ASCRJ_ECAM_ELEC_RELEASE#0 (>L:ASCRJ_ECAM_ELEC) 
ASCRJ_ECAM_FCTL_PRESS#1 (>L:ASCRJ_ECAM_FCTL)
ASCRJ_ECAM_FCTL_RELEASE#0 (>L:ASCRJ_ECAM_FCTL) 
ASCRJ_ECAM_FUEL_PRESS#1 (>L:ASCRJ_ECAM_FUEL)
ASCRJ_ECAM_FUEL_RELEASE#0 (>L:ASCRJ_ECAM_FUEL) 
ASCRJ_ECAM_HYD_PRESS#1 (>L:ASCRJ_ECAM_HYD)
ASCRJ_ECAM_HYD_RELEASE#0 (>L:ASCRJ_ECAM_HYD) 
ASCRJ_ECAM_MENU_PRESS#1 (>L:ASCRJ_ECAM_MENU)
ASCRJ_ECAM_MENU_RELEASE#0 (>L:ASCRJ_ECAM_MENU) 
ASCRJ_ECAM_PRI_PRESS#1 (>L:ASCRJ_ECAM_PRI)
ASCRJ_ECAM_SEL_PRESS#1 (>L:ASCRJ_ECAM_SEL)
ASCRJ_ECAM_SEL_RELEASE#0 (>L:ASCRJ_ECAM_SEL) 
ASCRJ_ECAM_STAT_PRESS#1 (>L:ASCRJ_ECAM_STAT)
ASCRJ_ECAM_STAT_RELEASE#0 (>L:ASCRJ_ECAM_STAT)
ASCRJ_ECAM_STEP_PRESS#1 (>L:ASCRJ_ECAM_STEP)
ASCRJ_ECAM_UP_PRESS#1 (>L:ASCRJ_ECAM_UP)
ASCRJ_ECAM_UP_RELEASE#0 (>L:ASCRJ_ECAM_UP)
ASCRJ_LSP_CLCK_CHR_BTN_PRESS#1 (>L:ASCRJ_LSP_CLCK_CHR)
ASCRJ_LSP_CLCK_CHR_BTN_RELEASE#0 (>L:ASCRJ_LSP_CLCK_CHR)
//Aerosoft/CRJ 550-700-1000/EFIS (right)
ASCRJ_RSP_BARO_STD_PRESS#1 (>L:ASCRJ_RSP_BARO_STD)
//Aerosoft/CRJ 550-700-1000/Electrical
ASCRJ_APU_PWRFUEL_PRESS#1 (>L:ASCRJ_APU_PWRFUEL_ANIM)
ASCRJ_APU_PWRFUEL_RELEASE#0 (>L:ASCRJ_APU_PWRFUEL_ANIM) 1 (>L:ASCRJ_APU_PWRFUEL)
ASCRJ_APU_STARTSTOP_PRESS#2 (>L:ASCRJ_APU_STARTSTOP_ANIM)
ASCRJ_APU_STARTSTOP_RELEASE#(L:ASCRJ_APU_STARTSTOP) ! s0 (>L:ASCRJ_APU_STARTSTOP) l0 (>L:ASCRJ_APU_STARTSTOP_ANIM)
ASCRJ_APU_STARTSTOP_TOGGLE#(L:ASCRJ_APU_STARTSTOP) ! (>L:ASCRJ_APU_STARTSTOP)
ASCRJ_ELEC_ACESSXFER#(L:ASCRJ_ELEC_ACESSXFER, Bool) ! (>L:ASCRJ_ELEC_ACESSXFER)
ASCRJ_ELEC_APUGEN#(L:ASCRJ_ELEC_APUGEN, Bool) ! (>L:ASCRJ_ELEC_APUGEN)
ASCRJ_ELEC_APUGEN_OFF#0 (>L:ASCRJ_ELEC_APUGEN)
ASCRJ_ELEC_APUGEN_RESET#1 (>L:ASCRJ_ELEC_APUGEN)
ASCRJ_ELEC_AUTOXFER1#(L:ASCRJ_ELEC_AUTOXFER1, Bool) ! (>L:ASCRJ_ELEC_AUTOXFER1)
ASCRJ_ELEC_AUTOXFER2#(L:ASCRJ_ELEC_AUTOXFER2, Bool) ! (>L:ASCRJ_ELEC_AUTOXFER2)
ASCRJ_ELEC_BATTMASTER_SWITCH#(L:ASCRJ_ELEC_BATTMASTER, Bool) ! (>L:ASCRJ_ELEC_BATTMASTER)
ASCRJ_ELEC_BATTMASTER_SWITCH_OFF#0 (>L:ASCRJ_ELEC_BATTMASTER)
ASCRJ_ELEC_BATTMASTER_SWITCH_ON#1 (>L:ASCRJ_ELEC_BATTMASTER)
ASCRJ_ELEC_DCSERVICE#(L:ASCRJ_ELEC_DCSERVICE, Bool) ! (>L:ASCRJ_ELEC_DCSERVICE)
ASCRJ_ELEC_DCSERVICE_OFF#0 (>L:ASCRJ_ELEC_DCSERVICE)
ASCRJ_ELEC_DCSERVICE_ON#1 (>L:ASCRJ_ELEC_DCSERVICE)
ASCRJ_ELEC_GEN1#(L:ASCRJ_ELEC_GEN1, Bool) ! (>L:ASCRJ_ELEC_GEN1)
ASCRJ_ELEC_GEN1_OFF#0 (>L:ASCRJ_ELEC_GEN1)
ASCRJ_ELEC_GEN1_RESET#1 (>L:ASCRJ_ELEC_GEN1)
ASCRJ_ELEC_GEN2#(L:ASCRJ_ELEC_GEN2, Bool) ! (>L:ASCRJ_ELEC_GEN2)
ASCRJ_ELEC_GEN2_OFF#0 (>L:ASCRJ_ELEC_GEN2)
ASCRJ_ELEC_GEN2_RESET#1 (>L:ASCRJ_ELEC_GEN2)
ASCRJ_ELEC_GPU_INUSE_SWITCH# (L:ASCRJ_ELEC_GPU, Bool) ! (>L:ASCRJ_ELEC_GPU)
ASCRJ_ELEC_IDG1#(L:ASCRJ_ELEC_IDG1, Bool) ! (>L:ASCRJ_ELEC_IDG1)
ASCRJ_ELEC_IDG2#(L:ASCRJ_ELEC_IDG2, Bool) ! (>L:ASCRJ_ELEC_IDG2)
ASCRJ_FIRE_TEST_BTN_PRESS#1 (>L:ASCRJ_FIRE_TEST_BTN_ANIM) 1 (>L:ASCRJ_FIRE_TEST)
ASCRJ_FIRE_TEST_BTN_RELEASE#0 (>L:ASCRJ_FIRE_TEST_BTN_ANIM) 0 (>L:ASCRJ_FIRE_TEST)
ASCRJ_HYDRO_SOV_L_PRESS#2 (>L:ASCRJ_HYDR_SOV1_ANIM)
ASCRJ_HYDRO_SOV_L_REL#(L:ASCRJ_HYDR_SOV1_ANIM, Number) 2 == if{ (L:ASCRJ_HYDR_SOV1, Bool) ! (>L:ASCRJ_HYDR_SOV1) (L:ASCRJ_HYDR_SOV1) if{ 1 (>L:ASCRJ_HYDR_SOV1_ANIM) } els{ 0 (>L:ASCRJ_HYDR_SOV1_ANIM) } }
ASCRJ_HYDRO_SOV_R_PRESS#2 (>L:ASCRJ_HYDR_SOV2_ANIM)
ASCRJ_HYDRO_SOV_R_REL#(L:ASCRJ_HYDR_SOV2_ANIM, Number) 2 == if{ (L:ASCRJ_HYDR_SOV2, Bool) ! (>L:ASCRJ_HYDR_SOV2) (L:ASCRJ_HYDR_SOV2) if{ 1 (>L:ASCRJ_HYDR_SOV2_ANIM) } els{ 0 (>L:ASCRJ_HYDR_SOV2_ANIM) } }
ASCRJ_IRS1_KNOB_SWITCH#(L:ASCRJ_IRS1_KNOB, Number) 0 == if{ 1 (>L:ASCRJ_IRS1_KNOB, Number) } els{ (L:ASCRJ_IRS1_KNOB, Number) 1 == if{ 2 (>L:ASCRJ_IRS1_KNOB, Number) } els{ (L:ASCRJ_IRS1_KNOB, Number) 2 == if{ 0 (>L:ASCRJ_IRS1_KNOB, Number) }
ASCRJ_IRS2_KNOB_SWITCH#(L:ASCRJ_IRS2_KNOB, Number) 0 == if{ 1 (>L:ASCRJ_IRS2_KNOB, Number) } els{ (L:ASCRJ_IRS2_KNOB, Number) 1 == if{ 2 (>L:ASCRJ_IRS2_KNOB, Number) } els{ (L:ASCRJ_IRS2_KNOB, Number) 2 == if{ 0 (>L:ASCRJ_IRS2_KNOB, Number) }
ASCRJ_LAMP_TEST_SWITCH#(L:ASCRJ_ENG_LAMPTEST, Number) ++ 3 % (>L:ASCRJ_ENG_LAMPTEST, Number)
ASCRJ_MASTER_CAUT_PRESS#1 (>L:ASCRJ_MASTER_CAUT)
ASCRJ_MASTER_CAUT_RELEASE#0 (>L:ASCRJ_MASTER_CAUT)
ASCRJ_MASTER_WARN_PRESS#1 (>L:ASCRJ_MASTER_WARN)
ASCRJ_MASTER_WARN_RELEASE#0 (>L:ASCRJ_MASTER_WARN)
//Aerosoft/CRJ 550-700-1000/Engines
ASCRJ_CONT_IGN_BTN#1 (>L:ASCRJ_ENGS_CONT_IGN)
ASCRJ_CONT_IGN_BTN_PRESS#2 (>L:ASCRJ_ENGS_CONT_IGN_ANIM)
ASCRJ_CONT_IGN_BTN_REL#(L:ASCRJ_ENGS_CONT_IGN, Bool) ! (>L:ASCRJ_ENGS_CONT_IGN) 0 (>L:ASCRJ_ENGS_CONT_IGN_ANIM)
ASCRJ_ENGS_START_L_PRESS#1 (>L:ASCRJ_ENGS_START_L_ANIM)
ASCRJ_ENGS_START_L_RELEASE#0 (>L:ASCRJ_ENGS_START_L_ANIM) 1 (>L:ASCRJ_ENGS_START_L)
ASCRJ_ENGS_START_R_PRESS#1 (>L:ASCRJ_ENGS_START_R_ANIM)
ASCRJ_ENGS_START_R_RELEASE#0 (>L:ASCRJ_ENGS_START_R_ANIM) 1 (>L:ASCRJ_ENGS_START_R)
ASCRJ_ENGS_STOP_L_PRESS#1 (>L:ASCRJ_ENGS_STOP_L_ANIM)
ASCRJ_ENGS_STOP_L_RELEASE#0 (>L:ASCRJ_ENGS_STOP_L_ANIM) 1 (>L:ASCRJ_ENGS_STOP_L)
ASCRJ_ENGS_STOP_R_PRESS#1 (>L:ASCRJ_ENGS_STOP_R_ANIM)
ASCRJ_ENGS_STOP_R_RELEASE#0 (>L:ASCRJ_ENGS_STOP_R_ANIM) 1 (>L:ASCRJ_ENGS_STOP_R)
ASCRJ_FUEL_PUMP_L_SWITCH# (L:ASCRJ_FUEL_PUMP_L, Bool) ! (>L:ASCRJ_FUEL_PUMP_L)
ASCRJ_FUEL_PUMP_R_SWITCH# (L:ASCRJ_FUEL_PUMP_R, Bool) ! (>L:ASCRJ_FUEL_PUMP_R)
ASCRJ_REV_1_ARM_SWITCH_TOGGLE# (L:ASCRJ_TQ_REV1_MODE, Bool) ! (>L:ASCRJ_TQ_REV1_MODE)
ASCRJ_REV_2_ARM_SWITCH_TOGGLE# (L:ASCRJ_TQ_REV2_MODE, Bool) ! (>L:ASCRJ_TQ_REV2_MODE)
ASCRJ_TQ_CUTOFF_1_LEVER#1 (>L:ASCRJ_TQ_CUTOFF_1)
ASCRJ_TQ_CUTOFF_2_LEVER#1 (>L:ASCRJ_TQ_CUTOFF_2)
ASCRJ_TQ_THROTTLE_1_POS_IDLE#400 (>L:ASCRJ_TQ_THROTTLE_1_POS)
ASCRJ_TQ_THROTTLE_1_POS_SHUTOFF#500 (>L:ASCRJ_TQ_THROTTLE_1_POS)
ASCRJ_TQ_THROTTLE_2_POS_IDLE#400 (>L:ASCRJ_TQ_THROTTLE_2_POS)
ASCRJ_TQ_THROTTLE_2_POS_SHUTOFF#500 (>L:ASCRJ_TQ_THROTTLE_2_POS)
ENG1_Reverse#ASCRJ_TQ_REVERSE_1_ANIM
ENG2_Reverse#ASCRJ_TQ_REVERSE_2_ANIM
//Aerosoft/CRJ 550-700-1000/Flight Controls
ASCRJ_FLAPS_DECR#(L:ASCRJ_FLAPS_SET,number) -- 0 max (>L:ASCRJ_FLAPS_SET,number)
ASCRJ_FLAPS_INCR#(L:ASCRJ_FLAPS_SET,number) ++ 5 min (>L:ASCRJ_FLAPS_SET,number)
ASCRJ_GLD_MODE_SWITCH3_PRESS#(L:ASCRJ_TQ_SPLR_MODE, Number) -- (>L:ASCRJ_TQ_SPLR_MODE) (L:ASCRJ_TQ_SPLR_MODE, Number) 0 == if{ 2 (>L:ASCRJ_TQ_SPLR_MODE_TIMER_0) } 
ASCRJ_GLD_MODE_SWITCH3_RELEASE#(L:ASCRJ_TQ_SPLR_MODE, Number) ++ (>L:ASCRJ_TQ_SPLR_MODE) (L:ASCRJ_TQ_SPLR_MODE, Number) 2 == if{ 2 (>L:ASCRJ_TQ_SPLR_MODE_TIMER_2) } 
ASCRJ_MACH_TRIM_SWITCH# (L:ASCRJ_MACH_TRIM, Bool) ! (>L:ASCRJ_MACH_TRIM)
ASCRJ_STAB_TRIM_CH_1_SWITCH# (L:ASCRJ_STAB_TRIM_CH1_TRIGGER, Bool) ! (>L:ASCRJ_STAB_TRIM_CH1_TRIGGER)
ASCRJ_STAB_TRIM_CH_2_SWITCH# (L:ASCRJ_STAB_TRIM_CH2_TRIGGER, Bool) ! (>L:ASCRJ_STAB_TRIM_CH2_TRIGGER)
ASCRJ_YD1_SWITCH# (L:ASCRJ_YD1, Bool) ! (>L:ASCRJ_YD1)
ASCRJ_YD2_SWITCH# (L:ASCRJ_YD2, Bool) ! (>L:ASCRJ_YD2)
ASCRJ_YD_DISC_SWITCH# (L:ASCRJ_YD_DISC, Bool) ! (>L:ASCRJ_YD_DISC)
//Aerosoft/CRJ 550-700-1000/Flight Instrumentation
ASCRJ_DIM_BRT_BTN#1 (>L:ASCRJ_DIM_BRT) 
ASCRJ_HUD_ACT_BTN#1 (>L:ASCRJ_HUD_ACT) 
ASCRJ_HUD_BRT_BTN#1 (>L:ASCRJ_HUD_BRT)
ASCRJ_HUD_DIM_BTN#0 (>L:ASCRJ_HUD_DIM_BTN_ANIM)
ASCRJ_HUD_KEY_0_BTN#0 (>L:ASCRJ_HUD_KEY_0_BTN_ANIM)
ASCRJ_HUD_KEY_1#1 (>L:ASCRJ_HUD_KEY_1)
ASCRJ_HUD_KEY_1_BTN#0 (>L:ASCRJ_HUD_KEY_1_BTN_ANIM)
ASCRJ_HUD_KEY_3_BTN#1 (>L:ASCRJ_HUD_KEY_3)
ASCRJ_HUD_KEY_4_BTN#1 (>L:ASCRJ_HUD_KEY_4) 
ASCRJ_HUD_KEY_5_BTN#1 (>L:ASCRJ_HUD_KEY_5)
ASCRJ_HUD_KEY_6_BTN#1 (>L:ASCRJ_HUD_KEY_6) 
ASCRJ_HUD_KEY_7_BTN#1 (>L:ASCRJ_HUD_KEY_7) 
ASCRJ_HUD_KEY_9_BTN#1 (>L:ASCRJ_HUD_KEY_9)
ASCRJ_HUD_KEY_ENTER_BTN#1 (>L:ASCRJ_HUD_KEY_ENTER)
ASCRJ_HUD_KEY_TEST_BTN#1 (>L:ASCRJ_HUD_KEY_TEST)
ASCRJ_HUD_RWY_BTN#1 (>L:ASCRJ_HUD_RWY) 
ASCRJ_HUD_STBY_BTN#1 (>L:ASCRJ_HUD_STBY)
ASCRJ_LSP_BRG1_PRESS#1 (>L:ASCRJ_LSP_BRG1)
ASCRJ_LSP_BRG1_RELEASE#0 (>L:ASCRJ_LSP_BRG1)
ASCRJ_LSP_BRG2_PRESS#1 (>L:ASCRJ_LSP_BRG2)
ASCRJ_LSP_BRG2_RELEASE#0 (>L:ASCRJ_LSP_BRG2)
ASCRJ_LSP_HEIGHT_MODE_DA#(L:ASCRJ_LSP_HEIGHT_MODE, Number) 2 -- < if{ (L:ASCRJ_LSP_HEIGHT_MODE, Number) ++ (>L:ASCRJ_LSP_HEIGHT_MODE) 
ASCRJ_LSP_HEIGHT_MODE_MDA#(L:ASCRJ_LSP_HEIGHT_MODE, Number) 0 > if{ (L:ASCRJ_LSP_HEIGHT_MODE, Number) -- (>L:ASCRJ_LSP_HEIGHT_MODE) 
ASCRJ_LSP_RDR_PRESS#1 (>L:ASCRJ_LSP_RDR)
ASCRJ_LSP_RDR_RELEASE#0 (>L:ASCRJ_LSP_RDR)
ASCRJ_LSP_SEL_PRESS#1 (>L:ASCRJ_LSP_SEL)
ASCRJ_LSP_SEL_RELEASE#0 (>L:ASCRJ_LSP_SEL)
ASCRJ_LSP_SPEED_MODE_DEC#(L:ASCRJ_LSP_SPEED_MODE, Number) -- 0 max (>L:ASCRJ_LSP_SPEED_MODE) 
ASCRJ_LSP_SPEED_MODE_INC#(L:ASCRJ_LSP_SPEED_MODE, Number) ++ 2 min (>L:ASCRJ_LSP_SPEED_MODE) 
ASCRJ_LSP_SPEED_SEL#1 (>L:ASCRJ_LSP_SPEED_SEL)
ASCRJ_LSP_SPEED_SEL_DEC#(L:ASCRJ_LSP_SPEED_SEL, Number) 10 - dnor (>L:ASCRJ_LSP_SPEED_SEL) (L:ASCRJ_LSP_SPEED_SEL_CHANGE_, Number) -- (>L:ASCRJ_LSP_SPEED_SEL_CHANGE) 
ASCRJ_LSP_SPEED_SEL_INC#(L:ASCRJ_LSP_SPEED_SEL, Number) 10 + dnor (>L:ASCRJ_LSP_SPEED_SEL) (L:ASCRJ_LSP_SPEED_SEL_CHANGE, Number) ++ (>L:ASCRJ_LSP_SPEED_SEL_CHANGE) 
ASCRJ_HUD_ACT_BTN_ANIM#0 (>L:ASCRJ_HUD_ACT_BTN_ANIM)
ASCRJ_HUD_BRT_BTN_ANIM#0 (>L:ASCRJ_HUD_BRT_BTN_ANIM)
ASCRJ_HUD_GS_BTN#1 (>L:ASCRJ_HUD_GS) 
ASCRJ_HUD_GS_BTN_ANIM#0 (>L:ASCRJ_HUD_GS_BTN_ANIM) 
ASCRJ_HUD_KEY_0_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_0_BTN_ANIM)
ASCRJ_HUD_KEY_2#1 (>L:ASCRJ_HUD_KEY_2) 
ASCRJ_HUD_KEY_2_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_2_BTN_ANIM)
ASCRJ_HUD_KEY_3_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_3_BTN_ANIM)
ASCRJ_HUD_KEY_4_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_4_BTN_ANIM)
ASCRJ_HUD_KEY_5_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_5_BTN_ANIM)
ASCRJ_HUD_KEY_6_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_6_BTN_ANIM)
ASCRJ_HUD_KEY_7_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_7_BTN_ANIM)
ASCRJ_HUD_KEY_8#1 (>L:ASCRJ_HUD_KEY_8)
ASCRJ_HUD_KEY_8_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_8_BTN_ANIM)
ASCRJ_HUD_KEY_9_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_9_BTN_ANIM)
ASCRJ_HUD_KEY_ENTER_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_ENTER_BTN_ANIM)
ASCRJ_HUD_KEY_TEST_BTN_ANIM#0 (>L:ASCRJ_HUD_KEY_TEST_BTN_ANIM)
ASCRJ_HUD_KEY_TEST_BTN_ANIM_-_DUPLICATE#0 (>L:ASCRJ_HUD_KEY_TEST_BTN_ANIM)
ASCRJ_HUD_RWY_BTN_ANIM#0 (>L:ASCRJ_HUD_RWY_BTN_ANIM)
ASCRJ_HUD_STBY_BTN_ANIM#0 (>L:ASCRJ_HUD_STBY_BTN_ANIM)
ASCRJ_LSP_HEIGHT_SEL_DEC#(L_ASCRJ_LSP_HEIGHT_SEL, Number) 10 - DNOR (>L:ASCRJ_LSP_HEIGHT_SEL) (L:ASCRJ_LSP_HEIGHT_SEL_CHANGE, Number) -- (>L:ASCRJ_LSP_HEIGHT_SEL_CHANGE) 
ASCRJ_LSP_HEIGHT_SEL_INC#(L_ASCRJ_LSP_HEIGHT_SEL, Number) 10 + DNOR (>L:ASCRJ_LSP_HEIGHT_SEL) (L:ASCRJ_LSP_HEIGHT_SEL_CHANGE, Number) ++ (>L:ASCRJ_LSP_HEIGHT_SEL_CHANGE) 
ASCRJ_LSP_SPEED_SEL_-_DUPLICATE__OLD_#0 (>L:ASCRJ_LSP_SPEED_SEL) 0 (>L:ASCRJ_LSP_SPEED_SEL) 1 (>L:ASCRJ_LSP_SPEED_SET) 
//Aerosoft/CRJ 550-700-1000/Fuel
ASCRJ_FUEL_GRAVITY_FLOW_PRESS#2 (>L:ASCRJ_FUEL_GRAVITY_FLOW_ANIM)
ASCRJ_FUEL_GRAVITY_FLOW_REL#(L:ASCRJ_FUEL_GRAVITY_FLOW, Bool) ! (>L:ASCRJ_FUEL_GRAVITY_FLOW) 0 (>L:ASCRJ_FUEL_GRAVITY_FLOW_ANIM)
ASCRJ_FUEL_XFLOW_L_PRESS#2 (>L:ASCRJ_FUEL_XFLOW_L_ANIM)
ASCRJ_FUEL_XFLOW_L_REL#(L:ASCRJ_FUEL_XFLOW_L, Bool) ! (>L:ASCRJ_FUEL_XFLOW_L) 0 (>L:ASCRJ_FUEL_XFLOW_L_ANIM)
ASCRJ_FUEL_XFLOW_OVRD_PRESS#2 (>L:ASCRJ_FUEL_XFLOW_OVRD_ANIM)
ASCRJ_FUEL_XFLOW_OVRD_REL#(L:ASCRJ_FUEL_XFLOW_OVRD, Bool) ! (>L:ASCRJ_FUEL_XFLOW_OVRD) 0 (>L:ASCRJ_FUEL_XFLOW_OVRD_ANIM)
ASCRJ_FUEL_XFLOW_R_PRESS#2 (>L:ASCRJ_FUEL_XFLOW_R_ANIM)
ASCRJ_FUEL_XFLOW_R_REL#(L:ASCRJ_FUEL_XFLOW_R, Bool) ! (>L:ASCRJ_FUEL_XFLOW_R) 0 (>L:ASCRJ_FUEL_XFLOW_R_ANIM)
ASCRJ_L_FUEL_PUMP_PRESS#2 (>L:ASCRJ_FUEL_PUMP_L_ANIM)
ASCRJ_L_FUEL_PUMP_REL#(L:ASCRJ_FUEL_PUMP_L, Bool) ! (>L:ASCRJ_FUEL_PUMP_L) 0 (>L:ASCRJ_FUEL_PUMP_L_ANIM)
ASCRJ_R_FUEL_PUMP_PRESS#2 (>L:ASCRJ_FUEL_PUMP_R_ANIM)
ASCRJ_R_FUEL_PUMP_REL#(L:ASCRJ_FUEL_PUMP_R, Bool) ! (>L:ASCRJ_FUEL_PUMP_R) 0 (>L:ASCRJ_FUEL_PUMP_R_ANIM)
Fuel_XFLOW_Man#1 (>L:FUEL_ASCRJ_FUEL_XFLOW_ON, Number)
Fuel_XFLOW_Off#0 (>L:FUEL_ASCRJ_FUEL_XFLOW_OFF, Number)
//Aerosoft/CRJ 550-700-1000/Gear
ASCRJ_GEAR_GEAR_LEVER_SWITCH_OFF#0 (>L:ASCRJ_GEAR_GEAR_LEVER)
ASCRJ_GEAR_GEAR_LEVER_SWITCH_ON#1 (>L:ASCRJ_GEAR_GEAR_LEVER)
ASCRJ_PARK_BRAKE_SWITCH_OFF#0 (>L:ASCRJ_PARK_BRAKE)
ASCRJ_PARK_BRAKE_SWITCH_ON#1 (>L:ASCRJ_PARK_BRAKE)
//Aerosoft/CRJ 550-700-1000/Hydraulic
ASCRJ_HYDRAULIC_L_HYD_SOV_GUARD_COUNT_TIMER#50 (>L:ASCRJ_HYDR_SOV1_GUARD_COUNT)
ASCRJ_HYDRAULIC_L_HYD_SOV_GUARD_SW#(L:ASCRJ_HYDR_SOV1_GUARD) ! (>L:ASCRJ_HYDR_SOV1_GUARD)
ASCRJ_HYDRAULIC_L_HYD_SOV_SW#(L:ASCRJ_HYDR_SOV1) ! (>L:ASCRJ_HYDR_SOV1)
ASCRJ_HYDRAULIC_R_HYD_SOV_GUARD_COUNT_TIMER#50 (>L:ASCRJ_HYDR_SOV2_GUARD_COUNT)
ASCRJ_HYDRAULIC_R_HYD_SOV_GUARD_SW#(L:ASCRJ_HYDR_SOV2_GUARD) ! (>L:ASCRJ_HYDR_SOV2_GUARD)
ASCRJ_HYDRAULIC_R_HYD_SOV_SW#(L:ASCRJ_HYDR_SOV2) ! (>L:ASCRJ_HYDR_SOV2)
ASCRJ_HYDR_PUMP_1_AUTO_SWITCH#2 (>L:ASCRJ_HYDR_PUMP_1, Number)
ASCRJ_HYDR_PUMP_1_BUTTON#(L:ASCRJ_HYDR_PUMP_1, Number) ++ 3 % (>L:ASCRJ_HYDR_PUMP_1, Number)
ASCRJ_HYDR_PUMP_1_OFF_SWITCH#1 (>L:ASCRJ_HYDR_PUMP_1, Number)
ASCRJ_HYDR_PUMP_1_ON_SWITCH#0 (>L:ASCRJ_HYDR_PUMP_1, Number)
ASCRJ_HYDR_PUMP_2_AUTO_SWITCH#2 (>L:ASCRJ_HYDR_PUMP_2, Number)
ASCRJ_HYDR_PUMP_2_BUTTON#(L:ASCRJ_HYDR_PUMP_2, Number) ++ 3 % (>L:ASCRJ_HYDR_PUMP_2, Number)
ASCRJ_HYDR_PUMP_2_OFF_SWITCH#1 (>L:ASCRJ_HYDR_PUMP_2, Number)
ASCRJ_HYDR_PUMP_2_ON_SWITCH#0 (>L:ASCRJ_HYDR_PUMP_2, Number)
ASCRJ_HYDR_PUMP_3A_BUTTON# (L:ASCRJ_HYDR_PUMP_3A, Bool) ! (>L:ASCRJ_HYDR_PUMP_3A)
ASCRJ_HYDR_PUMP_3A_ON-OFF_SWITCH#(L:ASCRJ_HYDR_PUMP_3A, Bool) ! (>L:ASCRJ_HYDR_PUMP_3A)
ASCRJ_HYDR_PUMP_3A_SWITCH_OFF#0 (>L:ASCRJ_HYDR_PUMP_3A)
ASCRJ_HYDR_PUMP_3A_SWITCH_ON#1 (>L:ASCRJ_HYDR_PUMP_3A)
ASCRJ_HYDR_PUMP_3B_AUTO_SWITCH#2 (>L:ASCRJ_HYDR_PUMP_3B, Number)
ASCRJ_HYDR_PUMP_3B_BUTTON#(L:ASCRJ_HYDR_PUMP_3B, Number) ++ 3 % (>L:ASCRJ_HYDR_PUMP_3B, Number)
ASCRJ_HYDR_PUMP_3B_OFF_SWITCH#1 (>L:ASCRJ_HYDR_PUMP_3B, Number)
ASCRJ_HYDR_PUMP_3B_ON_SWITCH#0 (>L:ASCRJ_HYDR_PUMP_3B, Number)
//Aerosoft/CRJ 550-700-1000/Lights
ASCRJ_DM_LT_CPT_DEC# (L:ASCRJ64_DM_LT_CPT, Number) 0 > if{ (L:ASCRJ64_DM_LT_CPT, Number) -- (>L:ASCRJ64_DM_LT_CPT) }
ASCRJ_DM_LT_CPT_INC# (L:ASCRJ64_DM_LT_CPT, Number) 26 < if{ (L:ASCRJ64_DM_LT_CPT, Number) ++ (>L:ASCRJ64_DM_LT_CPT) }
ASCRJ_DM_LT_FO_DEC# (L:ASCRJ64_DM_LT_FO, Number) 0 > if{ (L:ASCRJ64_DM_LT_FO, Number) -- (>L:ASCRJ64_DM_LT_FO) }
ASCRJ_DM_LT_FO_INC# (L:ASCRJ64_DM_LT_FO, Number) 26 < if{ (L:ASCRJ64_DM_LT_FO, Number) ++ (>L:ASCRJ64_DM_LT_FO) }
ASCRJ_EXTL_BEACON_SWITCH#(L:ASCRJ_EXTL_BEACON, Bool) ! (>L:ASCRJ_EXTL_BEACON)
ASCRJ_EXTL_BEACON_SWITCH_OFF#0 (>L:ASCRJ_EXTL_BEACON)
ASCRJ_EXTL_BEACON_SWITCH_ON#1 (>L:ASCRJ_EXTL_BEACON)
ASCRJ_EXTL_LOGO_SWITCH#(L:ASCRJ_EXTL_LOGO, Bool) ! (>L:ASCRJ_EXTL_LOGO)
ASCRJ_EXTL_LOGO_SWITCH_ON#1 (>L:ASCRJ_EXTL_LOGO)
ASCRJ_EXTL_NAV_SWITCH#(L:ASCRJ_EXTL_NAV, Bool) ! (>L:ASCRJ_EXTL_NAV)
ASCRJ_EXTL_NAV_SWITCH_OFF#0 (>L:ASCRJ_EXTL_NAV)
ASCRJ_EXTL_NAV_SWITCH_ON#1 (>L:ASCRJ_EXTL_NAV)
ASCRJ_EXTL_STROBE_SWITCH#(L:ASCRJ_EXTL_STROBE, Bool) ! (>L:ASCRJ_EXTL_STROBE)
ASCRJ_EXTL_STROBE_SWITCH_OFF#0 (>L:ASCRJ_EXTL_STROBE)
ASCRJ_EXTL_STROBE_SWITCH_ON#1 (>L:ASCRJ_EXTL_STROBE)
ASCRJ_EXTL_WING_SWITCH#(L:ASCRJ_EXTL_WING, Bool) ! (>L:ASCRJ_EXTL_WING)
ASCRJ_EXTL_WING_SWITCH_OFF#0 (>L:ASCRJ_EXTL_WING)
ASCRJ_EXTL_WING_SWITCH_ON#1 (>L:ASCRJ_EXTL_WING)
ASCRJ_INTL_COMP_SWITCH_ON#2 (>L:ASCRJ_INTL_COMP)
ASCRJ_INTL_COMP_SWITCH_DIM#0 (>L:ASCRJ_INTL_COMP)
ASCRJ_INTL_DOME_SWITCH_OFF#0 (>L:ASCRJ_INTL_DOME)
ASCRJ_INTL_DOME_SWITCH_ON#1 (>L:ASCRJ_INTL_DOME)
ASCRJ_INTL_DSPL_BRT_DEC# (L:ASCRJ_INTL_DSPL_BRT, Number) 0 > if{ (L:ASCRJ_INTL_DSPL_BRT, Number) -- (>L:ASCRJ_INTL_DSPL_BRT) }
ASCRJ_INTL_DSPL_BRT_INC# (L:ASCRJ_INTL_DSPL_BRT, Number) 26 < if{ (L:ASCRJ_INTL_DSPL_BRT, Number) ++ (>L:ASCRJ_INTL_DSPL_BRT) }
ASCRJ_INTL_FLOOD_BRT_DEC# (L:ASCRJ_INTL_FLOOD_BRT, Number) 0 > if{ (L:ASCRJ_INTL_FLOOD_BRT, Number) -- (>L:ASCRJ_INTL_FLOOD_BRT) }
ASCRJ_INTL_FLOOD_BRT_INC# (L:ASCRJ_INTL_FLOOD_BRT, Number) 26 < if{ (L:ASCRJ_INTL_FLOOD_BRT, Number) ++ (>L:ASCRJ_INTL_FLOOD_BRT) }
ASCRJ_INTL_INTEG_BRT_DEC# (L:ASCRJ_INTL_INTEG_BRT, Number) 0 > if{ (L:ASCRJ_INTL_INTEG_BRT, Number) -- (>L:ASCRJ_INTL_INTEG_BRT) }
ASCRJ_INTL_INTEG_BRT_INC# (L:ASCRJ_INTL_INTEG_BRT, Number) 26 < if{ (L:ASCRJ_INTL_INTEG_BRT, Number) ++ (>L:ASCRJ_INTL_INTEG_BRT) }
ASCRJ_INTL_OVHD_DEC# (L:ASCRJ_INTL_OVHD, Number) 0 > if{ (L:ASCRJ_INTL_OVHD, Number) -- (>L:ASCRJ_INTL_OVHD) }
ASCRJ_INTL_OVHD_INC# (L:ASCRJ_INTL_OVHD, Number) 26 < if{ (L:ASCRJ_INTL_OVHD, Number) ++ (>L:ASCRJ_INTL_OVHD) }
ASCRJ_LSP_DSPL_DEC# (L:ASCRJ_LSP_DSPL, Number) 0 > if{ (L:ASCRJ_LSP_DSPL, Number) -- (>L:ASCRJ_LSP_DSPL) }
ASCRJ_LSP_DSPL_INC# (L:ASCRJ_LSP_DSPL, Number) 26 < if{ (L:ASCRJ_LSP_DSPL, Number) ++ (>L:ASCRJ_LSP_DSPL) }
ASCRJ_LSP_FLOOD_DEC# (L:ASCRJ_LSP_FLOOD, Number) 0 > if{ (L:ASCRJ_LSP_FLOOD, Number) -- (>L:ASCRJ_LSP_FLOOD) }
ASCRJ_LSP_FLOOD_INC# (L:ASCRJ_LSP_FLOOD, Number) 26 < if{ (L:ASCRJ_LSP_FLOOD, Number) ++ (>L:ASCRJ_LSP_FLOOD) }
ASCRJ_LSP_INTEG_DEC# (L:ASCRJ_LSP_INTEG, Number) 0 > if{ (L:ASCRJ_LSP_INTEG, Number) -- (>L:ASCRJ_LSP_INTEG) }
ASCRJ_LSP_INTEG_INC# (L:ASCRJ_LSP_INTEG, Number) 26 < if{ (L:ASCRJ_LSP_INTEG, Number) ++ (>L:ASCRJ_LSP_INTEG) }
ASCRJ_OVHD_ELT_SWITCH_OFF#0 (>L:ASCRJ_OVHD_ELT)
ASCRJ_OVHD_ELT_SWITCH_ON#1 (>L:ASCRJ_OVHD_ELT)
ASCRJ_OVHD_ELT_SWITCH_XXX#1 (>L:ASCRJ_OVHD_ELT, Number)
ASCRJ_OVHD_EMER_LTS_SWITCH#(L:ASCRJ_OVHD_EMER_LTS, Number) 0 == if{ 1 (>L:ASCRJ_OVHD_EMER_LTS, Number) } els{ (L:ASCRJ_OVHD_EMER_LTS, Number) 1 == if{ 2 (>L:ASCRJ_OVHD_EMER_LTS, Number) } els{ (L:ASCRJ_OVHD_EMER_LTS, Number) 2 == if{ 0 (>L:ASCRJ_OVHD_EMER_LTS, Number) }
ASCRJ_OVHD_EMER_LTS_SWITCH_ARM#0 (>L:ASCRJ_OVHD_EMER_LTS, Number)
ASCRJ_OVHD_EMER_LTS_SWITCH_OFF#1 (>L:ASCRJ_OVHD_EMER_LTS, Number)
ASCRJ_OVHD_EMER_LTS_SWITCH_ON#2 (>L:ASCRJ_OVHD_EMER_LTS, Number)
ASCRJ_OVHD_LDG_LEFT_SWITCH#(L:ASCRJ_OVHD_LDG_LEFT, Bool) ! (>L:ASCRJ_OVHD_LDG_LEFT)
ASCRJ_OVHD_LDG_LTS_LEFT_SWITCH_OFF#0 (>L:ASCRJ_OVHD_LDG_LEFT)
ASCRJ_OVHD_LDG_LTS_LEFT_SWITCH_ON#1 (>L:ASCRJ_OVHD_LDG_LEFT)
ASCRJ_OVHD_LDG_LTS_NOSE_SWITCH_OFF#0 (>L:ASCRJ_OVHD_LDG_NOSE)
ASCRJ_OVHD_LDG_LTS_NOSE_SWITCH_ON#1 (>L:ASCRJ_OVHD_LDG_NOSE)
ASCRJ_OVHD_LDG_LTS_RIGHT_SWITCH_OFF#0 (>L:ASCRJ_OVHD_LDG_RIGHT)
ASCRJ_OVHD_LDG_LTS_RIGHT_SWITCH_ON#1 (>L:ASCRJ_OVHD_LDG_RIGHT)
ASCRJ_OVHD_LDG_NOSE_SWITCH#(L:ASCRJ_OVHD_LDG_NOSE, Bool) ! (>L:ASCRJ_OVHD_LDG_NOSE)
ASCRJ_OVHD_LDG_RIGHT_SWITCH#(L:ASCRJ_OVHD_LDG_RIGHT, Bool) ! (>L:ASCRJ_OVHD_LDG_RIGHT)
ASCRJ_OVHD_TAXI_LTS_SWITCH_OFF#0 (>L:ASCRJ_OVHD_TAXI)
ASCRJ_OVHD_TAXI_LTS_SWITCH_ON#1 (>L:ASCRJ_OVHD_TAXI)
ASCRJ_OVHD_TAXI_SWITCH#(L:ASCRJ_OVHD_TAXI, Bool) ! (>L:ASCRJ_OVHD_TAXI)
ASCRJ_RSP_DSPL_DEC# (L:ASCRJ_RSP_DSPL, Number) 0 > if{ (L:ASCRJ_RSP_DSPL, Number) -- (>L:ASCRJ_RSP_DSPL) }
ASCRJ_RSP_DSPL_INC# (L:ASCRJ_RSP_DSPL, Number) 26 < if{ (L:ASCRJ_RSP_DSPL, Number) ++ (>L:ASCRJ_RSP_DSPL) }
ASCRJ_RSP_FLOOD_DEC# (L:ASCRJ_RSP_FLOOD, Number) 0 > if{ (L:ASCRJ_RSP_FLOOD, Number) -- (>L:ASCRJ_RSP_FLOOD) }
ASCRJ_RSP_FLOOD_INC# (L:ASCRJ_RSP_FLOOD, Number) 26 < if{ (L:ASCRJ_RSP_FLOOD, Number) ++ (>L:ASCRJ_RSP_FLOOD) }
ASCRJ_RSP_INTEG_DEC# (L:ASCRJ_RSP_INTEG, Number) 0 > if{ (L:ASCRJ_RSP_INTEG, Number) -- (>L:ASCRJ_RSP_INTEG) }
ASCRJ_RSP_INTEG_INC# (L:ASCRJ_RSP_INTEG, Number) 26 < if{ (L:ASCRJ_RSP_INTEG, Number) ++ (>L:ASCRJ_RSP_INTEG) }
ASCRJ_EXTL_LOGO_SWITCH_OFF#0 (>L:ASCRJ_EXTL_LOGO)
ASCRJ_INTL_CB_PNL_BRT_DEC#(L:ASCRJ_INTL_CB_PNL_BRT, Number) -- 0 max 26 min (>L:ASCRJ_INTL_CB_PNL_BRT)
ASCRJ_INTL_CB_PNL_BRT_INC#(L:ASCRJ_INTL_CB_PNL_BRT, Number) ++ 0 max 26 min (>L:ASCRJ_INTL_CB_PNL_BRT)
ASCRJ_INTL_COMP_SWITCH_OFF#1 (>L:ASCRJ_INTL_COMP)
//Aerosoft/CRJ 550-700-1000/MCDU
ASCRJ_MCDU1_0#(L:ASCRJ_MCDU1_0, Number) ++ (>L:ASCRJ_MCDU1_0)
ASCRJ_MCDU1_1#(L:ASCRJ_MCDU1_1, Number) ++ (>L:ASCRJ_MCDU1_1)
ASCRJ_MCDU1_2#(L:ASCRJ_MCDU1_2, Number) ++ (>L:ASCRJ_MCDU1_2)
ASCRJ_MCDU1_3#(L:ASCRJ_MCDU1_3, Number) ++ (>L:ASCRJ_MCDU1_3)
ASCRJ_MCDU1_4#(L:ASCRJ_MCDU1_4, Number) ++ (>L:ASCRJ_MCDU1_4)
ASCRJ_MCDU1_5#(L:ASCRJ_MCDU1_5, Number) ++ (>L:ASCRJ_MCDU1_5)
ASCRJ_MCDU1_6#(L:ASCRJ_MCDU1_6, Number) ++ (>L:ASCRJ_MCDU1_6)
ASCRJ_MCDU1_7#(L:ASCRJ_MCDU1_7, Number) ++ (>L:ASCRJ_MCDU1_7)
ASCRJ_MCDU1_8#(L:ASCRJ_MCDU1_8, Number) ++ (>L:ASCRJ_MCDU1_8)
ASCRJ_MCDU1_9#(L:ASCRJ_MCDU1_9, Number) ++ (>L:ASCRJ_MCDU1_9)
ASCRJ_MCDU1_A#(L:ASCRJ_MCDU1_A, Number) ++ (>L:ASCRJ_MCDU1_A)
ASCRJ_MCDU1_B#(L:ASCRJ_MCDU1_B, Number) ++ (>L:ASCRJ_MCDU1_B)
ASCRJ_MCDU1_C#(L:ASCRJ_MCDU1_C, Number) ++ (>L:ASCRJ_MCDU1_C)
ASCRJ_MCDU1_CLR#(L:ASCRJ_MCDU1_CLR, Number) ++ (>L:ASCRJ_MCDU1_CLR)
ASCRJ_MCDU1_D#(L:ASCRJ_MCDU1_D, Number) ++ (>L:ASCRJ_MCDU1_D)
ASCRJ_MCDU1_DEL#(L:ASCRJ_MCDU1_DEL, Number) ++ (>L:ASCRJ_MCDU1_DEL)
ASCRJ_MCDU1_DEP_ARR#(L:ASCRJ_MCDU1_DEP_ARR, Number) ++ (>L:ASCRJ_MCDU1_DEP_ARR)
ASCRJ_MCDU1_DIR_INTC#(L:ASCRJ_MCDU1_DIR_INTC, Number) ++ (>L:ASCRJ_MCDU1_DIR_INTC)
ASCRJ_MCDU1_DOWN#(L:ASCRJ_MCDU1_DOWN, Number) ++ (>L:ASCRJ_MCDU1_DOWN)
ASCRJ_MCDU1_E#(L:ASCRJ_MCDU1_E, Number) ++ (>L:ASCRJ_MCDU1_E)
ASCRJ_MCDU1_EXEC#(L:ASCRJ_MCDU1_EXEC, Number) ++ (>L:ASCRJ_MCDU1_EXEC)
ASCRJ_MCDU1_F#(L:ASCRJ_MCDU1_F, Number) ++ (>L:ASCRJ_MCDU1_F)
ASCRJ_MCDU1_FIX#(L:ASCRJ_MCDU1_FIX, Number) ++ (>L:ASCRJ_MCDU1_FIX)
ASCRJ_MCDU1_FPLN#(L:ASCRJ_MCDU1_FPLN, Number) ++ (>L:ASCRJ_MCDU1_FPLN)
ASCRJ_MCDU1_G#(L:ASCRJ_MCDU1_G, Number) ++ (>L:ASCRJ_MCDU1_G)
ASCRJ_MCDU1_H#(L:ASCRJ_MCDU1_H, Number) ++ (>L:ASCRJ_MCDU1_H)
ASCRJ_MCDU1_HOLD#(L:ASCRJ_MCDU1_HOLD, Number) ++ (>L:ASCRJ_MCDU1_HOLD)
ASCRJ_MCDU1_I#(L:ASCRJ_MCDU1_I, Number) ++ (>L:ASCRJ_MCDU1_I)
ASCRJ_MCDU1_INDEX#(L:ASCRJ_MCDU1_INDEX, Number) ++ (>L:ASCRJ_MCDU1_INDEX)
ASCRJ_MCDU1_J#(L:ASCRJ_MCDU1_J, Number) ++ (>L:ASCRJ_MCDU1_J)
ASCRJ_MCDU1_K#(L:ASCRJ_MCDU1_K, Number) ++ (>L:ASCRJ_MCDU1_K)
ASCRJ_MCDU1_L#(L:ASCRJ_MCDU1_L, Number) ++ (>L:ASCRJ_MCDU1_L)
ASCRJ_MCDU1_LEGS#(L:ASCRJ_MCDU1_LEGS, Number) ++ (>L:ASCRJ_MCDU1_LEGS)
ASCRJ_MCDU1_LSK1L#(L:ASCRJ_MCDU1_LSK1L, Number) ++ (>L:ASCRJ_MCDU1_LSK1L)
ASCRJ_MCDU1_LSK1R#(L:ASCRJ_MCDU1_LSK1R, Number) ++ (>L:ASCRJ_MCDU1_LSK1R)
ASCRJ_MCDU1_LSK2L#(L:ASCRJ_MCDU1_LSK2L, Number) ++ (>L:ASCRJ_MCDU1_LSK2L)
ASCRJ_MCDU1_LSK2R#(L:ASCRJ_MCDU1_LSK2R, Number) ++ (>L:ASCRJ_MCDU1_LSK2R)
ASCRJ_MCDU1_LSK3L#(L:ASCRJ_MCDU1_LSK3L, Number) ++ (>L:ASCRJ_MCDU1_LSK3L)
ASCRJ_MCDU1_LSK3R#(L:ASCRJ_MCDU1_LSK3R, Number) ++ (>L:ASCRJ_MCDU1_LSK3R)
ASCRJ_MCDU1_LSK4L#(L:ASCRJ_MCDU1_LSK4L, Number) ++ (>L:ASCRJ_MCDU1_LSK4L)
ASCRJ_MCDU1_LSK4R#(L:ASCRJ_MCDU1_LSK4R, Number) ++ (>L:ASCRJ_MCDU1_LSK4R)
ASCRJ_MCDU1_LSK5L#(L:ASCRJ_MCDU1_LSK5L, Number) ++ (>L:ASCRJ_MCDU1_LSK5L)
ASCRJ_MCDU1_LSK5R#(L:ASCRJ_MCDU1_LSK5R, Number) ++ (>L:ASCRJ_MCDU1_LSK5R)
ASCRJ_MCDU1_LSK6L#(L:ASCRJ_MCDU1_LSK6L, Number) ++ (>L:ASCRJ_MCDU1_LSK6L)
ASCRJ_MCDU1_LSK6R#(L:ASCRJ_MCDU1_LSK6R, Number) ++ (>L:ASCRJ_MCDU1_LSK6R)
ASCRJ_MCDU1_M#(L:ASCRJ_MCDU1_M, Number) ++ (>L:ASCRJ_MCDU1_M)
ASCRJ_MCDU1_MCDU_MENU#(L:ASCRJ_MCDU1_MCDU_MENU, Number) ++ (>L:ASCRJ_MCDU1_MCDU_MENU)
ASCRJ_MCDU1_MFD_ADV#(L:ASCRJ_MCDU1_MFD_ADV, Number) ++ (>L:ASCRJ_MCDU1_MFD_ADV)
ASCRJ_MCDU1_MFD_DATA#(L:ASCRJ_MCDU1_MFD_DATA, Number) ++ (>L:ASCRJ_MCDU1_MFD_DATA)
ASCRJ_MCDU1_MFD_MENU#(L:ASCRJ_MCDU1_MFD_MENU, Number) ++ (>L:ASCRJ_MCDU1_MFD_MENU)
ASCRJ_MCDU1_MSG#(L:ASCRJ_MCDU1_MSG, Number) ++ (>L:ASCRJ_MCDU1_MSG)
ASCRJ_MCDU1_N#(L:ASCRJ_MCDU1_N, Number) ++ (>L:ASCRJ_MCDU1_N)
ASCRJ_MCDU1_NEXT_PAGE#(L:ASCRJ_MCDU1_NEXT_PAGE, Number) ++ (>L:ASCRJ_MCDU1_NEXT_PAGE)
ASCRJ_MCDU1_O#(L:ASCRJ_MCDU1_O, Number) ++ (>L:ASCRJ_MCDU1_O)
ASCRJ_MCDU1_P#(L:ASCRJ_MCDU1_P, Number) ++ (>L:ASCRJ_MCDU1_P)
ASCRJ_MCDU1_PERF#(L:ASCRJ_MCDU1_PERF, Number) ++ (>L:ASCRJ_MCDU1_PERF)
ASCRJ_MCDU1_PERIOD#(L:ASCRJ_MCDU1_PERIOD, Number) ++ (>L:ASCRJ_MCDU1_PERIOD)
ASCRJ_MCDU1_PLUS#(L:ASCRJ_MCDU1_PLUS, Number) ++ (>L:ASCRJ_MCDU1_PLUS)
ASCRJ_MCDU1_PREV_PAGE#(L:ASCRJ_MCDU1_PREV_PAGE, Number) ++ (>L:ASCRJ_MCDU1_PREV_PAGE)
ASCRJ_MCDU1_PROG#(L:ASCRJ_MCDU1_PROG, Number) ++ (>L:ASCRJ_MCDU1_PROG)
ASCRJ_MCDU1_Q#(L:ASCRJ_MCDU1_Q, Number) ++ (>L:ASCRJ_MCDU1_Q)
ASCRJ_MCDU1_R#(L:ASCRJ_MCDU1_R, Number) ++ (>L:ASCRJ_MCDU1_R)
ASCRJ_MCDU1_RADIO#(L:ASCRJ_MCDU1_RADIO, Number) ++ (>L:ASCRJ_MCDU1_RADIO)
ASCRJ_MCDU1_S#(L:ASCRJ_MCDU1_S, Number) ++ (>L:ASCRJ_MCDU1_S)
ASCRJ_MCDU1_SEC_FPLN#(L:ASCRJ_MCDU1_SEC_FPLN, Number) ++ (>L:ASCRJ_MCDU1_SEC_FPLN)
ASCRJ_MCDU1_SLASH#(L:ASCRJ_MCDU1_SLASH, Number) ++ (>L:ASCRJ_MCDU1_SLASH)
ASCRJ_MCDU1_SP#(L:ASCRJ_MCDU1_SP, Number) ++ (>L:ASCRJ_MCDU1_SP)
ASCRJ_MCDU1_T#(L:ASCRJ_MCDU1_T, Number) ++ (>L:ASCRJ_MCDU1_T)
ASCRJ_MCDU1_U#(L:ASCRJ_MCDU1_U, Number) ++ (>L:ASCRJ_MCDU1_U)
ASCRJ_MCDU1_UP#(L:ASCRJ_MCDU1_UP, Number) ++ (>L:ASCRJ_MCDU1_UP)
ASCRJ_MCDU1_V#(L:ASCRJ_MCDU1_V, Number) ++ (>L:ASCRJ_MCDU1_V)
ASCRJ_MCDU1_VNAV#(L:ASCRJ_MCDU1_VNAV, Number) ++ (>L:ASCRJ_MCDU1_VNAV)
ASCRJ_MCDU1_W#(L:ASCRJ_MCDU1_W, Number) ++ (>L:ASCRJ_MCDU1_W)
ASCRJ_MCDU1_X#(L:ASCRJ_MCDU1_X, Number) ++ (>L:ASCRJ_MCDU1_X)
ASCRJ_MCDU1_Y#(L:ASCRJ_MCDU1_Y, Number) ++ (>L:ASCRJ_MCDU1_Y)
ASCRJ_MCDU1_Z#(L:ASCRJ_MCDU1_Z, Number) ++ (>L:ASCRJ_MCDU1_Z)
ASCRJ_MCDU2_0#(L:ASCRJ_MCDU2_0, Number) ++ (>L:ASCRJ_MCDU2_0)
ASCRJ_MCDU2_1#(L:ASCRJ_MCDU2_1, Number) ++ (>L:ASCRJ_MCDU2_1)
ASCRJ_MCDU2_2#(L:ASCRJ_MCDU2_2, Number) ++ (>L:ASCRJ_MCDU2_2)
ASCRJ_MCDU2_3#(L:ASCRJ_MCDU2_3, Number) ++ (>L:ASCRJ_MCDU2_3)
ASCRJ_MCDU2_4#(L:ASCRJ_MCDU2_4, Number) ++ (>L:ASCRJ_MCDU2_4)
ASCRJ_MCDU2_5#(L:ASCRJ_MCDU2_5, Number) ++ (>L:ASCRJ_MCDU2_5)
ASCRJ_MCDU2_6#(L:ASCRJ_MCDU2_6, Number) ++ (>L:ASCRJ_MCDU2_6)
ASCRJ_MCDU2_7#(L:ASCRJ_MCDU2_7, Number) ++ (>L:ASCRJ_MCDU2_7)
ASCRJ_MCDU2_8#(L:ASCRJ_MCDU2_8, Number) ++ (>L:ASCRJ_MCDU2_8)
ASCRJ_MCDU2_9#(L:ASCRJ_MCDU2_9, Number) ++ (>L:ASCRJ_MCDU2_9)
ASCRJ_MCDU2_A#(L:ASCRJ_MCDU2_A, Number) ++ (>L:ASCRJ_MCDU2_A)
ASCRJ_MCDU2_A#(L:ASCRJ_MCDU2_A, Number) ++ (>L:ASCRJ_MCDU2_A)
ASCRJ_MCDU2_B#(L:ASCRJ_MCDU2_B, Number) ++ (>L:ASCRJ_MCDU2_B)
ASCRJ_MCDU2_B#(L:ASCRJ_MCDU2_B, Number) ++ (>L:ASCRJ_MCDU2_B)
ASCRJ_MCDU2_C#(L:ASCRJ_MCDU2_C, Number) ++ (>L:ASCRJ_MCDU2_C)
ASCRJ_MCDU2_C#(L:ASCRJ_MCDU2_C, Number) ++ (>L:ASCRJ_MCDU2_C)
ASCRJ_MCDU2_CLR#(L:ASCRJ_MCDU2_CLR, Number) ++ (>L:ASCRJ_MCDU2_CLR)
ASCRJ_MCDU2_CLR#(L:ASCRJ_MCDU2_CLR, Number) ++ (>L:ASCRJ_MCDU2_CLR)
ASCRJ_MCDU2_D#(L:ASCRJ_MCDU2_D, Number) ++ (>L:ASCRJ_MCDU2_D)
ASCRJ_MCDU2_D#(L:ASCRJ_MCDU2_D, Number) ++ (>L:ASCRJ_MCDU2_D)
ASCRJ_MCDU2_DEL#(L:ASCRJ_MCDU2_DEL, Number) ++ (>L:ASCRJ_MCDU2_DEL)
ASCRJ_MCDU2_DEL#(L:ASCRJ_MCDU2_DEL, Number) ++ (>L:ASCRJ_MCDU2_DEL)
ASCRJ_MCDU2_DEP_ARR#(L:ASCRJ_MCDU2_DEP_ARR, Number) ++ (>L:ASCRJ_MCDU2_DEP_ARR)
ASCRJ_MCDU2_DIR_INTC#(L:ASCRJ_MCDU2_DIR_INTC, Number) ++ (>L:ASCRJ_MCDU2_DIR_INTC)
ASCRJ_MCDU2_DOWN#(L:ASCRJ_MCDU2_DOWN, Number) ++ (>L:ASCRJ_MCDU2_DOWN)
ASCRJ_MCDU2_E#(L:ASCRJ_MCDU2_E, Number) ++ (>L:ASCRJ_MCDU2_E)
ASCRJ_MCDU2_E#(L:ASCRJ_MCDU2_E, Number) ++ (>L:ASCRJ_MCDU2_E)
ASCRJ_MCDU2_EXEC#(L:ASCRJ_MCDU2_EXEC, Number) ++ (>L:ASCRJ_MCDU2_EXEC)
ASCRJ_MCDU2_F#(L:ASCRJ_MCDU2_F, Number) ++ (>L:ASCRJ_MCDU2_F)
ASCRJ_MCDU2_F#(L:ASCRJ_MCDU2_F, Number) ++ (>L:ASCRJ_MCDU2_F)
ASCRJ_MCDU2_FIX#(L:ASCRJ_MCDU2_FIX, Number) ++ (>L:ASCRJ_MCDU2_FIX)
ASCRJ_MCDU2_FPLN#(L:ASCRJ_MCDU2_FPLN, Number) ++ (>L:ASCRJ_MCDU2_FPLN)
ASCRJ_MCDU2_G#(L:ASCRJ_MCDU2_G, Number) ++ (>L:ASCRJ_MCDU2_G)
ASCRJ_MCDU2_G#(L:ASCRJ_MCDU2_G, Number) ++ (>L:ASCRJ_MCDU2_G)
ASCRJ_MCDU2_H#(L:ASCRJ_MCDU2_H, Number) ++ (>L:ASCRJ_MCDU2_H)
ASCRJ_MCDU2_H#(L:ASCRJ_MCDU2_H, Number) ++ (>L:ASCRJ_MCDU2_H)
ASCRJ_MCDU2_HOLD#(L:ASCRJ_MCDU2_HOLD, Number) ++ (>L:ASCRJ_MCDU2_HOLD)
ASCRJ_MCDU2_I#(L:ASCRJ_MCDU2_I, Number) ++ (>L:ASCRJ_MCDU2_I)
ASCRJ_MCDU2_INDEX#(L:ASCRJ_MCDU2_INDEX, Number) ++ (>L:ASCRJ_MCDU2_INDEX)
ASCRJ_MCDU2_J#(L:ASCRJ_MCDU2_J, Number) ++ (>L:ASCRJ_MCDU2_J)
ASCRJ_MCDU2_J#(L:ASCRJ_MCDU2_J, Number) ++ (>L:ASCRJ_MCDU2_J)
ASCRJ_MCDU2_K#(L:ASCRJ_MCDU2_K, Number) ++ (>L:ASCRJ_MCDU2_K)
ASCRJ_MCDU2_K#(L:ASCRJ_MCDU2_K, Number) ++ (>L:ASCRJ_MCDU2_K)
ASCRJ_MCDU2_L#(L:ASCRJ_MCDU2_L, Number) ++ (>L:ASCRJ_MCDU2_L)
ASCRJ_MCDU2_L#(L:ASCRJ_MCDU2_L, Number) ++ (>L:ASCRJ_MCDU2_L)
ASCRJ_MCDU2_LEGS#(L:ASCRJ_MCDU2_LEGS, Number) ++ (>L:ASCRJ_MCDU2_LEGS)
ASCRJ_MCDU2_LSK1L#(L:ASCRJ_MCDU2_LSK1L, Number) ++ (>L:ASCRJ_MCDU2_LSK1L)
ASCRJ_MCDU2_LSK1R#(L:ASCRJ_MCDU2_LSK1R, Number) ++ (>L:ASCRJ_MCDU2_LSK1R)
ASCRJ_MCDU2_LSK2L#(L:ASCRJ_MCDU2_LSK2L, Number) ++ (>L:ASCRJ_MCDU2_LSK2L)
ASCRJ_MCDU2_LSK2R#(L:ASCRJ_MCDU2_LSK2R, Number) ++ (>L:ASCRJ_MCDU2_LSK2R)
ASCRJ_MCDU2_LSK3L#(L:ASCRJ_MCDU2_LSK3L, Number) ++ (>L:ASCRJ_MCDU2_LSK3L)
ASCRJ_MCDU2_LSK3R#(L:ASCRJ_MCDU2_LSK3R, Number) ++ (>L:ASCRJ_MCDU2_LSK3R)
ASCRJ_MCDU2_LSK4L#(L:ASCRJ_MCDU2_LSK4L, Number) ++ (>L:ASCRJ_MCDU2_LSK4L)
ASCRJ_MCDU2_LSK4R#(L:ASCRJ_MCDU2_LSK4R, Number) ++ (>L:ASCRJ_MCDU2_LSK4R)
ASCRJ_MCDU2_LSK5L#(L:ASCRJ_MCDU2_LSK5L, Number) ++ (>L:ASCRJ_MCDU2_LSK5L)
ASCRJ_MCDU2_LSK5R#(L:ASCRJ_MCDU2_LSK5R, Number) ++ (>L:ASCRJ_MCDU2_LSK5R)
ASCRJ_MCDU2_LSK6L#(L:ASCRJ_MCDU2_LSK6L, Number) ++ (>L:ASCRJ_MCDU2_LSK6L)
ASCRJ_MCDU2_LSK6R#(L:ASCRJ_MCDU2_LSK6R, Number) ++ (>L:ASCRJ_MCDU2_LSK6R)
ASCRJ_MCDU2_M#(L:ASCRJ_MCDU2_M, Number) ++ (>L:ASCRJ_MCDU2_M)
ASCRJ_MCDU2_M#(L:ASCRJ_MCDU2_M, Number) ++ (>L:ASCRJ_MCDU2_M)
ASCRJ_MCDU2_MCDU_MENU#(L:ASCRJ_MCDU2_MCDU_MENU, Number) ++ (>L:ASCRJ_MCDU2_MCDU_MENU)
ASCRJ_MCDU2_MFD_ADV#(L:ASCRJ_MCDU2_MFD_ADV, Number) ++ (>L:ASCRJ_MCDU2_MFD_ADV)
ASCRJ_MCDU2_MFD_DATA#(L:ASCRJ_MCDU2_MFD_DATA, Number) ++ (>L:ASCRJ_MCDU2_MFD_DATA)
ASCRJ_MCDU2_MFD_MENU#(L:ASCRJ_MCDU2_MFD_MENU, Number) ++ (>L:ASCRJ_MCDU2_MFD_MENU)
ASCRJ_MCDU2_MSG#(L:ASCRJ_MCDU2_MSG, Number) ++ (>L:ASCRJ_MCDU2_MSG)
ASCRJ_MCDU2_N#(L:ASCRJ_MCDU2_N, Number) ++ (>L:ASCRJ_MCDU2_N)
ASCRJ_MCDU2_N#(L:ASCRJ_MCDU2_N, Number) ++ (>L:ASCRJ_MCDU2_N)
ASCRJ_MCDU2_NEXT_PAGE#(L:ASCRJ_MCDU2_NEXT_PAGE, Number) ++ (>L:ASCRJ_MCDU2_NEXT_PAGE)
ASCRJ_MCDU2_O#(L:ASCRJ_MCDU2_O, Number) ++ (>L:ASCRJ_MCDU2_O)
ASCRJ_MCDU2_O#(L:ASCRJ_MCDU2_O, Number) ++ (>L:ASCRJ_MCDU2_O)
ASCRJ_MCDU2_P#(L:ASCRJ_MCDU2_P, Number) ++ (>L:ASCRJ_MCDU2_P)
ASCRJ_MCDU2_P#(L:ASCRJ_MCDU2_P, Number) ++ (>L:ASCRJ_MCDU2_P)
ASCRJ_MCDU2_PERF#(L:ASCRJ_MCDU2_PERF, Number) ++ (>L:ASCRJ_MCDU2_PERF)
ASCRJ_MCDU2_PERIOD#(L:ASCRJ_MCDU2_PERIOD, Number) ++ (>L:ASCRJ_MCDU2_PERIOD)
ASCRJ_MCDU2_PERIOD#(L:ASCRJ_MCDU2_PERIOD, Number) ++ (>L:ASCRJ_MCDU2_PERIOD)
ASCRJ_MCDU2_PLUS#(L:ASCRJ_MCDU2_PLUS, Number) ++ (>L:ASCRJ_MCDU2_PLUS)
ASCRJ_MCDU2_PLUS#(L:ASCRJ_MCDU2_PLUS, Number) ++ (>L:ASCRJ_MCDU2_PLUS)
ASCRJ_MCDU2_PREV_PAGE#(L:ASCRJ_MCDU2_PREV_PAGE, Number) ++ (>L:ASCRJ_MCDU2_PREV_PAGE)
ASCRJ_MCDU2_PROG#(L:ASCRJ_MCDU2_PROG, Number) ++ (>L:ASCRJ_MCDU2_PROG)
ASCRJ_MCDU2_Q#(L:ASCRJ_MCDU2_Q, Number) ++ (>L:ASCRJ_MCDU2_Q)
ASCRJ_MCDU2_Q#(L:ASCRJ_MCDU2_Q, Number) ++ (>L:ASCRJ_MCDU2_Q)
ASCRJ_MCDU2_R#(L:ASCRJ_MCDU2_R, Number) ++ (>L:ASCRJ_MCDU2_R)
ASCRJ_MCDU2_R#(L:ASCRJ_MCDU2_R, Number) ++ (>L:ASCRJ_MCDU2_R)
ASCRJ_MCDU2_RADIO#(L:ASCRJ_MCDU2_RADIO, Number) ++ (>L:ASCRJ_MCDU2_RADIO)
ASCRJ_MCDU2_S#(L:ASCRJ_MCDU2_S, Number) ++ (>L:ASCRJ_MCDU2_S)
ASCRJ_MCDU2_S#(L:ASCRJ_MCDU2_S, Number) ++ (>L:ASCRJ_MCDU2_S)
ASCRJ_MCDU2_SEC_FPLN#(L:ASCRJ_MCDU2_SEC_FPLN, Number) ++ (>L:ASCRJ_MCDU2_SEC_FPLN)
ASCRJ_MCDU2_SLASH#(L:ASCRJ_MCDU2_SLASH, Number) ++ (>L:ASCRJ_MCDU2_SLASH)
ASCRJ_MCDU2_SLASH#(L:ASCRJ_MCDU2_SLASH, Number) ++ (>L:ASCRJ_MCDU2_SLASH)
ASCRJ_MCDU2_SP#(L:ASCRJ_MCDU2_SP, Number) ++ (>L:ASCRJ_MCDU2_SP)
ASCRJ_MCDU2_SP#(L:ASCRJ_MCDU2_SP, Number) ++ (>L:ASCRJ_MCDU2_SP)
ASCRJ_MCDU2_T#(L:ASCRJ_MCDU2_T, Number) ++ (>L:ASCRJ_MCDU2_T)
ASCRJ_MCDU2_T#(L:ASCRJ_MCDU2_T, Number) ++ (>L:ASCRJ_MCDU2_T)
ASCRJ_MCDU2_U#(L:ASCRJ_MCDU2_U, Number) ++ (>L:ASCRJ_MCDU2_U)
ASCRJ_MCDU2_U#(L:ASCRJ_MCDU2_U, Number) ++ (>L:ASCRJ_MCDU2_U)
ASCRJ_MCDU2_UP#(L:ASCRJ_MCDU2_UP, Number) ++ (>L:ASCRJ_MCDU2_UP)
ASCRJ_MCDU2_V#(L:ASCRJ_MCDU2_V, Number) ++ (>L:ASCRJ_MCDU2_V)
ASCRJ_MCDU2_V#(L:ASCRJ_MCDU2_V, Number) ++ (>L:ASCRJ_MCDU2_V)
ASCRJ_MCDU2_VNAV#(L:ASCRJ_MCDU2_VNAV, Number) ++ (>L:ASCRJ_MCDU2_VNAV)
ASCRJ_MCDU2_W#(L:ASCRJ_MCDU2_W, Number) ++ (>L:ASCRJ_MCDU2_W)
ASCRJ_MCDU2_W#(L:ASCRJ_MCDU2_W, Number) ++ (>L:ASCRJ_MCDU2_W)
ASCRJ_MCDU2_X#(L:ASCRJ_MCDU2_X, Number) ++ (>L:ASCRJ_MCDU2_X)
ASCRJ_MCDU2_X#(L:ASCRJ_MCDU2_X, Number) ++ (>L:ASCRJ_MCDU2_X)
ASCRJ_MCDU2_Y#(L:ASCRJ_MCDU2_Y, Number) ++ (>L:ASCRJ_MCDU2_Y)
ASCRJ_MCDU2_Y#(L:ASCRJ_MCDU2_Y, Number) ++ (>L:ASCRJ_MCDU2_Y)
ASCRJ_MCDU2_Z#(L:ASCRJ_MCDU2_Z, Number) ++ (>L:ASCRJ_MCDU2_Z)
ASCRJ_MCDU2_Z#(L:ASCRJ_MCDU2_Z, Number) ++ (>L:ASCRJ_MCDU2_Z)
ASCRJ_MCDU2_I#(L:ASCRJ_MCDU2_I, Number) ++ (>L:ASCRJ_MCDU2_I)
//Aerosoft/CRJ 550-700-1000/Navigation
ASCRJ_LSP_BARO_CHANGE_DEC#(L:ASCRJ_LSP_BARO_CHANGE, 2) -- (>L:ASCRJ_LSP_BARO_CHANGE)
ASCRJ_LSP_BARO_CHANGE_INC#(L:ASCRJ_LSP_BARO_CHANGE, 2) ++ (>L:ASCRJ_LSP_BARO_CHANGE)
ASCRJ_LSP_BARO_STD_PRESS#1 (>L:ASCRJ_LSP_BARO_STD)
ASCRJ_LSP_BARO_STD_RELEASE#0 (>L:ASCRJ_LSP_BARO_STD)
ASCRJ_LSP_FORMAT_CHANGE_ENCOD_DEC#(L:ASCRJ_LSP_FORMAT, Number) 10 - dnor (>L:ASCRJ_LSP_FORMAT) (L:ASCRJ_LSP_FORMAT_CHANGE, Number) -- (>L:ASCRJ_LSP_FORMAT_CHANGE)
ASCRJ_LSP_FORMAT_CHANGE_ENCOD_INC#(L:ASCRJ_LSP_FORMAT, Number) 10 + dnor (>L:ASCRJ_LSP_FORMAT) (L:ASCRJ_LSP_FORMAT_CHANGE, Number) ++ (>L:ASCRJ_LSP_FORMAT_CHANGE)
ASCRJ_LSP_NAV_SOURCE_XSIDE_PRESS#1 (>L:ASCRJ_LSP_NAV_SOURCE_XSIDE)
ASCRJ_LSP_NAV_SOURCE_XSIDE_RELEASE#0 (>L:ASCRJ_LSP_NAV_SOURCE_XSIDE)
ASCRJ_MCDU1_BRT_DEC# (L:ASCRJ_MCDU1_BRT_CHANGE, Number) -- (>L:ASCRJ_MCDU1_BRT_CHANGE)
ASCRJ_MCDU1_BRT_INC# (L:ASCRJ_MCDU1_BRT_CHANGE, Number) ++ (>L:ASCRJ_MCDU1_BRT_CHANGE)
ASCRJ_MCDU2_BRT_DEC# (L:ASCRJ_MCDU2_BRT_CHANGE, Number) -- (>L:ASCRJ_MCDU2_BRT_CHANGE)
ASCRJ_MCDU2_BRT_INC# (L:ASCRJ_MCDU2_BRT_CHANGE, Number) ++ (>L:ASCRJ_MCDU2_BRT_CHANGE)
BARO_Hpa_In#1 (>L:ASCRJ_LSP_HPA_IN) 1 (>L:ASCRJ_RSP_HPA_IN)
ASCRJ_LSP_NAV_SOURCE_CHANGE_DEC#(L:ASCRJ_LSP_NAV_SOURCE_CHANGE, number) -- (>L:ASCRJ_LSP_NAV_SOURCE_CHANGE)
ASCRJ_LSP_NAV_SOURCE_CHANGE_INC#(L:ASCRJ_LSP_NAV_SOURCE_CHANGE, number) ++ (>L:ASCRJ_LSP_NAV_SOURCE_CHANGE)
ASCRJ_LSP_ZOOM_RANGE_CHANGE_DEC#(L:ASCRJ_LSP_RANGE_CHANGE, number) -- (>L:ASCRJ_LSP_RANGE_CHANGE)
ASCRJ_LSP_ZOOM_RANGE_CHANGE_INC#(L:ASCRJ_LSP_RANGE_CHANGE, number) ++ (>L:ASCRJ_LSP_RANGE_CHANGE)
ASCRJ_RSP_BARO_CHANGE_DEC#(L:ASCRJ_RSP_BARO_CHANGE, 2) -- (>L:ASCRJ_RSP_BARO_CHANGE)
ASCRJ_RSP_BARO_CHANGE_INC#(L:ASCRJ_RSP_BARO_CHANGE, 2) ++ (>L:ASCRJ_RSP_BARO_CHANGE)
ASCRJ_RSP_BARO_STD_PRESS#1 (>L:ASCRJ_RSP_BARO_STD)
ASCRJ_RSP_BARO_STD_RELEASE#0 (>L:ASCRJ_RSP_BARO_STD)
ASCRJ_RSP_BRG1_PRESS#1 (>L:ASCRJ_RSP_BRG1) 
ASCRJ_RSP_BRG2_PRESS#1 (>L:ASCRJ_RSP_BRG2)
ASCRJ_RSP_FORMAT_CHANGE_ENCOD_DEC#(L:ASCRJ_RSP_FORMAT, Number) 10 - dnor (>L:ASCRJ_RSP_FORMAT) (L:ASCRJ_RSP_FORMAT_CHANGE, Number) -- (>L:ASCRJ_RSP_FORMAT_CHANGE)
ASCRJ_RSP_FORMAT_CHANGE_ENCOD_INC#(L:ASCRJ_RSP_FORMAT, Number) 10 + dnor (>L:ASCRJ_RSP_FORMAT) (L:ASCRJ_RSP_FORMAT_CHANGE, Number) ++ (>L:ASCRJ_RSP_FORMAT_CHANGE)
ASCRJ_RSP_NAV_SOURCE_CHANGE_DEC#(L:ASCRJ_RSP_NAV_SOURCE_CHANGE, number) -- (>L:ASCRJ_RSP_NAV_SOURCE_CHANGE)
ASCRJ_RSP_NAV_SOURCE_CHANGE_INC#(L:ASCRJ_RSP_NAV_SOURCE_CHANGE, number) ++ (>L:ASCRJ_RSP_NAV_SOURCE_CHANGE)
ASCRJ_RSP_ZOOM_RANGE_CHANGE_DEC#(L:ASCRJ_RSP_RANGE_CHANGE, number) -- (>L:ASCRJ_RSP_RANGE_CHANGE)
ASCRJ_RSP_ZOOM_RANGE_CHANGE_INC#(L:ASCRJ_RSP_RANGE_CHANGE, number) ++ (>L:ASCRJ_RSP_RANGE_CHANGE) 
BARO_Hpa_In_Left#1 (>L:ASCRJ_LSP_HPA_IN)
BARO_Hpa_In_Right#1 (>L:ASCRJ_RSP_HPA_IN)
//Aerosoft/CRJ 550-700-1000/Passengers/Crew
ASCRJ_OVHD_NO_SMOKING_SWITCH#1 (L:ASCRJ_OVHD_NO_SMOKING, Number) 0 == if{ 1 (>L:ASCRJ_OVHD_NO_SMOKING, Number) } els{ (L:ASCRJ_OVHD_NO_SMOKING, Number) 1 == if{ 2 (>L:ASCRJ_OVHD_NO_SMOKING, Number) } els{ (L:ASCRJ_OVHD_NO_SMOKING, Number) 2 == if{ 0 (>L:ASCRJ_OVHD_NO_SMOKING, Number) }
ASCRJ_OVHD_NO_SMOKING_SWITCH_AUTO#0 (>L:ASCRJ_OVHD_NO_SMOKING, Number)
ASCRJ_OVHD_NO_SMOKING_SWITCH_OFF#1 (>L:ASCRJ_OVHD_NO_SMOKING, Number)
ASCRJ_OVHD_NO_SMOKING_SWITCH_ON#2 (>L:ASCRJ_OVHD_NO_SMOKING, Number)
ASCRJ_OVHD_SEATBELTS_SWITCH_AUTO#0 (>L:ASCRJ_OVHD_SEAT_BELTS, Number)
ASCRJ_OVHD_SEATBELTS_SWITCH_OFF#1 (>L:ASCRJ_OVHD_SEAT_BELTS, Number)
ASCRJ_OVHD_SEATBELTS_SWITCH_ON#2 (>L:ASCRJ_OVHD_SEAT_BELTS, Number)
ASCRJ_OVHD_SEAT_BELTS_SWITCH#1 (L:ASCRJ_OVHD_SEAT_BELTS, Number) 0 == if{ 1 (>L:ASCRJ_OVHD_SEAT_BELTS, Number) } els{ (L:ASCRJ_OVHD_SEAT_BELTS, Number) 1 == if{ 2 (>L:ASCRJ_OVHD_SEAT_BELTS, Number) } els{ (L:ASCRJ_OVHD_SEAT_BELTS, Number) 2 == if{ 0 (>L:ASCRJ_OVHD_SEAT_BELTS, Number) }
Passenger_Door_Left_Closed#0 (>L:DOOR_MAIN_DOOR_POS, Number)
Passenger_Door_Left_Open#100 (>L:DOOR_MAIN_DOOR_POS, Number)
//Aerosoft/CRJ 550-700-1000/Radio
ASCRJ_RTU1_IDENT_PRESS#1 (>L:ASCRJ_RTU1_IDENT)
ASCRJ_RTU1_KNOB_INNER_DEC# (L:ASCRJ_RTU1_KNOB_INNER, Number) 10 - dnor (>L:ASCRJ_RTU1_KNOB_INNER) (ASCRJ_RTU1_KNOB_INNER_CHANGE, Number) -- (>L:ASCRJ_RTU1_KNOB_INNER_CHANGE)
ASCRJ_RTU1_KNOB_INNER_INC# (L:ASCRJ_RTU1_KNOB_INNER, Number) 10 + dnor (>L:ASCRJ_RTU1_KNOB_INNER) (ASCRJ_RTU1_KNOB_INNER_CHANGE, Number) ++ (>L:ASCRJ_RTU1_KNOB_INNER_CHANGE)
ASCRJ_RTU1_KNOB_OUTER_INC# (L:ASCRJ_RTU1_KNOB_OUTER, Number) 10 + dnor (>L:ASCRJ_RTU1_KNOB_OUTER) (ASCRJ_RTU1_KNOB_OUTER_CHANGE, Number) ++ (>L:ASCRJ_RTU1_KNOB_OUTER_CHANGE)
ASCRJ_RTU1_LSK1L_SWITCH_PRESS#1 (>L:ASCRJ_RTU1_LSK1L)
ASCRJ_RTU1_LSK1R_SWITCH_PRESS#1 (>L:ASCRJ_RTU1_LSK1R)
ASCRJ_RTU1_LSK2L_SWITCH_PRESS#1 (>L:ASCRJ_RTU1_LSK2L)
ASCRJ_RTU1_LSK2R_SWITCH_PRESS#1 (>L:ASCRJ_RTU1_LSK2R)
ASCRJ_RTU1_LSK3L_SWITCH_PRESS#1 (>L:ASCRJ_RTU1_LSK3L)
ASCRJ_RTU1_LSK3R_SWITCH_PRESS#1 (>L:ASCRJ_RTU1_LSK3R)
ASCRJ_RTU1_LSK4L_SWITCH_PRESS#1 (>L:ASCRJ_RTU1_LSK4L)
ASCRJ_RTU1_LSK4R_SWITCH_PRESS#1 (>L:ASCRJ_RTU1_LSK4R)
ASCRJ_XPDR_ATC_SEL_PRESS_PRESS#1 (>L:ASCRJ_XPDR_ATC_SEL)
ASCRJ_XPDR_ATC_SEL_PRESS_RELEASE#0 (>L:ASCRJ_XPDR_ATC_SEL)
ASCRJ_XPDR_ATC_SEL_SWITCH# (L:ASCRJ_XPDR_ATC_SEL, Number) 0 == if{ 1 (>L:ASCRJ_XPDR_ATC_SEL, Number) } els{ (L:ASCRJ_XPDR_ATC_SEL, Number) 1 == if{ 2 (>L:ASCRJ_XPDR_ATC_SEL, Number) } els{ (L:ASCRJ_XPDR_ATC_SEL, Number) 2 == if{ 0 (>L:ASCRJ_XPDR_ATC_SEL, Number) }
ASCRJ_RTU1_KNOB_OUTER_DEC# (L:ASCRJ_RTU1_KNOB_OUTER, Number) 10 - dnor (>L:ASCRJ_RTU1_KNOB_OUTER) (ASCRJ_RTU1_KNOB_OUTER_CHANGE, Number) -- (>L:ASCRJ_RTU1_KNOB_OUTER_CHANGE)
//Aerosoft/CRJ 550-700-1000/Warning System
FIRE_DETECTION_FIREX_MONITOR_TEST_SWITCH#(L:ASCRJ_FIRE_TEST) ! (>L:ASCRJ_FIRE_TEST)
//All vendors/All Aircraft/Camera
CAMERA_ACTION_COCKPIT_VIEW_RESET#1 (>A:CAMERA ACTION COCKPIT VIEW RESET,bool)
CAMERA_ACTION_COCKPIT_VIEW_SAVE#1 (>A:CAMERA ACTION COCKPIT VIEW SAVE:index,Bool)
External_Quick_View_-_Quick_View_1#3 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
External_Quick_View_-_Quick_View_2#3 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
External_Quick_View_-_Quick_View_3#3 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
External_Quick_View_-_Quick_View_4#3 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
External_Quick_View_-_Quick_View_5#3 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
External_Quick_View_-_Quick_View_6#3 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
External_Quick_View_-_Quick_View_7#3 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
External_Quick_View_-_Quick_View_8#3 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
External_View_-_Default#3 (>A:CAMERA STATE,Enum) 1 (>A:CAMERA SUBSTATE,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Fin_View#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Front_Cabin_Crew_Seat#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 12 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Front_Left_Door_Enter#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 14 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Front_Right_Middle_Seat#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 13 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Left_Engine#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Left_Wing_Window_#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Left_front_Window#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 8 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Nose_gear#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Passanger_Look_Aft#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 15 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Passanger_look_Forward#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 16 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Rear_Left_Middle_Seat#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 11 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Rear_Top_View#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 10 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Right_Engine#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Right_Wing_Window#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Right_front_Window#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 9 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Underbelly_Close#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Fixed_Camera_ShowCase_-_Underbelly_Far#5 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Free_Camera_-_Camera_Drone#4 (>A:CAMERA STATE,Enum) 0 (>A:CAMERA SUBSTATE,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_CB_WALL#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 8 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_Dual_MCDU_Cap___FO#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_EFB_CAPTAIN#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 9 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_EFB_FO#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_FCU_and_ECAM__Angled_#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_MCDU_Captain#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_OVERHEAD__Angled_#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_PEDESTAL__Angled_#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_PFD_ND#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Instrument_View_-_UPPER_OVERHEAD#2 (>A:CAMERA STATE,Enum) 5 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Pilot_View_-_Close#2 (>A:CAMERA STATE,Enum) 1 (>A:CAMERA SUBSTATE,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Pilot_View_-_Copilot#2 (>A:CAMERA STATE,Enum) 1 (>A:CAMERA SUBSTATE,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Pilot_View_-_Landing#2 (>A:CAMERA STATE,Enum) 1 (>A:CAMERA SUBSTATE,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Pilot_View_-_Normal#2 (>A:CAMERA STATE,Enum) 1 (>A:CAMERA SUBSTATE,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Quick_View_-_Front__Zoom_in_#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Quick_View_-_Left_120_Degree#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Quick_View_-_Left_45_Degree#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Quick_View_-_Left_90_Degree#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Quick_View_-_Rear_180_Degree#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Quick_View_-_Right_120_Degree#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Quick_View_-_Right_45_Degree#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
Quick_View_-_Right_90_Degree#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
//All vendors/T-37/Radio
NAV_Frequence_Large_Knob_Dec#(>K:NAV1_RADIO_SWAP) (>K:NAV1_RADIO_WHOLE_DEC) (>K:NAV1_RADIO_SWAP)
NAV_Frequence_Large_Knob_Inc#(>K:NAV1_RADIO_SWAP) (>K:NAV1_RADIO_WHOLE_INC) (>K:NAV1_RADIO_SWAP)
NAV_Frequence_Small_Knob_Dec#(>K:NAV1_RADIO_SWAP) (>K:NAV1_RADIO_FRACT_DEC) (>K:NAV1_RADIO_SWAP)
NAV_Frequence_Small_Knob_Inc#(>K:NAV1_RADIO_SWAP) (>K:NAV1_RADIO_FRACT_INC) (>K:NAV1_RADIO_SWAP)
//Asobo/DA40NG/Anti-Ice
DA40NG_PITOT_OFF#1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)
DA40NG_PITOT_ON#1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)
//Asobo/Baron G58/Anti-Ice
G58_PROP_DEICE_OFF#0 s0 (A:PROP DEICE SWITCH:1, Bool) != if{(>K:TOGGLE_PROPELLER_DEICE) } l0 (>L:DEICE_Propeller_1)
G58_PROP_DEICE_ON#1 s0 (A:PROP DEICE SWITCH:1, Bool) != if{(>K:TOGGLE_PROPELLER_DEICE) } l0 (>L:DEICE_Propeller_1)
//Asobo/DA40NG/Controls
DA40NG_FLAPS_DECR#(>K:FLAPS_DECR)
DA40NG_FLAPS_INCR#(>K:FLAPS_INCR)
//Asobo/Baron G58/Electrical
G58_MAGNETO1_BOTH#3 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
G58_MAGNETO1_LEFT#2 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
G58_MAGNETO1_OFF#0 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
G58_MAGNETO1_RIGHT#1 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
G58_MAGNETO1_START#4 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 1 (>K:SET_STARTER1_HELD) }
G58_MAGNETO2_BOTH#3 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:SET_STARTER2_HELD) }
G58_MAGNETO2_LEFT#2 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:SET_STARTER2_HELD) }
G58_MAGNETO2_OFF#0 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:SET_STARTER2_HELD) }
G58_MAGNETO2_RIGHT#1 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:SET_STARTER2_HELD) }
G58_MAGNETO2_START#4 (>K:MAGNETO2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 1 (>K:SET_STARTER2_HELD) }
G58_MASTER_BATTERY_1_OFF#(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
G58_MASTER_BATTERY_1_ON#(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
G58_MASTER_BATTERY_2_OFF#(A:ELECTRICAL MASTER BATTERY:2, bool) if{ 2 (>K:TOGGLE_MASTER_BATTERY) }
G58_MASTER_BATTERY_2_ON#(A:ELECTRICAL MASTER BATTERY:2, bool) ! if{ 2 (>K:TOGGLE_MASTER_BATTERY) }
//Asobo/DA40NG/Fuel
DA40NG_FUEL_TRANSFER_ON#(A:FUEL TRANSFER PUMP ON:1, Bool) ! if{ 1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE) }
Fuel_Pump_Switch_Off#0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET)
Fuel_Pump_Switch_On#1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET)
Fuel_Tank_Selector_Left#2 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }
Fuel_Tank_Selector_Off#0 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }
Fuel_Tank_Selector_Right#3 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }
DA40NG_FUEL_TRANSFER_OFF#(A:FUEL TRANSFER PUMP ON:1, Bool) if{ 1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE) }
//Asobo/DA40NG/Gear
DA40NG_PARKING_BRAKE_OFF#0 (>K:PARKING_BRAKE_SET)
DA40NG_PARKING_BRAKE_ON#1 (>K:PARKING_BRAKE_SET)
//Asobo/DA40NG/Lights
DA40NG_LANDING_OFF#1 0 (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_1)
DA40NG_LANDING_ON#1 1 (>K:2:LANDING_LIGHTS_SET) 1 (>L:LIGHTING_LANDING_1)
DA40NG_POSITION_OFF#1 0 (>K:2:NAV_LIGHTS_SET) 0 (>L:LIGHTING_NAV_1) 
DA40NG_POSITION_ON#1 1 (>K:2:NAV_LIGHTS_SET) 1 (>L:LIGHTING_NAV_1) 
DA40NG_STROBE_OFF#1 0 (>K:2:STROBES_SET) 0 (>L:LIGHTING_STROBE_1) 
DA40NG_STROBE_ON#1 1 (>K:2:STROBES_SET) 1 (>L:LIGHTING_STROBE_1) 
DA40NG_TAXI_OFF#1 0 (>K:2:TAXI_LIGHTS_SET) 1 (>L:LIGHTING_TAXI_1)
DA40NG_TAXI_ON#1 1 (>K:2:TAXI_LIGHTS_SET) 1 (>L:LIGHTING_TAXI_1)
DA40NG_LIGHT_FLOOD_KNOB_DEC#(L:LIGHTING_GLARESHIELD_1) 5 - 0 max 100 min s0 (>L:LIGHTING_GLARESHIELD_1) l0 5 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT GLARESHIELD:1, Bool) s2 (L:LIGHTING_GLARESHIELD_1) 0 > != if{ l2 ! 1 l0 (>K:2:GLARESHIELD_LIGHTS_SET) quit } 
DA40NG_LIGHT_FLOOD_KNOB_INC#(L:LIGHTING_GLARESHIELD_1) 5 + 0 max 100 min s0 (>L:LIGHTING_GLARESHIELD_1) l0 5 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT GLARESHIELD:1, Bool) s2 (L:LIGHTING_GLARESHIELD_1) 0 > != if{ l2 ! 1 l0 (>K:2:GLARESHIELD_LIGHTS_SET) quit } 
//Asobo/330 Extra/Avionics
AS3X_1_CLR_Push#(>H:AS3X_1_CLR_Push)
AS3X_1_DIRECTTO#(>H:AS3X_1_DIRECTTO)
AS3X_1_ENT_Push#(>H:AS3X_1_ENT_Push)
AS3X_1_FPL_Push#(>H:AS3X_1_FPL_Push)
AS3X_1_JOYSTICK_DOWN#(>H:AS3X_1_JOYSTICK_DOWN)
AS3X_1_JOYSTICK_LEFT#(>H:AS3X_1_JOYSTICK_LEFT)
AS3X_1_JOYSTICK_PUSH#(>H:AS3X_1_JOYSTICK_PUSH)
AS3X_1_JOYSTICK_RIGHT#(>H:AS3X_1_JOYSTICK_RIGHT)
AS3X_1_JOYSTICK_UP#(>H:AS3X_1_JOYSTICK_UP)
AS3X_1_MENU_Push#(>H:AS3X_1_MENU_Push)
AS3X_1_NRST_Push#(>H:AS3X_1_NRST_Push)
AS3X_1_RNG_Dezoom#(>H:AS3X_1_RNG_Dezoom)
AS3X_1_RNG_Zoom#(>H:AS3X_1_RNG_Zoom)
AS3X_1_SOFTKEYS_1#(>H:AS3X_1_SOFTKEYS_1)
AS3X_1_SOFTKEYS_2#(>H:AS3X_1_SOFTKEYS_2)
AS3X_1_SOFTKEYS_3#(>H:AS3X_1_SOFTKEYS_3)
AS3X_1_SOFTKEYS_4#(>H:AS3X_1_SOFTKEYS_4)
AS3X_1_SOFTKEYS_5#(>H:AS3X_1_SOFTKEYS_5)
AS3X_1_TURN_DEC#(>H:AS3X_1_TURN_DEC)
AS3X_1_TURN_INC#(>H:AS3X_1_TURN_INC)
AS3X_2_CLR_Push#(>H:AS3X_2_CLR_Push)
AS3X_2_DIRECTTO#(>H:AS3X_2_DIRECTTO)
AS3X_2_ENT_Push#(>H:AS3X_2_ENT_Push)
AS3X_2_FPL_Push#(>H:AS3X_2_FPL_Push)
AS3X_2_JOYSTICK_DOWN#(>H:AS3X_2_JOYSTICK_DOWN)
AS3X_2_JOYSTICK_LEFT#(>H:AS3X_2_JOYSTICK_LEFT)
AS3X_2_JOYSTICK_PUSH#(>H:AS3X_2_JOYSTICK_PUSH)
AS3X_2_JOYSTICK_RIGHT#(>H:AS3X_2_JOYSTICK_RIGHT)
AS3X_2_JOYSTICK_UP#(>H:AS3X_2_JOYSTICK_UP)
AS3X_2_MENU_Push#(>H:AS3X_2_MENU_Push)
AS3X_2_NRST_Push#(>H:AS3X_2_NRST_Push)
AS3X_2_RNG_Dezoom#(>H:AS3X_2_RNG_Dezoom)
AS3X_2_RNG_Zoom#(>H:AS3X_2_RNG_Zoom)
AS3X_2_SOFTKEYS_1#(>H:AS3X_2_SOFTKEYS_1)
AS3X_2_SOFTKEYS_2#(>H:AS3X_2_SOFTKEYS_2)
AS3X_2_SOFTKEYS_3#(>H:AS3X_2_SOFTKEYS_3)
AS3X_2_SOFTKEYS_4#(>H:AS3X_2_SOFTKEYS_4)
AS3X_2_SOFTKEYS_5#(>H:AS3X_2_SOFTKEYS_5)
AS3X_2_TURN_DEC#(>H:AS3X_2_TURN_DEC)
AS3X_2_TURN_INC#(>H:AS3X_2_TURN_INC)
//Asobo/737 Max 2024/Autopilot
HEADING_bug_decrease#>B:FCC_HEADING_SEL_Dec
HEADING_bug_increase#>B:FCC_HEADING_SEL_Inc
//Asobo/747-8i/ADIRS
IRS_1_NAV#2 (>L:747_IRS_KNOB_1)
IRS_2_NAV#2 (>L:747_IRS_KNOB_2)
IRS_3_NAV#2 (>L:747_IRS_KNOB_3)
//Asobo/747-8i/Anti-Ice
WINDSHIELD_DEICE#(>K:WINDSHIELD_DEICE_TOGGLE)
//Asobo/747-8i/Autopilot
Autopilot_Heading_Hold_Press#(>K:AP_HDG_HOLD_ON) (>H:B747_8_FMC_1_AP_HEADING_HOLD)
Autopilot_Heading_Select_Dec#1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 - dnor (>K:2:HEADING_BUG_SET)
Autopilot_Heading_Select_Inc#1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 + dnor (>K:2:HEADING_BUG_SET)
AP_APP_ARMED#(>H:B747_8_FMC_1_AP_APP_ARMED)
B747_AP_AT_Switch_Arm#(L:AS01B_AUTO_THROTTLE_ARM_STATE,Bool) ! if{ (>K:AUTO_THROTTLE_ARM) }
B747_AP_AT_Switch_Off#(L:AS01B_AUTO_THROTTLE_ARM_STATE,Bool) if{ (>K:AUTO_THROTTLE_ARM) }
B747_AP_Alt_Hold_Button_Press#(>H:B747_8_FMC_1_AP_ALT_HOLD)
B747_AP_Alt_Knob__Dec__1000#3 1000 (>K:2:AP_ALT_VAR_DEC) (>H:AP_KNOB_Down)
B747_AP_Alt_Knob__Inc__1000#3 1000 (>K:2:AP_ALT_VAR_INC) (>H:AP_KNOB_Up)
B747_AP_Alt_Knob_Dec#3 0 (>K:2:AP_ALT_VAR_DEC) (>H:AP_KNOB_Down) 
B747_AP_Alt_Knob_Inc#3 0 (>K:2:AP_ALT_VAR_INC) (>H:AP_KNOB_Up)
B747_AP_Apr_Button_Press#(>K:AP_APR_HOLD)
B747_AP_Disengage_Bar_Down#(A:AUTOPILOT DISENGAGED, Bool) ! if{ 1 (>K:AUTOPILOT_DISENGAGE_SET) 0 (>L:XMLVAR_Autopilot_1_Status) 0 (>L:XMLVAR_Autopilot_2_Status) 0 (>L:XMLVAR_Autopilot_3_Status) }
B747_AP_Disengage_Bar_Up#(A:AUTOPILOT DISENGAGED, Bool) if{ 0 (>K:AUTOPILOT_DISENGAGE_SET) }
B747_AP_Engage_C_CMD_Button_Press#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>H:B748_Autopilot_Engage_2) }
B747_AP_Engage_L_CMD_Button_Press#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>H:B748_Autopilot_Engage_1) }
B747_AP_Engage_R_CMD_Button_Press#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>H:B748_Autopilot_Engage_3) }
B747_AP_FD_Capt_Switch_Off#(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool) if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }
B747_AP_FD_Capt_Switch_On#(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }
B747_AP_FLCH_Button_Press#(>H:B747_8_FMC_1_AP_FLCH)
B747_AP_HDG_HOLD_Button_Press#(>H:B747_8_FMC_1_AP_HEADING_HOLD)
B747_AP_IAS_Mach_Knob_Dec#(L:XMLVAR_AirSpeedIsInMach) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } 
B747_AP_IAS_Mach_Knob_Inc#(L:XMLVAR_AirSpeedIsInMach) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) } 
B747_AP_LNAV_Button_Press#(>H:B747_8_FMC_1_AP_LNAV)
B747_AP_Loc_Button_Press#(>K:AP_LOC_HOLD)
B747_AP_THR_Button_Press#(>H:AS01B_FMC_1_AP_THR)
B747_AP_VNAV_Button_Press#(>H:B747_8_FMC_1_AP_VNAV)
B747_AP_VS_Mode_Button_Press#(>H:B747_8_FMC_1_AP_VSPEED)
B747_AP_VS_Wheel_Dn#1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 - (>K:2:AP_VS_VAR_SET_ENGLISH)
B747_AP_VS_Wheel_Up#1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH)
B747_Autopilot_Altitudde_Knob_Press#(>H:B747_8_FMC_1_AP_ALT_INTERVENTION)
B747_Autopilot_Heading_Select_Press#(>H:B747_8_FMC_1_AP_HEADING_SEL)
B747_Autopilot_Speed_Knob_Press#(>H:B747_8_FMC_1_AP_SPEED_INTERVENTION)
B7474_AP_IAS_Mach_Sel_Button_Press#(>H:B747_8_FMC_1_AP_SPEED_MACH_TOGGLE) (L:XMLVAR_AirSpeedIsInMach) ! if{ (>K:AP_MANAGED_SPEED_IN_MACH_ON) } els{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) }
FMC_1_AP_SPD_Hold#(>H:B747_8_FMC_1_AP_SPD)
//Asobo/747-8i/EFIS
B747_8_MFD_NAV_MODE_APP#0 (>L:B747_8_MFD_NAV_MODE)
B747_8_MFD_NAV_MODE_MAP#2 (>L:B747_8_MFD_NAV_MODE)
B747_8_MFD_NAV_MODE_PLN#3 (>L:B747_8_MFD_NAV_MODE)
B747_8_MFD_NAV_MODE_VOR#1 (>L:B747_8_MFD_NAV_MODE)
B747_8_XMLVAR_Baro_Selector_HPA_1_HPA#1 (>L:B747_8_XMLVAR_Baro_Selector_HPA_1)
B747_8_XMLVAR_Baro_Selector_HPA_1_IN#0 (>L:B747_8_XMLVAR_Baro_Selector_HPA_1)
B747_8_EFIS__NAV_AID_L1_SWITCH_ADF#2 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
B747_8_EFIS_BARO_STD_PRESS#(L:XMLVAR_Baro1_ForcedToSTD) ! (>L:XMLVAR_Baro1_ForcedToSTD)
B747_8_EFIS_MFD_1_ARPT_PRESS#(>H:AS01B_MFD_1_ARPT)
B747_8_EFIS_MFD_1_DATA_PRESS#(>H:AS01B_MFD_1_DATA)
B747_8_EFIS_MFD_1_POS_PRESS#(>H:AS01B_MFD_1_POS)
B747_8_EFIS_MFD_1_STA_PRESS#(>H:AS01B_MFD_1_STA)
B747_8_EFIS_MFD_1_WPT_PRESS#(>H:AS01B_MFD_1_WPT)
B747_8_EFIS_MFD_1_WXR_PRESS#(>H:AS01B_MFD_1_WXR)
B747_8_EFIS_NAV_AID_L1_SWITCH_OFF#1 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
B747_8_EFIS_NAV_AID_L1_SWITCH_VOR#0 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
B747_8_EFIS_NAV_AID_L2_SWITCH_ADF#2 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
B747_8_EFIS_NAV_AID_L2_SWITCH_OFF#1 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
B747_8_EFIS_NAV_AID_L2_SWITCH_VOR#0 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
B747_8_EFIS_PFD_FPV_PRESS#(>H:B747_8_PFD_FPV)
B747_8_EFIS_PFD_MINS_KNOB_DEC#(>H:B747_8_PFD_Mins_DEC)
B747_8_EFIS_PFD_MINS_KNOB_INC#(>H:B747_8_PFD_Mins_INC)
B747_8_EFIS_PFD_MINS_PRESS#(>H:B747_8_PFD_Mins_Press)
B747_8_EFIS_PFD_MINS_SELECTOR_BARO#1 (>L:XMLVAR_Mins_Selector_Baro)
B747_8_EFIS_PFD_MINS_SELECTOR_RADIO#0 (>L:XMLVAR_Mins_Selector_Baro)
B747_8_EFUS_PFD_MTRS_PRESS#(>H:B747_8_PFD_MTRS)
B747_8_MFD_1_KNOB_AUTOPILOT_CTR#(>H:AS01B_MFD_1_AUTOPILOT_CTR)
B747_8_MFD_1_NAV_MODE_DEC#(L:B747_8_MFD_1_NAV_MODE) -- 0 max 3 min (>L:B747_8_MFD_1_NAV_MODE)
B747_8_MFD_1_NAV_MODE_INC#(L:B747_8_MFD_1_NAV_MODE) ++ 0 max 3 min (>L:B747_8_MFD_1_NAV_MODE)
B747_8_MFD_1_Range_0_25#0 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_0_5#1 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_1#2 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_10#5 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_160#9 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_2#3 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_20#6 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_320#10 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_40#7 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_5#4 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_640#11 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_80#8 (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_DEC#(L:B747_8_MFD_1_Range) -- 0 max 12 min (>L:B747_8_MFD_1_Range)
B747_8_MFD_1_Range_INC#(L:B747_8_MFD_1_Range) ++ 0 max 12 min (>L:B747_8_MFD_1_Range)
B747_EFIS_MFD_2_RANGE_KNOB_DEC#(L:B747_8_MFD_2_Range) -- 0 max 12 min (>L:B747_8_MFD_2_Range)
B747_EFIS_MFD_2_RANGE_KNOB_INC#(L:B747_8_MFD_2_Range) ++ 0 max 12 min (>L:B747_8_MFD_2_Range)
B747_8_EFIS_MFD_1_TERR_PRESS#(>H:AS01B_MFD_1_TERR)
B747_8_BARO_DEC#(>K:KOHLSMAN_DEC)
B747_8_BARO_INC#(>K:KOHLSMAN_INC)
//Asobo/747-8i/EICAS
B747_8_EICAS_CHANGE_PAGE_chkl#(>H:B747_8_EICAS_2_EICAS_PUSH_chkl)
B747_8_EICAS_CHANGE_PAGE_drs#(>H:B747_8_EICAS_2_EICAS_PUSH_drs)
B747_8_EICAS_CHANGE_PAGE_ecs#(>H:B747_8_EICAS_2_EICAS_PUSH_ecs)
B747_8_EICAS_CHANGE_PAGE_elec#(>H:B747_8_EICAS_2_EICAS_PUSH_elec)
B747_8_EICAS_CHANGE_PAGE_eng#(>H:B747_8_EICAS_2_EICAS_PUSH_eng)
B747_8_EICAS_CHANGE_PAGE_ftcl#(>H:B747_8_EICAS_2_EICAS_PUSH_fctl)
B747_8_EICAS_CHANGE_PAGE_fuel#(>H:B747_8_EICAS_2_EICAS_PUSH_fuel)
B747_8_EICAS_CHANGE_PAGE_gear#(>H:B747_8_EICAS_2_EICAS_PUSH_gear)
B747_8_EICAS_CHANGE_PAGE_hyd#(>H:B747_8_EICAS_2_EICAS_PUSH_hyd)
B747_8_EICAS_CHANGE_PAGE_info#(>H:B747_8_EICAS_2_EICAS_PUSH_info)
B747_8_EICAS_CHANGE_PAGE_nav#(>H:B747_8_EICAS_2_EICAS_PUSH_nav)
B747_8_EICAS_CHANGE_PAGE_stat#(>H:B747_8_EICAS_2_EICAS_PUSH_stat)
//Asobo/747-8i/Electrical
APU_GENERATOR#1 (>K:APU_GENERATOR_SWITCH_TOGGLE)
APU_OFF#0 (>L:XMLVAR_APU_StarterKnob_Pos) ! (>K:APU_OFF_SWITCH)
APU_START#(L:XMLVAR_APU_StarterKnob_Pos) ! 2 (>L:XMLVAR_APU_StarterKnob_Pos) (>K:APU_STARTER) 
B747_PACK__1_TOGGLE#(L:WT_748_PACK_ON:1) ! (>L:WT_748_PACK_ON:1) 
B747_PACK__2_TOGGLE#(L:WT_748_PACK_ON:2) ! (>L:WT_748_PACK_ON:2) 
B747_PACK__3_TOGGLE#(L:WT_748_PACK_ON:3) ! (>L:WT_748_PACK_ON:3)
BATTERY_OFF#(A:ELECTRICAL MASTER BATTERY:1, Bool) l0 != if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 0 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:7, Bool) l0 != if{ 6 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BATTERY_ON# 1 sp0 (A:ELECTRICAL MASTER BATTERY:1, Bool) l0 != if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 1 sp0 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:7, Bool) l0 != if{ 6 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 
EXTERNAL_POWER_OFF#0 (>L:ELECTRICAL_ExternalPower_1) 0 (>L:ELECTRICAL_ExternalPower_2) 0 (>K:TOGGLE_EXTERNAL_POWER)
EXTERNAL_POWER_ON# (>K:TOGGLE_EXTERNAL_POWER) 1 (>L:ELECTRICAL_ExternalPower_1) 1 (>L:ELECTRICAL_ExternalPower_2) 
STANDBY_POWER_AUTO#(>B:AIRLINER_Standby_Power_Selector_Auto)
Overhead_Master_Battery_Toggle#6 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
//Asobo/747-8i/Engine
ENG_1_FUEL_CONTROL_OFF#(A:FUELSYSTEM VALVE SWITCH:5, Bool) 1 == if{ 5 (>K:FUELSYSTEM_VALVE_TOGGLE) }
ENG_1_FUEL_CONTROL_ON#(A:FUELSYSTEM VALVE SWITCH:5, Bool) != if{ 5 (>K:FUELSYSTEM_VALVE_TOGGLE) }
ENG_1_START#1 (>K:1:STARTER1_SET) 1 (>K:1:TURBINE_IGNITION_SWITCH_SET1)
ENG_2_FUEL_CONTROL_OFF#(A:FUELSYSTEM VALVE SWITCH:6, Bool) 1 == if{ 6 (>K:FUELSYSTEM_VALVE_TOGGLE) }
ENG_2_FUEL_CONTROL_ON#(A:FUELSYSTEM VALVE SWITCH:6, Bool) != if{ 6 (>K:FUELSYSTEM_VALVE_TOGGLE) }
ENG_2_START#1 (>K:1:STARTER2_SET) 1 (>K:1:TURBINE_IGNITION_SWITCH_SET2)
ENG_3_FUEL_CONTROL_OFF#(A:FUELSYSTEM VALVE SWITCH:7, Bool) 1 == if{ 7 (>K:FUELSYSTEM_VALVE_TOGGLE) }
ENG_3_FUEL_CONTROL_ON#(A:FUELSYSTEM VALVE SWITCH:7, Bool) != if{ 7 (>K:FUELSYSTEM_VALVE_TOGGLE) }
ENG_3_START#1 (>K:1:STARTER3_SET) 1 (>K:1:TURBINE_IGNITION_SWITCH_SET3) 
ENG_4_FUEL_CONTROL_OFF#(A:FUELSYSTEM VALVE SWITCH:8, Bool) 1 == if{ 8 (>K:FUELSYSTEM_VALVE_TOGGLE) }
ENG_4_FUEL_CONTROL_ON#(A:FUELSYSTEM VALVE SWITCH:8, Bool) != if{ 8 (>K:FUELSYSTEM_VALVE_TOGGLE) }
ENG_4_START#1 (>K:1:STARTER4_SET) 1 (>K:1:TURBINE_IGNITION_SWITCH_SET4)
ENG1_STARTER_OFF#(A:TURB ENG IGNITION SWITCH EX1:1, enum) 15 != if{  15 (K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, bool) if{ 0 (>K:STARTER1_SET) } (K:TOGGLE_STARTER1)
ENG1_STARTER_ON#(A:TURB ENG IGNITION SWITCH EX1:1, enum) 15 != if{ 15 (K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, bool) ! if{ 1 (>K:STARTER1_SET) } 
ENG2_STARTER_OFF#(A:TURB ENG IGNITION SWITCH EX1:2, enum) 15 != if{  15 (K:TURBINE_IGNITION_SWITCH_SET2) } (A:GENERAL ENG STARTER:2, bool) if{ 0 (>K:STARTER2_SET) } (K:TOGGLE_STARTER2)
ENG2_STARTER_ON#(A:TURB ENG IGNITION SWITCH EX1:2, enum) 15 != if{  15 (K:TURBINE_IGNITION_SWITCH_SET2) } (A:GENERAL ENG STARTER:2, bool) ! if{ 1 (>K:STARTER2_SET) }
ENG3_STARTER_OFF#(A:TURB ENG IGNITION SWITCH EX1:3, enum) 15 != if{  15 (K:TURBINE_IGNITION_SWITCH_SET3) } (A:GENERAL ENG STARTER:3, bool) if{ 0 (>K:STARTER3_SET) } (K:TOGGLE_STARTER3)
ENG3_STARTER_ON#(A:TURB ENG IGNITION SWITCH EX1:3, enum) 15 != if{ 15 (K:TURBINE_IGNITION_SWITCH_SET3) } (A:GENERAL ENG STARTER:3, bool) ! if{ 1 (>K:STARTER3_SET) }
ENG4_STARTER_OFF#(A:TURB ENG IGNITION SWITCH EX1:4, enum) 15 != if{  15 (K:TURBINE_IGNITION_SWITCH_SET4) } (A:GENERAL ENG STARTER:4, bool) if{ 0 (>K:STARTER4_SET) } (K:TOGGLE_STARTER4)
ENG4_STARTER_ON#(A:TURB ENG IGNITION SWITCH EX1:4, enum) 15 != if{  15 (K:TURBINE_IGNITION_SWITCH_SET4) } (A:GENERAL ENG STARTER:4, bool) ! if{ 1 (>K:STARTER4_SET) }
//Asobo/747-8i/Fuel
B747_8_FUEL_Pump_Ctr_Tank_L_OFF#0 (A:FUELSYSTEM PUMP SWITCH:1, Bool) != if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) }
B747_8_FUEL_Pump_Ctr_Tank_L_ON#1 (A:FUELSYSTEM PUMP SWITCH:1, Bool) != if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) }
B747_8_FUEL_Pump_Ctr_Tank_R_OFF#0 (A:FUELSYSTEM PUMP SWITCH:2, Bool) != if{ 2 (>K:FUELSYSTEM_PUMP_TOGGLE) }
B747_8_FUEL_Pump_Ctr_Tank_R_ON#1 (A:FUELSYSTEM PUMP SWITCH:2, Bool) != if{ 2 (>K:FUELSYSTEM_PUMP_TOGGLE) }
CENTRE_PUMPS_OFF#(A:FUELSYSTEM PUMP SWITCH:1, Bool) != if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:2, Bool) != if{ 2 (>K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:15, Bool) != if{ 15 (>K:FUELSYSTEM_PUMP_TOGGLE) } (A:FUELSYSTEM PUMP SWITCH:16, Bool) != if{ 16 (>K:FUELSYSTEM_PUMP_TOGGLE) }
CENTRE_PUMPS_ON#1 (>K:FUELSYSTEM_PUMP_TOGGLE) 2 (>K:FUELSYSTEM_PUMP_TOGGLE) 15 (>K:FUELSYSTEM_PUMP_TOGGLE) 16 (>K:FUELSYSTEM_PUMP_TOGGLE) 
FUEL_CONTROL_ENG_1_OFF#(A:FUELSYSTEM VALVE SWITCH:5, Bool) 1 == if{ 5 (>K:FUELSYSTEM_VALVE_TOGGLE) }
FUEL_CONTROL_ENG_1_ON#(A:FUELSYSTEM VALVE SWITCH:5, Bool) 0 == if{ 5 (>K:FUELSYSTEM_VALVE_TOGGLE) }
FUEL_CONTROL_ENG_2_OFF#(A:FUELSYSTEM VALVE SWITCH:6, Bool) 1 == if{ 6 (>K:FUELSYSTEM_VALVE_TOGGLE) }
FUEL_CONTROL_ENG_2_ON#(A:FUELSYSTEM VALVE SWITCH:6, Bool) 0 == if{ 6 (>K:FUELSYSTEM_VALVE_TOGGLE) }
FUEL_CONTROL_ENG_3_OFF#(A:FUELSYSTEM VALVE SWITCH:7, Bool) 1 == if{ 7 (>K:FUELSYSTEM_VALVE_TOGGLE) }
FUEL_CONTROL_ENG_3_ON#(A:FUELSYSTEM VALVE SWITCH:7, Bool) 0 == if{ 7 (>K:FUELSYSTEM_VALVE_TOGGLE) }
FUEL_CONTROL_ENG_4_OFF#(A:FUELSYSTEM VALVE SWITCH:8, Bool) 1 == if{ 8 (>K:FUELSYSTEM_VALVE_TOGGLE) }
FUEL_CONTROL_ENG_4_ON#(A:FUELSYSTEM VALVE SWITCH:8, Bool) 0 == if{ 8 (>K:FUELSYSTEM_VALVE_TOGGLE) }
LEFT_PUMPS_OFF#(A:FUELSYSTEM PUMP SWITCH:3, Bool) != if{ 3 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:5, Bool) != if{ 5 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:7, Bool) != if{ 7 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:8, Bool) != if{ 8 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:6, Bool) != if{ 6 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:4, Bool) != if{ 4 (>K:FUELSYSTEM_PUMP_TOGGLE) }
LEFT_PUMPS_ON# 7 (>K:FUELSYSTEM_PUMP_TOGGLE) 8 (>K:FUELSYSTEM_PUMP_TOGGLE) 4 (>K:FUELSYSTEM_PUMP_TOGGLE) 6 (>K:FUELSYSTEM_PUMP_TOGGLE) 
RIGHT_PUMPS_OFF#(A:FUELSYSTEM PUMP SWITCH:9, Bool) != if{ 9 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:11, Bool) != if{ 11 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:12, Bool) != if{ 12 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:13, Bool) != if{ 13 (>K:FUELSYSTEM_PUMP_TOGGLE) }  A:FUELSYSTEM PUMP SWITCH:10, Bool) != if{ 10 (>K:FUELSYSTEM_PUMP_TOGGLE) }  (A:FUELSYSTEM PUMP SWITCH:14, Bool) != if{ 14 (>K:FUELSYSTEM_PUMP_TOGGLE) } 
RIGHT_PUMPS_ON#9 (>K:FUELSYSTEM_PUMP_TOGGLE) 11 (>K:FUELSYSTEM_PUMP_TOGGLE) 12 (>K:FUELSYSTEM_PUMP_TOGGLE) 13 (>K:FUELSYSTEM_PUMP_TOGGLE) 10 (>K:FUELSYSTEM_PUMP_TOGGLE) 14 (>K:FUELSYSTEM_PUMP_TOGGLE) 
//Asobo/747-8i/Lights (exterior)
B748_BEACON_LIGHT_OFF#1 (>L:LIGHTING_BEACON_1) 
B748_BEACON_LIGHT_ON#2 (>L:LIGHTING_BEACON_1)
B748_LANDING_LIGHTS_OFF#0 (>K:2:LANDING_LIGHTS_SET)
B748_LANDING_LIGHTS_ON#1 (>K:2:LANDING_LIGHTS_SET)
B748_LOGO_LIGHTS_OFF#0 (>K:2:LOGO_LIGHTS_SET)
B748_LOGO_LIGHT_ON#1 (>K:2:LOGO_LIGHTS_SET)
B748_NAV_LIGHTS_OFF#0 (>K:2:NAV_LIGHTS_SET)
B748_NAV_LIGHTS_ON#1 (>K:2:NAV_LIGHTS_SET)
B748_STROBE_LIGHT_OFF#0 (>K:2:STROBES_SET)
B748_STROBE_LIGHT_ON#1 (>K:2:STROBES_SET)
B748_TAXI_TURNOFF_LIGHTS_OFF#0 (>K:2:TAXI_LIGHTS_SET)
B748_TAXI_TURNOFF_LIGHTS_ON#1 (>K:2:TAXI_LIGHTS_SET)
//Asobo/747-8i/Lights
B747_EMERGENCY_LIGHTS_AND_COVER_TOGGLE#(L:XMLVAR_EMER_LIGHTS_ARMED) ! (>L:XMLVAR_EMER_LIGHTS_ARMED) (L:XMLVAR_ELECTRICAL_EmerLights_Cover_Opened) ! (>L:XMLVAR_ELECTRICAL_EmerLights_Cover_Opened)
//Asobo/747-8i/Navigation
B747_8_FMC_1_BTN_0#(>H:B747_8_FMC_1_BTN_0)
B747_8_FMC_1_BTN_1#(>H:B747_8_FMC_1_BTN_1)
B747_8_FMC_1_BTN_2#(>H:B747_8_FMC_1_BTN_2)
B747_8_FMC_1_BTN_3#(>H:B747_8_FMC_1_BTN_3)
B747_8_FMC_1_BTN_4#(>H:B747_8_FMC_1_BTN_4)
B747_8_FMC_1_BTN_5#(>H:B747_8_FMC_1_BTN_5)
B747_8_FMC_1_BTN_6#(>H:B747_8_FMC_1_BTN_6)
B747_8_FMC_1_BTN_7#(>H:B747_8_FMC_1_BTN_7)
B747_8_FMC_1_BTN_8#(>H:B747_8_FMC_1_BTN_8)
B747_8_FMC_1_BTN_9#(>H:B747_8_FMC_1_BTN_9)
B747_8_FMC_1_BTN_A#(>H:B747_8_FMC_1_BTN_A)
B747_8_FMC_1_BTN_ATC#(>H:B747_8_FMC_1_BTN_ATC)
B747_8_FMC_1_BTN_B#(>H:B747_8_FMC_1_BTN_B)
B747_8_FMC_1_BTN_BRT_DIM#(>H:B747_8_FMC_1_BTN_BRT_DIM)
B747_8_FMC_1_BTN_C#(>H:B747_8_FMC_1_BTN_C)
B747_8_FMC_1_BTN_CLR#(>H:B747_8_FMC_1_BTN_CLR)
B747_8_FMC_1_BTN_D#(>H:B747_8_FMC_1_BTN_D)
B747_8_FMC_1_BTN_DEL#(>H:B747_8_FMC_1_BTN_DEL)
B747_8_FMC_1_BTN_DEPARR#(>H:B747_8_FMC_1_BTN_DEPARR)
B747_8_FMC_1_BTN_DIV#(>H:B747_8_FMC_1_BTN_DIV)
B747_8_FMC_1_BTN_DOT#(>H:B747_8_FMC_1_BTN_DOT)
B747_8_FMC_1_BTN_E#(>H:B747_8_FMC_1_BTN_E)
B747_8_FMC_1_BTN_EXEC#(>H:B747_8_FMC_1_BTN_EXEC)
B747_8_FMC_1_BTN_F#(>H:B747_8_FMC_1_BTN_F)
B747_8_FMC_1_BTN_FIX#(>H:B747_8_FMC_1_BTN_FIX)
B747_8_FMC_1_BTN_FMCCOMM#(>H:B747_8_FMC_1_BTN_FMCCOMM)
B747_8_FMC_1_BTN_G#(>H:B747_8_FMC_1_BTN_G)
B747_8_FMC_1_BTN_H#(>H:B747_8_FMC_1_BTN_H)
B747_8_FMC_1_BTN_HOLD#(>H:B747_8_FMC_1_BTN_HOLD)
B747_8_FMC_1_BTN_I#(>H:B747_8_FMC_1_BTN_I)
B747_8_FMC_1_BTN_INIT#(>H:B747_8_FMC_1_BTN_INIT)
B747_8_FMC_1_BTN_J#(>H:B747_8_FMC_1_BTN_J)
B747_8_FMC_1_BTN_K#(>H:B747_8_FMC_1_BTN_K)
B747_8_FMC_1_BTN_L#(>H:B747_8_FMC_1_BTN_L)
B747_8_FMC_1_BTN_L1#(>H:B747_8_FMC_1_BTN_L1)
B747_8_FMC_1_BTN_L2#(>H:B747_8_FMC_1_BTN_L2)
B747_8_FMC_1_BTN_L3#(>H:B747_8_FMC_1_BTN_L3)
B747_8_FMC_1_BTN_L4#(>H:B747_8_FMC_1_BTN_L4)
B747_8_FMC_1_BTN_L5#(>H:B747_8_FMC_1_BTN_L5)
B747_8_FMC_1_BTN_L6#(>H:B747_8_FMC_1_BTN_L6)
B747_8_FMC_1_BTN_LEGS#(>H:B747_8_FMC_1_BTN_LEGS)
B747_8_FMC_1_BTN_M#(>H:B747_8_FMC_1_BTN_M)
B747_8_FMC_1_BTN_MENU#(>H:B747_8_FMC_1_BTN_MENU)
B747_8_FMC_1_BTN_N#(>H:B747_8_FMC_1_BTN_N)
B747_8_FMC_1_BTN_NAVRAD#(>H:B747_8_FMC_1_BTN_NAVRAD)
B747_8_FMC_1_BTN_NEXTPAGE#(>H:B747_8_FMC_1_BTN_NEXTPAGE)
B747_8_FMC_1_BTN_O#(>H:B747_8_FMC_1_BTN_O)
B747_8_FMC_1_BTN_P#(>H:B747_8_FMC_1_BTN_P)
B747_8_FMC_1_BTN_PLUSMINUS#(>H:B747_8_FMC_1_BTN_PLUSMINUS)
B747_8_FMC_1_BTN_PREVPAGE#(>H:B747_8_FMC_1_BTN_PREVPAGE)
B747_8_FMC_1_BTN_PROG#(>H:B747_8_FMC_1_BTN_PROG)
B747_8_FMC_1_BTN_Q#(>H:B747_8_FMC_1_BTN_Q)
B747_8_FMC_1_BTN_R#(>H:B747_8_FMC_1_BTN_R)
B747_8_FMC_1_BTN_R1#(>H:B747_8_FMC_1_BTN_R1)
B747_8_FMC_1_BTN_R2#(>H:B747_8_FMC_1_BTN_R2)
B747_8_FMC_1_BTN_R3#(>H:B747_8_FMC_1_BTN_R3)
B747_8_FMC_1_BTN_R4#(>H:B747_8_FMC_1_BTN_R4)
B747_8_FMC_1_BTN_R5#(>H:B747_8_FMC_1_BTN_R5)
B747_8_FMC_1_BTN_R6#(>H:B747_8_FMC_1_BTN_R6)
B747_8_FMC_1_BTN_RTE#(>H:B747_8_FMC_1_BTN_RTE)
B747_8_FMC_1_BTN_S#(>H:B747_8_FMC_1_BTN_S)
B747_8_FMC_1_BTN_SP#(>H:B747_8_FMC_1_BTN_SP)
B747_8_FMC_1_BTN_T#(>H:B747_8_FMC_1_BTN_T)
B747_8_FMC_1_BTN_U#(>H:B747_8_FMC_1_BTN_U)
B747_8_FMC_1_BTN_V#(>H:B747_8_FMC_1_BTN_V)
B747_8_FMC_1_BTN_VNAV#(>H:B747_8_FMC_1_BTN_VNAV)
B747_8_FMC_1_BTN_W#(>H:B747_8_FMC_1_BTN_W)
B747_8_FMC_1_BTN_X#(>H:B747_8_FMC_1_BTN_X)
B747_8_FMC_1_BTN_Y#(>H:B747_8_FMC_1_BTN_Y)
B747_8_FMC_1_BTN_Z#(>H:B747_8_FMC_1_BTN_Z)
//Asobo/A320/Autopilot
A320_Neo_AUTOPILOT_AP_MASTER#>K:AP_MASTER
A320_Neo_AUTOPILOT_HEADING_DEC#3 (A:AUTOPILOT HEADING LOCK DIR:3, degrees) 1 - dnor (>K:2:HEADING_BUG_SET) (>H:A320_Neo_CDU_MODE_SELECTED_HEADING) (>H:A320_Neo_CDU_AP_DEC_HEADING)
A320_Neo_AUTOPILOT_HEADING_INC#3 (A:AUTOPILOT HEADING LOCK DIR:3, degrees) 1 + dnor (>K:2:HEADING_BUG_SET) (>H:A320_Neo_CDU_MODE_SELECTED_HEADING) (>H:A320_Neo_CDU_AP_inc_HEADING)
A320_Neo_CDU_MODE_MANAGED_HEADING#(>H:A320_Neo_CDU_MODE_MANAGED_HEADING)
A320_Neo_FCU_VS_DEC#3 (A:AUTOPILOT VERTICAL HOLD VAR:3, feet per minute) 100 - -6000 max (>K:2:AP_VS_VAR_SET_ENGLISH) (>H:A320_Neo_FCU_VS_DEC) (>H:A320_Neo_FCU_VS_HOLD) 
A320_Neo_FCU_VS_ZERO#(>H:A320_Neo_FCU_VS_ZERO)
A320_Neo_FCV_VS_INC#3 (A:AUTOPILOT VERTICAL HOLD VAR:3, feet per minute) 100 + 6000 min (>K:2:AP_VS_VAR_SET_ENGLISH) (>H:A320_Neo_FCU_VS_INC) (>H:A320_Neo_FCU_VS_HOLD)
//Asobo/A320/EFIS
A320_MFD_MAP_RANGE__10_Nm#1 (>L:A320_Neo_MFD_Range)
A320_MFD_MAP_RANGE__20_Nm#2 (>L:A320_Neo_MFD_Range)
A320_MFD_MAP_RANGE__40_Nm#3 (>L:A320_Neo_MFD_Range)
A320_MFD_MAP_RANGE__80_Nm#4 (>L:A320_Neo_MFD_Range)
A320_MFD_MAP_RANGE_160_Nm#5 (>L:A320_Neo_MFD_Range)
A320_MFD_MAP_RANGE_320_Nm#6 (>L:A320_Neo_MFD_Range)
A320_MFD_MODE_ILS#1 (>L:A320_Neo_MFD_NAV_MODE")
//Asobo/A320/Electrical
ASOA320_MASTER_BATTERY_1_OFF#(A:ELECTRICAL MASTER BATTERY:1, Bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 0 sp0 10 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:6, Bool) l0 != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
ASOA320_MASTER_BATTERY_1_ON#(A:ELECTRICAL MASTER BATTERY:1, Bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 1 sp0 10 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:6, Bool) l0 != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
ASOA320_APU_MASTER_SW_OFF#// Turn OFF APU Fuel Valve // If valve is ON (1), toggle it to OFF (0) (A:FUELSYSTEM VALVE SWITCH:8, Bool) 1 == if{  8 (>K:FUELSYSTEM_VALVE_TOGGLE) } // Additionally turn off the APU in case valve is off afterwards (A:FUELSYSTEM VALVE SWITCH:8, Bool) 0 == if{  (>K:APU_OFF_SWITCH) }
ASOA320_APU_MASTER_SW_ON#// Turn ON APU Fuel Valve // If valve is off (0), toggle it to ON (1) (A:FUELSYSTEM VALVE SWITCH:8, Bool) 0 == if{  8 (>K:FUELSYSTEM_VALVE_TOGGLE) } 
//Asobo/A320/Lights
ASOA320_OH_EXTLT_RWY_OFF#(A:LIGHT TAXI:2, Bool) if{ 2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS) }
ASOA320_OH_EXTLT_RWY_ON#(A:LIGHT TAXI:2, Bool) ! if{ 2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS) }
ASOA320_OH_EXTLT_RWY_TOG#2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS)
ASOA320_OH_STROBES_TOG_AUTO#(A:LIGHT STROBE:0, Percent) ! if{ 0 (>K:STROBES_TOGGLE) } 1 (>L:STROBE_1_Auto)
ASOA320_OH_STROBES_TOG_OFF#(A:LIGHT STROBE:0, Percent) if{ 0 (>K:STROBES_TOGGLE) } 0 (>L:STROBE_1_Auto)
ASOA320_OH_STROBES_TOG_ON#(A:LIGHT STROBE:0, Percent) ! if{ 0 (>K:STROBES_TOGGLE) } 0 (>L:STROBE_1_Auto)
ASOA320_OH_EXTLT_NOSE_OFF#0 1 r (>K:2:TAXI_LIGHTS_SET) 0 1 r (>K:2:LANDING_LIGHTS_SET)
ASOA320_OH_EXTLT_NOSE_TAXI#1 1 r (>K:2:TAXI_LIGHTS_SET) 0 1 r (>K:2:LANDING_LIGHTS_SET)
ASOA320_OH_EXTLT_NOSE_TO#0 1 r (>K:2:TAXI_LIGHTS_SET) 1 1 r (>K:2:LANDING_LIGHTS_SET)
//Asobo/A320/Overhead Electrical
APU_MASTER_SW_OFF#// Turn OFF APU Fuel Valve // If valve is ON (1), toggle it to OFF (0) (A:FUELSYSTEM VALVE SWITCH:8, Bool) 1 == if{  8 (>K:FUELSYSTEM_VALVE_TOGGLE) } // Additionally turn off the APU in case valve is off afterwards (A:FUELSYSTEM VALVE SWITCH:8, Bool) 0 == if{  (>K:APU_OFF_SWITCH) }
APU_MASTER_SW_ON#// Turn ON APU Fuel Valve // If valve is off (0), toggle it to ON (1) (A:FUELSYSTEM VALVE SWITCH:8, Bool) 0 == if{  8 (>K:FUELSYSTEM_VALVE_TOGGLE) } 
APU_STARTER_ON#1 (>K:APU_STARTER)
//Asobo/A320/Radar
WEATHER_MODE_MAP#3 (>L:XMLVAR_A320_WEATHERRADAR_MODE)
WEATHER_MODE_TOGGLE#(L:XMLVAR_A320_WEATHERRADAR_MODE, Number) ++ 4 % (>L:XMLVAR_A320_WEATHERRADAR_MODE, Number)
//Asobo/Airliner/EFIS
Asobo_Boeing_Airliner_MINS_DEC#(>H:AS01B_PFD_Mins_DEC)
Asobo_Boeing_Airliner_MINS_INC#(>H:AS01B_PFD_Mins_INC)
Asobo_Boeing_Airliner_MINS_RST#(>H:AS01B_PFD_Mins_Press)
Asobo_Boeing_Airliner_PUSH_MTRS#(>H:AS01B_PFD_MTRS)
B787_MFD_Left-Right__LEFT#0(>L:XMLVAR_MFD_Side_1)
B787_MFD_Left-Right__RIGHT#1 (>L:XMLVAR_MFD_Side_1)
BAROSET_HPA__IN_HPA_#1 (>L:XMLVAR_Baro_Selector_HPA_1)
BAROSET_IN__IN_HPA_#0 (>L:XMLVAR_Baro_Selector_HPA_1)
EFIS_PFD_FPV_PRESS#(L:XMLVAR_FPV_MODE_ACTIVE, Bool) ! (>L:XMLVAR_FPV_MODE_ACTIVE)
EFIS_PFD_MINS_SELECTOR_BARO#1 (>L:XMLVAR_Mins_Selector_Baro)
EFIS_PFD_MINS_SELECTOR_RADIO#0 (>L:XMLVAR_Mins_Selector_Baro)
//Asobo/B787-10/ADIRS
Elec_Flight_Computer_Disc#0 (>B:ELECTRICAL_FlightComputer_Set)
Left_IRS_Off#0 (>B:AIRLINER_IRS_Switch_1_Set)
Left_IRS_On#1 (>B:AIRLINER_IRS_Switch_1_Set)
Primary_Flight_Computer_On#1 (>B:ELECTRICAL_FlightComputer_Set)
Right_IRS_Off#0 (>B:AIRLINER_IRS_Switch_1_Set)
Right_IRS_On#1 (>B:AIRLINER_IRS_Switch_1_Set)
//Asobo/B787-10/Autopilot
ALT_DEC_100#3 0 (>K:2:AP_ALT_VAR_DEC) (>H:AP_KNOB_Down)
ALT_DEC_1000#3 1000 (>K:2:AP_ALT_VAR_DEC) (>H:AP_KNOB_Down)
ALT_INC_100#3 0 (>K:2:AP_ALT_VAR_INC) (>H:AP_KNOB_Up)
ALT_INC_1000#3 1000 (>K:2:AP_ALT_VAR_INC) (>H:AP_KNOB_Up)
AP_ALT_VAR_DEC#(>K:AP_ALT_VAR_DEC)
AP_ALT_VAR_INC#(>K:AP_ALT_VAR_INC)
AP_SPD_VAR_DEC#(>K:AP_SPD_VAR_DEC)
AP_SPD_VAR_INC#(>K:AP_SPD_VAR_INC)
AP_VS_VAR_DEC#(>K:AP_VS_VAR_DEC)
AP_VS_VAR_INC#(>K:AP_VS_VAR_INC)
AUTOPILOT_HDG_DEC#(>K:HEADING_BUG_DEC)
AUTOPILOT_HDG_INC#(>K:HEADING_BUG_INC)
AUTOPILOT_HDG_SET#(>K:2:HEADING_BUG_SET)
AUTOPILOT_HDG_SET1#(>H:AS01B_FMC_1_AP_HEADING_SEL)
AUTOPILOT_PUSH_ALTITUDE#{ 1 (>L:AP_ALT_HOLD_ACTIVE) } ++ { 0 (>L:AP_VS_ACTIVE) }
AUTOPILOT_PUSH_ALTITUDE_INTERVENTION#(>H:AS01B_FMC_1_AP_ALT_INTERVENTION)
AUTOPILOT_PUSH_APPROACH#(>K:AP_APR_HOLD)
AUTOPILOT_PUSH_AUTOPILOT#(>K:AP_MASTER)
AUTOPILOT_PUSH_AUTOTHROTTLE_-_Hold#(>K:AUTO_THROTTLE_ARM)
AUTOPILOT_PUSH_FLIGHTLEVELCHANGE#(>H:AS01B_FMC_1_AP_FLCH)
AUTOPILOT_PUSH_HEADING#(>H:AS01B_FMC_1_AP_HEADING_HOLD)
AUTOPILOT_PUSH_HEADING_SEL#(>H:AS01B_FMC_1_AP_HEADING_SEL)
AUTOPILOT_PUSH_LOCALIZER#(>K:AP_LOC_HOLD)
AUTOPILOT_PUSH_NAVIGATION#(>H:AS01B_FMC_1_AP_LNAV)
AUTOPILOT_PUSH_SPEED_INTERVENTION#(>H:AS01B_FMC_1_AP_SPEED_INTERVENTION)
AUTOPILOT_PUSH_VERTICALNAVIGATION#(>H:AS01B_FMC_1_AP_VNAV)
AUTOPILOT_PUSH_VERTICALSPEED#(>H:AS01B_FMC_1_AP_VSPEED)
AUTOPILOT_SWITCH_AUTOTHROTTLE_ARM_-_Off#{ 1 == (>K:AUTO_THROTTLE_ARM) } ++ { 0 (>L:AS01B_AUTO_THROTTLE_ARM_STATE) }
AUTOPILOT_SWITCH_AUTOTHROTTLE_ARM_-_On#{ 0 == (>K:AUTO_THROTTLE_ARM) } ++ { 1 (>L:AS01B_AUTO_THROTTLE_ARM_STATE) }
AUTOPILOT_SWITCH_DISENGAGE_-_Off#0 (>K:AUTOPILOT_DISENGAGE_SET)
AUTOPILOT_SWITCH_DISENGAGE_-_On#1 (>K:AUTOPILOT_DISENGAGE_SET)
AUTOPILOT_SWITCH_FLIGHTDIRECTOR_-_Off#0 (>K:TOGGLE_FLIGHT_DIRECTOR)
AUTOPILOT_SWITCH_FLIGHTDIRECTOR_-_On#1 (>K:TOGGLE_FLIGHT_DIRECTOR)
EFIS_CANC_RCL#(>H:AS01B_MFD_1_CANCRCL)
Heading_Increase#(>K:HEADING_BUG_INC) 
SPEED_DEC#1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } 
SPEED_INC#1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) } 
VAR_Heading_Increase#(>K:AP_HDG_VAR_INC)
//Asobo/B787-10/Autothrust System
AUTO_THROTTLE_DISCONNECT#(>K:AUTO_THROTTLE_DISCONNECT)
AUTO_THROTTLE_TO_GA#(>K:AUTO_THROTTLE_TO_GA)
//Asobo/B787-10/EFIS
B787_EFIS_Eicas_swap#(>H:AS01B_MFD_2_EICAS)
B787_MFD_MAP_RANGE_DEC#(>H:AS01B_MFD_1_Range_DEC)
B787_MFD_MAP_RANGE_INC#(>H:AS01B_MFD_1_Range_INC)
B787_MFD_MAP_TERRAIN_TOGGLE#(>H:AS01B_MFD_1_TERR)
B787_MFD_display_ENG_page#(>H:AS01B_MFD_1_ENG)
B787_MFD_display_SYS_page#(>H:AS01B_MFD_1_SYS)
B787_Pilot_MFD_display_CDU_page#(>H:AS01B_MFD_1_CDU)
//Asobo/B787-10/Engines
B787_ENG1_FUEL_VALVE_CLOSE#(A:FUELSYSTEM VALVE SWITCH:1, BOOL) 1 == if{ 1 (>K:FUELSYSTEM_VALVE_TOGGLE) }
B787_ENG1_FUEL_VALVE_OPEN#(A:FUELSYSTEM VALVE SWITCH:1, BOOL) 0 == if{ 1 (>K:FUELSYSTEM_VALVE_TOGGLE) }
B787_ENG2_FUEL_VALVE_CLOSE#(A:FUELSYSTEM VALVE SWITCH:2, BOOL) 1 == if{ 2 (>K:FUELSYSTEM_VALVE_TOGGLE) }
B787_ENG2_FUEL_VALVE_OPEN#(A:FUELSYSTEM VALVE SWITCH:2, BOOL) 0 == if{ 2 (>K:FUELSYSTEM_VALVE_TOGGLE) }
//Asobo/B787-10/FMS
FMC_1_BTN_1#(>H:AS01B_FMC_1_BTN_1)
FMC_1_BTN_A#(>H:AS01B_FMC_1_BTN_A)
FMC_1_BTN_NEXTPAGE#(>H:AS01B_FMC_1_BTN_NEXTPAGE)
//Asobo/B787-10/Fuel
B787_FUEL_PUMP_CENTER_1_SWITCH_OFF#(A:FUELSYSTEM PUMP SWITCH:1, Bool) 1 == if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) }
B787_FUEL_PUMP_CENTER_1_SWITCH_ON#(A:FUELSYSTEM PUMP SWITCH:1, Bool) 0 == if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) }
L_Pumps_Fwd#(A:FUELSYSTEM PUMP SWITCH:1, Bool) 0 == if{ 1 (>K:FUELSYSTEM_PUMP_TOGGLE) }
//Asobo/B787-10/Gear
Autobrake_1#2 (>K:SET_AUTOBRAKE_CONTROL)
Autobrake_2#3 (>K:SET_AUTOBRAKE_CONTROL)
Autobrake_3#4 (>K:SET_AUTOBRAKE_CONTROL)
Autobrake_4#5 (>K:SET_AUTOBRAKE_CONTROL)
Autobrake_Max_Auto#6 (>K:SET_AUTOBRAKE_CONTROL)
Autobrake_Off#1 (>K:SET_AUTOBRAKE_CONTROL)
Autobrake_RTO#0 (>K:SET_AUTOBRAKE_CONTROL)
//Asobo/B787-10/Hydraulic
HYDRAUL_ELEC_C1# 0 (>L:XMLVAR_HYDRAULICS_C1) 
HYDRAUL_PUMP_L_ELEC# 0 (>L:XMLVAR_HYDRAULICS_DEMAND_LEFT) 
//Asobo/B787-10/Lights
Panel_Lights_Test_Press#1 (>L:XMLVAR_LTS_Test)
Panel_Lights_Test_Release#0 (>L:XMLVAR_LTS_Test)
//Asobo/B787-10/Miscellaneous
CABIN_CHIME_PRESS#1 (>L:WT_CABIN_CHIME_TOGGLE)
CABIN_CHIME_RELEASE#0 (>L:WT_CABIN_CHIME_TOGGLE)
//Asobo/B787-10/Overhead Electrical
APU_Switch_Off#(>B:ELECTRICAL_APU_Starter_Set) 0
APU_Switch_On#1 (>B:ELECTRICAL_APU_Starter_Set)
APU_Switch_Start#2 (>B:ELECTRICAL_APU_Starter_Set)
Battery_On_LED#2 (A:1:BUS CONNECTION ON:8, Bool) 100 *
Battery_Toggle#2 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
IFE_ON_LED#(L:XMLVAR_Utility_Ife, Bool) 1 0 l0 ? (>O:AIRLINER_elec_util_ife_Position)
IFE_Toggle#(>B:AIRLINER_elec_util_ife_Set)
Toggle_Cabin_Utility#(>B:AIRLINER_elec_util_cabin_Set)
//Asobo/B787-10/Passengers/Crew
Cabin_Chime#(L:WT_CABIN_CHIME_TOGGLE) ! (>L:WT_CABIN_CHIME_TOGGLE) 1 
Left_IRS_Off#0 (>B:AIRLINER_IRS_Switch_1_Set)
Seatbelts_Auto#1 (>B:AIRLINER_Knob_Seatbelts_Set)
Seatbelts_Off#0 (>B:AIRLINER_Knob_Seatbelts_Set)
Seatbelts_On#2 (>B:AIRLINER_Knob_Seatbelts_Set)
//Asobo/Baron G58/Controls
G58_COWL_FLAP_CLOSE#0 (>K:COWLFLAP1_SET)
G58_COWL_FLAP_OPEN#16383 (>K:COWLFLAP1_SET)
//Asobo/Baron G58/EFIS
AS1000_MFD_RANGE_DEC#(>H:AS1000_MFD_RANGE_DEC)
AS1000_MFD_RANGE_INC#(>H:AS1000_MFD_RANGE_INC)
AS1000_PFD_CRS_INC#(>H:AS1000_PFD_CRS_DEC)
H_AS1000_PFD_CRS_INC#(>H:AS1000_PFD_CRS_INC)
//Asobo/Baron G58/Fuel
G58_Fuel_Boost_Pump_L_Switch_Hi#1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }
G58_Fuel_Boost_Pump_L_Switch_Lo#1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }
G58_Fuel_Boost_Pump_L_Switch_Off#0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }
G58_Fuel_Selector_Left_Off#0 (>K:FUEL_SELECTOR_2_SET)
G58_Fuel_Selector_Left_On#2 (>K:FUEL_SELECTOR_2_SET)
G58_Fuel_Selector_Left_Xfeed#3 (>K:FUEL_SELECTOR_2_SET)
//Asobo/Baron G58/Lights
G58_LEFT_LANDING_LIGHT_OFF#1 (>K:LANDING_LIGHTS_OFF)
G58_LEFT_LANDING_LIGHT_ON#1 (>K:LANDING_LIGHTS_ON)
G58_RIGHT_LANDING_LIGHT_OFF#2 (>K:LANDING_LIGHTS_OFF)
G58_RIGHT_LANDING_LIGHT_ON#2 (>K:LANDING_LIGHTS_ON)
//Asobo/Baron G58/Safety
G58_ELT_ARM#(A:ELT ACTIVATED, Bool) if{ (>K:ELT_OFF) }
G58_ELT_ON#(A:ELT ACTIVATED, Bool) ! if{ (>K:ELT_ON) }
//Asobo/Bonanza G36/Avionics
G36_AVIONICS_OFF#(A:CIRCUIT SWITCH ON:24, Bool) 1 == if{ 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
G36_AVIONICS_ON#(A:CIRCUIT SWITCH ON:24, Bool) 0 == if{ 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
//Asobo/Bonanza G36/Controls
G36_FLAPS_SWITCH_APH# 8192 (>K:FLAPS_SET)
G36_FLAPS_SWITCH_DN# 16383 (>K:FLAPS_SET)
G36_FLAPS_SWITCH_UP# 0 (>K:FLAPS_SET)
//Asobo/Bonanza G36/Electrical
G36_ALTERNATOR_1_OFF#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }
G36_ALTERNATOR_1_ON#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }
G36_ALTERNATOR_2_OFF#(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR2) }
G36_ALTERNATOR_2_ON#(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR2) }
G36_BATTERY_1_OFF#(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
G36_BATTERY_1_ON#(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
G36_BATTERY_2_OFF#(A:ELECTRICAL MASTER BATTERY:2, Bool) 1 == if{ 2 (>K:TOGGLE_MASTER_BATTERY) }
G36_BATTERY_2_ON#(A:ELECTRICAL MASTER BATTERY:2, Bool) 0 == if{ 2 (>K:TOGGLE_MASTER_BATTERY) }
//Asobo/Bonanza G36/Fuel
G36_FUEL_PUMP_HIGH#1 (>K:ELECT_FUEL_PUMP1_SET) 1 (>L:XMLVAR_FUEL_Pump1_High_ON)
G36_FUEL_PUMP_OFF#0 (>K:ELECT_FUEL_PUMP1_SET) 0 (>L:XMLVAR_FUEL_Pump1_High_ON)
G36_FUEL_PUMP_ON#1 (>K:ELECT_FUEL_PUMP1_SET) 0 (>L:XMLVAR_FUEL_Pump1_High_ON)
//Asobo/Bonanza G36/Lights
G36_LIGHTING_KNOB_FLOOD_DEC#(A:LIGHT POTENTIOMETER:5, Percent) 10 - 0 max 5 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHTING_KNOB_FLOOD_INC#(A:LIGHT POTENTIOMETER:5, Percent) 10 + 100 min 5 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHTING_SWITCH_FLOOD#0 (>K:GLARESHIELD_LIGHTS_TOGGLE)
G36_LIGHT_FLOOD_OFF#0 (>K:GLARESHIELD_LIGHTS_SET)
G36_LIGHT_FLOOD_ON#1 (>K:GLARESHIELD_LIGHTS_SET)
G36_LIGHT_KNOB_AVIONICS_DEC#(A:LIGHT POTENTIOMETER:14, Percent) 1 - 0 max 14 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHT_KNOB_AVIONICS_INC#(A:LIGHT POTENTIOMETER:14, Percent) 1 + 100 min 14 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHT_KNOB_GLARESHIELD_DEC#(A:LIGHT POTENTIOMETER:5, Percent) 1 - 0 max 5 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHT_KNOB_GLARESHIELD_INC#(A:LIGHT POTENTIOMETER:5, Percent) 1 + 100 min 5 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHT_KNOB_PANEL_DEC#(A:LIGHT POTENTIOMETER:3, Percent) 1 - 0 max 3 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHT_KNOB_PANEL_INC#(A:LIGHT POTENTIOMETER:3, Percent) 1 + 100 min 3 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHT_KNOB_SUBPANEL_DEC#(A:LIGHT POTENTIOMETER:2, Percent) 1 - 0 max 2 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHT_KNOB_SUBPANEL_INC#(A:LIGHT POTENTIOMETER:2, Percent) 1 + 100 min 2 (>K:2:LIGHT_POTENTIOMETER_SET)
G36_LIGHT_PANEL_OFF#0 (>K:PANEL_LIGHTS_SET)
G36_LIGHT_PANEL_ON#1 (>K:PANEL_LIGHTS_SET)
//Asobo/C208 Caravan/Electrical
C208_AVIONICS1_OFF#0 (>K:AVIONICS_MASTER_1_SET)
C208_AVIONICS1_ON#1 (>K:AVIONICS_MASTER_1_SET)
C208_AVIONICS2_OFF#0 (>K:AVIONICS_MASTER_2_SET)
C208_AVIONICS2_ON#1 (>K:AVIONICS_MASTER_2_SET)
//Asobo/C208 Caravan/Engine
C208_Engine_Starter_Switch_Motor#0 s5 (A:TURB ENG IGNITION SWITCH EX1:1, enum) != if{ l5 (>K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) } 
C208_Engine_Starter_Switch_Off#0 s0 (A:TURB ENG IGNITION SWITCH EX1:1, enum) != if{ l0 (>K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD)  (>K:TOGGLE_STARTER1) } 
C208_Engine_Starter_Switch_Start#1 s0 (A:TURB ENG IGNITION SWITCH EX1:1, enum) != if{ l0 (>K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) } 
//Asobo/C208 Caravan/Fuel
C208_Fuel_Shutoff_Button_Pull_Off_#0 s0 (>L:ENG FUEL VALVE:1, Bool) l0 (A:GENERAL ENG FUEL VALVE:1, Bool) != 0 (L:Condition_Lever_CutOff_1) != and if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
C208_Fuel_Shutoff_Button_Push_On#0 s0 (>L:ENG FUEL VALVE:1, Bool) l0 (A:GENERAL ENG FUEL VALVE:1, Bool) != 0 (L:Condition_Lever_CutOff_1) != and if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
C208_Fuel_Shutoff_Button_Toggle#(L:ENG FUEL VALVE:1, Bool) ! s0 (>L:ENG FUEL VALVE:1, Bool) l0 (A:GENERAL ENG FUEL VALVE:1, Bool) != 0 (L:Condition_Lever_CutOff_1) != and if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
Fuel_Boost_OFF#(>B:FUEL_PUMP_1_OFF)
Fuel_Boost_ON#(>B:FUEL_PUMP_1_ON)
Fuel_Condition_Lever_Cutoff#0 (>L:Condition_Lever_CutOff_1) 0 (>K:SET_FUEL_VALVE_ENG1) 0 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) 
Fuel_Condition_Lever_High_Idle#2 (>L:Condition_Lever_CutOff_1) 0 (L:ENG FUEL VALVE:1, Bool) != if{ 1 (>K:SET_FUEL_VALVE_ENG1) } 2 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) 
Fuel_Condition_Lever_Low_Idle#1 (>L:Condition_Lever_CutOff_1) 0 (L:ENG FUEL VALVE:1, Bool) != if{ 1 (>K:SET_FUEL_VALVE_ENG1) } 1 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)
//Asobo/C208 Caravan/Lights
C208_LEFT_LANDING_LIGHT_OFF#1 (>K:LANDING_LIGHTS_OFF)
C208_LEFT_LANDING_LIGHT_ON#1 (>K:LANDING_LIGHTS_ON)
C208_RIGHT_LANDING_LIGHT_OFF#2 (>K:LANDING_LIGHTS_OFF)
C208_RIGHT_LANDING_LIGHT_ON#2 (>K:LANDING_LIGHTS_ON)
Left_Flood_Decr#(A:LIGHT POTENTIOMETER:5, Percent) 1 - 0 max 5 (>K:2:LIGHT_POTENTIOMETER_SET)
Left_Flood_Incr#1 (>K:2:Glareshield_LIGHTS_SET) (A:LIGHT POTENTIOMETER:5, Percent) 1 + 100 min 5 (>K:2:LIGHT_POTENTIOMETER_SET)
Right_Flood_Decr#(A:LIGHT POTENTIOMETER:6, Percent) 1 - 0 max 6 (>K:2:LIGHT_POTENTIOMETER_SET)
Right_Flood_Incr#1 (>K:2:Glareshield_LIGHTS_SET) (A:LIGHT POTENTIOMETER:6, Percent) 1 + 100 min 6 (>K:2:LIGHT_POTENTIOMETER_SET)
//Asobo/CJ4 AAU1/Air Conditioning and Pressurization
PASSENGER_CLIMATE_CONTROL_COMP_ON#2 (>L:WT_CJ4_CLIMATE_CONTROL)
PASSENGER_CLIMATE_CONTROL_NORM#1 (>L:WT_CJ4_CLIMATE_CONTROL)
PASSENGER_CLIMATE_CONTROL_OFF#0 (>L:WT_CJ4_CLIMATE_CONTROL)
//Asobo/CJ4 AAU1/Anti-Ice
CJ4_DEICE_PITOT_L_TOGGLE#1 (A:PITOT HEAT SWITCH:1, Bool) ! s0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1) 
CJ4_DEICE_PITOT_R_TOGGLE#2 (A:PITOT HEAT SWITCH:2, Bool) ! s0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_2)
CJ4_DEICE_WING_ENG_L_TOGGLE#(L:DEICE_Airframe_1) ! s0 (>L:DEICE_Airframe_1) (L:DEICE_Airframe_1) ! (L:DEICE_Airframe_2) ! and (A:STRUCTURAL DEICE SWITCH, Bool) == if{ (>K:TOGGLE_STRUCTURAL_DEICE) } l0 (A:ENG ANTI ICE:1, Bool) != if{ (>K:ANTI_ICE_TOGGLE_ENG1) }
CJ4_DEICE_WING_ENG_R_TOGGLE#(L:DEICE_Airframe_2) ! (>L:DEICE_Airframe_2) (L:DEICE_Airframe_1) ! (L:DEICE_Airframe_2) ! and (A:STRUCTURAL DEICE SWITCH, Bool) == if{ (>K:TOGGLE_STRUCTURAL_DEICE) } (L:DEICE_Airframe_2) (A:ENG ANTI ICE:2, Bool) != if{ (>K:ANTI_ICE_TOGGLE_ENG2) }
//Asobo/CJ4 AAU1/Autopilot
CJ4_AUTOPILOT_ALT_SYNC#(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH)
CJ4_AUTOPILOT_ALT_TOGGLE#(>K:AP_ALT_HOLD)
CJ4_AUTOPILOT_APPR_TOGGLE#(>K:AP_APR_HOLD)
CJ4_AUTOPILOT_BC_TOGGLE#(>K:AP_BC_HOLD)
CJ4_AUTOPILOT_CRS_1_DEC#(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 1 - dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 1 - dnor (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_1_DEC_FAST#(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 10 - dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 10 - dnor (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_1_INC#(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 1 + dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 1 + dnor (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_1_INC_FAST#(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 10 + dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 10 + dnor (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_1_SYNC#(A:AUTOPILOT NAV SELECTED, Number) 1 == sp0 (A:NAV RADIAL:1, degrees) (A:NAV RADIAL:2, degrees) l0 ? 180 + dnor sp1 (A:NAV OBS:1, degrees) (A:NAV OBS:2, degrees) l0 ? sp2 (A:NAV HAS NAV:1, Bool) (A:NAV HAS NAV:2, Bool) l0 ? sp3 l1 l2 l3 ? sp0 (A:AUTOPILOT NAV SELECTED, Number) 1 == if{ l0 (>K:VOR1_SET) } els{ l0 (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_2_DEC#(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 1 - dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 1 - dnor (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_2_DEC_FAST#(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 10 - dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 10 - dnor (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_2_INC#(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 1 + dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 1 + dnor (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_2_INC_FAST#(A:AUTOPILOT NAV SELECTED, Number) 1 == if{ (A:NAV OBS:1, degree) 10 + dnor (>K:VOR1_SET) } els{ (A:NAV OBS:2, degree) 10 + dnor (>K:VOR2_SET) }
CJ4_AUTOPILOT_CRS_2_SYNC#(A:AUTOPILOT NAV SELECTED, Number) 1 == sp0 (A:NAV RADIAL:1, degrees) (A:NAV RADIAL:2, degrees) l0 ? 180 + dnor sp1 (A:NAV OBS:1, degrees) (A:NAV OBS:2, degrees) l0 ? sp2 (A:NAV HAS NAV:1, Bool) (A:NAV HAS NAV:2, Bool) l0 ? sp3 l1 l2 l3 ? sp0 (A:AUTOPILOT NAV SELECTED, Number) 1 == if{ l0 (>K:VOR1_SET) } els{ l0 (>K:VOR2_SET) }
CJ4_AUTOPILOT_DISC_PRESSED#(A:AUTOPILOT DISENGAGED, Bool) if{ 0 (>K:AUTOPILOT_DISENGAGE_SET) } els{ 1 (>K:AUTOPILOT_DISENGAGE_SET) }
CJ4_AUTOPILOT_FD1_TOGGLE#1 (>K:TOGGLE_FLIGHT_DIRECTOR)
CJ4_AUTOPILOT_FD2_TOGGLE#2 (>K:TOGGLE_FLIGHT_DIRECTOR)
CJ4_AUTOPILOT_FLC_TOGGLE#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)
CJ4_AUTOPILOT_HALF_BANK_TOGGLE#(A:AUTOPILOT MAX BANK ID, number) 1 == if{ 0 (>K:AP_MAX_BANK_SET) } els{ 1 (>K:AP_MAX_BANK_SET) }
CJ4_AUTOPILOT_HDG_SYNC#1 (A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
CJ4_AUTOPILOT_HDG_TOGGLE#(>K:AP_PANEL_HEADING_HOLD)
CJ4_AUTOPILOT_MASTER_TOGGLE#(>K:AP_MASTER)
CJ4_AUTOPILOT_NAV_TOGGLE#(>K:AP_NAV1_HOLD)
CJ4_AUTOPILOT_SPEED_DEC#(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } 
CJ4_AUTOPILOT_SPEED_INC#(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) } 
CJ4_AUTOPILOT_SPEED_MODE_TOGGLE#(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE)
CJ4_AUTOPILOT_VNAV_TOGGLE#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
CJ4_AUTOPILOT_VS_DEC#(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_DEC) } els{ (>K:AP_PITCH_REF_INC_DN) }
CJ4_AUTOPILOT_VS_INC#(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_INC) } els{ (>K:AP_PITCH_REF_INC_UP) }
CJ4_AUTOPILOT_VS_TOGGLE#(>K:AP_PANEL_VS_HOLD)
CJ4_AUTOPILOT_XFR_PRESSED#(L:XMLVAR_PushXFR) ! (>L:XMLVAR_PushXFR)
CJ4_AUTOPILOT_YD_TOGGLE#(>K:YAW_DAMPER_TOGGLE)
//Asobo/CJ4 AAU1/Avionics
CJ4_FMC_1_0_PUSH#(>H:CJ4_FMC_1_BTN_0)
CJ4_FMC_1_1_PUSH#(>H:CJ4_FMC_1_BTN_1)
CJ4_FMC_1_2_PUSH#(>H:CJ4_FMC_1_BTN_2)
CJ4_FMC_1_3_PUSH#(>H:CJ4_FMC_1_BTN_3)
CJ4_FMC_1_4_PUSH#(>H:CJ4_FMC_1_BTN_4)
CJ4_FMC_1_5_PUSH#(>H:CJ4_FMC_1_BTN_5)
CJ4_FMC_1_6_PUSH#(>H:CJ4_FMC_1_BTN_6)
CJ4_FMC_1_7_PUSH#(>H:CJ4_FMC_1_BTN_7)
CJ4_FMC_1_8_PUSH#(>H:CJ4_FMC_1_BTN_8)
CJ4_FMC_1_9_PUSH#(>H:CJ4_FMC_1_BTN_9)
CJ4_FMC_1_A_PUSH#(>H:CJ4_FMC_1_BTN_A)
CJ4_FMC_1_B_PUSH#(>H:CJ4_FMC_1_BTN_B)
CJ4_FMC_1_CLR_LONG#(>H:CJ4_FMC_1_BTN_CLR_Long)
CJ4_FMC_1_CLR_SHORT#(>H:CJ4_FMC_1_BTN_CLR)
CJ4_FMC_1_C_PUSH#(>H:CJ4_FMC_1_BTN_C)
CJ4_FMC_1_DEPARR_PUSH#(>H:CJ4_FMC_1_BTN_DEPARR)
CJ4_FMC_1_DIR_PUSH#(>H:CJ4_FMC_1_BTN_DIR)
CJ4_FMC_1_DIV_PUSH#(>H:CJ4_FMC_1_BTN_DIV)
CJ4_FMC_1_DOT_PUSH#(>H:CJ4_FMC_1_BTN_DOT)
CJ4_FMC_1_DSPL_MENU_PUSH#(>H:CJ4_FMC_1_BTN_DSPL_MENU)
CJ4_FMC_1_D_PUSH#(>H:CJ4_FMC_1_BTN_D)
CJ4_FMC_1_EXEC_PUSH#(>H:CJ4_FMC_1_BTN_EXEC)
CJ4_FMC_1_E_PUSH#(>H:CJ4_FMC_1_BTN_E)
CJ4_FMC_1_FPLN_PUSH#(>H:CJ4_FMC_1_BTN_FPLN)
CJ4_FMC_1_F_PUSH#(>H:CJ4_FMC_1_BTN_F)
CJ4_FMC_1_G_PUSH#(>H:CJ4_FMC_1_BTN_G)
CJ4_FMC_1_H_PUSH#(>H:CJ4_FMC_1_BTN_H)
CJ4_FMC_1_IDX_PUSH#(>H:CJ4_FMC_1_BTN_IDX)
CJ4_FMC_1_I_PUSH#(>H:CJ4_FMC_1_BTN_I)
CJ4_FMC_1_J_PUSH#(>H:CJ4_FMC_1_BTN_J)
CJ4_FMC_1_K_PUSH#(>H:CJ4_FMC_1_BTN_K)
CJ4_FMC_1_L1_PUSH#(>H:CJ4_FMC_1_BTN_L1)
CJ4_FMC_1_L2_PUSH#(>H:CJ4_FMC_1_BTN_L2)
CJ4_FMC_1_L3_PUSH#(>H:CJ4_FMC_1_BTN_L3)
CJ4_FMC_1_L4_PUSH#(>H:CJ4_FMC_1_BTN_L4)
CJ4_FMC_1_L5_PUSH#(>H:CJ4_FMC_1_BTN_L5)
CJ4_FMC_1_L6_PUSH#(>H:CJ4_FMC_1_BTN_L6)
CJ4_FMC_1_LEGS_PUSH#(>H:CJ4_FMC_1_BTN_LEGS)
CJ4_FMC_1_L_PUSH#(>H:CJ4_FMC_1_BTN_L)
CJ4_FMC_1_MFD_ADV_PUSH#(>H:CJ4_FMC_1_BTN_MFD_ADV)
CJ4_FMC_1_MFD_DATA_PUSH#(>H:CJ4_FMC_1_BTN_MFD_DATA)
CJ4_FMC_1_MSG_PUSH#(>H:CJ4_FMC_1_BTN_MSG)
CJ4_FMC_1_M_PUSH#(>H:CJ4_FMC_1_BTN_M)
CJ4_FMC_1_NEXTPAGE_PUSH#(>H:CJ4_FMC_1_BTN_NEXTPAGE)
CJ4_FMC_1_N_PUSH#(>H:CJ4_FMC_1_BTN_N)
CJ4_FMC_1_O_PUSH#(>H:CJ4_FMC_1_BTN_O)
CJ4_FMC_1_PERF_PUSH#(>H:CJ4_FMC_1_BTN_PERF)
CJ4_FMC_1_PLUSMINUS_PUSH#(>H:CJ4_FMC_1_BTN_PLUSMINUS)
CJ4_FMC_1_PREVPAGE_PUSH#(>H:CJ4_FMC_1_BTN_PREVPAGE)
CJ4_FMC_1_P_PUSH#(>H:CJ4_FMC_1_BTN_P)
CJ4_FMC_1_Q_PUSH#(>H:CJ4_FMC_1_BTN_Q)
CJ4_FMC_1_R1_PUSH#(>H:CJ4_FMC_1_BTN_R1)
CJ4_FMC_1_R2_PUSH#(>H:CJ4_FMC_1_BTN_R2)
CJ4_FMC_1_R3_PUSH#(>H:CJ4_FMC_1_BTN_R3)
CJ4_FMC_1_R4_PUSH#(>H:CJ4_FMC_1_BTN_R4)
CJ4_FMC_1_R5_PUSH#(>H:CJ4_FMC_1_BTN_R5)
CJ4_FMC_1_R6_PUSH#(>H:CJ4_FMC_1_BTN_R6)
CJ4_FMC_1_R_PUSH#(>H:CJ4_FMC_1_BTN_R)
CJ4_FMC_1_SP_PUSH#(>H:CJ4_FMC_1_BTN_SP)
CJ4_FMC_1_S_PUSH#(>H:CJ4_FMC_1_BTN_S)
CJ4_FMC_1_TUN_PUSH#(>H:CJ4_FMC_1_BTN_TUN)
CJ4_FMC_1_T_PUSH#(>H:CJ4_FMC_1_BTN_T)
CJ4_FMC_1_U_PUSH#(>H:CJ4_FMC_1_BTN_U)
CJ4_FMC_1_V_PUSH#(>H:CJ4_FMC_1_BTN_V)
CJ4_FMC_1_W_PUSH#(>H:CJ4_FMC_1_BTN_W)
CJ4_FMC_1_X_PUSH#(>H:CJ4_FMC_1_BTN_X)
CJ4_FMC_1_Y_PUSH#(>H:CJ4_FMC_1_BTN_Y)
CJ4_FMC_1_Z_PUSH#(>H:CJ4_FMC_1_BTN_Z)
CJ4_FMC_2_0_PUSH#(>H:CJ4_FMC_2_BTN_0)
CJ4_FMC_2_1_PUSH#(>H:CJ4_FMC_2_BTN_1)
CJ4_FMC_2_2_PUSH#(>H:CJ4_FMC_2_BTN_2)
CJ4_FMC_2_3_PUSH#(>H:CJ4_FMC_2_BTN_3)
CJ4_FMC_2_4_PUSH#(>H:CJ4_FMC_2_BTN_4)
CJ4_FMC_2_5_PUSH#(>H:CJ4_FMC_2_BTN_5)
CJ4_FMC_2_6_PUSH#(>H:CJ4_FMC_2_BTN_6)
CJ4_FMC_2_7_PUSH#(>H:CJ4_FMC_2_BTN_7)
CJ4_FMC_2_8_PUSH#(>H:CJ4_FMC_2_BTN_8)
CJ4_FMC_2_9_PUSH#(>H:CJ4_FMC_2_BTN_9)
CJ4_FMC_2_A_PUSH#(>H:CJ4_FMC_2_BTN_A)
CJ4_FMC_2_BRT_PUSH#(>H:CJ4_FMC_2_BTN_BRT)
CJ4_FMC_2_B_PUSH#(>H:CJ4_FMC_2_BTN_B)
CJ4_FMC_2_CLR_LONG#(>H:CJ4_FMC_2_BTN_CLR_Long)
CJ4_FMC_2_CLR_SHORT#(>H:CJ4_FMC_2_BTN_CLR)
CJ4_FMC_2_C_PUSH#(>H:CJ4_FMC_2_BTN_C)
CJ4_FMC_2_DEPARR_PUSH#(>H:CJ4_FMC_2_BTN_DEPARR)
CJ4_FMC_2_DIM_PUSH#(>H:CJ4_FMC_2_BTN_DIM)
CJ4_FMC_2_DIR_PUSH#(>H:CJ4_FMC_2_BTN_DIR)
CJ4_FMC_2_DIV_PUSH#(>H:CJ4_FMC_2_BTN_DIV)
CJ4_FMC_2_DOT_PUSH#(>H:CJ4_FMC_2_BTN_DOT)
CJ4_FMC_2_DSPL_MENU_PUSH#(>H:CJ4_FMC_2_BTN_DSPL_MENU)
CJ4_FMC_2_D_PUSH#(>H:CJ4_FMC_2_BTN_D)
CJ4_FMC_2_EXEC_PUSH#(>H:CJ4_FMC_2_BTN_EXEC)
CJ4_FMC_2_E_PUSH#(>H:CJ4_FMC_2_BTN_E)
CJ4_FMC_2_FPLN_PUSH#(>H:CJ4_FMC_2_BTN_FPLN)
CJ4_FMC_2_F_PUSH#(>H:CJ4_FMC_2_BTN_F)
CJ4_FMC_2_G_PUSH#(>H:CJ4_FMC_2_BTN_G)
CJ4_FMC_2_H_PUSH#(>H:CJ4_FMC_2_BTN_H)
CJ4_FMC_2_IDX_PUSH#(>H:CJ4_FMC_2_BTN_IDX)
CJ4_FMC_2_I_PUSH#(>H:CJ4_FMC_2_BTN_I)
CJ4_FMC_2_J_PUSH#(>H:CJ4_FMC_2_BTN_J)
CJ4_FMC_2_K_PUSH#(>H:CJ4_FMC_2_BTN_K)
CJ4_FMC_2_L1_PUSH#(>H:CJ4_FMC_2_BTN_L1)
CJ4_FMC_2_L2_PUSH#(>H:CJ4_FMC_2_BTN_L2)
CJ4_FMC_2_L3_PUSH#(>H:CJ4_FMC_2_BTN_L3)
CJ4_FMC_2_L4_PUSH#(>H:CJ4_FMC_2_BTN_L4)
CJ4_FMC_2_L5_PUSH#(>H:CJ4_FMC_2_BTN_L5)
CJ4_FMC_2_L6_PUSH#(>H:CJ4_FMC_2_BTN_L6)
CJ4_FMC_2_LEGS_PUSH#(>H:CJ4_FMC_2_BTN_LEGS)
CJ4_FMC_2_L_PUSH#(>H:CJ4_FMC_2_BTN_L)
CJ4_FMC_2_MFD_ADV_PUSH#(>H:CJ4_FMC_2_BTN_MFD_ADV)
CJ4_FMC_2_MFD_DATA_PUSH#(>H:CJ4_FMC_2_BTN_MFD_DATA)
CJ4_FMC_2_MSG_PUSH#(>H:CJ4_FMC_2_BTN_MSG)
CJ4_FMC_2_M_PUSH#(>H:CJ4_FMC_2_BTN_M)
CJ4_FMC_2_NEXTPAGE_PUSH#(>H:CJ4_FMC_2_BTN_NEXTPAGE)
CJ4_FMC_2_N_PUSH#(>H:CJ4_FMC_2_BTN_N)
CJ4_FMC_2_O_PUSH#(>H:CJ4_FMC_2_BTN_O)
CJ4_FMC_2_PERF_PUSH#(>H:CJ4_FMC_2_BTN_PERF)
CJ4_FMC_2_PLUSMINUS_PUSH#(>H:CJ4_FMC_2_BTN_PLUSMINUS)
CJ4_FMC_2_PREVPAGE_PUSH#(>H:CJ4_FMC_2_BTN_PREVPAGE)
CJ4_FMC_2_P_PUSH#(>H:CJ4_FMC_2_BTN_P)
CJ4_FMC_2_Q_PUSH#(>H:CJ4_FMC_2_BTN_Q)
CJ4_FMC_2_R1_PUSH#(>H:CJ4_FMC_2_BTN_R1)
CJ4_FMC_2_R2_PUSH#(>H:CJ4_FMC_2_BTN_R2)
CJ4_FMC_2_R3_PUSH#(>H:CJ4_FMC_2_BTN_R3)
CJ4_FMC_2_R4_PUSH#(>H:CJ4_FMC_2_BTN_R4)
CJ4_FMC_2_R5_PUSH#(>H:CJ4_FMC_2_BTN_R5)
CJ4_FMC_2_R6_PUSH#(>H:CJ4_FMC_2_BTN_R6)
CJ4_FMC_2_R_PUSH#(>H:CJ4_FMC_2_BTN_R)
CJ4_FMC_2_SP_PUSH#(>H:CJ4_FMC_2_BTN_SP)
CJ4_FMC_2_S_PUSH#(>H:CJ4_FMC_2_BTN_S)
CJ4_FMC_2_TUN_PUSH#(>H:CJ4_FMC_2_BTN_TUN)
CJ4_FMC_2_T_PUSH#(>H:CJ4_FMC_2_BTN_T)
CJ4_FMC_2_U_PUSH#(>H:CJ4_FMC_2_BTN_U)
CJ4_FMC_2_V_PUSH#(>H:CJ4_FMC_2_BTN_V)
CJ4_FMC_2_W_PUSH#(>H:CJ4_FMC_2_BTN_W)
CJ4_FMC_2_X_PUSH#(>H:CJ4_FMC_2_BTN_X)
CJ4_FMC_2_Y_PUSH#(>H:CJ4_FMC_2_BTN_Y)
CJ4_FMC_2_Z_PUSH#(>H:CJ4_FMC_2_BTN_Z)
AS3000_PUSH_SELECT_1#(>H:Generic_Upr_1_DATA_PUSH) 
CJ4_AS3000_BARO_1_DEC#(L:XMLVAR_Baro1_ForcedToSTD, bool) if{ 1 (>H:AP_BARO_Down) } els{ 1 (>K:KOHLSMAN_DEC) (>H:AP_BARO_Down) }
CJ4_AS3000_BARO_1_INC#(L:XMLVAR_Baro1_ForcedToSTD, bool) if{ 1 (>H:AP_BARO_Up) } els{ 1 (>K:KOHLSMAN_INC) (>H:AP_BARO_Up) }
CJ4_AS3000_BARO_1_PUSH#(L:XMLVAR_Baro1_ForcedToSTD, bool) 0 == if{ 1 (>L:XMLVAR_Baro1_ForcedToSTD, bool) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure, number) 1 (>K:BAROMETRIC_STD_PRESSURE) } els{ 0 (>L:XMLVAR_Baro1_ForcedToSTD, bool) 1 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) 2 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) }
CJ4_AS3000_BARO_3_DEC#(L:XMLVAR_Baro2_ForcedToSTD, bool) ! if{ 2 (>K:KOHLSMAN_DEC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro2_SavedPressure) } els{ (L:XMLVAR_Baro2_SavedPressure, number) 5 - (>L:XMLVAR_Baro2_SavedPressure) } 
CJ4_AS3000_BARO_3_INC#(L:XMLVAR_Baro2_ForcedToSTD, bool) ! if{ 2 (>K:KOHLSMAN_INC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro2_SavedPressure) } els{ (L:XMLVAR_Baro2_SavedPressure, number) 5 + (>L:XMLVAR_Baro2_SavedPressure) } 
CJ4_AS3000_DATA_1_DEC#(>H:Generic_Upr_1_Data_DEC)
CJ4_AS3000_DATA_1_DEC_FAST#(>H:Generic_Upr_1_Data_DEC) (>H:Generic_Upr_1_Data_DEC)
CJ4_AS3000_DATA_1_INC#(>H:Generic_Upr_1_Data_INC)
CJ4_AS3000_DATA_1_INC_FAST#(>H:Generic_Upr_1_Data_INC) (>H:Generic_Upr_1_Data_INC)
CJ4_AS3000_DATA_1_PUSH#(>H:Generic_Upr_1_Data_PUSH)
CJ4_AS3000_DATA_2_DEC#(>H:Generic_Upr_2_Data_DEC)
CJ4_AS3000_DATA_2_DEC_FAST#(>H:Generic_Upr_2_Data_DEC) (>H:Generic_Upr_2_Data_DEC)
CJ4_AS3000_DATA_2_INC#(>H:Generic_Upr_2_Data_INC)
CJ4_AS3000_DATA_2_INC_FAST#(>H:Generic_Upr_2_Data_INC) (>H:Generic_Upr_2_Data_INC)
CJ4_AS3000_DATA_2_PUSH#(>H:Generic_Upr_2_Data_PUSH)
CJ4_AS3000_ESC_1_PUSH#(>H:Generic_Upr_1_Push_ESC)
CJ4_AS3000_ET_1_PUSH#(>H:Generic_Upr_1_Push_ET)
CJ4_AS3000_FRMT_1_PUSH#(>H:Generic_Upr_1_Push_FRMT)
CJ4_AS3000_MENU_ADV_1_DEC#(>H:Generic_Upr_1_MENU_ADV_DEC)
CJ4_AS3000_MENU_ADV_1_INC#(>H:Generic_Upr_1_MENU_ADV_INC)
CJ4_AS3000_MENU_ADV_2_DEC#(>H:Generic_Upr_2_MENU_ADV_DEC)
CJ4_AS3000_MENU_ADV_2_INC#(>H:Generic_Upr_2_MENU_ADV_INC)
CJ4_AS3000_NAV__1_PUSH#(>H:Generic_Upr_1_Push_NAV)
CJ4_AS3000_PFD_MENU_1_PUSH#(>H:Generic_Upr_1_Push_PFD_MENU)
CJ4_AS3000_PFD_MENU_1_PUSH#(>H:Generic_Upr_1_Push_PFD_MENU)
CJ4_AS3000_PFD_MENU_2_PUSH#(>H:Generic_Upr_2_Push_PFD_MENU)
CJ4_AS3000_RANGE_1_DEC#(>H:Generic_Upr_1_RANGE_DEC)
CJ4_AS3000_RANGE_1_INC#(>H:Generic_Upr_1_RANGE_INC)
CJ4_AS3000_REFS_MENU_1_PUSH#(>H:Generic_Upr_1_Push_REFS_MENU) 
CJ4_AS3000_REFS_MENU_2_PUSH#(>H:Generic_Upr_2_Push_REFS_MENU) 
CJ4_AS3000_TERR_WX_1_PUSH#(>H:Generic_Upr_1_Push_TERR_WX)
CJ4_AS3000_TFC_1_PUSH#(>H:Generic_Upr_1_Push_TFC)
CJ4_AS300_AUTO_TILT_1_PUSH#(>H:Generic_Upr_1_TILT_PUSH)
CJ4_FMC_1_CLR_OnPress#(E:SIMULATION TIME,second) (>L:FMC-1-3000-LONGPRESSDELAY) (>H:CJ4_FMC_1_BTN_CLR)  
CJ4_FMC_1_CLR_OnRelease#(E:SIMULATION TIME, second) (L:FMC-1-3000-LONGPRESSDELAY) - 0.5 > if{ (>H:CJ4_FMC_1_BTN_CLR_Long) } 
CJ4_FMC_2_CLR_OnPress#(E:SIMULATION TIME,second) (>L:FMC-2-3000-LONGPRESSDELAY) (>H:CJ4_FMC_2_BTN_CLR) 
CJ4_FMC_2_CLR_OnRelease#(E:SIMULATION TIME, second) (L:FMC-2-3000-LONGPRESSDELAY) - 0.5 > if{ (>H:CJ4_FMC_2_BTN_CLR_Long) }
CJ4_MFD_DATA_1_DEC#(>H:Generic_Lwr_1_DATA_DEC)
CJ4_MFD_DATA_1_HOLD#(>H:Generic_Lwr_1_DATA_PUSH_LONG)
CJ4_MFD_DATA_1_INC#(>H:Generic_Lwr_1_DATA_INC)
CJ4_MFD_DATA_1_PUSH#(>H:Generic_Lwr_1_DATA_PUSH)
CJ4_MFD_DATA_2_HOLD#(>H:Generic_Lwr_2_DATA_PUSH_LONG)
CJ4_MFD_DATA_2_PUSH#(>H:Generic_Lwr_2_DATA_PUSH)
CJ4_MFD_ENG_1_PUSH#(>H:Generic_Lwr_1_Push_ENG)
CJ4_MFD_ENG_2_PUSH#(>H:Generic_Lwr_2_Push_ENG)
CJ4_MFD_ESC_1_PUSH#(>H:Generic_Lwr_1_Push_ESC)
CJ4_MFD_ESC_2_PUSH#(>H:Generic_Lwr_2_Push_ESC)
CJ4_MFD_LWR_MENU_1_PUSH#(>H:Generic_Lwr_1_Push_LWR_MENU)
CJ4_MFD_LWR_MENU_2_PUSH#(>H:Generic_Lwr_2_Push_LWR_MENU)
CJ4_MFD_MEM_1_1_HOLD#(>H:Generic_Lwr_1_Hold_MEM1)
CJ4_MFD_MEM_1_1_PUSH#(>H:Generic_Lwr_1_Push_MEM1)
CJ4_MFD_MEM_1_2_HOLD#(>H:Generic_Lwr_2_Hold_MEM1)
CJ4_MFD_MEM_1_2_PUSH#(>H:Generic_Lwr_2_Push_MEM1)
CJ4_MFD_MEM_2_1_HOLD#(>H:Generic_Lwr_1_Hold_MEM2)
CJ4_MFD_MEM_2_1_PUSH#(>H:Generic_Lwr_1_Push_MEM2)
CJ4_MFD_MEM_2_2_HOLD#(>H:Generic_Lwr_2_Hold_MEM2)
CJ4_MFD_MEM_2_2_PUSH#(>H:Generic_Lwr_2_Push_MEM2)
CJ4_MFD_MEM_3_1_HOLD#(>H:Generic_Lwr_1_Hold_MEM3)
CJ4_MFD_MEM_3_1_PUSH#(>H:Generic_Lwr_1_Push_MEM3)
CJ4_MFD_MEM_3_2_HOLD#(>H:Generic_Lwr_2_Hold_MEM3)
CJ4_MFD_MEM_3_2_PUSH#(>H:Generic_Lwr_2_Push_MEM3)
CJ4_MFD_MENU_ADV_1_DEC#(>H:Generic_Lwr_1_MENU_ADV_DEC)
CJ4_MFD_MENU_ADV_1_INC#(>H:Generic_Lwr_1_MENU_ADV_INC)
CJ4_MFD_SYS_1_PUSH#(>H:Generic_Lwr_1_Push_SYS)
CJ4_MFD_SYS_2_PUSH#(>H:Generic_Lwr_2_Push_SYS)
CJ4_MFD_TERR_WX_1_PUSH#(>H:Generic_Lwr_1_Push_TERR_WX)
CJ4_MFD_TERR_WX_2_PUSH#(>H:Generic_Lwr_2_Push_TERR_WX)
CJ4_MFD_TFC_1_PUSH#(>H:Generic_Lwr_1_Push_TFC)
CJ4_MFD_TFC_2_PUSH#(>H:Generic_Lwr_2_Push_TFC)
CJ4_MFD_UPR_MENU_1_PUSH#(>H:Generic_Lwr_1_Push_UPR_MENU)
CJ4_MFD_UPR_MENU_2_PUSH#(>H:Generic_Lwr_2_Push_UPR_MENU)
//Asobo/CJ4 AAU1/Electrical
CJ4_ELEC_STBY_FLT_DISPLAY_ON#1 (A:CIRCUIT SWITCH ON:49, Bool) != if{ 49 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
CJ4_ELECTRICAL_ALTERNATOR_1_OFF#(A:GENERAL ENG MASTER ALTERNATOR:1, bool) if{ (>K:TOGGLE_ALTERNATOR1) }
CJ4_ELECTRICAL_ALTERNATOR_1_ON#(A:GENERAL ENG MASTER ALTERNATOR:1, bool) ! if{ (>K:TOGGLE_ALTERNATOR1) }
CJ4_ELECTRICAL_ALTERNATOR_2_OFF#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) }
CJ4_ELECTRICAL_ALTERNATOR_2_ON#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) }
CJ4_ELECTRICAL_AVIONICS_BUS_1_DISPATCH#1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) ! if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 1 (>L:XMLVAR_AVIONICS_IsComposite)
CJ4_ELECTRICAL_AVIONICS_BUS_1_OFF#1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 0 (>L:XMLVAR_AVIONICS_IsComposite)
CJ4_ELECTRICAL_AVIONICS_BUS_1_ON#1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) ! if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) ! if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) ! if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 0 (>L:XMLVAR_AVIONICS_IsComposite)
CJ4_ELECTRICAL_BATTERY_1_EMER#(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 1 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) 1 == == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (L:XMLVAR_Essential_Bus_ON) if{ 1 (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
CJ4_ELECTRICAL_BATTERY_1_OFF#(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 0 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) 1 == == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (L:XMLVAR_Essential_Bus_ON) if{ 1 (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
CJ4_ELECTRICAL_BATTERY_1_ON#(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 0 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) 1 == == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (L:XMLVAR_Essential_Bus_ON) if{ 1 (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
CJ4_ELECTRICAL_EMERG_LIGHTS_ARMED#1 (>L:CJ4_EMER_LIGHT_ARMED)
CJ4_ELECTRICAL_EMERG_LIGHTS_OFF#0 (>L:CJ4_EMER_LIGHT_ARMED)
//Asobo/CJ4 AAU1/Lights
CJ4_LANDING_LIGHTS_OFF#0 s0 (>L:LIGHTING_LANDING_1) 1 l0 (>K:2:LANDING_LIGHTS_SET) 
CJ4_LANDING_LIGHTS_ON#1 s0 (>L:LIGHTING_LANDING_1) 1 l0 (>K:2:LANDING_LIGHTS_SET) (L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ 1 (>L:XMLVAR_Exclusive_Light_Last_Changed) }
CJ4_LANDING_LIGHTS_TOGGLE#(L:LIGHTING_LANDING_1) ! s0 (>L:LIGHTING_LANDING_1) 1 l0 (>K:2:LANDING_LIGHTS_SET) (L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ 1 (>L:XMLVAR_Exclusive_Light_Last_Changed) }
CJ4_Light_Cabin_1_Dec#(L:LIGHTING_CABIN_1) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_1) l0 5 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) l0 0 > != if{ 1 l0 (>K:2:CABIN_LIGHTS_SET) }
CJ4_Light_Cabin_1_Inc#(L:LIGHTING_CABIN_1) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_1) l0 5 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) l0 0 > != if{ 1 l0 (>K:2:CABIN_LIGHTS_SET) }
CJ4_Light_Cabin_2_Dec#(L:LIGHTING_CABIN_2) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_2) l0 6 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:2, Bool) l0 0 > != if{ 2 l0 (>K:2:CABIN_LIGHTS_SET) }
CJ4_Light_Cabin_2_Inc#(L:LIGHTING_CABIN_2) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_2) l0 6 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:2, Bool) l0 0 > != if{ 2 l0 (>K:2:CABIN_LIGHTS_SET) }
CJ4_Light_Cabin_3_Dec#(L:LIGHTING_CABIN_3) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_3) l0 4 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:3, Bool) l0 0 > != if{ 3 l0 (>K:2:CABIN_LIGHTS_SET) }
CJ4_Light_Cabin_3_Inc#(L:LIGHTING_CABIN_3) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_3) l0 4 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:3, Bool) l0 0 > != if{ 3 l0 (>K:2:CABIN_LIGHTS_SET) }
CJ4_PULSE_LIGHTS_OFF#0 s0 (>L:LIGHTING_RECOGNITION_1) 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) 
CJ4_PULSE_LIGHTS_ON#1 s0 (>L:LIGHTING_RECOGNITION_1) 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) (L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ 3 (>L:XMLVAR_Exclusive_Light_Last_Changed) }
CJ4_TAXI_LIGHTS_OFF#0 s0 (>L:LIGHTING_TAXI_1) 1 l0 (>K:2:TAXI_LIGHTS_SET) 
CJ4_TAXI_LIGHTS_ON#1 s0 (>L:LIGHTING_TAXI_1) 1 l0 (>K:2:TAXI_LIGHTS_SET) (L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ 2 (>L:XMLVAR_Exclusive_Light_Last_Changed) }
CJ4_TAXI_LIGHTS_TOGGLE#(L:LIGHTING_TAXI_1) ! s0 (>L:LIGHTING_TAXI_1) 1 l0 (>K:2:TAXI_LIGHTS_SET) (L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ 2 (>L:XMLVAR_Exclusive_Light_Last_Changed) }
CJ4_LIGHTS_PULSE_ON_TOGGLE#(L:LIGHTING_RECOGNITION_1) ! s0 (>L:LIGHTING_RECOGNITION_1) 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) (L:XMLVAR_Exclusive_Light_Last_Changed) 0 == if{ 3 (>L:XMLVAR_Exclusive_Light_Last_Changed) }
CJ4_LIGHT_PANEL_DEC#(L:LIGHTING_PANEL_1) 5 - 0 5 max max 100 min sp0 (L:LIGHTING_PANEL_1) 5 - 100 > if{ 1 0 (>K:2:PANEL_LIGHTS_SET) } els{ (A:LIGHT PANEL:1, Bool) ! if{ 1 1 (>K:2:PANEL_LIGHTS_SET) } els{ l0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) } }
CJ4_LIGHT_PANEL_INC#(L:LIGHTING_PANEL_1) 5 + 0 5 max max 100 min sp0 (L:LIGHTING_PANEL_1) 5 + 100 > if{ 1 0 (>K:2:PANEL_LIGHTS_SET) } els{ (A:LIGHT PANEL:1, Bool) ! if{ 1 1 (>K:2:PANEL_LIGHTS_SET) } els{ l0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) } }
CJ4_SAFETY_LIGHT_TOGGLE#(>K:CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE)
CJ4_SEATBELT_LIGHT_TOGGLE#(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)
//Asobo/CJ4 AAU1/Safety
CJ4_LIGHTS_PASS_BELT_TOGGLE#(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)
CJ4_LIGHTS_PASS_SAFETY_TOGGLE#(>K:CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE)
CJ4_MASTER_CAUTION_1_PUSH#(>K:MASTER_CAUTION_ACKNOWLEDGE)
CJ4_MASTER_WARNING_1_PUSH#(>K:MASTER_WARNING_ACKNOWLEDGE)
//Asobo/CJ4 AAU1/Unsorted
Display_Pilot_and_Co-Pilot_Yoke#(L:XMLVAR_YokeHidden1, number) 1 == if{ 0 (>L:XMLVAR_YokeHidden1, number) 0 (>L:XMLVAR_YokeHidden2, number) }
Hide_Pilot_and_Co-Pilot_Yokes#(L:XMLVAR_YokeHidden1, number) 0 == if{ 1 (>L:XMLVAR_YokeHidden1, number) 1 (>L:XMLVAR_YokeHidden2, number) }
//Asobo/CT-415 Canadair/Miscellaneous
Waterdrop_CT_415#(>IE:INSTRUMENT_HANDLING_Yoke_Switch_WATERDROP_L)
//Asobo/Cabri G2/Electrical
Alternator__OFF#0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 0 (>K:2:ALTERNATOR_SET) } 
Alternator_ON#1 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 1 (>K:2:ALTERNATOR_SET) } 
Battery_OFF#(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
Battery_ON#(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
//Asobo/Cabri G2/Engines
Landing_Lights_ON#(>K:LANDING_LIGHTS_ON)
Magneto_OFF#0 (>K:MAGNETO1_SET)
Magneto_ON#3 (>K:MAGNETO1_SET)
Nav_Lights_OFF#0 (>K:NAV_LIGHTS_SET)
Nav_Lights_ON#1 (>K:NAV_LIGHTS_SET)
Plasma_OFF#0 (>K:PLASMA_SET)
Plasma_ON#1 (>K:PLASMA_SET)
Rotor_Cluch_Switch_OFF#(>K:ROTOR_CLUTCH_SWITCH_TOGGLE)
Rotor_Cluch_Switch_ON#(>K:ROTOR_CLUTCH_SWITCH_TOGGLE)
//Asobo/Cabri G2/Fuel
Fuel_Pump_OFF#0 (>K:ELECT_FUEL_PUMP1_SET) 0 (>L:XMLVAR_FUEL_Pump1_High_ON)
Fuel_Pump_ON#1 (>K:ELECT_FUEL_PUMP1_SET) 0 (>L:XMLVAR_FUEL_Pump1_High_ON)
//Asobo/Cabri G2/Lights
Strobes_OFF#(>K:STROBES_OFF)
Strobes_ON#(>K:STROBES_ON)
//Asobo/Cessna 152/Navigation
C152_ADF_Mode_Selector_ADF#2 (>L:XMLVAR_ADF_Mode)
C152_ADF_Mode_Selector_BFO#0 (>L:XMLVAR_ADF_Mode)
C152_ADF_Mode_Selector_REC#1 (>L:XMLVAR_ADF_Mode)
C152_ADF_Mode_Selector_TEST#3 (>L:XMLVAR_ADF_Mode)
C152_DME_SOUND_TOGGLE#(>K:RADIO_DME1_IDENT_TOGGLE)
//Asobo/Cessna 172 Classic/Avionics
C172sp_Airspeed_True_Calibrator_Knob_Dec#(A:AIRSPEED TRUE CALIBRATE, degrees) -- 0 max (>A:AIRSPEED TRUE CALIBRATE, degrees)
C172sp_Airspeed_True_Calibrator_Knob_Inc#(A:AIRSPEED TRUE CALIBRATE, degrees) ++ 30 min (>A:AIRSPEED TRUE CALIBRATE, degrees)
//Asobo/Cessna 172 Classic/Electrical
C172sp_Avionics_Bus_1_Switch_Off#0 (A:CIRCUIT SWITCH ON:39, Bool) != if{ 39 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:39, Bool) 1 (A:1:BUS CONNECTION ON:4, Bool) != if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
C172sp_Avionics_Bus_1_Switch_On#1 (A:CIRCUIT SWITCH ON:39, Bool) != if{ 39 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:39, Bool) 1 (A:1:BUS CONNECTION ON:4, Bool) != if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
C172sp_Avionics_Bus_2_Switch_Off#0 (A:CIRCUIT SWITCH ON:40, Bool) != if{ 40 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:40, Bool) 2 (A:1:BUS CONNECTION ON:5, Bool) != if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
C172sp_Avionics_Bus_2_Switch_On#1 (A:CIRCUIT SWITCH ON:40, Bool) != if{ 40 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:40, Bool) 2 (A:1:BUS CONNECTION ON:5, Bool) != if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
//Asobo/Cessna 172/Anti-Ice
C_172_Pitot_Heat_Toggle_#1 (L:DEICE_Pitot_1) ! (>K:2:PITOT_HEAT_SET)
C_172_PITOT_HEAT_OFF#(A:PITOT HEAT, Bool) 1 == if{ (>K:PITOT_HEAT_TOGGLE) }
C_172_PITOT_HEAT_ON#(A:PITOT HEAT, Bool) 0 == if{ (>K:PITOT_HEAT_TOGGLE) }
//Asobo/Cessna 172/Autopilot
C_172_AP#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) if{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } (A:AUTOPILOT MASTER, bool) ! if{ (H:Generic_Autopilot_Manual_Off) } }
C_172_AP_ALT#(>K:AP_ALT_HOLD)
C_172_AP_APR#(A:AUTOPILOT APPROACH HOLD,Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)
C_172_AP_FLC#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)
C_172_AP_NAV#(>K:AP_NAV1_HOLD)
C_172_AP_NOSE_DN#(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_VS_VAR_DEC) (>H:AP_UP) } (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (>K:AP_SPD_VAR_DEC) } (A:AUTOPILOT PITCH HOLD, Bool) if{ (>K:AP_PITCH_REF_INC_DN) }
C_172_AP_NOSE_UP#(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_VS_VAR_INC) (>H:AP_DN) } (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (>K:AP_SPD_VAR_INC) } (A:AUTOPILOT PITCH HOLD, Bool) if{ (>K:AP_PITCH_REF_INC_UP) }
C_172_AP_VS#(>K:AP_PANEL_VS_HOLD)
C_172_FD#(A:AUTOPILOT MASTER, bool) ! if{ 0 (>K:TOGGLE_FLIGHT_DIRECTOR) }
C_172_AP_ALT_DEC#(>K:AP_ALT_VAR_DEC)
C_172_AP_ALT_INC#(>K:AP_ALT_VAR_INC)
C_172_AP_HDG#(>K:AP_PANEL_HEADING_HOLD)
C_172_AP_HDG_DEC#(>K:HEADING_BUG_DEC)
C_172_AP_HDG_INC#(>K:HEADING_BUG_INC)
//Asobo/Cessna 172/Avionics
C_172_XPNDR_VFR#1200 (>L:my xpndr code, number) (L:my xpndr code, bco16) (>K:XPNDR_SET)
C_172_AVIONICS_BUS_1_OFF#0 (>K:AVIONICS_MASTER_1_SET)
C_172_AVIONICS_BUS_1_ON#1 (>K:AVIONICS_MASTER_1_SET)
C_172_AVIONICS_BUS_2_OFF#0 (>K:AVIONICS_MASTER_2_SET)
C_172_AVIONICS_BUS_2_ON#1 (>K:AVIONICS_MASTER_2_SET)
//Asobo/Cessna 172/Electrical
C172_ALTERNATOR_OFF#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }
C172_ALTERNATOR_ON#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }
C172_BATTERY_OFF#(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
C172_BATTERY_ON#(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
C_172_STBYBATTERY_OFF#(L:XMLVAR_BatterySTBY_SwitchState) 0 == if{ 2 (>K:TOGGLE_MASTER_BATTERY) }
C_172_STBYBATTERY_ON#(L:XMLVAR_BatterySTBY_SwitchState) 1 == if{ 2 (>K:TOGGLE_MASTER_BATTERY) }
C_172_STBYBATTERY_TEST_OFF#0 (>L:XMLVAR_STBYBattery_IsHeld)
C_172_STBYBATTERY_TEST_ON#1 (>L:XMLVAR_STBYBattery_Test) 1 (>L:XMLVAR_STBYBattery_IsHeld)
//Asobo/Cessna 172/Engine
C172_Magneto_Switch_Both#3 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
C172_Magneto_Switch_Left#2 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
C172_Magneto_Switch_Off#0 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
C172_Magneto_Switch_Right#1 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
C172_Magneto_Switch_Start#3 (>K:MAGNETO1_SET) (A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) }
//Asobo/Cessna 172/Environment
TOGGLE_ALTERNATE_AIR#(>K:TOGGLE_ALTERNATE_STATIC)
//Asobo/Cessna 172/Fuel
C_172_BOTH_FUEL_TANKS#1 (>K:FUEL_SELECTOR_SET)
C_172_FUEL_PUMP_OFF#0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET)
C_172_FUEL_PUMP_ON#1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET)
C_172_FUEL_SHUTOFF_VALVE_CLOSE#(A:GENERAL ENG FUEL VALVE:1, Bool) 1 == if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
C_172_FUEL_SHUTOFF_VALVE_OPEN#(A:GENERAL ENG FUEL VALVE:1, Bool) 0 == if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
C_172_LEFT_FUEL_TANK#2 (>K:FUEL_SELECTOR_SET)
C_172_RIGHT_FUEL_TANK#3 (>K:FUEL_SELECTOR_SET)
C_172_FUEL_SELECTOR_BOTH_TANKS#1 (>B:FUEL_SELECTOR_1_SET)
C_172_FUEL_SELECTOR_LEFT_TANK#0 (>B:FUEL_SELECTOR_1_SET)
C_172_FUEL_SELECTOR_RIGHT_TANK#2 (>B:FUEL_SELECTOR_1_SET)
//Asobo/Cessna 172/Lights
C_172_AVIONICS_LIGHT_DEC#(L:LIGHTING_POTENTIOMETER_4) 5 - 0 max d (>L:LIGHTING_POTENTIOMETER_4) 4 (>K:2:LIGHT_POTENTIOMETER_SET) 
C_172_AVIONICS_LIGHT_INC#(L:LIGHTING_POTENTIOMETER_4) 5 + 100 min d (>L:LIGHTING_POTENTIOMETER_4) 4 (>K:2:LIGHT_POTENTIOMETER_SET) 
C_172_COPILOT_CABIN_LIGHT_DEC#(A:LIGHT CABIN POWER SETTING:2, Percent) 10 - 0 max 2 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET) (A:LIGHT CABIN:2, Bool) (A:LIGHT CABIN POWER SETTING:2, Percent) 0 == and if{ 2 0 (>K:2:CABIN_LIGHTS_SET) }
C_172_COPILOT_CABIN_LIGHT_INC#(A:LIGHT CABIN:2, Bool) ! if{ 2 1 (>K:2:CABIN_LIGHTS_SET) } (A:LIGHT CABIN POWER SETTING:2, Percent) 10 + 100 min 2 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET)
C_172_LIGHTS_LANDING_OFF#1 0 (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_1)
C_172_LIGHTS_LANDING_ON#1 1 (>K:2:LANDING_LIGHTS_SET) 1 (>L:LIGHTING_LANDING_1)
C_172_PANEL_LIGHT_DEC#(L:LIGHTING_POTENTIOMETER_3, percent) 5 - 0 max d (>L:LIGHTING_POTENTIOMETER_3) 3 (>K:2:LIGHT_POTENTIOMETER_SET)
C_172_PANEL_LIGHT_INC#(L:LIGHTING_POTENTIOMETER_3, percent) 5 + 100 min d (>L:LIGHTING_POTENTIOMETER_3) 3 (>K:2:LIGHT_POTENTIOMETER_SET)
C_172_PEDESTRAL_LIGHT_DEC#(L:LIGHTING_PEDESTRAL_1) 5 - 0 max d (>L:LIGHTING_PEDESTRAL_1) 1 (>K:2:PEDESTRAL_LIGHTS_POWER_SETTING_SET)
C_172_PEDESTRAL_LIGHT_INC#(L:LIGHTING_PEDESTRAL_1) 5 + 100 min d (>L:LIGHTING_PEDESTRAL_1) 1 (>K:2:PEDESTRAL_LIGHTS_POWER_SETTING_SET)
C_172_PILOT_CABIN_LIGHT_DEC#(A:LIGHT CABIN POWER SETTING:1, Percent) 10 - 0 max 1 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET) (A:LIGHT CABIN:1, Bool) (A:LIGHT CABIN POWER SETTING:1, Percent) 0 == and if{ 1 0 (>K:2:CABIN_LIGHTS_SET) }
C_172_PILOT_CABIN_LIGHT_INC#(A:LIGHT CABIN:1, Bool) ! if{ 1 1 (>K:2:CABIN_LIGHTS_SET) } (A:LIGHT CABIN POWER SETTING:1, Percent) 10 + 100 min 1 (>K:2:CABIN_LIGHTS_POWER_SETTING_SET)
C_172_STBY_INSTRUMENTS_LIGHT_DEC#(A:LIGHT PANEL POWER SETTING:1, Percent) 10 - 0 max 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET) (A:LIGHT PANEL:1, Bool) (A:LIGHT PANEL POWER SETTING:1, Percent) 0 == and if{ 1 0 (>K:2:PANEL_LIGHTS_SET) }
C_172_STBY_INSTRUMENTS_LIGHT_INC#(A:LIGHT PANEL:1, Bool) ! if{ 1 1 (>K:2:PANEL_LIGHTS_SET) } (A:LIGHT PANEL POWER SETTING:1, Percent) 10 + 100 min 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET)
//Asobo/Cessna 172/Safety
C172_SAFETY_Light_Test_On#(>K:ANNUNCIATOR_SWITCH_ON) 0 (>L:XMLVAR_WarningsAttenuated)
C172_SAFETY_Lights_Test_Off#(>K:ANNUNCIATOR_SWITCH_OFF) 0 (>L:XMLVAR_WarningsAttenuated)
//Asobo/Cirrus SF50 Vision Jet  (MSFS2024)/Autopilot
Cirrus_SF50_Vision_Jet__MSFS2024_-_Toggle_VNV_Button_in_Autopilot_On_and_OFF#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
//Asobo/Cirrus SF50 Vision Jet (MSFS2024)/Autopilot
Toggle_Autopilot_VNV_Mode_on_and_off#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
//Asobo/DA40NG/Electrical
Electric_Master_Switch_Off#1 (>K:MASTER_BATTERY_OFF) 1 (>K:ALTERNATOR_OFF) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
Electric_Master_Switch_On#1 (>K:MASTER_BATTERY_ON) 1 (>K:ALTERNATOR_ON) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) }
Electric_Master_Switch_Start#1 (>K:MASTER_BATTERY_ON) 1 (>K:ALTERNATOR_ON) 1 (>K:SET_STARTER1_HELD)
Electrical_Avionics_Master_Off#0 s0 (A:CIRCUIT SWITCH ON:22, Bool) != if{ 22 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:22, Bool) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) != if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } s0 (A:CIRCUIT SWITCH ON:23, Bool) != if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:23, Bool) 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:5, Bool) != if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
Electrical_Avionics_Master_On#1 s0 (A:CIRCUIT SWITCH ON:22, Bool) != if{ 22 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:22, Bool) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) != if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } s0 (A:CIRCUIT SWITCH ON:23, Bool) != if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:23, Bool) 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:5, Bool) != if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
Electrical_Essential_Bus_Off#0 s0 l0 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } l0 if{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } l0 (>L:ELECTRICAL_EssentialBus_2) 
Electrical_Essential_Bus_On#1 s0 l0 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } l0 if{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } l0 (>L:ELECTRICAL_EssentialBus_2)
//Asobo/DA40NG/Engines
Engine_Master_Switch_Off#0 s0 (A:RECIP ENG ENGINE MASTER SWITCH:1, Bool) != if{ (>K:ENGINE_MASTER_1_TOGGLE) }
Engine_Master_Switch_On#1 s0 (A:RECIP ENG ENGINE MASTER SWITCH:1, Bool) != if{ (>K:ENGINE_MASTER_1_TOGGLE) }
//Asobo/DA62/Anti-Ice
DA62_DE-ICE_High#0 (>L:DA62_ANTI-ICE_SWITCH, Number)
DA62_DE-ICE_Normal#1 (>L:DA62_ANTI-ICE_SWITCH, Number)
DA62_DE-ICE_OFF#2 (>L:DA62_ANTI-ICE_SWITCH, Number)
//Asobo/DA62/Engine and FADEC System
DA62_LH_ECU_A#0 (>L:DA62_ECU_L)
DA62_LH_ECU_AUTO#1 (>L:DA62_ECU_L)
DA62_LH_ECU_B#2 (>L:DA62_ECU_L)
DA62_LH_ECU_TEST_OFF#0 (>L:FADEC_ECUTEST_BUTTON_L_IsDown)
DA62_LH_ECU_TEST_ON#1 (>L:FADEC_ECUTEST_BUTTON_L_IsDown)
DA62_RH_ECU_A#0 (>L:DA62_ECU_R)
DA62_RH_ECU_AUTO#1 (>L:DA62_ECU_R)
DA62_RH_ECU_B#2 (>L:DA62_ECU_R)
DA62_RH_ECU_TEST_OFF#0 (>L:FADEC_ECUTEST_BUTTON_R_IsDown)
DA62_RH_ECU_TEST_ON#1 (>L:FADEC_ECUTEST_BUTTON_R_IsDown)
//Asobo/DA62/Engine
DA62_ENGINE_START_LEFT_PRESS#1 (>K:SET_STARTER1_HELD) 1 (>L:ELECTRICAL_Starter_1)
DA62_ENGINE_START_LEFT_RELEASE#0 (>K:SET_STARTER1_HELD) 0 (>K:STARTER1_SET) 0 (>L:ELECTRICAL_Starter_1) 
DA62_ENGINE_START_RIGHT_PRESS#1 (>K:SET_STARTER2_HELD) 1 (>L:ELECTRICAL_Starter_2)
DA62_ENGINE_START_RIGHT_RELEASE#0 (>K:SET_STARTER2_HELD) 0 (>K:STARTER2_SET) 0 (>L:ELECTRICAL_Starter_2) 
DA62_LEFT_ENGINE_MASTER_TOGGLE#(>K:ENGINE_MASTER_1_TOGGLE) 
DA62_RIGHT_ENGINE_MASTER_TOGGLE#(>K:ENGINE_MASTER_2_TOGGLE) 
//Asobo/DA62/Fuel
DA62_LH_AUX_FUEL_PUMP_TOGGLE#1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE)
DA62_LH_Fuel_Control_Crossfeed#(A:FUEL TANK SELECTOR:1, enum) 20 != if{ (>K:FUEL_SELECTOR_RIGHT_MAIN) }
DA62_LH_Fuel_Control_Off#(A:FUEL TANK SELECTOR:1, enum) 0 != if{ (>K:FUEL_SELECTOR_OFF) }
DA62_LH_Fuel_Control_On#(A:FUEL TANK SELECTOR:1, enum) 19 != if{ (>K:FUEL_SELECTOR_LEFT_MAIN) }
DA62_RH_AUX_FUEL_PUMP_TOGGLE#2 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE)
DA62_RH_Fuel_Control_Crossfeed#(A:FUEL TANK SELECTOR:2, enum) 19 != if{ (>K:FUEL_SELECTOR_2_LEFT_MAIN) }
DA62_RH_Fuel_Control_Off#(A:FUEL TANK SELECTOR:2, enum) 0 != if{ (>K:FUEL_SELECTOR_2_OFF) }
DA62_RH_Fuel_Control_On#(A:FUEL TANK SELECTOR:2, enum) 20 != if{ (>K:FUEL_SELECTOR_2_RIGHT_MAIN) }
LH_Main_Elec_Fuel_Pump_ON#1 (>K:ELECT_FUEL_PUMP1_SET)
//Asobo/DG1001E Neo/Gear
Landing_gear_Down#1 (>K:GEAR_SET) 1 (>L:LANDING_GEAR_Gear)
Landing_gear_Up#0 (>K:GEAR_SET) 0 (>L:LANDING_GEAR_Gear)
//Asobo/Generic/Radio
AS530_ComVolKnob_Left#(>K:COM1_VOLUME_DEC)
AS530_ComVolKnob_Right#(>K:COM1_VOLUME_INC)
AS530_ComVolume_Squelch#(>K:RADIO_COMMNAV1_TEST_TOGGLE)
AS530_PushID#(>K:RADIO_VOR1_IDENT_TOGGLE)
COM2_VOLUME_DEC#(>K:COM2_VOLUME_DEC)
COM2_VOLUME_INC#(>K:COM2_VOLUME_INC)
NAV1_VOLUME_DEC#(>K:NAV1_VOLUME_DEC)
NAV1_VOLUME_INC#(>K:NAV1_VOLUME_INC)
NAV2_VOLUME_DEC#(>K:NAV2_VOLUME_DEC)
NAV2_VOLUME_INC#(>K:NAV2_VOLUME_INC)
//Asobo/HotAirBalloon (msfs2024)/Engines
Burner_1_main_blast__set_closed#1 (>B:ENGINE_BURNER_1_MAIN_BLAST_1_SETCLOSE)
Burner_1_main_blast__set_open#1 (>B:ENGINE_BURNER_1_MAIN_BLAST_1_SETOPEN)
Burner_1_main_blast__toggle#1 (>B:ENGINE_BURNER_1_MAIN_BLAST_1_TOGGLE)
Burner_1_whisper__set_closed#1 (>B:ENGINE_BURNER_1_WHISPER_1_SETCLOSE)
Burner_1_whisper__set_open#1 (>B:ENGINE_BURNER_1_WHISPER_1_SETOPEN)
Burner_1_whisper__toggle#1 (>B:ENGINE_BURNER_1_WHISPER_1_TOGGLE)
Burner_2_main_blast__set_closed#1 (>B:ENGINE_BURNER_2_MAIN_BLAST_2_SETCLOSE)
Burner_2_main_blast__set_open#1 (>B:ENGINE_BURNER_2_MAIN_BLAST_2_SETOPEN)
Burner_2_main_blast__toggle#1 (>B:ENGINE_BURNER_2_MAIN_BLAST_2_TOGGLE)
//Asobo/King Air 350i/Autopilot
KA_Autopilot_ALT_Button_Press#(>K:AP_ALT_HOLD)
KA_Autopilot_ALT_Knob_Dec#(>K:AP_ALT_VAR_DEC) (>H:AP_KNOB_Down)
KA_Autopilot_ALT_Knob_Inc#(>K:AP_ALT_VAR_INC) (>H:AP_KNOB_Up)
KA_Autopilot_ALT_Knob_Press#(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB)
KA_Autopilot_AP_Button_Press#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) if{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } (L:XMLVAR_APTrim) 0 == if{ (A:AUTOPILOT YAW DAMPER, Bool) ! (A:AUTOPILOT MASTER, bool) and if{ (K:YAW_DAMPER_TOGGLE) } } (A:AUTOPILOT MASTER, Bool) ! if{ (H:Generic_Autopilot_Manual_Off) } }
KA_Autopilot_APPR_Button_Press#(A:AUTOPILOT APPROACH HOLD,Bool) (A:AUTOPILOT GLIDESLOPE HOLD,Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)
KA_Autopilot_CRS1_Knob_Dec#(A:NAV OBS:1, degree) 1 - dnor (>K:VOR1_SET)
KA_Autopilot_CRS1_Knob_Inc#(A:NAV OBS:1, degree) 1 + dnor (>K:VOR1_SET)
KA_Autopilot_CRS1_Knob_Press#(A:HEADING INDICATOR,degrees) (>K:VOR1_SET)
KA_Autopilot_CRS2_Knob_Dec#(A:NAV OBS:2, degree) 1 - dnor (>K:VOR2_SET)
KA_Autopilot_CRS2_Knob_Inc#(A:NAV OBS:2, degree) 1 + dnor (>K:VOR2_SET)
KA_Autopilot_CRS2_Knob_Press#(A:HEADING INDICATOR, degrees) (>K:VOR2_SET)
KA_Autopilot_Capt_FD_Button_Press_#(A:AUTOPILOT MASTER, bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }
KA_Autopilot_FD_FO_Button_Press#2 (>K:TOGGLE_FLIGHT_DIRECTOR) }
KA_Autopilot_FLC_Button_Press#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)
KA_Autopilot_HDG_Button_Press#(>K:AP_PANEL_HEADING_HOLD)
KA_Autopilot_HDG_Knob_Dec#(>K:HEADING_BUG_DEC)
KA_Autopilot_HDG_Knob_Inc#(>K:HEADING_BUG_INC)
KA_Autopilot_HDG_Knob_Press#(A:HEADING INDICATOR,degrees) (>K:HEADING_BUG_SET)
KA_Autopilot_NAV_Button_Press#(>K:AP_NAV1_HOLD)
KA_Autopilot_Speed_Knob_Dec#(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, Knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) }
KA_Autopilot_Speed_Knob_Inc#(A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, Knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) }
KA_Autopilot_Speed_Knob_Press#(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE)
KA_Autopilot_VNAV_Button_Press#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
KA_Autopilot_VS_Button_Press#(>K:AP_PANEL_VS_HOLD)
KA_Autopilot_VS_Knob_Dec#(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_INC) } els{ (>K:AP_PITCH_REF_INC_UP) }
KA_Autopilot_VS_Knob_Inc#(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_DEC) } els{ (>K:AP_PITCH_REF_INC_DN) }
KA_Autopilot_YD_Button_Press#(>K:YAW_DAMPER_TOGGLE)
KA_Autopilot_YD_AP_Disc_Down#(A:AUTOPILOT DISENGAGED, Bool) ! if{ 1 (>K:AUTOPILOT_DISENGAGE_SET) (A:AUTOPILOT YAW DAMPER, Bool) if{ (>K:YAW_DAMPER_TOGGLE) } }
KA_Autopilot_YD_AP_Disc_Up#(A:AUTOPILOT DISENGAGED, Bool) if{ 0 (>K:AUTOPILOT_DISENGAGE_SET) }
KA_ALT_FAST_DEC#1000 (>K:AP_ALT_VAR_DEC)
KA_ALT_FAST_INC#1000 (>K:AP_ALT_VAR_INC)
KA_BANK#(>K:AP_MAX_BANK_INC)
KA_HDG_FAST_DEC#(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 - (>K:1:HEADING_BUG_SET)
KA_HDG_FAST_INC#(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 + (>K:1:HEADING_BUG_SET)
//Asobo/King Air 350i/Electrical
KA_Elec_Avionics_Master_Power_Switch_Off#0 s0 (A:CIRCUIT SWITCH ON:26, Bool) != if{ 26 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:26, Bool) 4 (A:1:BUS CONNECTION ON:1, Bool) != if{ 1 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
KA_Elec_Avionics_Master_Power_Switch_On#1 s0 (A:CIRCUIT SWITCH ON:26, Bool) != if{ 26 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:26, Bool) 4 (A:1:BUS CONNECTION ON:1, Bool) != if{ 1 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
KA_Elec_External_Power__Switch_Off#0 1 (>K:2:SET_EXTERNAL_POWER)
KA_Elec_External_Power__Switch_On#1 1 (>K:2:SET_EXTERNAL_POWER)
KA_Elec_L_Gen_Switch_Off#0 s0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 l0 (>K:2:ALTERNATOR_SET) }
KA_Elec_L_Gen_Switch_On#1 s0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 l0 (>K:2:ALTERNATOR_SET) }
KA_Elec_Master_Battery_Switch_Off#0 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 
KA_Elec_Master_Battery_Switch_On#1 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 
KA_Elec_R_Gen_Switch_Off#0 s0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ 2 l0 (>K:2:ALTERNATOR_SET) }
KA_Elec_R_Gen_Switch_On#1 s0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ 2 l0 (>K:2:ALTERNATOR_SET) }
//Asobo/King Air 350i/Engines
KA_Eng1_Starter_Toggle#(A:GENERAL ENG STARTER ACTIVE:1, Bool) ! if{ 1 (>K:TURBINE_IGNITION_SWITCH_SET1) 1 (>K:SET_STARTER1_HELD) } els{ 0 (>K:SET_STARTER1_HELD) 0 (>K:TURBINE_IGNITION_SWITCH_SET1) }
KA_Eng2_Starter_Toggle#(A:GENERAL ENG STARTER ACTIVE:2, Bool) 0 == if{ 1 (>K:TURBINE_IGNITION_SWITCH_SET2) 1 (>K:SET_STARTER2_HELD) } els{ 0 (>K:SET_STARTER2_HELD) 0 (>K:TURBINE_IGNITION_SWITCH_SET2) }
//Asobo/King Air 350i/Fuel
KA_Fuel_Left_Condition_Lever_Cut_Off#0 (>L:Condition_Lever_CutOff_1) 0 (>K:SET_FUEL_VALVE_ENG1) 0 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)
KA_Fuel_Left_Condition_Lever_High_Idle#2 (>L:Condition_Lever_CutOff_1) 1 (>K:SET_FUEL_VALVE_ENG1) 2 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)
KA_Fuel_Left_Condition_Lever_Low_Idle#1 (>L:Condition_Lever_CutOff_1) 1 (>K:SET_FUEL_VALVE_ENG1) 1 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)
KA_Fuel_Right_Condition_Lever_Cut_Off#0 (>L:Condition_Lever_CutOff_2) 0 (>K:SET_FUEL_VALVE_ENG2) 0 (>A:TURB ENG CONDITION LEVER POSITION:2,enum)
KA_Fuel_Right_Condition_Lever_High_Idle#2 (>L:Condition_Lever_CutOff_2) 1 (>K:SET_FUEL_VALVE_ENG2) 2 (>A:TURB ENG CONDITION LEVER POSITION:2,enum)
KA_Fuel_Right_Condition_Lever_Low_Idle#1 (>L:Condition_Lever_CutOff_2) 1 (>K:SET_FUEL_VALVE_ENG2) 1 (>A:TURB ENG CONDITION LEVER POSITION:2,enum)
//Asobo/King Air 350i/Gear
KA_Landing_Gear_Down#1 s0 (>K:GEAR_SET) l0 (>L:LANDING_GEAR_Gear)
KA_Landing_Gear_Up#0 s0 (>K:GEAR_SET) l0 (>L:LANDING_GEAR_Gear)
//Asobo/King Air 350i/Lights
KA_Beacon_Lights_Off#0 s0 1 l0 (>K:2:BEACON_LIGHTS_SET) l0 (>L:LIGHTING_BEACON_1)
KA_Beacon_Lights_On#1 s0 1 l0 (>K:2:BEACON_LIGHTS_SET) l0 (>L:LIGHTING_BEACON_1)
KA_LEFT_LANDING_LIGHT_OFF#0 s0 1 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_1)
KA_LEFT_LANDING_LIGHT_ON#1 s0 1 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_1)
KA_RECOGNITION_LIGHTS_OFF#0 s0 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) l0 (>L:LIGHTING_RECOGNITION_1)
KA_RECOGNITION_LIGHTS_ON#1 s0 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) l0 (>L:LIGHTING_RECOGNITION_1)
KA_RIGHT_LANDING_LIGHT_OFF#0 s0 2 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_2)
KA_RIGHT_LANDING_LIGHT_ON#1 s0 2 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_2)
KA_Strobe_Lights_Off#0 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)
KA_Strobe_Lights_On#1 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)
KA_Tail_Flood_Lights_Off#0 s0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1)
KA_Tail_Flood_Lights_On#1 s0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1)
KA_Tail_Flood_Lights_On#1 s0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1)
KA_Taxi_Lights_Off#0 s0 1 l0 (>K:2:TAXI_LIGHTS_SET) l0 (>L:LIGHTING_TAXI_1)
KA_Taxi_Lights_On# 1 s0 1 l0 (>K:2:TAXI_LIGHTS_SET) l0 (>L:LIGHTING_TAXI_1)
//Asobo/Longitude/Anti-Ice
Left_Engine_De-Ice_Toggle#(>K:ANTI_ICE_TOGGLE_ENG1)
Pitot_Heat_Toggle#(>K:2:PITOT_HEAT_Toggle)
Right_Engine_De-Ice#(>K:ANTI_ICE_TOGGLE_ENG2)
Toggles_Stabilizer_Anti-Ice#(L:WT_LNG_STAB_AI) 1 == if{ 0 } els{ 1 } (>L:WT_LNG_STAB_AI)
Wing_De_Ice#(>K:TOGGLE_STRUCTURAL_DEICE) 
//Asobo/Longitude/Autopilot
LONGITUDE_AUTOPILOT_ALT_FINE_PUSH#100 1000 (L:XMLVAR_Autopilot_Altitude_Increment) 100 != ? (>L:XMLVAR_Autopilot_Altitude_Increment)
Longitude_AP_ALT_Button_Press#(>K:AP_ALT_HOLD) 
Longitude_AP_ALT_Knob_Dec#0 (L:XMLVAR_Autopilot_Altitude_Increment) (>K:2:AP_ALT_VAR_DEC)
Longitude_AP_ALT_Knob_Inc#0 (L:XMLVAR_Autopilot_Altitude_Increment) (>K:2:AP_ALT_VAR_INC) 
Longitude_AP_APPR_Button_Press#(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD) 
Longitude_AP_APPR_Toggle#(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)
Longitude_AP_BANK_Button_Press#(A:AUTOPILOT MAX BANK ID, number) 1 == if{ 0 } els{ 1 } (>K:AP_MAX_BANK_SET)
Longitude_AP_Baro_1_Force_Std_Toggle#(L:XMLVAR_Baro1_ForcedToSTD) 0 == if{ (A:KOHLSMAN SETTING HG,mbar) 16 * (>L:XMLVAR_Baro1_SavedPressure) 1 (>L:XMLVAR_Baro1_ForcedToSTD) } els{ (L:XMLVAR_Baro1_SavedPressure) 0.0625* (>K:1:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro1_ForcedToSTD) }
Longitude_AP_Baro_1_Knob_Dec# 3 (>K:KOHLSMAN_DEC) (>H:AP_BARO_Down) 
Longitude_AP_Baro_1_Knob_Inc#3 (>K:KOHLSMAN_INC) (>H:AP_BARO_Up)
Longitude_AP_Baro_1_Sync_Push#3 (>K:BAROMETRIC)
Longitude_AP_Button_Press#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } els{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } } 
Longitude_AP_Control_Panel_1_Baro_Knob_Dec#(>H:AS3000_PFD_1_BARO_DEC) 
Longitude_AP_Control_Panel_1_Baro_Knob_Inc#(>H:AS3000_PFD_1_BARO_INC)
Longitude_AP_FD_Left_Toggle#1 (>K:TOGGLE_FLIGHT_DIRECTOR)
Longitude_AP_FD_Right_Toggle#2 (>K:TOGGLE_FLIGHT_DIRECTOR)
Longitude_AP_FLC_Button_Press#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)
Longitude_AP_FLC_Toggle#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)
Longitude_AP_HDG_Button_Press#(>K:AP_PANEL_HEADING_HOLD)
Longitude_AP_HDG_Knob_Dec#1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 - dnor (>K:2:HEADING_BUG_SET)
Longitude_AP_HDG_Knob_Inc#1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 + dnor (>K:2:HEADING_BUG_SET)
Longitude_AP_HDG_Sync_Press#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
Longitude_AP_L_CRS_Knob_Dec# (>H:AS3000_PFD_1_CRS_DEC) 
Longitude_AP_L_CRS_Knob_Inc#(>H:AS3000_PFD_1_CRS_INC)
Longitude_AP_L_CRS_Knob_Push#(>H:AS3000_PFD_1_CRS_PUSH)
Longitude_AP_Left_FD_Button_Press# (A:AUTOPILOT MASTER, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }
Longitude_AP_NAV_Button_Press#(>K:AP_NAV1_HOLD)
Longitude_AP_R_CRS_Knob_Dec#(>H:AS3000_PFD_1_CRS_DEC)
Longitude_AP_R_CRS_Knob_Inc#(>H:AS3000_PFD_1_CRS_INC)
Longitude_AP_R_CRS_Knob_Push#(>H:AS3000_PFD_1_CRS_PUSH)
Longitude_AP_Right_FD_Button_Press# (A:AUTOPILOT MASTER, Bool) ! if{ 2 (>K:TOGGLE_FLIGHT_DIRECTOR) }
Longitude_AP_SPD_IAS_Mach_Toggle#(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE) (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) (>L:XMLVAR_AirSpeedIsInMach)
Longitude_AP_SPD_Knob_Dec#(L:XMLVAR_SpeedIsManuallySet) if{ (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } 
Longitude_AP_SPD_Knob_Inc#(L:XMLVAR_SpeedIsManuallySet) if{ (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) } 
Longitude_AP_SPD_Mode_FMS#0 (>L:XMLVAR_SpeedIsManuallySet)
Longitude_AP_SPD_Mode_MAN#1 (>L:XMLVAR_SpeedIsManuallySet)
Longitude_AP_VNAV_Button_Press#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
Longitude_AP_VS_Button_Press#(>K:AP_PANEL_VS_HOLD)
Longitude_AP_VS_Toggle#(>K:AP_PANEL_VS_HOLD)
Longitude_AP_VS_Wheel_Down#1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 - (>K:2:AP_VS_VAR_SET_ENGLISH) 
Longitude_AP_VS_Wheel_Up#1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH) 
Toggle_HDG_SYNC_Mode#(>H:Garmin_AP_HDG_Sync)
//Asobo/Longitude/Avionics
AS3000_TSC_Vertical_3_Joystick_Range_Pan_X_Left#(>H:AS3000_TSC_Vertical_3_Joystick_Left)
AS3000_TSC_Vertical_3_Joystick_Range_Pan_X_Right#(>H:AS3000_TSC_Vertical_3_Joystick_Right)
AS3000_TSC_Vertical_3_Joystick_Range_Pan_Y_Down#(>H:AS3000_TSC_Vertical_3_Joystick_Down)
AS3000_TSC_Vertical_3_Joystick_Range_Pan_Y_Up#(>H:AS3000_TSC_Vertical_3_Joystick_Up)
AS3000_TSC_Vertical_3_Joystick_Range_Zoom_Dec#(>H:AS3000_TSC_Vertical_3_Joystick_DEC)
AS3000_TSC_Vertical_3_Joystick_Range_Zoom_Inc#(>H:AS3000_TSC_Vertical_3_Joystick_INC)
AS3000_TSC_Vertical_3_Middle_Knob_Button#(>H:AS3000_TSC_Vertical_3_MiddleKnob_Push)
AS3000_TSC_Vertical_3_Middle_Knob_Dec#(>H:AS3000_TSC_Vertical_3_MiddleKnob_Dec)
AS3000_TSC_Vertical_3_Middle_Knob_Inc#(>H:AS3000_TSC_Vertical_3_MiddleKnob_Inc)
AS3000_TSC_Vertical_3_Right_Inner_Knob_Button_Press#(E:SIMULATION TIME, second) 2 + (>L:myTimer)
AS3000_TSC_Vertical_3_Right_Inner_Knob_Dec#(>H:AS3000_TSC_Vertical_3_RightKnob_Small_DEC)
AS3000_TSC_Vertical_3_Right_Inner_Knob_Inc#(>H:AS3000_TSC_Vertical_3_RightKnob_Small_INC)
AS3000_TSC_Vertical_3_Right_Outer_Knob_Dec#(>H:AS3000_TSC_Vertical_3_RightKnob_Large_DEC)
AS3000_TSC_Vertical_3_Right_Outer_Knob_Inc#(>H:AS3000_TSC_Vertical_3_RightKnob_Large_INC)
AS3000_TSC_Vertical_4_Joystick_Range_Pan_X_Left#(>H:AS3000_TSC_Vertical_4_Joystick_Left)
AS3000_TSC_Vertical_4_Joystick_Range_Pan_X_Right#(>H:AS3000_TSC_Vertical_4_Joystick_Right)
AS3000_TSC_Vertical_4_Joystick_Range_Pan_Y_Down#(>H:AS3000_TSC_Vertical_4_Joystick_Down)
AS3000_TSC_Vertical_4_Joystick_Range_Pan_Y_Up#(>H:AS3000_TSC_Vertical_4_Joystick_Up)
AS3000_TSC_Vertical_4_Joystick_Range_Zoom_Dec#(>H:AS3000_TSC_Vertical_4_Joystick_DEC)
AS3000_TSC_Vertical_4_Joystick_Range_Zoom_Inc#(>H:AS3000_TSC_Vertical_4_Joystick_INC)
AS3000_TSC_Vertical_4_Middle_Knob_Button#(>H:AS3000_TSC_Vertical_4_MiddleKnob_Push)
AS3000_TSC_Vertical_4_Middle_Knob_Dec#(>H:AS3000_TSC_Vertical_4_MiddleKnob_Dec)
AS3000_TSC_Vertical_4_Middle_Knob_Inc#(>H:AS3000_TSC_Vertical_4_MiddleKnob_Inc)
AS3000_TSC_Vertical_4_Right_Inner_Knob_Button_Press#(E:SIMULATION TIME, second) 2 + (>L:myTimer)
AS3000_TSC_Vertical_4_Right_Inner_Knob_Button_Release#(E:SIMULATION TIME, second) (L:myTimer) < if{ (>H:AS3000_TSC_Vertical_4_RightKnob_Push) } els{ (>H:AS3000_TSC_Vertical_4_RightKnob_Push_Long) } 
AS3000_TSC_Vertical_4_Right_Inner_Knob_Dec#(>H:AS3000_TSC_Vertical_4_RightKnob_Small_DEC)
AS3000_TSC_Vertical_4_Right_Inner_Knob_Inc#(>H:AS3000_TSC_Vertical_4_RightKnob_Small_INC)
AS3000_TSC_Vertical_4_Right_Outer_Knob_Dec#(>H:AS3000_TSC_Vertical_4_RightKnob_Large_DEC)
AS3000_TSC_Vertical_4_Right_Outer_Knob_Inc#(>H:AS3000_TSC_Vertical_4_RightKnob_Large_INC)
AS3000_TSC_Vertical_BottomKnob_Large_DEC#(>H:AS3000_TSC_Vertical_BottomKnob_Large_DEC)
AS3000_TSC_Vertical_BottomKnob_Large_INC#(>H:AS3000_TSC_Vertical_BottomKnob_Large_INC)
AS3000_TSC_Vertical_BottomKnob_Push#(>H:AS3000_TSC_Vertical_BottomKnob_Push)
AS3000_TSC_Vertical_BottomKnob_Push_Long#(>H:AS3000_TSC_Vertical_BottomKnob_Push_Long)
AS3000_TSC_Vertical_BottomKnob_Small_DEC#(>H:AS3000_TSC_Vertical_BottomKnob_Small_DEC)
AS3000_TSC_Vertical_BottomKnob_Small_INC#(>H:AS3000_TSC_Vertical_BottomKnob_Small_INC)
AS3000_TSC_Vertical_TopKnob_Large_DEC#(>H:AS3000_TSC_Vertical_TopKnob_Large_DEC)
AS3000_TSC_Vertical_TopKnob_Large_INC#(>H:AS3000_TSC_Vertical_TopKnob_Large_INC)
AS3000_TSC_Vertical_TopKnob_Small_DEC#(>H:AS3000_TSC_Vertical_TopKnob_Small_DEC)
AS3000_TSC_Vertical_TopKnob_Small_INC#(>H:AS3000_TSC_Vertical_TopKnob_Small_INC)
AP_NAV_SRC_TOGGLE#(L:WTGarmin_Nav_ActiveNavSource:1) ++ 3 % (>L:WTGarmin_Nav_ActiveNavSource:1, enum)
AS3000_TSC_Vertical_1_Joystick_Push#(>H:AS3000_TSC_Vertical_1_Joystick_Push)
AS3000_TSC_Vertical_1_Joystick_Range_Pan_X_Left# (>H:AS3000_TSC_Vertical_1_Joystick_Left)
AS3000_TSC_Vertical_1_Joystick_Range_Pan_X_Right# (>H:AS3000_TSC_Vertical_1_Joystick_Right)
AS3000_TSC_Vertical_1_Joystick_Range_Pan_Y_Down#(>H:AS3000_TSC_Vertical_1_Joystick_Down)
AS3000_TSC_Vertical_1_Joystick_Range_Pan_Y_Up#(>AS3000_TSC_Vertical_1_Joystick_Up)
AS3000_TSC_Vertical_1_Joystick_Range_Zoom_Dec# (>H:AS3000_TSC_Vertical_1_Joystick_DEC)
AS3000_TSC_Vertical_1_Joystick_Range_Zoom_Inc# (>H:AS3000_TSC_Vertical_1_Joystick_INC)
AS3000_TSC_Vertical_1_Middle_Knob_Button# (>H:AS3000_TSC_Vertical_1_MiddleKnob_Push)
AS3000_TSC_Vertical_1_Middle_Knob_Dec#(>H:AS3000_TSC_Vertical_1_MiddleKnob_Dec)
AS3000_TSC_Vertical_1_Middle_Knob_Inc#(>H:AS3000_TSC_Vertical_1_MiddleKnob_Inc)
AS3000_TSC_Vertical_1_Right_Inner_Knob_Button_Press#(E:SIMULATION TIME, second) 2 + (>L:myTimer)
AS3000_TSC_Vertical_1_Right_Inner_Knob_Button_Release#(E:SIMULATION TIME, second) (L:myTimer) < if{ (>H:AS3000_TSC_Vertical_1_RightKnob_Push) } els{ (>H:AS3000_TSC_Vertical_1_RightKnob_Push_Long) } 
AS3000_TSC_Vertical_1_Right_Inner_Knob_Dec#(>H:AS3000_TSC_Vertical_1_RightKnob_Small_DEC)
AS3000_TSC_Vertical_1_Right_Inner_Knob_Inc#(>H:AS3000_TSC_Vertical_1_RightKnob_Small_INC)
AS3000_TSC_Vertical_1_Right_Outer_Knob_Dec#(>H:AS3000_TSC_Vertical_1_RightKnob_Large_DEC)
AS3000_TSC_Vertical_1_Right_Outer_Knob_Inc#(>H:AS3000_TSC_Vertical_1_RightKnob_Large_INC)
AS3000_TSC_Vertical_2_Joystick_Push#(>H:AS3000_TSC_Vertical_2_Joystick_Push)
AS3000_TSC_Vertical_2_Joystick_Range_Pan_X_Left# (>H:AS3000_TSC_Vertical_2_Joystick_Left)
AS3000_TSC_Vertical_2_Joystick_Range_Pan_X_Right# (>H:AS3000_TSC_Vertical_2_Joystick_Right)
AS3000_TSC_Vertical_2_Joystick_Range_Pan_Y_Down#(>H:AS3000_TSC_Vertical_2_Joystick_Down)
AS3000_TSC_Vertical_2_Joystick_Range_Pan_Y_Up#(>H:AS3000_TSC_Vertical_2_Joystick_Up)
AS3000_TSC_Vertical_2_Joystick_Range_Zoom_Dec# (>H:AS3000_TSC_Vertical_2_Joystick_DEC)
AS3000_TSC_Vertical_2_Joystick_Range_Zoom_Inc# (>H:AS3000_TSC_Vertical_2_Joystick_INC)
AS3000_TSC_Vertical_2_Middle_Knob_Button# (>H:AS3000_TSC_Vertical_2_MiddleKnob_Push) 
AS3000_TSC_Vertical_2_Middle_Knob_Dec#(>H:AS3000_TSC_Vertical_2_MiddleKnob_Dec) 
AS3000_TSC_Vertical_2_Middle_Knob_Inc#(>H:AS3000_TSC_Vertical_2_MiddleKnob_Inc)
AS3000_TSC_Vertical_2_Right_Inner_Knob_Button_Press#(E:SIMULATION TIME, second) 2 + (>L:myTimer)
AS3000_TSC_Vertical_2_Right_Inner_Knob_Button_Release#(E:SIMULATION TIME, second) (L:myTimer) < if{ (>H:AS3000_TSC_Vertical_2_RightKnob_Push) } els{ (>H:AS3000_TSC_Vertical_2_RightKnob_Push_Long) } 
AS3000_TSC_Vertical_2_Right_Inner_Knob_Dec#(>H:AS3000_TSC_Vertical_2_RightKnob_Small_DEC)
AS3000_TSC_Vertical_2_Right_Inner_Knob_Inc#(>H:AS3000_TSC_Vertical_2_RightKnob_Small_INC)
AS3000_TSC_Vertical_2_Right_Outer_Knob_Dec#(>H:AS3000_TSC_Vertical_2_RightKnob_Large_DEC)
AS3000_TSC_Vertical_2_Right_Outer_Knob_Inc#(>H:AS3000_TSC_Vertical_2_RightKnob_Large_INC)
AS3000_TSC_Vertical_3_Joystick_Push#(>H:AS3000_TSC_Vertical_3_Joystick_Push)
AS3000_TSC_Vertical_3_Joystick_Range_Zoom_Dec# (>H:AS3000_TSC_Vertical_3_Joystick_DEC)
AS3000_TSC_Vertical_3_Middle_Knob_Button# (>H:AS3000_TSC_Vertical_3_MiddleKnob_Push)
AS3000_TSC_Vertical_3_Right_Inner_Knob_Button_Release#(E:SIMULATION TIME, second) (L:myTimer) < if{ (>H:AS3000_TSC_Vertical_3_RightKnob_Push) } els{ (>H:AS3000_TSC_Vertical_3_RightKnob_Push_Long) } 
AS3000_TSC_Vertical_4_Joystick_Push#(>H:AS3000_TSC_Vertical_4_Joystick_Push)
//Asobo/Longitude/Electrical
LONGITUDE_TOGGLE_MASTER_BATTERY_SWITCH_1#1 (>K:TOGGLE_MASTER_BATTERY)
LONGITUDE_TOGGLE_MASTER_BATTERY_SWITCH_2#2 (>K:TOGGLE_MASTER_BATTERY)
Longitude_Elec_L_ELEC_Button_Toggle#1 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Longitude_Elec_L_MAIN_Button_Toggle#1 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Longitude_Elec_R_ELEC_Button_Toggle#2 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 
Longitude_Elec_R_MAIN_Button_Toggle#2 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Longitude_Elec_Stby_Pwr_Off#(A:ELECTRICAL MASTER BATTERY:3, bool) if{ 3 (>K:TOGGLE_MASTER_BATTERY) 0 (>L:XMLVAR_STBYBattery_Test) 
Longitude_Elec_Stby_Pwr_On#(A:ELECTRICAL MASTER BATTERY:3, bool) ! if{ 3 (>K:TOGGLE_MASTER_BATTERY) } 0 (>L:XMLVAR_STBYBattery_Test) 
Longitude_Elec_Stby_Pwr_Test#(A:ELECTRICAL MASTER BATTERY:3, bool) if{ 3 (>K:TOGGLE_MASTER_BATTERY) } 1 (>L:XMLVAR_STBYBattery_Test) 
LONGITUDE_TOGGLE_ALTERNATOR_1_SWITCH_1#1 (>K:TOGGLE_ALTERNATOR1)
LONGITUDE_TOGGLE_ALTERNATOR_2_SWITCH_2#1 (>K:TOGGLE_ALTERNATOR2)
LONGITUDE_TOGGLE_EXTERNAL_POWER_SWITCH#1 (>K:TOGGLE_EXTERNAL_POWER)
//Asobo/Longitude/Engines
Longitude_Eng_L_Fadec_OFF# 0 (>L:WT_Longitude_Engine_Run:1) 0 (>K:MIXTURE1_SET)
Longitude_Eng_L_Fadec_ON# 1 (>L:WT_Longitude_Engine_Run:1) 16384 (>K:MIXTURE1_SET)
Longitude_Eng_L_Fuel_Run_Stop_Button_Press#(L:WT_Longitude_Engine_Run:1) if{ 0 (>L:WT_Longitude_Engine_Run:1) 0 (>K:MIXTURE1_SET) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:STARTER1_SET) } } els{ 1 (>L:WT_Longitude_Engine_Run:1) 16384 (>K:MIXTURE1_SET) }
Longitude_Eng_L_Starter_Button_Press# (>K:TOGGLE_STARTER1)
Longitude_Eng_R_Fadec_OFF# 0 (>L:WT_Longitude_Engine_Run:2) 0 (>K:MIXTURE2_SET)
Longitude_Eng_R_Fadec_ON# 1 (>L:WT_Longitude_Engine_Run:2) 16384 (>K:MIXTURE2_SET)
Longitude_Eng_R_Fuel_Run_Stop_Button_Press#(L:WT_Longitude_Engine_Run:2) if{ 0 (>L:WT_Longitude_Engine_Run:2) 0 (>K:MIXTURE2_SET) (A:GENERAL ENG STARTER:2, Bool) if{ 0 (>K:STARTER2_SET) } } els{ 1 (>L:WT_Longitude_Engine_Run:2) 16384 (>K:MIXTURE2_SET) }
Longitude_Eng_R_Starter_Button_Press# (>K:TOGGLE_STARTER2) 
//Asobo/Longitude/Fuel
Longitude_Fuel_Boost_Pump_L_Toggle#(L:WT_LNG_FUEL_PUMP_1_ON) ! (>L:WT_LNG_FUEL_PUMP_1_ON)
Longitude_Fuel_Boost_Pump_R_Toggle#(L:WT_LNG_FUEL_PUMP_2_ON) ! (>L:WT_LNG_FUEL_PUMP_2_ON)
Longitude_Fuel_Gravity_XFlow_Toggle#(A:SIM ON GROUND, bool) ! if{ (L:WT_LNG_GRAVITY_XFLOW_OPEN) ! (>L:WT_LNG_GRAVITY_XFLOW_OPEN) }
Longitude_Fuel_Transfer_Selector_L_Tank#-1 (>L:WT_LNG_FUEL_TRANSFER_DIRECTION)
Longitude_Fuel_Transfer_Selector_Off#0 (>L:WT_LNG_FUEL_TRANSFER_DIRECTION)
Longitude_Fuel_Transfer_Selector_R_Tank#1 (>L:WT_LNG_FUEL_TRANSFER_DIRECTION)
//Asobo/Longitude/Lights
LONGITUDE_ANTI_COLL_TOGGLE#(L:LIGHTING_STROBE_1) ! s0 (>L:LIGHTING_STROBE_1) 1 l0 (>K:2:STROBES_SET)
LONGITUDE_LANDING_LIGHTS_L_TOGGLE#(L:LIGHTING_LANDING_1) ! s0 (>L:LIGHTING_LANDING_1) 1 l0 (>K:2:LANDING_LIGHTS_SET)
LONGITUDE_LANDING_LIGHTS_R_TOGGLE#(L:LIGHTING_LANDING_2) ! s0 (>L:LIGHTING_LANDING_2) 2 l0 (>K:2:LANDING_LIGHTS_SET) 
LONGITUDE_PULSE_LIGHTS_TOGGLE#(L:LIGHTING_LANDING_3) ! s0 (>L:LIGHTING_LANDING_3) 3 l0 (>K:2:LANDING_LIGHTS_SET) 
LONGITUDE_RECOG_LIGHTS_TOGGLE#(>K:TOGGLE_RECOGNITION_LIGHTS) (A:LIGHT TAXI, Bool) if{ (>K:TOGGLE_TAXI_LIGHTS) } (A:LIGHT LANDING, Bool) if{ (>K:LANDING_LIGHTS_TOGGLE) }
LONGITUDE_TAIL_FLOOD_LIGHTS_TOGGLE#(L:LIGHTING_LOGO_1) ! s0 (>L:LIGHTING_LOGO_1) 1 l0 (>K:2:LOGO_LIGHTS_SET)
LONGITUDE_TAXI_LIGHTS_TOGGLE#(L:LIGHTING_TAXI_1) ! s0 (>L:LIGHTING_TAXI_1) 1 l0 (>K:2:TAXI_LIGHTS_SET) (A:GEAR CENTER POSITION, Percent) 95 > (A:GEAR HANDLE POSITION, Bool) 0 != and 100 * 6 (>K:2:LIGHT_POTENTIOMETER_SET) 
LONGITUDE_WING_INSP_LIGHTS_TOGGLE#(L:LIGHTING_WING_1) ! s0 (>L:LIGHTING_WING_1)  1 l0 (>K:2:WING_LIGHTS_SET)
Longitude_Lights_PAX_SAFTY_Toggle#(>K:CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE)
Longitude_Lights_SEAT_BELTS_Toggle#(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)
//Asobo/Longitude/Warning
LONGITUDE_MASTER_CAUTION_PRESS#(>K:MASTER_CAUTION_ACKNOWLEDGE)
LONGITUDE_MASTER_WARNING_L_PRESS#(>K:MASTER_WARNING_ACKNOWLEDGE)
//Asobo/SR22T/Avionics
AS1000_CONTROLPAD_1_Inc#(>H:AS1000_CONTROLPAD_1_Inc)
//Asobo/SR22T/Electrical
Magneto_Both#3 (>K:MAGNETO1_SET)
Magneto_Left#2 (>K:MAGNETO1_SET)
Magneto_Off#0 (>K:MAGNETO1_SET)
Magneto_Right#1 (>K:MAGNETO1_SET)
Magneto_Start#4 (>K:MAGNETO1_SET)
SR22T_TOGGLE_ALTERNATOR_1#1 (>K:TOGGLE_MASTER_ALTERNATOR)
SR22T_TOGGLE_ALTERNATOR_2#2 (>K:TOGGLE_MASTER_ALTERNATOR)
SR22T_TOGGLE_AVIONICS#(>K:TOGGLE_AVIONICS_MASTER)
SR22T_TOGGLE_BATTERY_1#1 (>K:TOGGLE_MASTER_BATTERY)
SR22T_TOGGLE_BATTERY_2#2 (>K:TOGGLE_MASTER_BATTERY)
//Asobo/SR22T/Fuel
Fuel_Pump_Boost#2 (>K:ELECT_FUEL_PUMP1_SET)
Fuel_Pump_Off#0 (>K:ELECT_FUEL_PUMP1_SET)
Fuel_Pump_Prime#1 (>K:ELECT_FUEL_PUMP1_SET)
//Asobo/SR22T/Lights
SR22T_AVIONICS_BRIGHTNESS_DEC#(L:LIGHTING_PANEL_1) 5 - 0 max d (>L:LIGHTING_PANEL_1) 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET)
SR22T_AVIONICS_BRIGHTNESS_INC#(L:LIGHTING_PANEL_1) 5 + 100 min d (>L:LIGHTING_PANEL_1) 1 (>K:2:PANEL_LIGHTS_POWER_SETTING_SET)
SR22T_GLARESHIELD_LIGHTS_DEC#(L:LIGHTING_GLARESHIELD_1) 5 - 0 max d (>L:LIGHTING_GLARESHIELD_1) 1 (>K:2:GLARESHIELD_LIGHTS_POWER_SETTING_SET)
SR22T_GLARESHIELD_LIGHTS_INC#(L:LIGHTING_GLARESHIELD_1) 5 + 100 min d (>L:LIGHTING_GLARESHIELD_1) 1 (>K:2:GLARESHIELD_LIGHTS_POWER_SETTING_SET) 
//Asobo/Savage Cub (2024)/Avionics
Avionics_Master_OFF#(>B:ELECTRICAL_AVIONICS_BUS_1_OFF)
Avionics_Master_ON#(>B:ELECTRICAL_AVIONICS_BUS_1_ON)
//Asobo/Savage Cub (2024)/Controls
Flaps_1#(>B:FLAPS_1)
Flaps_DECR#(>B:FLAPS_DECR)
Flaps_DOWN#(>B:FLAPS_2)
Flaps_INCR#(>B:FLAPS_INCR)
Flaps_UP#(>B:FLAPS_UP)
//Asobo/Savage Cub (2024)/Engine
Ignition_OFF#(>B:ELECTRICAL_MASTER_1_OFF)
Ignition_ON#(>B:ELECTRICAL_MASTER_1_ON)
Ignition_START#(>B:ELECTRICAL_MASTER_1_START)
Magneto_Left_OFF#0 (>B:ENGINE_MAGNETO_LEFT_Set)
Magneto_Left_ON#1 (>B:ENGINE_MAGNETO_LEFT_Set)
Magneto_Right_OFF#0 (>B:ENGINE_MAGNETO_RIGHT_Set)
Magneto_Right_ON#1 (>B:ENGINE_MAGNETO_RIGHT_Set)
//Asobo/Savage Cub (2024)/Lights
Landing_Light_OFF#(>B:LANDING_LIGHTS_OFF)
Landing_Light_ON#(>B:LANDING_LIGHTS_ON)
Strobe_Lights_OFF#(>B:STROBES_OFF)
Strobe_Lights_ON#(>B:STROBES_ON)
//Asobo/TBM 580/Avionics
AS3000_TSC_Horizontal_BottomKnob_Push#(>H:AS3000_TSC_Horizontal_BottomKnob_Push)
AS3000_TSC_Horizontal_BottomKnob_Small_DEC#(>H:AS3000_TSC_Horizontal_BottomKnob_Small_DEC)
AS3000_TSC_Horizontal_BottomKnob_Small_INC#(>H:AS3000_TSC_Horizontal_BottomKnob_Small_INC)
AS3000_TSC_Horizontal_SoftKey_1#(>H:AS3000_TSC_Horizontal_SoftKey_1)
AS3000_TSC_Horizontal_SoftKey_2#(>H:AS3000_TSC_Horizontal_SoftKey_2)
AS3000_TSC_Horizontal_SoftKey_3#(>H:AS3000_TSC_Horizontal_SoftKey_3)
AS3000_TSC_Horizontal_TopKnob_Large_DEC#(>H:AS3000_TSC_Horizontal_TopKnob_Large_DEC)
AS3000_TSC_Horizontal_TopKnob_Large_INC#(>H:AS3000_TSC_Horizontal_TopKnob_Large_INC)
AS3000_TSC_Horizontal_TopKnob_Push#(>H:AS3000_TSC_Horizontal_TopKnob_Push)
AS3000_TSC_Horizontal_TopKnob_Push_Long#(>H:AS3000_TSC_Horizontal_TopKnob_Push_Long)
AS3000_TSC_Horizontal_TopKnob_Small_DEC#(>H:AS3000_TSC_Horizontal_TopKnob_Small_DEC)
AS3000_TSC_Horizontal_TopKnob_Small_INC#(>H:AS3000_TSC_Horizontal_TopKnob_Small_INC)
//Asobo/TBM 930 (2024)/Air Condition / Pressurization
BLEED_AUTO#2 (>B:TBM930_PRESSURIZATION_BLEED_Set)
BLEED_MAX_DIFF#1 (>B:TBM930_PRESSURIZATION_BLEED_Set)
BLEED_OFF#0 (>B:TBM930_PRESSURIZATION_BLEED_Set)
//Asobo/TBM 930 (2024)/Anti Ice
De-Ice__Windshield_Switch_ON#1 (>B:TBM930_DEICE_WINDSHIELD_SWITCH_Set)
De-Ice_Windshield_Switch_OFF#0 (>B:TBM930_DEICE_WINDSHIELD_SWITCH_Set)
Inert_Sep_OFF#0 (>B:TBM930_DEICE_INERT_SEP_SWITCH_Set)
Inert_Sep_ON#1 (>B:TBM930_DEICE_INERT_SEP_SWITCH_Set)
Prop_De_ice_OFF#1 (>B:DEICE_PROPELLER_1_Set)
Prop_De_ice_ON#0 (>B:DEICE_PROPELLER_1_Set)
//Asobo/TBM 930 (2024)/Overhead Electrical
CRASHBAR_DOWN#0 (>B:ELECTRICAL_CRASHBAR_Set)
CRASHBAR_UP#1 (>B:ELECTRICAL_CRASHBAR_Set)
GENERATOR_MAIN#1 (>B:ELECTRICAL_GENERATOR_SWITCH_Set)
GENERATOR_OFF#0 (>B:ELECTRICAL_GENERATOR_SWITCH_Set)
GENERATOR_STBY#2 (>B:ELECTRICAL_GENERATOR_SWITCH_Set)
SOURCE_BATT#1 (>B:ELECTRICAL_SOURCE_SWITCH_Set)
SOURCE_GPU#2 (>B:ELECTRICAL_SOURCE_SWITCH_Set)
SOURCE_OFF#0 (>B:ELECTRICAL_SOURCE_SWITCH_Set)
//Asobo/TBM 930 (2024)/Overhead Engine
IGNITION_AUTO#0 (>B:ENGINE_IGNITION_1_Set)
IGNITION_OFF#2 (>B:ENGINE_IGNITION_1_Set)
IGNITION_ON#1 (>B:ENGINE_IGNITION_1_Set)
//Asobo/TBM 930 (2024)/Overhead Fuel
FUEL_SEL_AUTO#1 (>B:TBM930_FUEL_SELECTION_Set)
FUEL_SEL_MAN#0 (>B:TBM930_FUEL_SELECTION_Set)
//Asobo/TBM 930 (2024)/Overhead Lights
ACCESS_OFF#0 (>B:TBM930_LIGHTING_ACCESS_LIGHT_Set) 
ACCESS_ON#1 (>B:TBM930_LIGHTING_ACCESS_LIGHT_Set) 
DIMMER_OFF#0 (>B:LIGHTING_DIMMER_LIGHT_Set) 
DIMMER_ON_#1 (>B:LIGHTING_DIMMER_LIGHT_Set) 
LANDING_LIGHT_ON#2 (>B:TBM930_LIGHTING_TAXI_LANDING_LIGHT_SWITCH_Set)
NAV_LIGHT_OFF#0 (>B:TBM930_LIGHTING_NAVIGATION_LIGHT_SWITCH_Set) 
NAV_LIGHT_ON#1 (>B:TBM930_LIGHTING_NAVIGATION_LIGHT_SWITCH_Set) 
PULSE_OFF#0 (>B:TBM930_LIGHTING_PULSE_LIGHT_SWITCH_Set) 
PULSE_ON#1 (>B:TBM930_LIGHTING_PULSE_LIGHT_SWITCH_Set) 
TAXI_LIGHT_ON#1 (>B:TBM930_LIGHTING_TAXI_LANDING_LIGHT_SWITCH_Set)
TAXI_LIGHT-LDG_LIGHT_OFF#0 (>B:TBM930_LIGHTING_TAXI_LANDING_LIGHT_SWITCH_Set)
//Asobo/TBM 930/Air Condition / Pressurization
TBM930_BLEED_AIR_AUTO#0 (>K:BLEED_AIR_SOURCE_CONTROL_SET)
TBM930_BLEED_AIR_MAX#3 (>K:BLEED_AIR_SOURCE_CONTROL_SET)
TBM930_BLEED_AIR_OFF#1 (>K:BLEED_AIR_SOURCE_CONTROL_SET)
//Asobo/TBM 930/Anti-Ice
TBM930_INERT_SEP_OFF#(A:ENG ANTI ICE:1, Bool) if{ (>K:ANTI_ICE_TOGGLE_ENG1) }
TBM930_PROP_DE_ICE_ON#1 s0 (A:PROP DEICE SWITCH:1, Bool) != if{ (>K:TOGGLE_PROPELLER_DEICE) } l0 (>L:DEICE_Propeller_1)
TBM930_AIRFRAME_DE_ICE_OFF#(A:STRUCTURAL DEICE SWITCH, Bool) if{ (>K:TOGGLE_STRUCTURAL_DEICE) }
TBM930_AIRFRAME_DE_ICE_ON#(A:STRUCTURAL DEICE SWITCH, Bool) ! if{ (>K:TOGGLE_STRUCTURAL_DEICE) }
TBM930_ICE_LIGHT_OFF#0 0 (>K:2:WING_LIGHTS_SET) 0 (>L:LIGHTING_WING_1)
TBM930_ICE_LIGHT_ON#1 1 (>K:2:WING_LIGHTS_SET) 1 (>L:LIGHTING_WING_1)
TBM930_INERT_SEP_ON#(A:ENG ANTI ICE:1, Bool) ! if{ (>K:ANTI_ICE_TOGGLE_ENG1) }
TBM930_LTS_TEST_OFF#0 (>L:XMLVAR_LTS_TEST)
TBM930_LTS_TEST_ON#1 (>L:XMLVAR_LTS_Test)
TBM930_LTS_TEST_TOGGLE#(L:XMLVAR_LTS_TEST, Number) ! (>L:XMLVAR_LTS_TEST)
TBM930_PITOT_L_OFF#1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)
TBM930_PITOT_L_ON#1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)
TBM930_PITOT_R_OFF#2 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_2)
TBM930_PITOT_R_ON#2 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_2)
TBM930_PROP_DE_ICE_OFF#(A:PROP DEICE SWITCH:1, Bool) if{ (>K:TOGGLE_PROPELLER_DEICE) }
TBM930_Pitot_L_TOG#(L:XMLVAR_Pitot_1) ! (>L:XMLVAR_Pitot_1) (L:XMLVAR_Pitot_1) ! (L:XMLVAR_Pitot_2) ! and (A:PITOT HEAT, bool) == if{ (>K:PITOT_HEAT_TOGGLE) }
TBM930_Pitot_R_TOG#2 (A:PITOT HEAT SWITCH:2) ! (>K:2:PITOT_HEAT_SET) (A:PITOT HEAT SWITCH:2) ! (>L:DEICE_Pitot_2)
TBM930_WINDSHIELD_OFF#0 (>K:WINDSHIELD_DEICE_SET)
TBM930_WINDSHIELD_ON#1 (>K:WINDSHIELD_DEICE_SET)
//Asobo/TBM 930/Autopilot
=TBM930_Improvements_Mod_AUTOPILOT_ALT_TOGGLE=#(>K:AP_ALT_HOLD)
=TBM930_Improvements_Mod_AUTOPILOT_APR_TOGGLE=#(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)
=TBM930_Improvements_Mod_AUTOPILOT_AP_TOGGLE=#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } els{ (A:AUTOPILOT YAW DAMPER, Bool) ! if{ (>K:YAW_DAMPER_TOGGLE) } } } 
=TBM930_Improvements_Mod_AUTOPILOT_BANK_TOGGLE=#(A:AUTOPILOT MAX BANK ID, Number) if{ 0 (>K:AP_MAX_BANK_SET) } els{ 1 (>K:AP_MAX_BANK_SET) }
=TBM930_Improvements_Mod_AUTOPILOT_BC_TOGGLE=#(A:AUTOPILOT BACKCOURSE HOLD, Bool) ! (>K:AP_BC_HOLD)
=TBM930_Improvements_Mod_AUTOPILOT_FD_TOGGLE=#1 if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }
=TBM930_Improvements_Mod_AUTOPILOT_FLC_TOGGLE=#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, Knots) (>K:AP_SPD_VAR_SET)
=TBM930_Improvements_Mod_AUTOPILOT_HDG_TOGGLE=#(>K:AP_PANEL_HEADING_HOLD)
=TBM930_Improvements_Mod_AUTOPILOT_LVL_TOGGLE=#(>K:AP_WING_LEVELER) (A:AUTOPILOT WING LEVELER, Bool) if{ (A:AUTOPILOT MASTER, Bool) (>O:APStateWhenLevelerEnabled) (A:AUTOPILOT MASTER, Bool) ! if{ (>K:AUTOPILOT_ON) } (>K:AP_PITCH_LEVELER_ON) } els{ (>K:AP_PITCH_LEVELER_OFF) (>O:APStateWhenLevelerEnabled) if{ (>K:AUTOPILOT_ON) } els{ (>K:AUTOPILOT_OFF) } }
=TBM930_Improvements_Mod_AUTOPILOT_NAV_TOGGLE=#(A:AUTOPILOT NAV1 LOCK, Bool) ! (>K:AP_NAV1_HOLD)
=TBM930_Improvements_Mod_AUTOPILOT_SPD_TOGGLE=#(L:XMLVAR_AirSpeedIsInMach) ! (>L:XMLVAR_AirSpeedIsInMach)
=TBM930_Improvements_Mod_AUTOPILOT_VNV_TOGGLE=#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
=TBM930_Improvements_Mod_AUTOPILOT_VS_TOGGLE=#(>K:AP_PANEL_VS_HOLD)
=TBM930_Improvements_Mod_AUTOPILOT_XFR_TOGGLE=#(L:XMLVAR_PushXFR) ! (>L:XMLVAR_PushXFR)
=TBM930_Improvements_Mod_AUTOPILOT_YD_TOGGLE=#(>K:YAW_DAMPER_TOGGLE)
TBM930_AP_BARO_3_DEC#2 (>K:KOHLSMAN_DEC) (>H:AP_BARO_Down)
TBM930_AP_BARO_3_INC#2 (>K:KOHLSMAN_INC) (>H:AP_BARO_Up)
TBM930_AP_CRS1_SYNC#(>H:AS3000_PFD_1_CRS_PUSH)
TBM930_AUTOPILOT_CRS1_DEC#(>H:AS3000_PFD_1_CRS_DEC)
TBM930_AUTOPILOT_CRS1_INC#(>H:AS3000_PFD_1_CRS_INC)
TBM930_AUTOPILOT_HDG_TOGGLE#(>K:AP_PANEL_HEADING_HOLD)
TBM930_AUTOPILOT_MASTER_TOGGLE#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } els{ (A:AUTOPILOT YAW DAMPER, Bool) ! if{ (>K:YAW_DAMPER_TOGGLE) } } } 
TBM930_AUTOPILOT_VNV_ON#1 (>L:XMLVAR_VNAVButtonValue)
TBM930_BARO_DEC#1 (>K:KOHLSMAN_DEC) (>H:AP_BARO_DOWN)
TBM930_BARO_INC#1 (>K:KOHLSMAN_INC) (>H:AP_BARO_UP)
VS_decrease#(>K:AP_VS_VAR_DEC)
VS_increase#(>K:AP_VS_VAR_INC)
TBM930_AP_CRS2_DEC#(>K:VOR2_OBI_DEC)
TBM930_AP_VNV_OFF#0 (>L:XMLVAR_VNAVButtonValue)
TBM930_AUTOPILOT_ALT_ON#(A:AUTOPILOT ALTITUDE LOCK, Bool) ! if{ (>K:AP_ALT_HOLD) }
TBM930_AUTOPILOT_ALT_TOGGLE#(>K:AP_ALT_HOLD)
TBM930_AUTOPILOT_APR_OFF#(>K:AP_APR_HOLD_OFF)
TBM930_AUTOPILOT_APR_TOGGLE#(>K:AP_APR_HOLD)
TBM930_AUTOPILOT_BC_OFF#(>K:AP_BC_HOLD_OFF)
TBM930_AUTOPILOT_CRS2_INC#(>K:VOR2_OBI_INC)
TBM930_AUTOPILOT_CRS2_SYNC#(A:HEADING INDICATOR, Radians) 57.29 * (>K:VOR2_SET)
TBM930_AUTOPILOT_FD_ON#(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }
TBM930_AUTOPILOT_FD_TOGGLE#1 (>K:TOGGLE_FLIGHT_DIRECTOR)
TBM930_AUTOPILOT_FLC_OFF#(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{(>K:FLIGHT_LEVEL_CHANGE)}
TBM930_AUTOPILOT_FLC_TOGGLE#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, Knots) (>K:AP_SPD_VAR_SET)
TBM930_AUTOPILOT_HDG_ON#(A:AUTOPILOT HEADING LOCK, Bool) ! if{ (>K:AP_PANEL_HEADING_HOLD) }
TBM930_AUTOPILOT_Heading_Sync#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
TBM930_AUTOPILOT_IAS_DEC#(L:XMLVAR_AirSpeedIsInMach) if{ (>K:AP_MACH_VAR_DEC) } els{ (>K:AP_SPD_VAR_DEC) }
TBM930_AUTOPILOT_IAS_INC#(L:XMLVAR_AirSpeedIsInMach) if{ (>K:AP_MACH_VAR_INC) } els{ (>K:AP_SPD_VAR_INC) }
TBM930_AUTOPILOT_LVL_OFF#(A:AUTOPILOT WING LEVELER, Bool) if{ (>K:AP_WING_LEVELER) (A:AUTOPILOT MASTER, Bool) if{ (>K:AUTOPILOT_OFF) } (>K:AP_PITCH_LEVELER_OFF) }
TBM930_AUTOPILOT_MASTER_OFF#2 (>L:XMLVAR_APTrim) (A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AUTOPILOT_DISENGAGE_TOGGLE) } (A:RUDDER TRIM DISABLED, Bool) ! if{ 1 (>K:RUDDER_TRIM_DISABLED_SET) } (A:AILERON TRIM DISABLED, Bool) ! if{ 1 (>K:AILERON_TRIM_DISABLED_SET) }
TBM930_AUTOPILOT_MASTER_ON#0 (>L:XMLVAR_APTrim) (A:AUTOPILOT DISENGAGED, Bool) if{ (>K:AUTOPILOT_DISENGAGE_TOGGLE) }
TBM930_AUTOPILOT_MASTER_TRIM_ONLY#1 (>L:XMLVAR_APTrim) (A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AUTOPILOT_DISENGAGE_TOGGLE) } (A:RUDDER TRIM DISABLED, Bool) if{ 0 (>K:RUDDER_TRIM_DISABLED_SET) } (A:AILERON TRIM DISABLED, Bool) if{ 0 (>K:AILERON_TRIM_DISABLED_SET) }
TBM930_AUTOPILOT_MAX_BANK_ON#(A:AUTOPILOT MAX BANK, Radians) 0.5 > if{ (>K:AP_MAX_BANK_INC) }
TBM930_AUTOPILOT_MAX_BANK_TOGGLE#(>K:AP_MAX_BANK_INC)
TBM930_AUTOPILOT_NAV_TOGGLE#(>K:AP_NAV1_HOLD)
TBM930_AUTOPILOT_SPD_KTS#0 (>L:XMLVAR_AirSpeedIsInMach, Number)
TBM930_AUTOPILOT_SPD_MACH#1 (>L:XMLVAR_AirSpeedIsInMach, Number)
TBM930_AUTOPILOT_SPD_TOGGLE#(L:XMLVAR_AirSpeedIsInMach, Number) ! (>L:XMLVAR_AirSpeedIsInMach, Number)
TBM930_AUTOPILOT_TOGGLE#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (L:XMLVAR_APTrim) 0 == if{ (A:AUTOPILOT YAW DAMPER, Bool) ! (A:AUTOPILOT MASTER, Bool) and if{ (>K:YAW_DAMPER_TOGGLE) } } (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } }
TBM930_AUTOPILOT_VNV_TOGGLE#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
TBM930_AUTOPILOT_VS_OFF#(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_PANEL_VS_HOLD) }
TBM930_AUTOPILOT_VS_TOGGLE#(>K:AP_PANEL_VS_HOLD)
TBM930_AUTOPILOT_YD_OFF#(A:AUTOPILOT YAW DAMPER, Bool) if{ (>K:YAW_DAMPER_TOGGLE) }
TBM930_BARO_SYNC#1 (>K:BAROMETRIC)
//Asobo/TBM 930/Avionics
G3000_TSC_1_Bottom_Knob_DEC#(>H:AS3000_TSC_Horizontal_1_BottomKnob_Small_DEC)
G3000_TSC_1_Bottom_Knob_Inc#(>H:AS3000_TSC_Horizontal_1_BottomKnob_Small_INC)
G3000_TSC_1_Bottom_Knob_Push#(>H:AS3000_TSC_Horizontal_1_BottomKnob_Push)
G3000_TSC_1_Top_Knob_Large_Dec#(>H:AS3000_TSC_Horizontal_1_TopKnob_Large_DEC)
G3000_TSC_1_Top_Knob_Large_Inc#(>H:AS3000_TSC_Horizontal_1_TopKnob_Large_INC)
G3000_TSC_1_Top_Knob_Long_Press#(>H:AS3000_TSC_Horizontal_1_TopKnob_Push_Long)
G3000_TSC_1_Top_Knob_Short_Press#(>H:AS3000_TSC_Horizontal_1_TopKnob_Push)
G3000_TSC_1_Top_Knob_Small_Dec#(>H:AS3000_TSC_Horizontal_1_TopKnob_Small_DEC)
G3000_TSC_1_Top_Knob_Small_Inc#(>H:AS3000_TSC_Horizontal_1_TopKnob_Small_INC)
G3000_TSC_2_Bottom_Knob_DEC#(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_DEC)
G3000_TSC_2_Bottom_Knob_INC#(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_INC)
G3000_TSC_2_Bottom_Knob_Push#(>H:AS3000_TSC_Horizontal_2_BottomKnob_Push)
G3000_TSC_2_Tob_Knob_Short_Press#(>H:AS3000_TSC_Horizontal_2_TopKnob_Push)
G3000_TSC_2_Top_Knob_Large_Dec#(>H:AS3000_TSC_Horizontal_2_TopKnob_Large_DEC)
G3000_TSC_2_Top_Knob_Large_Inc#(>H:AS3000_TSC_Horizontal_2_TopKnob_Large_INC)
G3000_TSC_2_Top_Knob_Long_Press#(>H:AS3000_TSC_Horizontal_2_TopKnob_Push_Long)
G3000_TSC_2_Top_Knob_Small_Dec#(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_DEC)
G3000_TSC_2_Top_Knob_Small_Inc#(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_INC)
TBM930_PFD_1_SOFTKEYS_5#1 (>H:AS3000_PFD_1_SOFTKEYS_5)
TSC_2_Softkey_1#(>H:AS3000_TSC_Horizontal_2_SoftKey_1) 1 (>O:_ButtonAnimVar) 
TSC_2_Softkey_2#(>H:AS3000_TSC_Horizontal_2_SoftKey_2) 1 (>O:_ButtonAnimVar) 
TSC_2_Softkey_3#(>H:AS3000_TSC_Horizontal_2_SoftKey_3) 1 (>O:_ButtonAnimVar) 
TBM930_PFD_1_SOFTKEYS_1#1 (>H:AS3000_PFD_1_SOFTKEYS_1)
TBM930_PFD_1_SOFTKEYS_10#1 (>H:AS3000_PFD_1_SOFTKEYS_10)
TBM930_PFD_1_SOFTKEYS_11#1 (>H:AS3000_PFD_1_SOFTKEYS_11)
TBM930_PFD_1_SOFTKEYS_12#1 (>H:AS3000_PFD_1_SOFTKEYS_12)
TBM930_PFD_1_SOFTKEYS_2#1 (>H:AS3000_PFD_1_SOFTKEYS_2)
TBM930_PFD_1_SOFTKEYS_3#1 (>H:AS3000_PFD_1_SOFTKEYS_3)
TBM930_PFD_1_SOFTKEYS_4#1 (>H:AS3000_PFD_1_SOFTKEYS_4)
TBM930_PFD_1_SOFTKEYS_6#1 (>H:AS3000_PFD_1_SOFTKEYS_6)
TBM930_PFD_1_SOFTKEYS_7#1 (>H:AS3000_PFD_1_SOFTKEYS_7)
TBM930_PFD_1_SOFTKEYS_8#1 (>H:AS3000_PFD_1_SOFTKEYS_8)
TBM930_PFD_1_SOFTKEYS_9#1 (>H:AS3000_PFD_1_SOFTKEYS_9)
TBM930_PFD_2_SOFTKEYS_1#1 (>H:AS3000_PFD_2_SOFTKEYS_1)
TBM930_PFD_2_SOFTKEYS_10#1 (>H:AS3000_PFD_2_SOFTKEYS_10)
TBM930_PFD_2_SOFTKEYS_11#1 (>H:AS3000_PFD_2_SOFTKEYS_11)
TBM930_PFD_2_SOFTKEYS_12#1 (>H:AS3000_PFD_2_SOFTKEYS_12)
TBM930_PFD_2_SOFTKEYS_2#1 (>H:AS3000_PFD_2_SOFTKEYS_2)
TBM930_PFD_2_SOFTKEYS_3#1 (>H:AS3000_PFD_2_SOFTKEYS_3)
TBM930_PFD_2_SOFTKEYS_4#1 (>H:AS3000_PFD_2_SOFTKEYS_4)
TBM930_PFD_2_SOFTKEYS_5#1 (>H:AS3000_PFD_2_SOFTKEYS_5)
TBM930_PFD_2_SOFTKEYS_6#1 (>H:AS3000_PFD_2_SOFTKEYS_6)
TBM930_PFD_2_SOFTKEYS_7#1 (>H:AS3000_PFD_2_SOFTKEYS_7)
TBM930_PFD_2_SOFTKEYS_8#1 (>H:AS3000_PFD_2_SOFTKEYS_8)
TBM930_PFD_2_SOFTKEYS_9#1 (>H:AS3000_PFD_2_SOFTKEYS_9)
TBM930_PFD_3_SOFTKEYS_1#1 (>H:AS3000_PFD_3_SOFTKEYS_1)
TBM930_PFD_3_SOFTKEYS_10#1 (>H:AS3000_PFD_3_SOFTKEYS_10)
TBM930_PFD_3_SOFTKEYS_11#1 (>H:AS3000_PFD_3_SOFTKEYS_11)
TBM930_PFD_3_SOFTKEYS_12#1 (>H:AS3000_PFD_3_SOFTKEYS_12)
TBM930_PFD_3_SOFTKEYS_2#1 (>H:AS3000_PFD_3_SOFTKEYS_2)
TBM930_PFD_3_SOFTKEYS_3#1 (>H:AS3000_PFD_3_SOFTKEYS_3)
TBM930_PFD_3_SOFTKEYS_4#1 (>H:AS3000_PFD_3_SOFTKEYS_4)
TBM930_PFD_3_SOFTKEYS_5#1 (>H:AS3000_PFD_3_SOFTKEYS_5)
TBM930_PFD_3_SOFTKEYS_6#1 (>H:AS3000_PFD_3_SOFTKEYS_6)
TBM930_PFD_3_SOFTKEYS_7#1 (>H:AS3000_PFD_3_SOFTKEYS_7)
TBM930_PFD_3_SOFTKEYS_8#1 (>H:AS3000_PFD_3_SOFTKEYS_8)
TBM930_PFD_3_SOFTKEYS_9#1 (>H:AS3000_PFD_3_SOFTKEYS_9)
TSC_1_Softkey_1#(>H:AS3000_TSC_Horizontal_1_SoftKey_1) 1 (>O:_ButtonAnimVar) 
TSC_1_Softkey_2#(>H:AS3000_TSC_Horizontal_1_SoftKey_2) 1 (>O:_ButtonAnimVar) 
TSC_1_Softkey_3#(>H:AS3000_TSC_Horizontal_1_SoftKey_3) 1 (>O:_ButtonAnimVar) 
//Asobo/TBM 930/Electrical
TBM930_ELECTRICAL_SOURCE_BATT#1 s0 (>L:XMLVAR_Elec_Source_Switch_State) l0 0 != if{ 1 (>L:XMLVAR_Elec_CrashBar_State) } 5 (A:1:BUS CONNECTION ON:1, Bool) l0 0 > != if{ 5 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (A:1:BUS CONNECTION ON:14, Bool) l0 2 == != if{ 5 14 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 20 (A:1:BUS CONNECTION ON:13, Bool) l0 2 < != if{ 20 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_ELECTRICAL_SOURCE_GPU#2 s0 (>L:XMLVAR_Elec_Source_Switch_State) l0 0 != if{ 1 (>L:XMLVAR_Elec_CrashBar_State) } 5 (A:1:BUS CONNECTION ON:1, Bool) l0 0 > != if{ 5 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (A:1:BUS CONNECTION ON:14, Bool) l0 2 == != if{ 5 14 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 20 (A:1:BUS CONNECTION ON:13, Bool) l0 2 < != if{ 20 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_ELECTRICAL_SOURCE_OFF#0 s0 (>L:XMLVAR_Elec_Source_Switch_State) l0 0 != if{ 1 (>L:XMLVAR_Elec_CrashBar_State) } 5 (A:1:BUS CONNECTION ON:1, Bool) l0 0 > != if{ 5 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (A:1:BUS CONNECTION ON:14, Bool) l0 2 == != if{ 5 14 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 20 (A:1:BUS CONNECTION ON:13, Bool) l0 2 < != if{ 20 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_GENERATOR_MAIN#1 s0 (>L:XMLVAR_Elec_Generator_Switch_State) l0 0 == if{ 0 sp1 0 sp2 } l0 1 == if{ 1 sp1 0 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } l0 2 == if{ 0 sp1 1 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } 5 (A:1:BUS CONNECTION ON:12, Bool) l1 != if{ 5 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (A:1:BUS CONNECTION ON:20, Bool) l2 != if{ 5 20 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_GENERATOR_OFF#0 s0 (>L:XMLVAR_Elec_Generator_Switch_State) l0 0 == if{ 0 sp1 0 sp2 } l0 1 == if{ 1 sp1 0 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } l0 2 == if{ 0 sp1 1 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } 5 (A:1:BUS CONNECTION ON:12, Bool) l1 != if{ 5 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (A:1:BUS CONNECTION ON:20, Bool) l2 != if{ 5 20 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_GENERATOR_STANDBY#2 s0 (>L:XMLVAR_Elec_Generator_Switch_State) l0 0 == if{ 0 sp1 0 sp2 } l0 1 == if{ 1 sp1 0 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } l0 2 == if{ 0 sp1 1 sp2 1 (>L:XMLVAR_Elec_CrashBar_State) } 5 (A:1:BUS CONNECTION ON:12, Bool) l1 != if{ 5 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (A:1:BUS CONNECTION ON:20, Bool) l2 != if{ 5 20 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
//Asobo/TBM 930/Engines
TBM930_IGNITION_AUTO#1 (>K:TURBINE_IGNITION_SWITCH_SET1)
TBM930_IGNITION_OFF#0 (>K:TURBINE_IGNITION_SWITCH_SET1)
TBM930_IGNITION_ON#2 (>K:TURBINE_IGNITION_SWITCH_SET1)
TBM930_STARTER_ABORT#2 (>L:XMLVAR_Starter, Number) (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:SET_STARTER1_HELD) 0 (>K:STARTER1_SET) }
TBM930_STARTER_ON#(A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) } 
//Asobo/TBM 930/Fuel
TBM930_AUX_BP_AUTO#2 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) } 
TBM930_AUX_BP_OFF#0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }
TBM930_AUX_BP_ON#1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) } 
TBM930_SHIFT_FUEL_TANK#(A:FUEL TANK SELECTOR:1, Enum) 2 == if{ (>K:FUEL_SELECTOR_RIGHT) } els{ (>K:FUEL_SELECTOR_LEFT) }
//Asobo/TBM 930/Gear
TBM930_ParkingBrake_Toggle#(L:ParkingBrake_Position) 0 > if{ 0 (>L:ParkingBrake_Position) } els{ 100 (>L:ParkingBrake_Position) }
TBM930_LANDING_GEAR_DOWN#(>K:GEAR_DOWN)
TBM930_LANDING_GEAR_UP#(>K:GEAR_UP)
//Asobo/TBM 930/Lights
TBM930_ACCESS_LIGHT_OFF#18 (A:1:BUS CONNECTION ON:17, Bool) if{ 18 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_ACCESS_LIGHT_ON#18 (A:1:BUS CONNECTION ON:17, Bool) ! if{ 18 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 
TBM930_CABIN_LIGHT_OFF#0 s0 16 (A:1:BUS CONNECTION ON:15, Bool) l0 != if{ 16 15 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 19 (A:1:BUS CONNECTION ON:17, Bool) l0 != if{ 19 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_CABIN_LIGHT_ON#1 s0 16 (A:1:BUS CONNECTION ON:15, Bool) l0 != if{ 16 15 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 19 (A:1:BUS CONNECTION ON:17, Bool) l0 != if{ 19 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_LANDING_TAXI_OFF_State_0_LDG#0 (>L:LIGHTING_LANDING_1) 1 (>K:LANDING_LIGHTS_SET) 0 (>K:TAXI_LIGHTS_SET) (A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) 0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } els{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) (A:LIGHT LOGO, Bool) sp0 } (A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ 17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }
TBM930_LANDING_TAXI_OFF_State_1_TAXI#1 (>L:LIGHTING_LANDING_1) 0 (>K:LANDING_LIGHTS_SET) 1 (>K:TAXI_LIGHTS_SET) (A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) 0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } els{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) (A:LIGHT LOGO, Bool) sp0 } (A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ 17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }
TBM930_LANDING_TAXI_OFF_State_2_OFF#2 (>L:LIGHTING_LANDING_1) 0 (>K:LANDING_LIGHTS_SET) 0 (>K:TAXI_LIGHTS_SET) (A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) 0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } els{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) (A:LIGHT LOGO, Bool) sp0 } (A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ 17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }
TBM930_Landing_Lights_Toggle#(L:LIGHTING_LANDING_1) 0 != s0 if{ 0 (>L:LIGHTING_LANDING_1) 1 (>K:LANDING_LIGHTS_SET) 0 (>K:TAXI_LIGHTS_SET) } els{ 2 (>L:LIGHTING_LANDING_1) 0 (>K:LANDING_LIGHTS_SET) 0 (>K:TAXI_LIGHTS_SET) } (A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) 0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } els{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) (A:LIGHT LOGO, Bool) sp0 } (A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ 17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }
TBM930_PULSE_LIGHT_OFF#0 sp0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1) (A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) 0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } els{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) (A:LIGHT LOGO, Bool) sp0 } (A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ 17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }
TBM930_PULSE_LIGHT_ON#1 sp0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1) (A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) 0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } els{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) (A:LIGHT LOGO, Bool) sp0 } (A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ 17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }
TBM930_PULSE_LIGHT_TOGGLE#(L:LIGHTING_LOGO_1) ! sp0 1 l0 (>K:2:LOGO_LIGHTS_SET) l0 (>L:LIGHTING_LOGO_1) (A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) 0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } els{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) (A:LIGHT LOGO, Bool) sp0 } (A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ 17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }
TBM930_Taxi_Lights_Toggle#(L:LIGHTING_LANDING_1) 1 != if{ 1 (>L:LIGHTING_LANDING_1) 0 (>K:LANDING_LIGHTS_SET) 1 (>K:TAXI_LIGHTS_SET) } els{ 2 (>L:LIGHTING_LANDING_1) 0 (>K:LANDING_LIGHTS_SET) 0 (>K:TAXI_LIGHTS_SET) } (A:LIGHT LANDING, Bool) if{ 100 (>K:LIGHT_POTENTIOMETER_10_SET) 0 (>K:LIGHT_POTENTIOMETER_2_SET) 0 sp0 } els{ 0 (>K:LIGHT_POTENTIOMETER_10_SET) (A:LIGHT TAXI, Bool) 100 * (>K:LIGHT_POTENTIOMETER_2_SET) (A:LIGHT LOGO, Bool) sp0 } (A:8:CIRCUIT CONNECTION ON:17, Bool) l0 != if{ 17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) }
TBM930_NAV_LIGHT_OFF#0 sp0 1 l0 (>K:2:NAV_LIGHTS_SET) l0 (>L:LIGHTING_NAV_1)
TBM930_NAV_LIGHT_ON#1 sp0 1 l0 (>K:2:NAV_LIGHTS_SET) l0 (>L:LIGHTING_NAV_1)
TBM930_NAV_LIGHT_TOGGLE#(L:LIGHTING_NAV_1) ! s0 (>L:LIGHTING_NAV_1) 1 l0 (>K:2:NAV_LIGHTS_SET) 
TBM930_PANEL_LIGHT_DEC#(A:LIGHT POTENTIOMETER:14, Percent) 5 - 0 max s0 14 (>K:2:LIGHT_POTENTIOMETER_SET) l0 0 > if{ (A:LIGHT PANEL, Bool) ! (A:LIGHT PEDESTRAL, Bool) ! or if{ 1 (>K:PANEL_LIGHTS_SET) 1 (>K:PEDESTRAL_LIGHTS_SET) } l0 100 == if{ 0 (>K:PANEL_LIGHTS_SET) 0 (>K:PEDESTRAL_LIGHTS_SET) } (A:LIGHT POTENTIOMETER:14, Percent) sp0 l0 14 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) l0 19 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) 
TBM930_PANEL_LIGHT_INC#(A:LIGHT POTENTIOMETER:14, Percent) 5 + 100 min s0 14 (>K:2:LIGHT_POTENTIOMETER_SET) l0 0 > if{ (A:LIGHT PANEL, Bool) ! (A:LIGHT PEDESTRAL, Bool) ! or if{ 1 (>K:PANEL_LIGHTS_SET) 1 (>K:PEDESTRAL_LIGHTS_SET) } l0 100 == if{ 0 (>K:PANEL_LIGHTS_SET) 0 (>K:PEDESTRAL_LIGHTS_SET) } (A:LIGHT POTENTIOMETER:14, Percent) sp0 l0 14 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) l0 19 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET) 
TBM930_STROBE_LIGHT_OFF#0 sp0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)
TBM930_STROBE_LIGHT_ON#1 sp0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)
TBM930_STROBE_LIGHT_TOGGLE#(L:LIGHTING_STROBE_1) ! s0 (>L:LIGHTING_STROBE_1) 1 l0 (>K:2:STROBES_SET)
//Asobo/TBM 930/Miscellaneous
TBM930_CRASH_BAR_DOWN#0 (>L:XMLVAR_Elec_CrashBar_State) 0 (>L:XMLVAR_Elec_Source_Switch_State) 5 (A:1:BUS CONNECTION ON:1, Bool) ! if{ 5 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (A:1:BUS CONNECTION ON:14, Bool) ! if{ 5 14 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 20 (A:1:BUS CONNECTION ON:13, Bool) ! if{ 20 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 0 (>L:XMLVAR_Elec_Generator_Switch_State) 5 (A:1:BUS CONNECTION ON:12, Bool) ! if{ 5 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (A:1:BUS CONNECTION ON:20, Bool) ! if{ 5 20 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
TBM930_CRASH_BAR_UP#1 (>L:XMLVAR_Elec_CrashBar_State)
TBM930_BACK_DOOR_LEVER_SWITCH#(L:XMLVAR_TBM930_BackDoor_State) 100 * 0 > (A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 < and or if{ (L:XMLVAR_TBM930_BackDoor_Unlock) if{ 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) (L:XMLVAR_TBM930_BackDoor_State) ! (>L:XMLVAR_TBM930_BackDoor_State) } els{ (A:EXIT OPEN:1, Bool) if{ 0 (>L:XMLVAR_TBM930_BackDoor_State) 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } }
TBM930_BACK_DOOR_LOCK_SWITCH#(L:XMLVAR_TBM930_BackDoor_Unlock) ! (>L:XMLVAR_TBM930_BackDoor_Unlock)
TBM930_CARGO_DOOR_LEVER_SWITCH#(L:XMLVAR_TBM930_CargoDoor_State) 100 * 0 > (A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 < and or if{ (A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 < and if{ 3 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) (L:XMLVAR_TBM930_CargoDoor_State) ! (>L:XMLVAR_TBM930_CargoDoor_State) } els{ (A:EXIT OPEN:2, Bool) if{ 0 (>L:XMLVAR_TBM930_CargoDoor_State) 3 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } }
TBM930_COPILOT_VISOR_LEFT-RIGHT_DEC#(L:XMLVAR_SunVisorX_2, Number) 0 > if{ (L:XMLVAR_SunVisorX_2, Number) -- (>L:XMLVAR_SunVisorX_2) }
TBM930_COPILOT_VISOR_LEFT-RIGHT_INC#(L:XMLVAR_SunVisorX_2, Number) 100 < if{ (L:XMLVAR_SunVisorX_2, Number) ++ (>L:XMLVAR_SunVisorX_2) }
TBM930_COPILOT_VISOR_UP-DOWN_DEC#(L:XMLVAR_SunVisorY_2, Number) 0 > if{ (L:XMLVAR_SunVisorY_2, Number) -- (>L:XMLVAR_SunVisorY_2) }
TBM930_COPILOT_VISOR_UP-DOWN_INC#(L:XMLVAR_SunVisorY_2, Number) 100 < if{ (L:XMLVAR_SunVisorY_2, Number) ++ (>L:XMLVAR_SunVisorY_2) }
TBM930_FRONT_DOOR_LEVER_SWITCH#(L:XMLVAR_TBM930_FrontDoor_State) 100 * 0 > (A:SIM ON GROUND, Bool) (A:AIRSPEED TRUE, Knots) 30 < and or if{ (L:XMLVAR_TBM930_FrontDoor_Unlock) if{ 1 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) (L:XMLVAR_TBM930_FrontDoor_State) ! (>L:XMLVAR_TBM930_FrontDoor_State) } els{ (A:EXIT OPEN:0, Bool) if{ 0 (>L:XMLVAR_TBM930_FrontDoor_State) 1 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } }
TBM930_FRONT_DOOR_LOCK_SWITCH#(L:XMLVAR_TBM930_FrontDoor_Unlock) ! (>L:XMLVAR_TBM930_FrontDoor_Unlock)
TBM930_PILOT_VISOR_LEFT-RIGHT_DEC#(L:XMLVAR_SunVisorX_1, Number) 100 < if{ (L:XMLVAR_SunVisorX_1, Number) ++ (>L:XMLVAR_SunVisorX_1) }
TBM930_PILOT_VISOR_LEFT-RIGHT_INC#(L:XMLVAR_SunVisorX_1, Number) 0 > if{ (L:XMLVAR_SunVisorX_1, Number) -- (>L:XMLVAR_SunVisorX_1) }
TBM930_PILOT_VISOR_UP-DOWN_DEC#(L:XMLVAR_SunVisorY_1, Number) 0 > if{ (L:XMLVAR_SunVisorY_1, Number) -- (>L:XMLVAR_SunVisorY_1) }
TBM930_PILOT_VISOR_UP-DOWN_INC#(L:XMLVAR_SunVisorY_1, Number) 100 < if{ (L:XMLVAR_SunVisorY_1, Number) ++ (>L:XMLVAR_SunVisorY_1) }
TBM930_SHOW-HIDE_COPILOT_SWITCH#(L:XMLVAR_TBM930_HideCoPilot) ! (>L:XMLVAR_TBM930_HideCoPilot)
TBM930_SHOW-HIDE_PILOT_SWITCH#(L:XMLVAR_TBM930_HidePilot) ! (>L:XMLVAR_TBM930_HidePilot)
TBM930_SWAP_ACTION_LEFT-RIGHT_UP-DOWN_ENCODER_SWITCH#(L:TBM930_VISOR_SWAP_LR-UD_SWAP-SWITCH_POS) ! (>L:TBM930_VISOR_SWAP_LR-UD_SWAP-SWITCH_POS)
//Asobo/TBM 930/Warning System
TBM930_MASTER_CAUTION_PUSH#1 (>K:MASTER_CAUTION_ACKNOWLEDGE)
TBM930_MASTER_WARNING_PUSH#1 (>K:MASTER_WARNING_ACKNOWLEDGE)
TBM930_ELT_ARM#(>K:ELT_OFF)
TBM930_ELT_ON#(>K:ELT_ON) (E:SIMULATION TIME, seconds) (>L:XMLVAR_ELT_ACTIVATION_TIME, Number)
TBM930_ELT_TEST#3 (>L:XMLVAR_ELT_STATE, Number) (E:SIMULATION TIME, seconds) (>L:XMLVAR_ELT_TEST_TIME, Number)
//Asobo/XCub (2024)/Autopilot
Altitude_Hold_Mode_TOGGLE#(>B:AUTOPILOT_ALTITUDE_MODE_TOGGLE)
Altitude_Selector_DEC#1 (>B:AUTOPILOT_ALTITUDE_SELECTOR_Dec)
Altitude_Selector_INC#1 (>B:AUTOPILOT_ALTITUDE_SELECTOR_Inc)
Altitude_Selector_Sync_TOGGLE#(>B:AUTOPILOT_ALTITUDE_SYNC_TOGGLE)
Approche_Mode_TOGGLE#(>B:AUTOPILOT_APPROACH_MODE_TOGGLE)
Autopilot_Master_TOGGLE#(>B:AUTOPILOT_AP_MASTER_TOGGLE)
Flight_Director_TOGGLE#(>B:AUTOPILOT_FLIGHT_DIRECTOR_TOGGLE)
Heading_Mode_TOGGLE#(>B:AUTOPILOT_HEADING_MODE_TOGGLE)
Heading_Track_Knob_DEC#1 (>B:AUTOPILOT_HEADING_SELECTOR_Dec)
Heading_Track_Knob_INC#1 (>B:AUTOPILOT_HEADING_SELECTOR_Inc)
Heading_Track_Sync_TOGGLE#(>B:AUTOPILOT_HEADING_SYNC_TOGGLE)
Indicated_Airspeed_Mode_TOGGLE#(>B:AUTOPILOT_IAS_TOGGLE)
Level_Mode_TOGGLE#(>B:AUTOPILOT_LVL_MODE_TOGGLE)
Navigation_Mode_TOGGLE#(>B:AUTOPILOT_NAV_MODE_TOGGLE)
Nose_Up_Down_Weel#1 (>B:AUTOPILOT_VS_SELECTOR_Inc)
Nose_Up_Down_Weel#1 (>B:AUTOPILOT_VS_SELECTOR_Dec)
Vertical_Path_Tracking_Mode_TOGGLE#(>B:AUTOPILOT_VNAV_MODE_TOGGLE)
Vertical_Speed_Mode_TOGGLE#(>B:AUTOPILOT_VS_MODE_TOGGLE)
//Asobo/XCub (2024)/Avionics
Avionics_Master_OFF#(>B:ELECTRICAL_LINE_MAIN_BUS_TO_AVIONICS_BUS_OFF)
Avionics_Master_ON#(>B:ELECTRICAL_LINE_MAIN_BUS_TO_AVIONICS_BUS_ON)
Back_TOGGLE#(>B:INSTRUMENT_BACK_TOGGLE)
Direct-to_TOGGLE#(>B:INSTRUMENT_DIRECTTO_TOGGLE)
Left_Mulitifunctional_Inner_Knob_DEC#1 (>B:INSTRUMENT_AS3X_KNOB_INNER_L_Dec)
Left_Mulitifunctional_Inner_Knob_INC#1 (>B:INSTRUMENT_AS3X_KNOB_INNER_L_Inc)
Left_Mulitifunctional_Knob_TOGGLE#(>B:INSTRUMENT_X0_AS3X_KNOB_L_PUSH_TOGGLE)
Left_Mulitifunctional_Outer_Knob_DEC#1 (>B:INSTRUMENT_AS3X_KNOB_OUTER_L_Dec)
Left_Mulitifunctional_Outer_Knob_INC#1 (>B:INSTRUMENT_AS3X_KNOB_OUTER_L_Inc)
Menu_TOGGLE#(>B:INSTRUMENT_MENU_TOGGLE)
Nearest_Page_TOGGLE#(>B:INSTRUMENT_NRST_TOGGLE)
Right_Mulitifunctional_Inner_Knob_DEC#1 (>B:INSTRUMENT_AS3X_KNOB_INNER_R_Dec)
Right_Mulitifunctional_Inner_Knob_INC#1 (>B:INSTRUMENT_AS3X_KNOB_INNER_R_Inc)
Right_Mulitifunctional_Knob_TOGGLE#(>B:INSTRUMENT_X0_AS3X_KNOB_R_PUSH_TOGGLE)
Right_Mulitifunctional_Outer_Knob_DEC#1 (>B:INSTRUMENT_AS3X_KNOB_OUTER_R_Dec)
Right_Mulitifunctional_Outer_Knob_INC#1 (>B:INSTRUMENT_AS3X_KNOB_OUTER_R_Inc)
//Asobo/XCub (2024)/Controls
Flaps_DEC#1 (>B:FLAPS_DECR)
Flaps_INC#1 (>B:FLAPS_INCR)
Flaps_Position_1#1 (>B:FLAPS_1)
Flaps_Position_2#2 (>B:FLAPS_2)
Flaps_Position_3#3 (>B:FLAPS_3)
Flaps_Up#0 (>B:FLAPS_UP)
//Asobo/XCub (2024)/Electrical
Alternator_OFF#(>B:ELECTRICAL_ALTERNATOR_1_OFF)
Alternator_ON#(>B:ELECTRICAL_ALTERNATOR_1_ON)
Master_Battery_OFF#(>B:ELECTRICAL_BATTERY_1_OFF)
Master_Battery_ON#(>B:ELECTRICAL_BATTERY_1_ON)
Starter_OFF#(>B:ELECTRICAL_STARTER_1_OFF)
Starter_ON#(>B:ELECTRICAL_STARTER_1_ON)
//Asobo/XCub (2024)/Engine
Magneto-LH_OFF#(>B:ENGINE_MAGNETO_LEFT_OFF)
Magneto-LH_ON#(>B:ENGINE_MAGNETO_LEFT_ON)
Magneto-RH_OFF#(>B:ENGINE_MAGNETO_RIGHT_OFF)
Magneto-RH_ON#(>B:ENGINE_MAGNETO_RIGHT_ON)
//Asobo/XCub (2024)/Fuel
Fuel_Pump_OFF#(>B:FUEL_PUMP_1_OFF)
Fuel_Pump_ON#(>B:FUEL_PUMP_1_ON)
Fuel_Selector_LEFT#(>B:FUEL_SELECTOR_1_LEFT)
Fuel_Selector_OFF#(>B:FUEL_SELECTOR_1_OFF)
Fuel_Selector_RIGHT#(>B:FUEL_SELECTOR_1_RIGHT)
//Asobo/XCub (2024)/Gear
Parking_Brake_OFF#0 (>B:LANDING_GEAR_PARKINGBRAKE_Set)
Parking_Brake_ON#1 (>B:LANDING_GEAR_PARKINGBRAKE_Set)
Parking_Brake_TOGGLE#(>B:LANDING_GEAR_PARKINGBRAKE_TOGGLE)
//Asobo/XCub (2024)/Lights
Landing_Lights_OFF#(>B:LIGHTING_LANDING_LIGHTS_OFF)
Landing_Lights_ON#(>B:LIGHTING_LANDING_LIGHTS_ON)
Navigation_Lights_OFF#(>B:NAV_LIGHTS_ON)
Navigation_Lights_ON#(>B:NAV_LIGHTS_OFF)
Pulse_Light_OFF#(>B:LIGHTING_PULSE_LIGHTS_OFF)
Pulse_Light_ON#(>B:LIGHTING_PULSE_LIGHTS_ON)
Strobe_Lights_OFF#(>B:STROBES_OFF)
Strobe_Lights_ON#(>B:STROBES_ON)
//Asobo/XCub (2024)/Safety
ELT_ARMED#(>B:SAFETY_ELT_1_ARM)
ELT_ON#(>B:SAFETY_ELT_1_ON)
ELT_TEST#(>B:SAFETY_ELT_1_TEST)
//Asobo/XCub/Anti-Ice
XCUB_CARB_HEAT_TOGGLE#(>K:ANTI_ICE_TOGGLE_ENG1)
//Asobo/XCub/Autopilot
XCUB_ALT_DEC_100#100 (>K:AP_ALT_VAR_DEC)
XCUB_ALT_DEC_1000#1000 (>K:AP_ALT_VAR_DEC)
XCUB_ALT_INC_1000#1000 (>K:AP_ALT_VAR_INC)
XCUB_AP_ALT_INC_100#100 (>K:AP_ALT_VAR_INC)
XCUB_AP_ALT_PUSH#(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH)
XCUB_AP_ALT_TOGGLE#(>K:AP_ALT_HOLD)
XCUB_AP_APR_TOGGLE#(>K:AP_APR_HOLD)
XCUB_AP_FD_TOGGLE#(A:AUTOPILOT MASTER, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }
XCUB_AP_FLC_DEC_1#(>K:AP_SPD_VAR_DEC)
XCUB_AP_FLC_DEC_10#(A:AUTOPILOT AIRSPEED HOLD VAR, Knots) 10 - (>K:AP_SPD_VAR_SET)
XCUB_AP_FLC_INC_1#(>K:AP_SPD_VAR_INC)
XCUB_AP_FLC_INC_10#(A:AUTOPILOT AIRSPEED HOLD VAR, Knots) 10 + (>K:AP_SPD_VAR_SET)
XCUB_AP_FLC_TOGGLE#(>K:FLIGHT_LEVEL_CHANGE) (A:AUTOPILOT FLIGHT LEVEL CHANGE, bool) if { (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET) }
XCUB_AP_HDG_DEC_1#1 (>K:HEADING_BUG_DEC)
XCUB_AP_HDG_DEC_5#5 (>K:HEADING_BUG_DEC)
XCUB_AP_HDG_INC_1#1 (>K:HEADING_BUG_INC)
XCUB_AP_HDG_INC_5#5 (>K:HEADING_BUG_INC)
XCUB_AP_HDG_TOGGLE#(>K:AP_PANEL_HEADING_HOLD)
XCUB_AP_NAV_TOGGLE#(>K:AP_NAV1_HOLD)
XCUB_AP_VS_DEC#(>K:AP_VS_VAR_DEC)
XCUB_AP_VS_INC#(>K:AP_VS_VAR_INC)
XCUB_AP_VS_TOGGLE#(>K:AP_PANEL_VS_HOLD)
//Asobo/XCub/Electrical
XCUB_ALT_FIELD_OFF#0 (>K:2:ALTERNATOR_SET) 
XCUB_ALT_FIELD_ON#1 (>K:2:ALTERNATOR_SET)
XCUB_ELECTRICAL_AVIONICS_OFF#0 (>K:AVIONICS_MASTER_SET)
XCUB_ELECTRICAL_AVIONICS_ON#1 (>K:AVIONICS_MASTER_SET)
XCUB_ELECTRICAL_STARTER_OFF#0 (>K:SET_STARTER1_HELD)
XCUB_ELECTRICAL_STARTER_ON#1 (>K:SET_STARTER1_HELD)
XCUB_MASTER_BATTERY_OFF#(A:ELECTRICAL MASTER BATTERY:1, Bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
XCUB_MASTER_BATTERY_ON#(A:ELECTRICAL MASTER BATTERY:1, Bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
//Asobo/XCub/Engine
XCUB_ENGINE_IGN_LH_OFF#(A:RECIP ENG LEFT MAGNETO:1, Bool) if{ (>K:MAGNETO1_LEFT) }
XCUB_ENGINE_IGN_LH_ON#(A:RECIP ENG LEFT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_LEFT) }
XCUB_ENGINE_IGN_RH_OFF#(A:RECIP ENG RIGHT MAGNETO:1, Bool) if{ (>K:MAGNETO1_RIGHT) }
XCUB_ENGINE_IGN_RH_ON#(A:RECIP ENG RIGHT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_RIGHT) }
XCUB_ENGINE_LH_OFF_RH_ON#(A:RECIP ENG RIGHT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_RIGHT) } (A:RECIP ENG LEFT MAGNETO:1, Bool) if{ (>K:MAGNETO1_LEFT) }
XCUB_ENGINE_LH_ON_RH_OFF#(A:RECIP ENG LEFT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_LEFT) } (A:RECIP ENG RIGHT MAGNETO:1, Bool) if{ (>K:MAGNETO1_RIGHT) }
XCUB_ENGINE_LH_ON_RH_ON#(A:RECIP ENG LEFT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_LEFT) } (A:RECIP ENG RIGHT MAGNETO:1, Bool) ! if{ (>K:MAGNETO1_RIGHT) }
//Asobo/XCub/Fuel
XCUB_FUEL_PUMP_OFF#0 (>K:ELECT_FUEL_PUMP1_SET) 
XCUB_FUEL_PUMP_ON#1 (>K:ELECT_FUEL_PUMP1_SET) 
XCUB_FUEL_SELECTOR_LEFT#(>K:FUEL_SELECTOR_LEFT)
XCUB_FUEL_SELECTOR_OFF#(>K:FUEL_SELECTOR_OFF)
XCUB_FUEL_SELECTOR_RIGHT#(>K:FUEL_SELECTOR_RIGHT)
XCUB_FUEL_SELECTOR_TOGGLE#(A:FUEL TANK SELECTOR:1, Enum) 2 == if{ (>K:FUEL_SELECTOR_RIGHT) } els{ (>K:FUEL_SELECTOR_LEFT) }
//Asobo/XCub/Gear
XCUB_PARKING_BRAKE_OFF#0 (>K:PARKING_BRAKE_SET)
XCUB_PARKING_BRAKE_ON#1 (>K:PARKING_BRAKE_SET)
//Asobo/XCub/Lights
XCUB_AUX_DIMMER#@ s0 (>L:LIGHTING_PANEL_1) l0 2 (>K:2:LIGHT_POTENTIOMETER_SET) 
XCUB_PLACARDS_DIMMER#@ s0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) 
XCUB_NAV_OFF#0 s0 1 l0 (>K:2:NAV_LIGHTS_SET) l0 (>L:LIGHTING_NAV_1)
XCUB_NAV_ON#1 s0 1 l0 (>K:2:NAV_LIGHTS_SET) l0 (>L:LIGHTING_NAV_1)
XCUB_PULSE_ON#100 s0 7 (>K:2:LIGHT_POTENTIOMETER_SET) l0 (>L:LIGHTING_POTENTIOMETER_7)
XCUB_PULSE_STANDBY#0 s0 7 (>K:2:LIGHT_POTENTIOMETER_SET) l0 (>L:LIGHTING_POTENTIOMETER_7)
XCUB_STROBE_OFF#0 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1) 
XCUB_STROBE_ON#1 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1) 
//Black Square/Analog King Air/Air Condition / Pressurization
BS_KA_Aft_Blower_Toggle#(L:var_AftBlowerSwitch, bool) ! (>L:var_AftBlowerSwitch, bool) (L:var_AftBlowerSwitch, bool) (>A:CIRCUIT SWITCH ON:139, bool)
BS_KA_Blower_Vent_Switch_Auto#1 (>A:CIRCUIT SWITCH ON:140, bool) 2 (>L:var_forwardVentBlowerState, number)
BS_KA_Blower_Vent_Switch_Lo#0 (>A:CIRCUIT SWITCH ON:140, bool) 1 (>L:var_forwardVentBlowerState, number)
BS_KA_Cabin_Pressurization_Climb_Rate_Decrease#(L:var_pressurizationClimbRate, number) 150 > if{ (L:var_pressurizationClimbRate, number) 50 - (>L:var_pressurizationClimbRate, number)
BS_KA_Cabin_Pressurization_Climb_Rate_Increase#(L:var_pressurizationClimbRate, number) 2000 < if{ (L:var_pressurizationClimbRate, number) 50 + (>L:var_pressurizationClimbRate, number) }
BS_KA_Cabin_Temperature_Mode_Auto__off_#(L:var_environmentalMode, number) 0 > if{ (L:var_environmentalMode, number) 3 - (>L:var_environmentalMode, number) }
BS_KA_Cabin_Temperature_Mode_Auto__on_#(L:var_environmentalMode, number) 3 < if{ (L:var_environmentalMode, number) 3 + (>L:var_environmentalMode, number)
BS_KA_Cabin_Temperature_Mode_Man_Heat__off_#(L:var_environmentalMode, number) 0 > if{ (L:var_environmentalMode, number) 1 - (>L:var_environmentalMode, number) }
BS_KA_Cabin_Temperature_Mode_Man_Heat__on_#(L:var_environmentalMode, number) 3 < if{ (L:var_environmentalMode, number) 1 + (>L:var_environmentalMode, number) }
BS_KA_Cabin_Temperature_Mode_Off__off_#(L:var_environmentalMode, number) 0 > if{ (L:var_environmentalMode, number) 2 - (>L:var_environmentalMode, number) }
BS_KA_Cabin_Temperature_Mode_Off__on_#(L:var_environmentalMode, number) 3 < if{ (L:var_environmentalMode, number) 2 + (>L:var_environmentalMode, number) }
BS_KA_Electrical_Heating_Toggle#(L:var_ElectricHeatSwitch, bool) ! (>L:var_ElectricHeatSwitch, bool) (L:var_ElectricHeatSwitch, bool) (>A:CIRCUIT SWITCH ON:138, bool)
BS_KA_Left_Bleed_Environmental_Off#(A:CIRCUIT ON:78, bool) if{ 1 1 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 1 (>L:var_environmentalBleedDisabled_L, bool) } 1 (>L:var_bleedState_L, number)
BS_KA_Left_Bleed_Off#(A:CIRCUIT ON:78, bool) if{ 0 1 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 1 (>L:var_environmentalBleedDisabled_L, bool) } 2 (>L:var_bleedState_L, number)
BS_KA_Left_Bleed_On#(A:CIRCUIT ON:78, bool) if{ 1 1 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 0 (>L:var_environmentalBleedDisabled_L, bool) } 0 (>L:var_bleedState_L, number)
BS_KA_Right_Bleed_Environmental_Off#(A:CIRCUIT ON:79, bool) if{ 1 2 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 1 (>L:var_environmentalBleedDisabled_R, bool) } 1 (>L:var_bleedState_R, number)
BS_KA_Right_Bleed_Off#(A:CIRCUIT ON:79, bool) if{ 0 2 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 1 (>L:var_environmentalBleedDisabled_R, bool) } 2 (>L:var_bleedState_R, number)
BS_KA_Right_Bleed_On#(A:CIRCUIT ON:79, bool) if{ 1 2 (>K:2:ENGINE_BLEED_AIR_SOURCE_SET) 0 (>L:var_environmentalBleedDisabled_R, bool) } 0 (>L:var_bleedState_R, number)
//Black Square/Analog King Air/Anti Ice
FUEL_VENT_LEFT_OFF#0 (>L:var_FuelVentSwitchHeat_L, number)
FUEL_VENT_LEFT_ON#100 (>L:var_FuelVentSwitchHeat_L, number)
FUEL_VENT_RIGHT_OFF#0 (>L:var_FuelVentSwitchHeat_R, number)
FUEL_VENT_RIGHT_ON#100 (>L:var_FuelVentSwitchHeat_R, number)
//Black Square/Analog King Air/Anti-Ice
BS_KA_BRAKE_DEICE_OFF#0 (>L:var_BrakeDeIceSwitch, bool)
BS_KA_BRAKE_DEICE_ON#1 (>L:var_BrakeDeIceSwitch, bool)
BS_KA_COPILOT_WINDSHIELD_ANTI-ICE_HI#2 (>L:var_windshieldHeatPos_R)
BS_KA_COPILOT_WINDSHIELD_ANTI-ICE_NORMAL#0 (>L:var_windshieldHeatPos_R)
BS_KA_COPILOT_WINDSHIELD_ANTI-ICE_OFF#1 (>L:var_windshieldHeatPos_R)
BS_KA_LEFT_ACTUATORS_STANDBY_OFF#0 (>L:var_InterSepStandbyMode_L, bool)
BS_KA_LEFT_ACTUATORS_STANDBY_ON#1 (>L:var_InterSepStandbyMode_L, bool)
BS_KA_LEFT_ENG_ANTI-ICE_OFF#(L:XMLVAR_InterSep_L, bool) ! (>L:XMLVAR_InterSep_L, bool)
BS_KA_LEFT_ENG_ANTI-ICE_ON#(L:XMLVAR_InterSep_L, bool) ! (>L:XMLVAR_InterSep_L, bool)
BS_KA_LEFT_PITOT_HEAT_OFF#1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)
BS_KA_LEFT_PITOT_HEAT_ON#1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)
BS_KA_PILOT_WINDSHIELD_ANTI-ICE_HI#2 (>L:var_windshieldHeatPos_L)
BS_KA_PILOT_WINDSHIELD_ANTI-ICE_NORMAL#0 (>L:var_windshieldHeatPos_L)
BS_KA_PILOT_WINDSHIELD_ANTI-ICE_OFF#1 (>L:var_windshieldHeatPos_L)
BS_KA_PROPELLER_DEICE_TOGGLE#(L:var_PropDeiceSwitch, bool) ! (>L:var_PropDeiceSwitch, bool) (L:var_PropDeiceSwitch, bool) (>A:CIRCUIT SWITCH ON:90, bool) (L:var_PropDeiceSwitch, bool) (>A:CIRCUIT SWITCH ON:91, bool) (L:var_PropDeiceSwitch, bool) ! (A:PROP DEICE SWITCH:1, bool) (A:PROP DEICE SWITCH:2, bool) or == if{ (>K:TOGGLE_PROPELLER_DEICE) } 
BS_KA_RIGHT_ACTUATORS_STANDBY_OFF#0 (>L:var_InterSepStandbyMode_R, bool)
BS_KA_RIGHT_ACTUATORS_STANDBY_ON#1 (>L:var_InterSepStandbyMode_R, bool)
BS_KA_RIGHT_ENG_ANTI-ICE_OFF_#(L:XMLVAR_InterSep_R, bool) ! (>L:XMLVAR_InterSep_R, bool)
BS_KA_RIGHT_ENG_ANTI-ICE_ON#(L:XMLVAR_InterSep_R, bool) ! (>L:XMLVAR_InterSep_R, bool)
BS_KA_RIGHT_PITOT_HEAT_OFF#2 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_2)
BS_KA_RIGHT_PITOT_HEAT_ON#2 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_2)
BS_KA_STALL_WARN_OFF#3 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_3) 
BS_KA_STALL_WARN_ON#3 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_3) 
//Black Square/Analog King Air/Electrical
BS_KA_ACTUATORS_STANDBY_LEFT#1 (>var_InterSepStandbyMode_L)
BS_KA_AVIONIC_MASTER_OFF#0 (>L:var_avionicsMasterSwitch, bool)  4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:17, Bool) if{ 4 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }  2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:19, Bool) if{ 2 19 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }  3 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:21, Bool) if{ 3 21 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_AVIONIC_MASTER_ON#1 (>L:var_avionicsMasterSwitch, bool)  4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:17, Bool) ! if{ 4 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }  2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:19, Bool) ! if{ 2 19 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }  3 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:21, Bool) ! if{ 3 21 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_BATT_BUS_OFF#0 (>L:var_batteryDisconnect)
BS_KA_BATT_BUS_OFF#0 (>L:var_batteryDisconnect)
BS_KA_BATT_BUS_ON#1 (>L:var_batteryDisconnect)
BS_KA_BATTERY_MASTER_OFF#0 (>L:var_batteryMasterSwitch)
BS_KA_BATTERY_MASTER_ON#1 (>L:var_batteryMasterSwitch)
BS_KA_BUS_SENSE_RESET#0 (>L:var_busFaultDetected, bool) 0 (>L:var_simulatedBusFaultDetected, bool)
BS_KA_BUS_SENSE_TEST#1 (>L:var_busFaultDetected, bool) 1 (>L:var_simulatedBusFaultDetected, bool) 1 (>L:var_masterCautionLatching, number)
BS_KA_EXTERNAL_POWER_OFF#0 (>L:ELECTRICAL_ExternalPower_1) 0 (>L:ELECTRICAL_ExternalPower_2) (>K:TOGGLE_EXTERNAL_POWER)
BS_KA_EXTERNAL_POWER_ON#(>K:TOGGLE_EXTERNAL_POWER) 1 (>L:ELECTRICAL_ExternalPower_1) 1 (>L:ELECTRICAL_ExternalPower_2) 
BS_KA_GEN_TIES_MAN_CLOSE_OFF#0 (>L:var_busTieManOpen, bool) 1 (>O:switchstate)
BS_KA_GEN_TIES_MAN_CLOSE_ON#1 (>L:var_busTieManClose, bool) 0 (>L:var_busTieManOpen, bool) 0 (>O:switchstate)
BS_KA_GEN_TIES_OPEN_OFF#0 (>L:var_busTieManOpen, bool) 1 (>O:switchstate)
BS_KA_GEN_TIES_OPEN_ON#0 (>L:var_busTieManClose, bool) 1 (>L:var_busTieManOpen, bool) 2 (>O:switchstate)
BS_KA_L_ALT_OFF#0 (>L:var_genReset_L, bool) 2 (>L:var_genSwitchPos_L, number)
BS_KA_L_ALT_ON#0 (>L:var_genReset_L, bool) 1 (>L:var_genSwitchPos_L, number)
BS_KA_L_ALT_RESET#1 (>L:var_genReset_L, bool) 0 (>L:var_genSwitchPos_L, number)
BS_KA_LEFT_AC_INVERTER_BUS_TRANSFER_OFF#6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 6 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 6 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 7 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 7 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_LEFT_AC_INVERTER_BUS_TRANSFER_ON#6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 6 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 7 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_LEFT_AC_INVERTER_OFF#6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 6 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 6 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 7 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 7 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_LEFT_AC_INVERTER_ON#6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) ! if{ 6 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) ! if{ 7 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_R_ALT_OFF#0 (>L:var_genReset_R, bool) 2 (>L:var_genSwitchPos_R, number)
BS_KA_R_ALT_ON#0 (>L:var_genReset_R, bool) 1 (>L:var_genSwitchPos_R, number)
BS_KA_R_ALT_RESET#1 (>L:var_genReset_R, bool) 0 (>L:var_genSwitchPos_R, number)
BS_KA_RIGHT_AC_INVERTER__ON#8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 8 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 9 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_RIGHT_AC_INVERTER_BUS_TRANSFER_OFF#8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 8 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 8 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 9 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 9 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_RIGHT_AC_INVERTER_BUS_TRANSFER_ON#8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) ! if{ 8 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) ! if{ 9 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_KA_RIGHT_AC_INVERTER_OFF#8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 8 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 8 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 9 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:4, Bool) if{ 9 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
//Black Square/Analog King Air/Engines
BK_KA_PROP_TEST_GOV_OFF#0 (>L:var_PropTestMainSwitch, bool) 0 (>A:CIRCUIT SWITCH ON:146, bool)
BS_KA_AUTOFEATHER_ARM_ON#1 (>K:TOGGLE_AUTOFEATHER_ARM) 1 (>A:CIRCUIT SWITCH ON:45, bool) 0 (>L:var_autoFeatherTest, bool)
BS_KA_AUTOFEATHER_OFF#0 (>K:TOGGLE_AUTOFEATHER_ARM) 0 (>A:CIRCUIT SWITCH ON:45, bool) 0 (>L:var_autoFeatherTest, bool)
BS_KA_AUTOFEATHER_TEST#0 (>K:TOGGLE_AUTOFEATHER_ARM) 1 (>A:CIRCUIT SWITCH ON:45, bool) 1 (>L:var_autoFeatherTest, bool)
BS_KA_LEFT_AUTO_IGNITION_ARM_OFF#0 (>L:leftAutoIgnitionSwitch, bool)
BS_KA_LEFT_AUTO_IGNITION_ARM_ON#1 (>L:leftAutoIgnitionSwitch, bool)
BS_KA_LEFT_ENGINE_START_OFF#0 (>K:TURBINE_IGNITION_SWITCH_SET1) 0 (>K:STARTER1_SET)
BS_KA_LEFT_ENGINE_START_ON#1 (>K:TURBINE_IGNITION_SWITCH_SET1) 1 (>K:STARTER1_SET)
BS_KA_LEFT_ENGINE_STARTER_ONLY_ON#0 (>K:TURBINE_IGNITION_SWITCH_SET1) 1 (>K:STARTER1_SET)
BS_KA_PROP_TEST_GND_IDLE_STOP_OFF#0 (>L:var_PropTestGroundSwitch, bool) 0 (>A:CIRCUIT SWITCH ON:146, bool) 0 (>L:var_PropTestGroundSwitch_Latch_L, bool) 0 (>L:var_PropTestGroundSwitch_Latch_R, bool)
BS_KA_PROP_TEST_GND_IDLE_STOP_ON#1 (>L:var_PropTestGroundSwitch, bool) 1 (>A:CIRCUIT SWITCH ON:146, bool) 0 (>L:var_PropTestGroundSwitch_Latch_L, bool) 0 (>L:var_PropTestGroundSwitch_Latch_R, bool)
BS_KA_PROP_TEST_GOV_ON#1 (>L:var_PropTestMainSwitch, bool) 1 (>A:CIRCUIT SWITCH ON:146, bool)
BS_KA_RIGHT_AUTO_IGNITION_ARM_OFF#0 (>L:rightAutoIgnitionSwitch, bool)
BS_KA_RIGHT_AUTO_IGNITION_ARM_ON#1 (>L:rightAutoIgnitionSwitch, bool)
BS_KA_RIGHT_ENGINE_START_OFF#0 (>K:TURBINE_IGNITION_SWITCH_SET2) 0 (>K:STARTER2_SET)
BS_KA_RIGHT_ENGINE_START_ON#1 (>K:TURBINE_IGNITION_SWITCH_SET2) 1 (>K:STARTER2_SET)
BS_KA_RIGHT_ENGINE_STARTER_ONLY#0 (>K:TURBINE_IGNITION_SWITCH_SET2) 1 (>K:STARTER2_SET)
//Black Square/Analog King Air/Fire
BS_KA_Fire_Detection_Mode_Switch_Left_Fire__off_#(L:var_fireTestMode, number) 0 > if{ (L:var_fireTestMode, number) 4 - (>L:var_fireTestMode, number) }
BS_KA_Fire_Detection_Mode_Switch_Left_Fire__on_#(L:var_fireTestMode, number) 4 < if{ (L:var_fireTestMode, number) 4 + (>L:var_fireTestMode, number) }
BS_KA_Fire_Detection_Mode_Switch_Off__off_#(L:var_fireTestMode, number) 0 > if{ (L:var_fireTestMode, number) 2 - (>L:var_fireTestMode, number) }
BS_KA_Fire_Detection_Mode_Switch_Off__on_#(L:var_fireTestMode, number) 4 < if{ (L:var_fireTestMode, number) 2 + (>L:var_fireTestMode, number) }
BS_KA_Fire_Detection_Mode_Switch_Right_Extinguisher__off_#(L:var_fireTestMode, number) 0 > if{ (L:var_fireTestMode, number) 1 - (>L:var_fireTestMode, number) }
BS_KA_Fire_Detection_Mode_Switch_Right_Extinguisher__on_#(L:var_fireTestMode, number) 4 < if{ (L:var_fireTestMode, number) 1 + (>L:var_fireTestMode, number) }
BS_KA_Fire_Detection_Mode_Switch_Right_Fire__off_#(L:var_fireTestMode, number) 0 > if{ (L:var_fireTestMode, number) 3 - (>L:var_fireTestMode, number) }
BS_KA_Fire_Detection_Mode_Switch_Right_Fire__on_#(L:var_fireTestMode, number) 4 < if{ (L:var_fireTestMode, number) 3 + (>L:var_fireTestMode, number) }
//Black Square/Analog King Air/Gear
BS_KA_LANDING_GEAR_DOWN#(>K:GEAR_DOWN)
BS_KA_LANDING_GEAR_UP#(>K:GEAR_UP)
BS_KA_PARKING_BRAKE_OFF#0 (>K:PARKING_BRAKE_SET)
BS_KA_PARKING_BRAKE_ON#1 (>K:PARKING_BRAKE_SET)
//Black Square/Analog King Air/Lights
BS_KA_AVIONICS_PANEL_KNOB_DEC#(L:LIGHTING_PANEL_2_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_2_power_setting) 
BS_KA_AVIONICS_PANEL_KNOB_INC#(L:LIGHTING_PANEL_2_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_2_power_setting) 
BS_KA_BEACON_LIGHTS_OFF#0 s0 1 l0 (>K:2:BEACON_LIGHTS_SET) l0 (>L:LIGHTING_BEACON_1)
BS_KA_BEACON_LIGHTS_ON#1 s0 1 l0 (>K:2:BEACON_LIGHTS_SET) l0 (>L:LIGHTING_BEACON_1)
BS_KA_COPILOT_FLIGHT_INSTR_KNOB_DEC#(L:LIGHTING_PANEL_4_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_4_power_setting) 
BS_KA_COPILOT_FLIGHT_INSTR_KNOB_INC#(L:LIGHTING_PANEL_4_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_4_power_setting) 
BS_KA_COPILOT_GYRO_INSTR_KNOB_DEC#(L:LIGHTING_PANEL_9_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_9_power_setting) 
BS_KA_COPILOT_GYRO_INSTR_KNOB_INC#(L:LIGHTING_PANEL_9_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_9_power_setting) 
BS_KA_COPILOT_OVHD_FLOOD_KNOB_DEC#(L:LIGHTING_PANEL_8_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_8_power_setting) 
BS_KA_COPILOT_OVHD_FLOOD_KNOB_INC#(L:LIGHTING_PANEL_8_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_8_power_setting) 
BS_KA_EMERENCY_LIGHTS_TOGGLE#65 13 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 13 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:65, Bool) if{ 1 (>K:GLARESHIELD_LIGHTS_SET) } els{ (L:var_masterPanelLights, bool) ! if{ 0 (>K:GLARESHIELD_LIGHTS_SET) } }
BS_KA_ENGINE_INSTR_KNOB_DEC#(L:LIGHTING_PANEL_7_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_7_power_setting) 
BS_KA_ENGINE_INSTR_KNOB_INC#(L:LIGHTING_PANEL_7_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_7_power_setting) 
BS_KA_ICE_LIGHT_OFF#0 (>K:WING_LIGHTS_SET)
BS_KA_ICE_LIGHT_ON#1 (>K:WING_LIGHTS_SET)
BS_KA_INSTR_INDIRECT_KNOB_DEC#(L:LIGHTING_GLARESHIELD_1_power_setting) 5 - 0 max 100 min (>L:LIGHTING_GLARESHIELD_1_power_setting) 
BS_KA_INSTR_INDIRECT_KNOB_INC#(L:LIGHTING_GLARESHIELD_1_power_setting) 5 + 0 max 100 min (>L:LIGHTING_GLARESHIELD_1_power_setting) 
BS_KA_MASTER_PANEL_LIGHTS_OFF#0 (>L:var_masterPanelLights, bool)
BS_KA_MASTER_PANEL_LIGHTS_ON#1 (>L:var_masterPanelLights, bool)
BS_KA_NAV_LIGHTS_OFF#1 0 (>K:2:NAV_LIGHTS_SET) 0 (>L:LIGHTING_NAV_1) 
BS_KA_NAV_LIGHTS_ON#1 1 (>K:2:NAV_LIGHTS_SET) 1 (>L:LIGHTING_NAV_1) 
BS_KA_OVHD_LIGHT_PANEL_KNOB_DEC#(L:LIGHTING_PANEL_5_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_5_power_setting) 
BS_KA_OVHD_LIGHT_PANEL_KNOB_INC_#(L:LIGHTING_PANEL_5_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_5_power_setting) 
BS_KA_OVHD_PED___SUBPANEL_KNOB_DEC#(L:LIGHTING_PANEL_3_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_3_power_setting) 
BS_KA_OVHD_PED___SUBPANEL_KNOB_INC#(L:LIGHTING_PANEL_3_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_3_power_setting) 
BS_KA_PILOT_FLIGHT_INSTR_KNOB_DEC#(L:LIGHTING_PANEL_1_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_1_power_setting) 
BS_KA_PILOT_FLIGHT_INSTR_KNOB_INC#(L:LIGHTING_PANEL_1_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_1_power_setting) 
BS_KA_PILOT_OVHD_FLOOD_KNOB_DEC#(L:LIGHTING_PANEL_5_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_5_power_setting) 
BS_KA_PILOT_OVHD_FLOOD_KNOB_INC#(L:LIGHTING_PANEL_5_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_5_power_setting)
BS_KA_SIDE_PANEL_KNOB_DEC#(L:LIGHTING_PANEL_6_power_setting) 5 - 0 max 100 min (>L:LIGHTING_PANEL_6_power_setting)
BS_KA_SIDE_PANEL_KNOB_INC#(L:LIGHTING_PANEL_6_power_setting) 5 + 0 max 100 min (>L:LIGHTING_PANEL_6_power_setting) 
BS_KA_STROBE_LIGHTS_OFF#0 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)
BS_KA_STROBE_LIGHTS_ON#1 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)
//Black Square/Analog King Air/Miscellaneous
BS_KA_Prop_Sync#1 (>K:TOGGLE_PROPELLER_SYNC) (A:PROP SYNC ACTIVE, bool) (>A:CIRCUIT SWITCH ON:145, bool)
//Black Square/Analog King Air/Navigation
GPS_APR__ACTV_#1 (>L:XMLVAR_GPS_Approach, number)
GPS_APR__ARM_#0 (>L:XMLVAR_GPS_Approach, number)
HDG_CENTER#(A:HEADING INDICATOR degrees) (>K:1:HEADINGBUGSET)
//Black Square/Analog King Air/O2 System
PASSENGER_OXYGEN_MANUAL__ABAJO_#0 (>L:var_PassOxygenManual, Number)
PASSENGER_OXYGEN_MANUAL__ARRIBA_#1 (>L:var_PassOxygenManual, Number)
PASSENGER_OXYGEN_READY#1 (>L:var_PassOxygenReady, Number)
PASSENGER_OXYGEN_READY__DOWN_#0 (>L:var_PassOxygenReady, Number)
//Black Square/Analog King Air/Pressurization
ELEC_TRIM_OFF#0 (>A:CIRCUIT SWITCH ON:73, number)
ELEC_TRIM_ON#100 (>A:CIRCUIT SWITCH ON:73, number)
RUDDER_BOOST_OFF#0 (>A:CIRCUIT SWITCH ON:125, number)
RUDDER_BOOST_ON#100 (>A:CIRCUIT SWITCH ON:125, number)
//Black Square/Analog King Air/Radar
Bendix_RDR1150XL_HOLD#(>H:bksq_wradar1_radarHold)
Bendix_RDR1150XL_LOG#5 (>L:var_radarMode, number) (L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 
Bendix_RDR1150XL_MAP#(>H:bksq_wradar1_radarMap)
Bendix_RDR1150XL_NAV#4 (>L:var_radarMode, number) (L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 
Bendix_RDR1150XL_OFF#0 (>L:var_radarMode, number) (L:var_radar_Mode, number) 0 == (A:CIRCUIT SWITCH ON:131, Boolean) and if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
Bendix_RDR1150XL_ON#3 (>L:var_radarMode, number) (L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 
Bendix_RDR1150XL_RNG_DOWN#(>H:bksq_wradar1_radarRangeDec)
Bendix_RDR1150XL_RNG_UP#(>H:bksq_wradar1_radarRangeInc)
Bendix_RDR1150XL_STBY#1 (>L:var_radarMode, number) (L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }  
Bendix_RDR1150XL_TRACK_LEFT#(>H:bksq_wradar1_radarTrackLeft)
Bendix_RDR1150XL_TRACK_RIGHT#(>H:bksq_wradar1_radarTrackRight) 
Bendix_RDR1150XL_TST#2 (>L:var_radarMode, number) (L:var_radar_Mode, number) 0 > (A:CIRCUIT SWITCH ON:131, Boolean) ! if{ 131 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 
Bendix_RDR1150XL_VP#(>H:bksq_wradar1_radarProfile)
Bendix_RDR1150XL_Wx_WxA#(>H:bksq_wradar1_radarAlertToggle)
//Black Square/Analog King Air/Warning
MASTER_CAUTION#100 (>L:var_masterCautionLatching, number)
MASTER_WARNING#100 (>L:var_masterWarningLatching, number)
//Black Square/AnalogBaron/Air Condition / Pressurization
A_C_master_switch_off#0 (>A:CIRCUIT SWITCH ON:23, bool)
A_C_master_switch_on#1 (>A:CIRCUIT SWITCH ON:23, bool)
vent_blower_off#0 (>A:CIRCUIT SWITCH ON:22, bool)
vent_blower_on#1 (>A:CIRCUIT SWITCH ON:22, bool)
//Black Square/AnalogBaron/Anti Ice
Fuel_Vent#(L:var_FuelVentHeatSwitch, bool) ! (>L:var_FuelVentHeatSwitch, bool) (L:var_FuelVentHeatSwitch, bool) 0 (>L:var_FuelVentHeatSwitch, bool)
Stall_Warn_Heat_OFF#(L:var_StallWarningHeatSwitch, bool) 0 (>L:var_StallWarningHeatSwitch, bool)
Stall_Warn_Heat_ON#(L:var_StallWarningHeatSwitch, bool) ! (>L:var_StallWarningHeatSwitch, bool)
//Black Square/AnalogBaron/Anti-Ice
PITOT_HEAT_ON#(>K:PITOT_HEAT_ON)
//Black Square/AnalogBaron/Avionics
B58_Edm_760_Lean_find_Long_Push#(>H:bksq_JpiButton_1_R_Long)
B58_Edm_760_Lean_find_Short_Push#(>H:bksq_JpiButton_1_R_Short)
B58_Edm_760_Step_Short_Push#(>H:bksq_JpiButton_1_L_Short)
B58_Edm_760_Step_long_Push#(>H:bksq_JpiButton_1_L_Long)
//Black Square/AnalogBaron/Controls
FLAPS_APP#(>K:FLAPS_1)
FLAPS_FULL#(>K:FLAPS_3)
FLAPS_UP#(>K:FLAPS_UP)
PARKING_BRAKES_OFF#0 (>K:PARKING_BRAKE_SET)
PARKING_BRAKES_ON#1 (>K:PARKING_BRAKE_SET)
//Black Square/AnalogBaron/Electrical
AVIONIC_MASTER_OFF#0 (>L:var_avionicsMasterSwitch, Bool) 4 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 2 19 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 3 21 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
AVIONIC_MASTER_ON#1 (>L:var_avionicsMasterSwitch, Bool) 4 17 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 2 19 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 3 21 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
LEFT_ALTERNATOR_OFF#(L:BKSQ_alternatorSwitch_L bool) 0 (>L:BKSQ_alternatorSwitch_L, bool)
LEFT_ALTERNATOR_ON#(L:BKSQ_alternatorSwitch_L bool) ! (>L:BKSQ_alternatorSwitch_L, bool)
RIGHT_ALTERNATOR_OFF#(L:BKSQ_alternatorSwitch_R bool) 0 (>L:BKSQ_alternatorSwitch_R, bool)
RIGHT_ALTERNATOR_ON#(L:BKSQ_alternatorSwitch_R bool) ! (>L:BKSQ_alternatorSwitch_R, bool)
//Black Square/AnalogBaron/Engine
PROPELLER_SYNC#(>K:TOGGLE_PROPELLER_SYNC)
//Black Square/AnalogBaron/Gear
LANDING_GEAR_LEVER#p0 0 max 1 min s0 (>K:GEAR_SET) 10 (>L:LANDING_GEAR_Gear)
//Black Square/AnalogBonanza/Air Condition and Pressurization
Analog_Bonanza_Oxygen_Toggle#(L:var_oxygenOn, bool) ! (>L:var_oxygenOn, bool)
//Black Square/AnalogBonanza/Autopilot
Alt_VS_Decrease#A:CIRCUIT ON:61,bool) (L:var_AutopilotTest,bool) ! and if{ (L:var_VsAdjustMode, bool) if{  (A:AUTOPILOT ALTITUDE LOCK, bool) if{  (>K:AP_PANEL_ALTITUDE_OFF)  (>K:AP_PANEL_VS_ON) }  1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 - -3000 max 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ 100 (>K:AP_ALT_VAR_DEC) } } 
Alt_VS_Increase#(A:CIRCUIT ON:61,bool) (L:var_AutopilotTest,bool) ! and if{ (L:var_VsAdjustMode, bool) if{  (A:AUTOPILOT ALTITUDE LOCK, bool) if{  (>K:AP_PANEL_ALTITUDE_OFF)  (>K:AP_PANEL_VS_ON) }  1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 + -3000 max 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ 100 (>K:AP_ALT_VAR_INC) } } 
Altitude_Selector_Mode#(L:var_VsAdjustMode, bool) ! (>L:var_VsAdjustMode, bool)
//Black Square/AnalogBonanza/Avionics
Master_Avionics_Off#0 (A:CIRCUIT SWITCH ON:48, Bool) != if{ 48 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:48, Bool) 5 (A:1:BUS CONNECTION ON:2, Bool) != if{ 2 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:48, Bool) (>O:ELECTRICAL_Avionics_Bus_1_Position)
Master_Avionics_On#1 (A:CIRCUIT SWITCH ON:48, Bool) != if{ 48 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:48, Bool) 5 (A:1:BUS CONNECTION ON:2, Bool) != if{ 2 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:48, Bool) (>O:ELECTRICAL_Avionics_Bus_1_Position)
Starter_to_Both#4 (>L:BKSQ_IgnitionPosition_1)
Starter_to_L#2 (>L:BKSQ_IgnitionPosition_1)
Starter_to_R#1 (>L:BKSQ_IgnitionPosition_1)
Starter_to_Start#5 (>L:BKSQ_IgnitionPosition_1)
//Black Square/AnalogBonanza/Controls
Elevator_Trim_Dec#(>K:ELEV_TRIM_DN)
Elevator_Trim_Inc#(>K:ELEV_TRIM_UP)
//Black Square/AnalogBonanza/Electrical
_Alternator_Off#0 (>L:BKSQ_alternatorSwitch, bool)
Alternator_On#1 (>L:BKSQ_alternatorSwitch, bool)
Load_Meter_Mode_Off#0 (>L:BKSQ_loadMeterMode, bool)
Load_Meter_Mode_On#1 (>L:BKSQ_loadMeterMode, bool)
Standby_Alternator_Off#0 (>L:BKSQ_standbyAlternatorSwitch, bool)
Standby_Alternator_On#1 (>L:BKSQ_standbyAlternatorSwitch, bool)
//Black Square/AnalogBonanza/Engine Cooling
Analog_Bonanza_Cowl_Flaps_Toggle#(B:ENGINE_COWLFLAPS_Set) ! (>B:ENGINE_COWLFLAPS_Set)
//Black Square/AnalogBonanza/Fuel
Analog_Bonanza_Electric_Fuel_Pump_Toggle#(L:var_FUEL_Switch_Pump_1, Number) 2 == if{ 0 (>L:var_FUEL_Switch_Pump_1, Number) } els{ (L:var_FUEL_Switch_Pump_1, Number) 1 + (>L:var_FUEL_Switch_Pump_1, Number) }
Analog_Bonanza_Toggle_Both_Tip_Tanks_Transfer#(L:TipTankTransferSwitch_L, bool) ! (>L:TipTankTransferSwitch_L, bool) && (L:TipTankTransferSwitch_R, bool) ! (>L:TipTankTransferSwitch_R, bool)
Aux_Fuel_Pump_HI#2 (>L:var_FUEL_Switch_Pump_1, number)
Aux_Fuel_Pump_Low#1 (>L:var_FUEL_Switch_Pump_1, number)
Aux_Fuel_Pump_Off#0 (>L:var_FUEL_Switch_Pump_1, number)
//Black Square/AnalogBonanza/Navigation
KNS-81_KHS_Decrease#(>H:KNS81_smallDec)
//Black Square/Baron G58/Fuel
G58_Fuel_Boost_Pump_R_Switch_Hi#1 (>A:CIRCUIT SWITCH ON:5, Bool) 2 (>L:var_FUEL_Switch_Pump_2, number)
G58_Fuel_Boost_Pump_R_Switch_Lo#1 (>A:CIRCUIT SWITCH ON:5, Bool) 1 (>L:var_FUEL_Switch_Pump_2, number)
G58_Fuel_Boost_Pump_R_Switch_Off#0 (>A:CIRCUIT SWITCH ON:5, Bool) 0 (>L:var_FUEL_Switch_Pump_2, number)
//Black Square/Bonanza G36/Electrical
G36_ENGINE_STARTE_ON#1 (>K:SET_STARTER1_HELD)
G36_ENGINE_START_OFF#0 (>K:SET_STARTER1_HELD)
G36_MAGNETO_BOTH#3 (>L:BKSQ_IgnitionPosition_1)
G36_MAGNETO_LEFT#3 (>L:BKSQ_IgnitionPosition_1)
G36_MAGNETO_OFF#0 (>L:BKSQ_IgnitionPosition_1)
G36_MAGNETO_RIGHT#1 (>L:BKSQ_IgnitionPosition_1)
//Black Square/Duke/Air Condition and Pressurization
Intercooler_Bypass_axis_both_sides#@ -655.35 / 100 + 0 max 100 min (>L:XMLVAR_Cabin_Heat_1_Position, Number) @ -655.35 / 100 + 0 max 100 min (>L:XMLVAR_Cabin_Heat_2_Position, Number)
//Black Square/Duke/Annunciator Panel
Landing_Gear_Center_Test_Button#1 (>L:bksq_GearCenterTestButton_IsDown) 0 (>L:bksq_GearCenterTestButton_IsDown)
Landing_Gear_Left_Test_Button#1 (>L:bksq_GearLeftTestButton_IsDown) 0 (>L:bksq_GearLeftTestButton_IsDown)
Landing_Gear_Right_Test_Button#1 (>L:bksq_GearRightTestButton_IsDown) 0 (>L:bksq_GearRightTestButton_IsDown)
Landing_Gear_Unsafe_Test_Button#1 (>L:bksq_GearUnsafeTestButton_IsDown) 0 (>L:bksq_GearUnsafeTestButton_IsDown)
//Black Square/Duke/Autopilot System
ALT_Selector_100_1000_Incline_Switch#1 (>L:var_AltitudeSelectorKnobPushed) 0 (>L:var_AltitudeSelectorKnobPushed)
AutoPilot_ALT_Selector_Decrease#(>K:AP_ALT_VAR_DEC) 
AutoPilot_ALT_Selector_Increase#(>K:AP_ALT_VAR_INC)
//Black Square/Duke/Autopilot
ALT_AP_100_1000_SW#(L:var_AltitudeSelectorKnobPushed, bool) ! (&gt;L:var_AltitudeSelectorKnobPushed, bool)
AP_Century_IV_Pitch_DOWN#(L:var_AP_PitchKnob) 0.5 + 14.5 min (>L:var_AP_PitchKnob)
AP_Century_IV_pitch_UP#(L:var_AP_PitchKnob) 0.5 - -14.5 max (>L:var_AP_PitchKnob)
ATT_pitch_hold_toggle#(>K:AP_PITCH_LEVELER_ON)
Altitude_set_decrease#(L:var_AltitudeSelectorKnobPushed, bool) if{  (A:AUTOPILOT ALTITUDE LOCK VAR, FEET) 0 > if{  100 (>K:AP_ALT_VAR_DEC)  } } els{  (A:AUTOPILOT ALTITUDE LOCK VAR, FEET) 900 > if{  1000 (>K:AP_ALT_VAR_DEC)  } }
Altitude_set_increase#(L:var_AltitudeSelectorKnobPushed, bool) if{  (A:AUTOPILOT ALTITUDE LOCK VAR, FEET) 49900 < if{  100 (>K:AP_ALT_VAR_INC)  } } els{  (A:AUTOPILOT ALTITUDE LOCK VAR, FEET) 49000 < if{  1000 (>K:AP_ALT_VAR_INC)  } }
Toggle_alt_select_1000_100#(L:var_AltitudeSelectorKnobPushed, bool) ! (>L:var_AltitudeSelectorKnobPushed, bool)
//Black Square/Duke/Avionics
Gyro_Slave_Mode_Switch#1 (>L:var_GyroSlaveModeSwitch) 0(>L:var_GyroSlaveModeSwitch)
//Black Square/Duke/Electrical
Avionics_AC_inverter_-_Select_Main#0 (>L:var_InverterSwitch)
Avionics_AC_inverter_-_Select_Standby#2 (>L:var_InverterSwitch)
Avionics_AC_inverter_off#1 (>L:var_InverterSwitch)
Battery_Selector_Switch_Both#1 (>L:var_BatterySelectSwitch)
Left_Generator_off#(A:GENERAL ENG MASTER ALTERNATOR:1, bool) if{ (>K:TOGGLE_ALTERNATOR1) }
Left_Generator_on#(A:GENERAL ENG MASTER ALTERNATOR:1, bool) ! if{ (>K:TOGGLE_ALTERNATOR1) }
Right_Generator_off#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) }
Right_Generator_on#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) }
//Black Square/Duke/Engine
Prop_Sync_off#(A:PROP SYNC ACTIVE, bool) if{ (>K:TOGGLE_PROPELLER_SYNC) }
Prop_Sync_on#(A:PROP SYNC ACTIVE, bool) ! if{ (>K:TOGGLE_PROPELLER_SYNC) }
//Black Square/Duke/Engines
Left_Fuel_Pump_Switch_-_AUX#2 (>L:var_FuelPumpSwitch_L)
Left_Fuel_Pump_Switch_-_OFF#1 (>L:var_FuelPumpSwitch_L)
Left_Fuel_Pump_Switch_-_WING#0 (>L:var_FuelPumpSwitch_L)
Left_Ignition_Switch_-_AUTO#2 (>L:var_IgnitionSwitch_L)
Left_Ignition_Switch_-_OFF#1 (>L:var_IgnitionSwitch_L)
Left_Ignition_Switch_-_ON#0 (>L:var_IgnitionSwitch_L)
Left_Start_Gen_Switch_-_GEN#0 (>L:var_StarterGenSwitch_L)
Left_Start_Gen_Switch_-_OFF#1 (>L:var_StarterGenSwitch_L)
Left_Start_Gen_Switch_-_START#2 (>L:var_StarterGenSwitch_L)
Propeller_1_Feather#-16383 (>K:PROP_PITCH1_SET)
Propeller_2_Feather#-16383 (>K:PROP_PITCH2_SET)
Right_Fuel_Pump_Switch_-_AUX#2 (>L:var_FuelPumpSwitch_R)
Right_Fuel_Pump_Switch_-_OFF#1 (>L:var_FuelPumpSwitch_R)
Right_Fuel_Pump_Switch_-_WING#0 (>L:var_FuelPumpSwitch_R)
Right_Ignition_Switch_-_AUTO#2 (>L:var_IgnitionSwitch_R)
Right_Ignition_Switch_-_OFF#1 (>L:var_IgnitionSwitch_R)
Right_Ignition_Switch_-_ON#0 (>L:var_IgnitionSwitch_R)
Right_Start_Gen_Switch_-_GEN#0 (>L:var_StarterGenSwitch_R)
Right_Start_Gen_Switch_-_OFF#1 (>L:var_StarterGenSwitch_R)
Right_Start_Gen_Switch_-_START#2 (>L:var_StarterGenSwitch_R)
//Black Square/Duke/Flight Instruments
HSI_Gyro_Adjust_Knob__Push-in_#1 (>L:var_gyroAdjustMode) 0 (>L:var_gyroAdjustMode)
Pilot-Side_HSI_OBI_Decrease__VOR1_#(>K:VOR1_OBI_DEC)
Pilot-Side_HSI_OBI_Increase__VOR1_#(>K:VOR1_OBI_INC)
Pilot-Side_Localizer_Decrease__VOR2_#(>K:VOR2_OBI_DEC)
Pilot-Side_Localizer_Increase__VOR2_#(>K:VOR2_OBI_INC)
//Black Square/Duke/Fuel
Left_Fuel_Pump_off#0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }
Left_Fuel_Pump_on#1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET) }
Right_Fuel_Pump_off#0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:2, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP2_SET) }
Right_Fuel_Pump_on#1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:2, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP2_SET) }
//Black Square/Duke/Lights
Beacon___recognition_lights_on#2 (>L:var_BeaconRecogLights)
Beacon_light_off#1 (>L:var_BeaconRecogLights)
Beacon_light_on#0 (>L:var_BeaconRecogLights)
Duke_Cabin_Light_#(>L:var_LIGHTING_Push_Cockpit_1,1)
Duke_Panel_Light_Master#(>L:bksq_MasterPanelLights,0)
Duke_Wing_Ice_Light#(>B:LIGHTING_WING_1,100)
Nav_and_Strobe_on#2 (>L:var_NavStrobeLights)
Nav_light_off#1 (>L:var_NavStrobeLights)
Nav_light_on#0 (>L:var_NavStrobeLights)
Toggle_beacon_light_on_off#(L:var_BeaconRecogLights, bool) ! (>L:var_BeaconRecogLights, bool)
//Black Square/Duke/Miscellaneous
BS_Duke_Toggle_Tablet#(L:bksq_TabletVisible, bool) !  if($=1,0,1) (>L:bksq_TabletVisible, bool)
Engine_Trend_Monitor_AIRDATA_Page#3 (>L:var_EtmMode)
Engine_Trend_Monitor_ETM_Page#0 (>L:var_EtmMode)
Engine_Trend_Monitor_FUEL_Page#2 (>L:var_EtmMode)
Engine_Trend_Monitor_NAV_Page#1 (>L:var_EtmMode)
Yoke_Chronometer_Control_Button#0 2 1 3 (L:var_yokeTimerMode_L) case (>L:var_yokeTimerMode_L)
//Black Square/Duke/Warning
Master_Caution_Press#2 (>L:var_masterCautionLatching)
Master_Warning_Press#2 (>L:var_masterWarningLatching)
//Black Square/Starship/Autopilot System
Left_Starter_Switch_-_OFF#1 (>L:var_StarterSwitch_L)
Right_Starter_Switch_-_OFF#1 (>L:var_StarterSwitch_R)
//Black Square/Starship/Autopilot
BS_Starship_Airspeed_Reference_Adjust_Decrease#(>H:ASI_AirspeedKnob_Dec_1)
BS_Starship_Airspeed_Reference_Adjust_Increase#(>H:ASI_AirspeedKnob_Inc_1)
BS_Starship_Altitude_Selector_Decrease#(>H:ALT_AltitudeSelectKnob_Dec_1)
BS_Starship_Altitude_Selector_Increase#(>H:ALT_AltitudeSelectKnob_Inc_1)
BS_Starship_Autopilot_Altitude_Hold_Mode#(>H:MSP_Altitude_1)
BS_Starship_Autopilot_Approach_Mode#(>H:MSP_Approach_1)
BS_Starship_Autopilot_Descent_Profile_Mode#(>H:MSP_Descend_1)
BS_Starship_Autopilot_Flight_Director_Off_Button#(>H:MSP_FlightDirectorOff_1)
BS_Starship_Autopilot_Heading_Mode#(>H:MSP_Heading_1)
BS_Starship_Autopilot_IAS_Hold_Mode#(>H:MSP_Airspeed_1)
BS_Starship_Autopilot_Master_Toggle#(>K:AP_MASTER)
BS_Starship_Autopilot_NAV_Mode#(>H:MSP_Nav_1)
BS_Starship_Autopilot_Vertical_Speed_Hold_Mode#(>H:MSP_VerticalSpeed_1)
BS_Starship_Captains_Course_Knob_CCW_Left#(>H:CHP_CourseKnob_Left_1)
BS_Starship_Captains_Course_Knob_CW_Right#(>H:CHP_CourseKnob_Right_1)
BS_Starship_Captains_Course_Knob_Push#(>H:CHP_CourseKnobPush_1)
BS_Starship_Copilots_Course_Knob_CCW_Left#(>H:CHP_CourseKnob_Left_2)
BS_Starship_Copilots_Course_Knob_CW_Right#(>H:CHP_CourseKnob_Right_2)
BS_Starship_Copilots_Course_Knob_Push#(>H:CHP_CourseKnobPush_2)
BS_Starship_Heading_Knob_CCW_Left#(>H:CHP_HeadingKnob_Left)
BS_Starship_Heading_Knob_CW_Right#(>H:CHP_HeadingKnob_Right)
BS_Starship_Heading_Knob_Push#(>H:CHP_HeadingKnobPush)
BS_Starship_Vertical_Speed_Reference_Decrease#(>H:ALT_VerticalSpeedKnob_Dec_1)
BS_Starship_Vertical_Speed_Reference_Increase#(>H:ALT_VerticalSpeedKnob_Inc_1)
BS_Starship_Yaw_Damper_Toggle#(>K:YAW_DAMPER_TOGGLE)
//Black Square/Starship/Avionics
BS_Starship_CDU_1_-_0_Button#(>H:CDU_0Button_1)
BS_Starship_CDU_1_-_1_ABC_Button#(>H:CDU_1Button_1)
BS_Starship_CDU_1_-_2_DEF_Button#(>H:CDU_2Button_1)
BS_Starship_CDU_1_-_3_GHI_Button#(>H:CDU_3Button_1)
BS_Starship_CDU_1_-_4_JKL_Button#(>H:CDU_4Button_1)
BS_Starship_CDU_1_-_5_MNO_Button#(>H:CDU_5Button_1)
BS_Starship_CDU_1_-_6_PQR_Button#(>H:CDU_6Button_1)
BS_Starship_CDU_1_-_7_STU_Button#(>H:CDU_7Button_1)
BS_Starship_CDU_1_-_8_VWX_Button#(>H:CDU_8Button_1)
BS_Starship_CDU_1_-_9_YZ_Button#(>H:CDU_9Button_1)
BS_Starship_CDU_1_-_ADF_Button#(>H:CDU_AdfButton_1)
BS_Starship_CDU_1_-_Arc_Map_Button#(>H:CDU_ArcMapButton_1)
BS_Starship_CDU_1_-_Bearing_Pointer_Source__Button#(>H:CDU_BearingButton_1)
BS_Starship_CDU_1_-_Clear_Button#(>H:CDU_ClearButton_1)
BS_Starship_CDU_1_-_Com_Button#(>H:CDU_ComButton_1)
BS_Starship_CDU_1_-_Direct_Button#(>H:CDU_DirectButton_1)
BS_Starship_CDU_1_-_Down_Arrow_Button#(>H:CDU_DownButton_1)
BS_Starship_CDU_1_-_Flight_Plan_Button#(>H:CDU_FlightPlanButton_1)
BS_Starship_CDU_1_-_HSI_Button#(>H:CDU_HsiButton_1)
BS_Starship_CDU_1_-_Index_Button#(>H:CDU_IndexButton_1)
BS_Starship_CDU_1_-_Letter_Button#(>H:CDU_LetterButton_1)
BS_Starship_CDU_1_-_Line_Select_1_Left#(>H:CDU_Line1L_1)
BS_Starship_CDU_1_-_Line_Select_1_Right#(>H:CDU_Line1R_1)
BS_Starship_CDU_1_-_Line_Select_2_Left#(>H:CDU_Line2L_1)
BS_Starship_CDU_1_-_Line_Select_2_Right#(>H:CDU_Line2R_1)
BS_Starship_CDU_1_-_Line_Select_3_Left#(>H:CDU_Line3L_1)
BS_Starship_CDU_1_-_Line_Select_3_Right#(>H:CDU_Line3R_1)
BS_Starship_CDU_1_-_Line_Select_4_Left#(>H:CDU_Line4L_1)
BS_Starship_CDU_1_-_Line_Select_4_Right#(>H:CDU_Line4R_1)
BS_Starship_CDU_1_-_Line_Select_5_Left#(>H:CDU_Line5L_1)
BS_Starship_CDU_1_-_Line_Select_5_Right#(>H:CDU_Line5R_1)
BS_Starship_CDU_1_-_Message_Button#(>H:CDU_MessageButton_1)
BS_Starship_CDU_1_-_Nav_Button#(>H:CDU_NavButton_1)
BS_Starship_CDU_1_-_Nav_Source_Button#(>H:CDU_SourceButton_1)
BS_Starship_CDU_1_-_Radar_Button#(>H:CDU_RadarButton_1)
BS_Starship_CDU_1_-_Radar_Control_Options_Button#(>H:CDU_RadarControlButton_1)
BS_Starship_CDU_1_-_System_Control_Button#(>H:CDU_SystemControlButton_1)
BS_Starship_CDU_1_-_Transponder_Button#(>H:CDU_TransponderButton_1)
BS_Starship_CDU_1_-_Up_Arrow_Button#(>H:CDU_UpButton_1)
BS_Starship_CDU_1_-_Vnav_Button#(>H:CDU_VnavButton_1)
BS_Starship_CDU_2_-_Line_Select_1_Left#(>H:CDU_Line1L_2)
BS_Starship_CDU_2_-_Line_Select_1_Right#(>H:CDU_Line1R_2)
BS_Starship_CDU_2_-_Line_Select_2_Left#(>H:CDU_Line2L_2)
BS_Starship_CDU_2_-_Line_Select_2_Right#(>H:CDU_Line2R_2)
BS_Starship_CDU_2_-_Line_Select_3_Left#(>H:CDU_Line3L_2)
BS_Starship_CDU_2_-_Line_Select_3_Right#(>H:CDU_Line3R_2)
BS_Starship_CDU_2_-_Line_Select_4_Left#(>H:CDU_Line4L_2)
BS_Starship_CDU_2_-_Line_Select_4_Right#(>H:CDU_Line4R_2)
BS_Starship_CDU_2_-_Line_Select_5_Left#(>H:CDU_Line5L_2)
BS_Starship_CDU_2_-_Line_Select_5_Right#(>H:CDU_Line5R_2)
BS_Starship_Checklist_Line_Advance_Yoke_Button#(>H:MFD_LineAdvance)
BS_Starship_Checklist_Page_Advance_Yoke_Button#(>H:MFD_PageAdvance)
BS_Starship_EICAS_Line_Select_1#(>H:EICAS_Line1)
BS_Starship_EICAS_Line_Select_2#(>H:EICAS_Line2)
BS_Starship_EICAS_Line_Select_3#(>H:EICAS_Line3)
BS_Starship_MFD_Line_Select_1_Bottom#(>H:MFD_Line1B)
BS_Starship_MFD_Line_Select_1_Left#(>H:MFD_Line1L)
BS_Starship_MFD_Line_Select_1_Right#(>H:MFD_Line1R)
BS_Starship_MFD_Line_Select_2_Bottom#(>H:MFD_Line2B)
BS_Starship_MFD_Line_Select_2_Left#(>H:MFD_Line2L)
BS_Starship_MFD_Line_Select_2_Right#(>H:MFD_Line2R)
BS_Starship_MFD_Line_Select_3_Bottom#(>H:MFD_Line3B)
BS_Starship_MFD_Line_Select_3_Left#(>H:MFD_Line3L)
BS_Starship_MFD_Line_Select_3_Right#(>H:MFD_Line3R)
BS_Starship_MFD_Line_Select_4_Bottom#(>H:MFD_Line4B)
BS_Starship_MFD_Line_Select_4_Left#(>H:MFD_Line4L)
BS_Starship_MFD_Line_Select_4_Right#(>H:MFD_Line4R)
BS_Starship_MFD_Line_Select_5_Bottom#(>H:MFD_Line5B)
BS_Starship_MFD_Line_Select_5_Left#(>H:MFD_Line5L)
BS_Starship_MFD_Line_Select_5_Right#(>H:MFD_Line5R)
BS_Starship_MFD_Line_Select_6_Bottom#(>H:MFD_Line6B)
BS_Starship_MFD_Line_Select_6_Left#(>H:MFD_Line6L)
BS_Starship_MFD_Line_Select_6_Right#(>H:MFD_Line6R)
BS_Starship_MFD_Line_Select_7_Bottom#(>H:MFD_Line7B)
//Black Square/Starship/Center Console
Joystick_Move_Down#(>H:MFD_Joystick_Down) 
//Black Square/Starship/Engines
Left_Starter_Switch_-_Starter_Only#2 (>L:var_StarterSwitch_L)
Left_Starter_Switch_-_Starter_and_Ignition#0 (>L:var_StarterSwitch_L)
Right_Starter_Switch_-_Starter_Only#2 (>L:var_StarterSwitch_R)
Right_Starter_Switch_-_Starter_and_Ignition#0 (>L:var_StarterSwitch_R)
//Black Square/Starship/Lights (exterior)
Beacon_Light_high_OFF#0 (>L:var_StrobeLight_High)
Beacon_Light_high_ON#1 (>L:var_StrobeLight_High)
//Black Square/TBM850/Air Condition and Pressurization
BS_TBM850_Ecs_Air_Condition_Fan#1 (>L:var_airconState, Number)
BS_TBM850_Ecs_Air_Condition_Move_Down#(L:var_airconState, Number) 1 - 0 max (>L:var_airconState, Number)
BS_TBM850_Ecs_Air_Condition_Move_Up#(L:var_airconState, Number) 1 + 2 min (>L:var_airconState, Number)
BS_TBM850_Ecs_Air_Condition_Off#0 (>L:var_airconState, Number)
BS_TBM850_Ecs_Air_Condition_On#2 (>L:var_airconState, Number)
BS_TBM850_Ecs_Air_Dump_Cover_Close#0 (>L:var_PressurizationDumpCover, Bool) 0 (>L:var_PressurizationDump, Bool)
BS_TBM850_Ecs_Air_Dump_Cover_Open#1 (>L:var_PressurizationDumpCover, Bool)
BS_TBM850_Ecs_Air_Dump_Cover_Toggle#(L:var_PressurizationDumpCover, Bool) ! (>L:var_PressurizationDumpCover, Bool) 0 (>L:var_PressurizationDump, Bool)
BS_TBM850_Ecs_Air_Dump_Switch_Off#0 (>L:var_PressurizationDump, Bool)
BS_TBM850_Ecs_Air_Dump_Switch_On#(L:var_PressurizationDumpCover, Bool) if{ 1 (>L:var_PressurizationDump, Bool) }
BS_TBM850_Ecs_Air_Dump_Switch_Toggle#(L:var_PressurizationDumpCover, Bool) if{ (L:var_PressurizationDump, Bool) ! (>L:var_PressurizationDump, Bool) }
BS_TBM850_Ecs_Air_Fan_Flow_Auto#1 (>L:var_FanSwitch, Bool)
BS_TBM850_Ecs_Air_Fan_Flow_Lo#0 (>L:var_FanSwitch, Bool)
BS_TBM850_Ecs_Air_Fan_Flow_Toggle#(L:var_FanSwitch, Bool) ! (>L:var_FanSwitch, Bool)
BS_TBM850_Ecs_Air_Flow_Full#100 (>L:var_AirFlowSelectorKnob, Number)
BS_TBM850_Ecs_Air_Flow_Inc#(L:var_AirFlowSelectorKnob, Number) 1 + 100 min (>L:var_AirFlowSelectorKnob, Number)
BS_TBM850_Ecs_Air_Flow_Off#0 (>L:var_AirFlowSelectorKnob, Number)
BS_TBM850_Ecs_Bleed_Air_Valve_Auto#1 (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Air_Valve_Hi#2 (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Air_Valve_Move_Down#(L:var_bleedState, Number) 1 - 0 max (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Air_Valve_Move_Up#(L:var_bleedState, Number) 1 + 2 min (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Air_Valve_Off#0 (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Auto#1 (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Hi#2 (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Move_Down#(L:var_bleedState, Number) 1 - 0 max (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Move_Up#(L:var_bleedState, Number) 1 + 2 min (>L:var_bleedState, Number)
BS_TBM850_Ecs_Bleed_Off_Reset#0 (>L:var_bleedState, Number)
BS_TBM850_Ecs_Cabin_Press_Goal_0#0 (>L:var_pressurizationGoal, FT)
BS_TBM850_Ecs_Cabin_Press_Goal_2000#2000 (>L:var_pressurizationGoal, FT)
BS_TBM850_Ecs_Cabin_Press_Goal_Dec#(L:var_pressurizationGoal, FT) 100 - -500 max (>L:var_pressurizationGoal, FT)
BS_TBM850_Ecs_Cabin_Press_Goal_Inc#(L:var_pressurizationGoal, FT) 100 + -500 max 10500 min (>L:var_pressurizationGoal, FT)
BS_TBM850_Ecs_Cabin_Press_Rate_Dec#(L:var_pressurizationClimbRate, Number) 50 - 150 max (>L:var_pressurizationClimbRate, Number)
BS_TBM850_Ecs_Cabin_Press_Rate_Dec#(L:var_pressurizationClimbRate, Number) 50 - 150 max (>L:var_pressurizationClimbRate, Number)
BS_TBM850_Ecs_Cabin_Press_Rate_High#2000 (>L:var_pressurizationClimbRate, Number)
BS_TBM850_Ecs_Cabin_Press_Rate_Inc#(L:var_pressurizationClimbRate, Number) 50 + 2000 min (>L:var_pressurizationClimbRate, Number)
BS_TBM850_Ecs_Cabin_Press_Rate_Low#150 (>L:var_pressurizationClimbRate, Number)
BS_TBM850_Ecs_Cabin_Press_Rate_Mid#1050 (>L:var_pressurizationClimbRate, Number)
BS_TBM850_Ecs_Cabin_Temp_15#60 (>L:var_CabinTemperatureKnob, Number)
BS_TBM850_Ecs_Cabin_Temp_20#70 (>L:var_CabinTemperatureKnob, Number)
BS_TBM850_Ecs_Cabin_Temp_25#80 (>L:var_CabinTemperatureKnob, Number)
BS_TBM850_Ecs_Cabin_Temp_Dec#(L:var_CabinTemperatureKnob, Number) 1 - 60 max (>L:var_CabinTemperatureKnob, Number)
BS_TBM850_Ecs_Cabin_Temp_Inc#(L:var_CabinTemperatureKnob, Number) 1 + 80 min (>L:var_CabinTemperatureKnob, Number)
BS_TBM850_Ecs_Light_Test_Down#1 (>L:var_EnvironmentalLightTestButton_IsDown, Number)
BS_TBM850_Ecs_Light_Test_Release#0 (>L:var_EnvironmentalLightTestButton_IsDown, Number)
//Black Square/TBM850/Anti Ice
BS_TBM850_Deice_Airframe_Off#0 (>L:var_airframeDeice, Bool)
BS_TBM850_Deice_Airframe_On#1 (>L:var_airframeDeice, Bool)
BS_TBM850_Deice_Airframe_Toggle#(L:var_airframeDeice, Bool) ! (>L:var_airframeDeice, Bool)
BS_TBM850_Deice_Inertial_Separator_Off#0 (>L:var_InertialSeparatorSwitch, Bool)
BS_TBM850_Deice_Inertial_Separator_On#1 (>L:var_InertialSeparatorSwitch, Bool)
BS_TBM850_Deice_Inertial_Separator_Toggle#(L:var_InertialSeparatorSwitch, Bool) ! (>L:var_InertialSeparatorSwitch, Bool)
BS_TBM850_Deice_Lights_Test_Down#1 (>L:var_SwitchesLightTest_IsDown, Bool)
BS_TBM850_Deice_Lights_Test_Up#0 (>L:var_SwitchesLightTest_IsDown, Bool)
BS_TBM850_Deice_Pitot_1_Off#1 (>L:DEICE_Pitot_1) 1 0 (>K:2:PITOT_HEAT_SET)
BS_TBM850_Deice_Pitot_1_On#1 (>L:DEICE_Pitot_1) 1 1 (>K:2:PITOT_HEAT_SET)
BS_TBM850_Deice_Pitot_1_Toggle#(L:DEICE_Pitot_1) ! s0 (>L:DEICE_Pitot_1) 1 l0 (>K:2:PITOT_HEAT_SET)
BS_TBM850_Deice_Pitot_2_Off#0 (>L:DEICE_Pitot_2) 2 0 (>K:2:PITOT_HEAT_SET)
BS_TBM850_Deice_Pitot_2_On#1 (>L:DEICE_Pitot_2) 2 1 (>K:2:PITOT_HEAT_SET)
BS_TBM850_Deice_Pitot_2_Toggle#(L:DEICE_Pitot_2) ! s0 (>L:DEICE_Pitot_2) 2 l0 (>K:2:PITOT_HEAT_SET)
BS_TBM850_Deice_Windshield_Left_Off#0 (>L:var_windshieldHeatSwitch_L, Bool)
BS_TBM850_Deice_Windshield_Left_On#1 (>L:var_windshieldHeatSwitch_L, Bool)
BS_TBM850_Deice_Windshield_Left_Toggle#(L:var_windshieldHeatSwitch_L, Bool) ! (>L:var_windshieldHeatSwitch_L, Bool)
BS_TBM850_Deice_Windshield_Right_Off#0 (>L:var_windshieldHeatSwitch_R, Bool)
BS_TBM850_Deice_Windshield_Right_On#1 (>L:var_windshieldHeatSwitch_R, Bool)
BS_TBM850_Deice_Windshield_Right_Toggle#(L:var_windshieldHeatSwitch_R, Bool) ! (>L:var_windshieldHeatSwitch_R, Bool)
BS_TBM850_Deice_Wing_Light_Off#1 0 (>K:2:WING_LIGHTS_SET)
BS_TBM850_Deice_Wing_Light_On#1 1 (>K:2:WING_LIGHTS_SET)
BS_TBM850_Deice_Wing_Light_Toggle#1 (L:LIGHTING_WING_1, Number) ! (>K:2:WING_LIGHTS_SET)
//Black Square/TBM850/Autopilot
BS_TBM850_Ap_Trim_Master_1_Off#0 (>L:BKSQ_AutopilotMasterSwitch, Number) 0 (>A:CIRCUIT SWITCH ON:8, Bool) 1 (>L:var_trimsDisabled, Bool)
BS_TBM850_Ap_Trim_Master_2_Ap_Off#1 (>L:BKSQ_AutopilotMasterSwitch, Number) 1 (>A:CIRCUIT SWITCH ON:8, Bool) 1 (>L:var_trimsDisabled, Bool)
BS_TBM850_Ap_Trim_Master_3_On#2 (>L:BKSQ_AutopilotMasterSwitch, Number) 1 (>A:CIRCUIT SWITCH ON:8, Bool) 0 (>L:var_trimsDisabled, Bool)
BS_TBM850_Ap_Trim_Master_Move_Down#(L:BKSQ_AutopilotMasterSwitch, Number) 2 == if{ 1 (>K:BKSQTbm850-ap_trim_master_2_ap_off) } els{ (L:BKSQ_AutopilotMasterSwitch, Number) 1 == if{ 1 (>K:BKSQTbm850-ap_trim_master_1_off) } }
BS_TBM850_Ap_Trim_Master_Move_Up#(L:BKSQ_AutopilotMasterSwitch, Number) 0 == if{ 1 (>K:BKSQTbm850-ap_trim_master_2_ap_off) } els{ (L:BKSQ_AutopilotMasterSwitch, Number) 1 == if{ 1 (>K:BKSQTbm850-ap_trim_master_3_on) } }
BS_TBM850_Kfc325_Alt#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_ALT_HOLD) }
BS_TBM850_Kfc325_Ap#(L:var_AutopilotStartupCounter, Number) 0 == if{ (A:AUTOPILOT MASTER, Bool) if{ 1 (>K:AP_MASTER) (A:AUTOPILOT YAW DAMPER, Bool) if{ 1 (>K:YAW_DAMPER_TOGGLE) } } els{ 1 (>K:AP_MASTER) } }
BS_TBM850_Kfc325_Apr#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_APR_HOLD) }
BS_TBM850_Kfc325_Bc#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_BC_HOLD) }
BS_TBM850_Kfc325_Dn#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_VS_VAR_DEC) }
BS_TBM850_Kfc325_Fd#(L:var_AutopilotStartupCounter, Number) 0 == if{ 0 (>K:TOGGLE_FLIGHT_DIRECTOR) }
BS_TBM850_Kfc325_Half_Bank#(L:var_AutopilotStartupCounter, Number) 0 == if{ (A:AUTOPILOT MAX BANK ID, Number) 1 < if{ 1 (>K:AP_MAX_BANK_SET) } els{ 0 (>K:AP_MAX_BANK_SET) } }
BS_TBM850_Kfc325_Hdg#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_PANEL_HEADING_HOLD) }
BS_TBM850_Kfc325_Ias#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, Knots) (>K:AP_SPD_VAR_SET) }
BS_TBM850_Kfc325_Nav#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_NAV1_HOLD) }
BS_TBM850_Kfc325_Soft_Ride#(L:var_AutopilotStartupCounter, Number) 0 == if{ (L:var_autopilotSoftRideMode, Bool) ! (>L:var_autopilotSoftRideMode, Bool) }
BS_TBM850_Kfc325_Test#10 (A:SIM ON GROUND, Bool) 35 * + (>L:var_AutopilotStartupCounter, Number)
BS_TBM850_Kfc325_Up#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:AP_VS_VAR_INC) }
BS_TBM850_Kfc325_Yd#(L:var_AutopilotStartupCounter, Number) 0 == if{ 1 (>K:YAW_DAMPER_TOGGLE) }
BS_TBM850_Yoke_Btn_Ap_Disconnect#(A:AUTOPILOT MASTER, Bool) if{ 1 (>K:AP_MASTER) 2 (>L:BKSQ_AUTOPILOT_DISCONNECT_SOUND, bool) } els{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) if{ 0 (>K:TOGGLE_FLIGHT_DIRECTOR) } }
BS_TBM850_Yoke_Btn_Cws_Press#1 (>L:var_PilotCws_IsDown, Number)
BS_TBM850_Yoke_Btn_Cws_Release#0 (>L:var_PilotCws_IsDown, Number)
//Black Square/TBM850/Avionics
BS_TBM850_Altimeter_2_Dec#2 (L:INSTRUMENT_Altimeter_2, Number) 0.3125 - 914 max 1083 min s0 16 * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_2)
BS_TBM850_Altimeter_2_Inc#2 (L:INSTRUMENT_Altimeter_2, Number) 0.3125 + 914 max 1083 min s0 16 * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_2)
BS_TBM850_Altimeter_Baro_Dec#(A:CIRCUIT ON:70, Bool) (A:KOHLSMAN SETTING HG, inHg) 27.0 > and if{ 1 (>K:KOHLSMAN_DEC) }
BS_TBM850_Altimeter_Baro_Inc#(A:CIRCUIT ON:70, Bool) (A:KOHLSMAN SETTING HG, inHg) 32.0 < and if{ 1 (>K:KOHLSMAN_INC) }
BS_TBM850_Altimeter_Std_Press#(A:CIRCUIT ON:70, Bool) if{ 1 (>K:BAROMETRIC_STD_PRESSURE) }
BS_TBM850_Annunciator_Brightness_Bright#0 (>L:var_AnnunciatorDim, Number)
BS_TBM850_Annunciator_Brightness_Dim#1 (>L:var_AnnunciatorDim, Number)
BS_TBM850_Annunciator_Brightness_Toggle#(L:var_AnnunciatorDim, Number) ! (>L:var_AnnunciatorDim, Number)
BS_TBM850_Annunciator_Test_1_Press#1 (>L:var_AnnunciatorTest1, Number)
BS_TBM850_Annunciator_Test_1_Release# 0 (>L:var_AnnunciatorTest1, Number)
BS_TBM850_Annunciator_Test_2_Press#1 (>L:var_AnnunciatorTest2, Number)
BS_TBM850_Annunciator_Test_2_Release#0 (>L:var_AnnunciatorTest2, Number)
BS_TBM850_Radar_Alt_Ccw#(L:var_copilotDecisionHeight, number) (L:var_copilotDecisionHeight, number) 500 < if{ 5 } els{ 50 } - 0 max (>L:var_copilotDecisionHeight, number)
BS_TBM850_Radar_Alt_Cw#(L:var_copilotDecisionHeight, number) 500 < if{ 5 } els{ 50 } (L:var_copilotDecisionHeight, number) + 2500 min (>L:var_copilotDecisionHeight, number)
BS_TBM850_Radar_Test_Press#1 (>L:var_RadarAltimeterTest_IsDown, Number)
BS_TBM850_Radar_Test_Release#0 (>L:var_RadarAltimeterTest_IsDown, Number)
BS_TBM850_Weather_Brightness_0#0 (>L:var_RadarBrightness, Number)
BS_TBM850_Weather_Brightness_100#100 (>L:var_RadarBrightness, Number)
BS_TBM850_Weather_Brightness_50#50 (>L:var_RadarBrightness, Number)
BS_TBM850_Weather_Brightness_Dec#(L:var_RadarBrightness, Number) 5 - 0 max (>L:var_RadarBrightness, Number)
BS_TBM850_Weather_Brightness_Inc#(L:var_RadarBrightness, Number) 5 + 100 min (>L:var_RadarBrightness, Number)
BS_TBM850_Weather_Button_Left_1_Wx_Wxa#1 (>H:bksq_wradar1_radarAlertToggle)
BS_TBM850_Weather_Button_Left_2_Vp#1 (>H:bksq_wradar1_radarProfile)
BS_TBM850_Weather_Button_Left_3_Map#1 (>H:bksq_wradar1_radarMap)
BS_TBM850_Weather_Button_Left_4_Hold#1 (>H:bksq_wradar1_radarHold)
BS_TBM850_Weather_Button_Right_1_Range_Inc#1 (>H:bksq_wradar1_radarRangeInc)
BS_TBM850_Weather_Button_Right_2_Range_Dec#1 (>H:bksq_wradar1_radarRangeDec)
BS_TBM850_Weather_Button_Right_3_Track_Left#1 (>H:bksq_wradar1_radarTrackLeft)
BS_TBM850_Weather_Button_Right_4_Track_Right#1 (>H:bksq_wradar1_radarTrackRight)
BS_TBM850_Weather_Gain_0#0 (>L:var_RadarGain, Number)
BS_TBM850_Weather_Gain_100#100 (>L:var_RadarGain, Number)
BS_TBM850_Weather_Gain_50#50 (>L:var_RadarGain, Number)
BS_TBM850_Weather_Gain_Dec#(L:var_RadarGain, Number) 5 - 0 max (>L:var_RadarGain, Number)
BS_TBM850_Weather_Gain_Inc#(L:var_RadarGain, Number) 5 + 100 min (>L:var_RadarGain, Number)
BS_TBM850_Weather_Mode_Dec#(L:var_radarMode, Number) 1 - 0 max (>L:var_radarMode, Number) (L:var_radarMode, Number) 1 == (A:CIRCUIT SWITCH ON:81, Bool) and if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
BS_TBM850_Weather_Mode_Inc#(L:var_radarMode, Number) 1 + 5 min (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) 0 == if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
BS_TBM850_Weather_Mode_Log#5 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
BS_TBM850_Weather_Mode_Nav#4 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
BS_TBM850_Weather_Mode_Off#0 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
BS_TBM850_Weather_Mode_On#3 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
BS_TBM850_Weather_Mode_Standby#1 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
BS_TBM850_Weather_Mode_Test#2 (>L:var_radarMode, Number) (A:CIRCUIT SWITCH ON:81, Bool) ! if{ 81 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
BS_TBM850_Weather_Tilt_0#50 (>L:var_RadarTilt, Number)
BS_TBM850_Weather_Tilt_Dec#(L:var_RadarTilt, Number) 5 - 0 max (>L:var_RadarTilt, Number)
BS_TBM850_Weather_Tilt_Inc#(L:var_RadarTilt, Number) 5 + 100 min (>L:var_RadarTilt, Number)
BS_TBM850_Weather_Tilt_Minus_15#0 (>L:var_RadarTilt, Number)
BS_TBM850_Weather_Tilt_Plus_15#100 (>L:var_RadarTilt, Number)
//Black Square/TBM850/Controls
BS_TBM850_Ail_Trim_Center# 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:6, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 12 > and if{ 0 (>K:AILERON_TRIM_SET_EX1) } (L:var_trimsDisabled, Bool) ! (>A:CIRCUIT SWITCH ON:6, Bool)
BS_TBM850_Ail_Trim_Left# 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:6, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 12 > and if{ (A:AILERON TRIM PCT, percent) 0.2 - 163.83 * 16383 min -16383 max (>K:AILERON_TRIM_SET_EX1) } (L:var_trimsDisabled, Bool) ! (>A:CIRCUIT SWITCH ON:6, Bool)
BS_TBM850_Ail_Trim_Right# 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:6, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 12 > and if{ (A:AILERON TRIM PCT, percent) 0.2 + 163.83 * 16383 min -16383 max (>K:AILERON_TRIM_SET_EX1) } (L:var_trimsDisabled, Bool) ! (>A:CIRCUIT SWITCH ON:6, Bool)
BS_TBM850_Flaps_850#1 (>L:var_850Mode, Number) 0 (>A:FLAPS HANDLE INDEX:1, Number)
BS_TBM850_Flaps_Landing#0 (>L:var_850Mode, Number) 2 (>A:FLAPS HANDLE INDEX:1, Number)
BS_TBM850_Flaps_Lever#(L:BKSQTbm850-flaps_lever) 0 == if{ 1 (>K:BKSQTbm850-flaps_850) } (L:BKSQTbm850-flaps_lever) 1 == if{ 1 (>K:BKSQTbm850-flaps_up) } (L:BKSQTbm850-flaps_lever) 2 == if{ 1 (>K:BKSQTbm850-flaps_take_off) } (L:BKSQTbm850-flaps_lever) 3 == if{ 1 (>K:BKSQTbm850-flaps_landing) }
BS_TBM850_Flaps_Move_Backward#(L:var_850Mode, Number) if{ 0 (>L:var_850Mode, Number) } els{ (A:FLAPS HANDLE INDEX:1, Number) 1 + 2 min (>A:FLAPS HANDLE INDEX:1, Number) }
BS_TBM850_Flaps_Move_Forward#(A:FLAPS HANDLE INDEX:1, Number) 0 == if{ 1 (>L:var_850Mode, Number) } (A:FLAPS HANDLE INDEX:1, Number) d 1 - 0 max (>A:FLAPS HANDLE INDEX:1, Number)
BS_TBM850_Flaps_Take_Off#0 (>L:var_850Mode, Number) 1 (>A:FLAPS HANDLE INDEX:1, Number)
BS_TBM850_Flaps_Up#0 (>L:var_850Mode, Number) 0 (>A:FLAPS HANDLE INDEX:1, Number)
BS_TBM850_Yoke_Btn_Rudder_Trim_Right# 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:7, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 22 > and if{ (A:RUDDER TRIM PCT, Percent) 0.2 + 163.83 * 16383 min -16383 max (>K:RUDDER_TRIM_SET_EX1) } (L:var_trimDisabled, bool) ! (>A:CIRCUIT SWITCH ON:7, Bool)
BS_TBM850_Yoke_Btn_Trim_Down# 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:5, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 21 > and if{ (A:ELEVATOR TRIM PCT, Percent) 0.2 - 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET) }
BS_TBM850_Yoke_Btn_Trim_Up# 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:5, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 21 > and if{ (A:ELEVATOR TRIM PCT, Percent) 0.2 + 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET) }
BS_TBM850_Yoke_Left_Hide#1 (>L:XMLVAR_YokeHidden1, Number)
BS_TBM850_Yoke_Left_Show#0 (>L:XMLVAR_YokeHidden1, Number)
BS_TBM850_Yoke_Left_Toggle#(L:XMLVAR_YokeHidden1, Number) ! (>L:XMLVAR_YokeHidden1, Number)
BS_TBM850_Yoke_Light_Left_Dec#(L:var_YokeLightKnob_L, Number) 5 - 0 max (>L:var_YokeLightKnob_L, Number)
BS_TBM850_Yoke_Light_Left_Inc#(L:var_YokeLightKnob_L, Number) 5 + 100 min (>L:var_YokeLightKnob_L, Number)
BS_TBM850_Yoke_Light_Left_Off#0 (>L:var_YokeLightKnob_L, Number)
BS_TBM850_Yoke_Light_Left_On#100 (>L:var_YokeLightKnob_L, Number)
BS_TBM850_Yoke_Light_Right_Dec#(L:var_YokeLightKnob_R, Number) 5 - 0 max (>L:var_YokeLightKnob_R, Number)
BS_TBM850_Yoke_Light_Right_Inc#(L:var_YokeLightKnob_R, Number) 5 + 100 min (>L:var_YokeLightKnob_R, Number)
BS_TBM850_Yoke_Light_Right_Off#0 (>L:var_YokeLightKnob_R, Number)
BS_TBM850_Yoke_Light_Right_On#100 (>L:var_YokeLightKnob_R, Number)
BS_TBM850_Yoke_Right_Hide#1 (>L:XMLVAR_YokeHidden2, Number)
BS_TBM850_Yoke_Right_Show#0 (>L:XMLVAR_YokeHidden2, Number)
BS_TBM850_Yoke_Right_Toggle#(L:XMLVAR_YokeHidden2, Number) ! (>L:XMLVAR_YokeHidden2, Number)
BS_TBM850_Yoke_Btn_Rudder_Trim_Left# 6 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:7, Bool) (A:ELECTRICAL MAIN BUS VOLTAGE:6, Volts) 22 > and if{ (A:RUDDER TRIM PCT, Percent) 0.2 - 163.83 * 16383 min -16383 max (>K:RUDDER_TRIM_SET_EX1) } (L:var_trimDisabled, bool) ! (>A:CIRCUIT SWITCH ON:7, Bool)
//Black Square/TBM850/EFIS
BS_TBM850_Efis_Alt_Mode_Dh_Set#0 (>L:var_efisDecisionHeightTest, bool) 1 (>L:var_efisDecisionHeightSet, bool)
BS_TBM850_Efis_Alt_Mode_Norm#0 (>L:var_efisDecisionHeightTest, bool) 0 (>L:var_efisDecisionHeightSet, bool)
BS_TBM850_Efis_Alt_Mode_Test#1 (>L:var_efisDecisionHeightTest, bool) 1 (>L:var_efisDecisionHeightSet, bool)
BS_TBM850_Efis_Brightness_0#0 (>L:var_EHSI_Brightness, Number)
BS_TBM850_Efis_Brightness_100#100 (>L:var_EHSI_Brightness, Number)
BS_TBM850_Efis_Brightness_Dec#(L:var_EHSI_Brightness, Number) 5 - 0 max (>L:var_EHSI_Brightness, Number)
BS_TBM850_Efis_Brightness_Inc#(L:var_EHSI_Brightness, Number) 5 + 100 min (>L:var_EHSI_Brightness, Number)
BS_TBM850_Efis_Btn_Arc_Mode#1 (>H:EHSI_ArcMode)
BS_TBM850_Efis_Btn_Bearing_Pointer_1#1 (>H:EHSI_SolidBearing)
BS_TBM850_Efis_Btn_Bearing_Pointer_2#1 (>H:EHSI_HollowBearing)
BS_TBM850_Efis_Btn_Hsi_Mode#1 (>H:EHSI_HsiMode)
BS_TBM850_Efis_Btn_Nav_Source#1 (>H:EHSI_NavSource)
BS_TBM850_Efis_Btn_Range_Dec#1 (>H:EHSI_RangeDown)
BS_TBM850_Efis_Btn_Range_Inc#1 (>H:EHSI_RangeUp)
BS_TBM850_Efis_Btn_Ref_Tst#1 (>H:EHSI_TestReference)
BS_TBM850_Efis_Btn_System_Source#1 (>H:EHSI_SystemSource)
BS_TBM850_Efis_Composite_Toggle#(A:CIRCUIT ON:56, Bool) (A:CIRCUIT ON:55, Bool) or if{ (L:var_EfisCompositeMode, Bool) ! (>L:var_EfisCompositeMode, Bool) }
BS_TBM850_Efis_Course_Ccw#(L:EFIS_NavigationSource, Number) 0 == if{ 1 (>K:VOR1_OBI_DEC) } els{ (L:EFIS_NavigationSource, Number) 1 == if{ 1 (>K:VOR2_OBI_DEC) } els{ (L:EFIS_NavigationSource, Number) 3 == if{ (L:var_RNAV_OBS, Number) 1 - dnor (>L:var_RNAV_OBS, Number) } els{ (L:EFIS_NavigationSource, Number) 4 == if{ (L:var_MLS_OBS, Number) 1 - dnor (>L:var_MLS_OBS, Number) } els{ (L:EFIS_NavigationSource, Number) 5 == if{ (L:var_ADF_OBS, Number) 1 - dnor (>L:var_ADF_OBS, number) } } } } }
BS_TBM850_Efis_Course_Cw#(L:EFIS_NavigationSource, Number) 0 == if{ 1 (>K:VOR1_OBI_INC) } els{ (L:EFIS_NavigationSource, Number) 1 == if{ 1 (>K:VOR2_OBI_INC) } els{ (L:EFIS_NavigationSource, Number) 3 == if{ (L:var_RNAV_OBS, Number) 1 + 360 % (>L:var_RNAV_OBS, Number) } els{ (L:EFIS_NavigationSource, Number) 4 == if{ (L:var_MLS_OBS, Number) 1 + 360 % (>L:var_MLS_OBS, Number) } els{ (L:EFIS_NavigationSource, Number) 5 == if{ (L:var_ADF_OBS, Number) 1 + 360 % (>L:var_ADF_OBS, number) } } } } }
BS_TBM850_Efis_Dh_Dec#(L:var_efisDecisionHeightSet, bool) (L:var_efisDecisionHeightTest, bool) or (A:RADIO HEIGHT, Feet) 2500 < (A:RADIO HEIGHT, Feet) 5 > and or (A:CIRCUIT ON:56, bool) and (A:DECISION HEIGHT, feet) 0 > and if{ 10 (>K:DECREASE_DECISION_HEIGHT) }
BS_TBM850_Efis_Dh_Inc#(L:var_efisDecisionHeightSet, bool) (L:var_efisDecisionHeightTest, bool) or (A:RADIO HEIGHT, Feet) 2500 < (A:RADIO HEIGHT, Feet) 5 > and or (A:CIRCUIT ON:56, bool) and (A:DECISION HEIGHT, feet) 2500 < and if{ 10 (>K:INCREASE_DECISION_HEIGHT) }
BS_TBM850_Efis_Dme_Mode_Hld#1 (>L:var_efisDmeMode, Number)
BS_TBM850_Efis_Dme_Mode_Move_Left#(L:var_efisDmeMode, Number) 1 - 0 max (>L:var_efisDmeMode, Number)
BS_TBM850_Efis_Dme_Mode_Move_Right#(L:var_efisDmeMode, Number) 1 + 2 min (>L:var_efisDmeMode, Number)
BS_TBM850_Efis_Dme_Mode_N1#0 (>L:var_efisDmeMode, Number)
BS_TBM850_Efis_Dme_Mode_N2#2 (>L:var_efisDmeMode, Number)
BS_TBM850_Efis_Master_Off#0 (>L:var_EFIS_PowerSwitch, Bool) 0 (>A:CIRCUIT SWITCH ON:56, Bool) 0 (>A:CIRCUIT SWITCH ON:55, Bool)
BS_TBM850_Efis_Master_On#1 (>L:var_EFIS_PowerSwitch, Bool) 1 (>A:CIRCUIT SWITCH ON:56, Bool) 1 (>A:CIRCUIT SWITCH ON:55, Bool)
BS_TBM850_Efis_Master_Toggle#(L:var_EFIS_PowerSwitch, Bool) if{ 1 (>K:BKSQTbm850-efis_master_off) } els{ 1 (>K:BKSQTbm850-efis_master_on) }
BS_TBM850_Efis_Source_Left#0 (>L:var_efisSource, Bool)
BS_TBM850_Efis_Source_Right#1 (>L:var_efisSource, Bool)
BS_TBM850_Efis_Source_Toggle#(L:var_efisSource, Bool) ! (>L:var_efisSource, Bool)
//Black Square/TBM850/Electrical
BS_TBM850_Battery_Recharge#30 (>A:ELECTRICAL BATTERY VOLTAGE, Volts)
BS_TBM850_Battery_Recharge_25V#25 (>A:ELECTRICAL BATTERY VOLTAGE, Volts)
BS_TBM850_Bus_Tie_Cover_Close# 0 (>L:var_EssentialBusTieCover, Bool) 0 (>L:var_EssentialBusTieSwitch, Bool) 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_TBM850_Bus_Tie_Cover_Open#1 (>L:var_EssentialBusTieCover, Bool)
BS_TBM850_Bus_Tie_Cover_Toggle# (L:var_EssentialBusTieCover, Bool) ! s0 (>L:var_EssentialBusTieCover, Bool) 0 (>L:var_EssentialBusTieSwitch, Bool) 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 8 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 9 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_TBM850_Cb_R1_C1_Landing_Gear#3 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R1_C2_Flaps#4 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R1_C3_Pitch_Trim#5 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R1_C4_Ail_Trim#6 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R1_C5_Rudder_Trim#7 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R1_C6_Ap_Trims#8 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R2_C1_Ess_Bus_1#(L:var_EssentialBus1_Breaker, Bool) ! (>L:var_EssentialBus1_Breaker, Bool)
BS_TBM850_Cb_R2_C10_Inert_Sep#15 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R2_C2_Ess_Bus_2#(L:var_EssentialBus2_Breaker, Bool) ! (>L:var_EssentialBus2_Breaker, Bool)
BS_TBM850_Cb_R2_C3_Flaps_Sig#9 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R2_C4_Ldg_Gear_Cont#10 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R2_C5_Ldg_Gear_Sig#11 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R2_C6_Audio_Cd#12 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R2_C8_Pitot1_Htr#13 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R2_C9_Pitot2_Stall_Htr#14 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C1_Advisory_1#16 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C10_Airframe_Deice#25 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C2_Advisory_2#17 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C3_Audio_Warn#18 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C4_Ap_Disc#19 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C5_Ap_Alert#20 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C6_Ap_Alt_Sel#21 14 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C7_L_Windshield_Deice#22 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C8_R_Windshield_Deice#23 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R3_C9_Prop_Deice#24 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C1_Engine_Indic_1#26 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C10_Nav#35 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C2_Engine_Indic_2#27 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C3_Ignition#28 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C4_Pulse_System#29 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C5_Ice_Light#30 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C6_Strobe#31 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C7_Landing_Light_Left#32 17 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C8_Taxi#33 19 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R4_C9_Landing_Light_Right#34 18 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C1_Cabin_Bleed#36 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C10_Cabin#16 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C2_Air_Cond#37 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C3_Fuel_Gage_1#38 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C4_Fuel_Gage_2#39 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C5_Fuel_Sel#40 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C6_Aux_Boost_Pump#41 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C7_Instr#42 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C8_Panel_Norm#43 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R5_C9_Panel_Emer#44 2 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C1_Elt#54 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C10_Memory_Clock#63 2 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C2_Esi#55 9 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C3_Eadi#56 9 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C4_Gyro#57 9 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C5_Rmi#58 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C6_Adi_2#59 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C7_Hsi_2#60 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C8_Radio_Alti2#61 6 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R6_C9_Access#62 2 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R7_C10_Xpndr#71 14 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R7_C2_Radio_Alti_1#64 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R7_C3_28Vdc_Plugs#65 5 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R7_C4_Phone_Marker#66 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R7_C5_Gps_Nav_1#67 13 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R7_C6_Gnd_Clr#68 2 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R7_C8_Gps_Nav_2#69 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R7_C9_Encod_Alti#70 14 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C10_Radio_Fan#83 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C2_Nav_1#74 13 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C3_Nav_2#75 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C4_Adf#78 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C5_Dme#79 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C6_Tas_Taws#80 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C7_Rnav#76 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C8_Wsr_Cont#81 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Cb_R8_C9_Wsr_Trsv#82 12 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
BS_TBM850_Co_Pilot_Off#0 (>L:var_CrewMusicSwitch, bool)
BS_TBM850_Co_Pilot_On#1 (>L:var_CrewMusicSwitch, bool)
BS_TBM850_Co_Pilot_Toggle#(L:var_CrewMusicSwitch, bool) ! (>L:var_CrewMusicSwitch, bool)
BS_TBM850_Condition_Cutoff#0 (>L:BKSQ_ConditionLever, Number)
BS_TBM850_Condition_Idle_Hi#2 (>L:BKSQ_ConditionLever, Number)
BS_TBM850_Condition_Idle_Lo#1 (>L:BKSQ_ConditionLever, Number)
BS_TBM850_Condition_Move_Backward#(L:BKSQ_ConditionLever, Number) 1 - 0 max (>L:BKSQ_ConditionLever, Number)
BS_TBM850_Condition_Move_Forward#(L:BKSQ_ConditionLever, Number) 1 + 2 min (>L:BKSQ_ConditionLever, Number)
BS_TBM850_Oh_Crash_Bar_Down#0 (>L:var_crashbar, bool) 0 (>L:BKSQ_SourceSwitch, Number) 0 (>L:BKSQ_GeneratorSwitch, Number) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_TBM850_Oh_Crash_Bar_Toggle#(L:var_crashbar, bool) 0 == if{ 1 (>K:BKSQTbm850-oh_crash_bar_up) } els{ 1 (>K:BKSQTbm850-oh_crash_bar_down) }
BS_TBM850_Oh_Crash_Bar_Up#1 (>L:var_crashbar, bool) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) ! if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
BS_TBM850_Oh_Generator_Main#(L:var_crashbar, bool) if{ 1 (>L:BKSQ_GeneratorSwitch, Number) }
BS_TBM850_Oh_Generator_Move_Down#(L:var_crashbar, bool) if{ (L:BKSQ_GeneratorSwitch, Number) 1 - 0 max (>L:BKSQ_GeneratorSwitch, Number) }
BS_TBM850_Oh_Generator_Move_Down#(L:var_crashbar, bool) if{ (L:BKSQ_GeneratorSwitch, Number) 1 - 0 max (>L:BKSQ_GeneratorSwitch, Number) }
BS_TBM850_Oh_Generator_Move_Up#(L:var_crashbar, bool) if{ (L:BKSQ_GeneratorSwitch, Number) 1 + 2 min (>L:BKSQ_GeneratorSwitch, Number) }
BS_TBM850_Oh_Generator_Off#(L:var_crashbar, bool) if{ 0 (>L:BKSQ_GeneratorSwitch, Number) }
BS_TBM850_Oh_Generator_Stby#(L:var_crashbar, bool) if{ 2 (>L:BKSQ_GeneratorSwitch, Number) }
BS_TBM850_Oh_Ignition_Auto#1 (>L:BKSQ_IgnitionSwitch, Bool)
BS_TBM850_Oh_Ignition_Move_Down#(L:BKSQ_IgnitionSwitch, Bool) 1 - 0 max (>L:BKSQ_IgnitionSwitch, Bool)
BS_TBM850_Oh_Ignition_Move_Up#(L:BKSQ_IgnitionSwitch, Bool) 1 + 2 min (>L:BKSQ_IgnitionSwitch, Bool)
BS_TBM850_Oh_Ignition_Off#0 (>L:BKSQ_IgnitionSwitch, Bool)
BS_TBM850_Oh_Ignition_On#2 (>L:BKSQ_IgnitionSwitch, Bool)
BS_TBM850_Oh_Source_Batt#(L:var_crashbar, bool) if{ 1 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
BS_TBM850_Oh_Source_Gpu#(L:var_crashbar, bool) if{ 2 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
//Black Square/TBM850/Engine
BS_TBM850_Engine_Cover_L_Close#(L:var_EngineCover_L, Number) 1 == if{ 1 (>L:var_RudderPedalAdjustment_L, Number) }
BS_TBM850_Engine_Cover_L_Open#(L:var_EngineCover_L, Number) 1 != if{ 1 (>L:var_RudderPedalAdjustment_L, Number) }
BS_TBM850_Engine_Cover_L_Toggle#1 (>L:var_RudderPedalAdjustment_L, Number)
BS_TBM850_Engine_Cover_R_Close#(L:var_EngineCover_R, Number) 1 == if{ 1 (>L:var_RudderPedalAdjustment_R, Number) }
BS_TBM850_Engine_Cover_R_Open#(L:var_EngineCover_R, Number) 1 != if{ 1 (>L:var_RudderPedalAdjustment_R, Number) }
BS_TBM850_Engine_Cover_R_Toggle#1 (>L:var_RudderPedalAdjustment_R, Number)
BS_TBM850_Oh_Source_Move_Down#(L:var_crashbar, bool) (L:BKSQ_SourceSwitch, Number) 0 > if{ (L:BKSQ_SourceSwitch, Number) 1 - (>L:BKSQ_SourceSwitch, Number) (L:BKSQ_SourceSwitch, Number) 1 == if{ 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } }
BS_TBM850_Oh_Source_Move_Up#(L:var_crashbar, bool) (L:BKSQ_SourceSwitch, Number) 2 < if{ (L:BKSQ_SourceSwitch, Number) 1 + (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
BS_TBM850_Oh_Source_Off#(L:var_crashbar, bool) if{ 0 (>L:BKSQ_SourceSwitch, Number) 2 (A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 3 2 (>K:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
BS_TBM850_Oh_Starter_Off#0 (>L:BKSQ_StarterSwitch, Bool) (L:BKSQ_GeneratorSwitch, Number) 2 != (>K:STARTER1_SET)
BS_TBM850_Oh_Starter_On#1 (>L:BKSQ_StarterSwitch, Bool) (L:BKSQ_GeneratorSwitch, Number) 2 != (>K:STARTER1_SET)
BS_TBM850_Oh_Starter_Toggle#(L:BKSQ_StarterSwitch, Bool) ! (>L:BKSQ_StarterSwitch, Bool) (L:BKSQ_StarterSwitch, Bool) (L:BKSQ_GeneratorSwitch, Number) 2 != (>K:STARTER1_SET)
BS_TBM850_Prop_Feather#-4096 (>K:PROP_PITCH1_SET)
BS_TBM850_Prop_Full#16384 (>K:PROP_PITCH1_SET)
BS_TBM850_Prop_Idle#0 (>K:PROP_PITCH1_SET)
BS_TBM850_Prop_Overspeed_Press#1 (>L:var_propOverspeedTestButton, Number)
BS_TBM850_Prop_Overspeed_Release#0 (>L:var_propOverspeedTestButton, Number)
BS_TBM850_Throttle_Decrease#1 (>K:THROTTLE_DECR)
BS_TBM850_Throttle_Increase#1 (>K:THROTTLE_INCR)
BS_TBM850_Throttle_Taxi#0 (>K:THROTTLE1_SET)
BS_TBM850_Itt_Test_Down#1 (>L:var_TurbineTempTestButton_IsDown, Number)
BS_TBM850_Itt_Test_Release#0 (>L:var_TurbineTempTestButton_IsDown, Number)
BS_TBM850_Toga_Press#(>K:AUTO_THROTTLE_TO_GA)
//Black Square/TBM850/Fuel
BS_TBM850_Fuel_Pump_Aux_Auto#2 (>L:BKSQ_fuelPumpSwitch, Number)
BS_TBM850_Fuel_Pump_Aux_Move_Down#(L:BKSQ_fuelPumpSwitch, Number) 1 - 0 max (>L:BKSQ_fuelPumpSwitch, Number)
BS_TBM850_Fuel_Pump_Aux_Move_Up#(L:BKSQ_fuelPumpSwitch, Number) 1 + 2 min (>L:BKSQ_fuelPumpSwitch, Number)
BS_TBM850_Fuel_Pump_Aux_Off#0 (>L:BKSQ_fuelPumpSwitch, Number)
BS_TBM850_Fuel_Pump_Aux_On#1 (>L:BKSQ_fuelPumpSwitch, Number)
BS_TBM850_Fuel_Selector_Auto#1 d (>L:var_AutoFuelSelectorSwitch, Bool) (>A:CIRCUIT SWITCH ON:40, bool) (A:SIM ON GROUND, Bool) (A:FUEL TANK LEFT MAIN QUANTITY, Gallons) 9.1 < (A:FUEL TANK RIGHT MAIN QUANTITY, Gallons) 9.1 < and or if{ 75 (>L:var_FuelSelectorTimer, Number) } els{ 600 (>L:var_FuelSelectorTimer, Number) }
BS_TBM850_Fuel_Selector_Auto_Toggle#(L:var_AutoFuelSelectorSwitch, Bool) ! d (>L:var_AutoFuelSelectorSwitch, Bool) (>A:CIRCUIT SWITCH ON:40, bool) (A:SIM ON GROUND, Bool) (A:FUEL TANK LEFT MAIN QUANTITY, Gallons) 9.1 < (A:FUEL TANK RIGHT MAIN QUANTITY, Gallons) 9.1 < and or if{ 75 (>L:var_FuelSelectorTimer, Number) } els{ 600 (>L:var_FuelSelectorTimer, Number) }
BS_TBM850_Fuel_Selector_Manual#0 d (>L:var_AutoFuelSelectorSwitch, Bool) (>A:CIRCUIT SWITCH ON:40, bool) (A:SIM ON GROUND, Bool) (A:FUEL TANK LEFT MAIN QUANTITY, Gallons) 9.1 < (A:FUEL TANK RIGHT MAIN QUANTITY, Gallons) 9.1 < and or if{ 75 (>L:var_FuelSelectorTimer, Number) } els{ 600 (>L:var_FuelSelectorTimer, Number) }
BS_TBM850_Fuel_Shift_Press#(A:CIRCUIT ON:40, Bool) if{ (A:FUEL TANK SELECTOR:1, Enum) 0 != if{ 0 (>L:var_FuelStopDown, Bool) (A:FUEL TANK SELECTOR:1, Enum) 19 == if{ 1 (>K:FUEL_SELECTOR_RIGHT_MAIN) } els{ (A:FUEL TANK SELECTOR:1, Enum) 20 == if{ 1 (>K:FUEL_SELECTOR_LEFT_MAIN) } } (A:SIM ON GROUND, Bool) (A:FUEL TANK LEFT MAIN QUANTITY, Gallons) 9.1 < (A:FUEL TANK RIGHT MAIN QUANTITY, Gallons) 9.1 < and or if{ 75 (>L:var_fuelSelectTimer, Number) } els{ 600 (>L:var_fuelSelectTimer, Number) } } }
BS_TBM850_Fuel_Tank_Selector_Off#1 (>L:var_FuelStopDown, bool) 1 (>K:FUEL_SELECTOR_OFF)
BS_TBM850_Fuel_Tank_Selector_Turn_Left#(A:FUEL TANK SELECTOR:1, Enum) 0 == if{ 1 (>K:BKSQTbm850-fuel_tank_selector_right) } els{ 1 (>K:BKSQTbm850-fuel_tank_selector_left) }
BS_TBM850_Fuel_Tank_Selector_Turn_Right#(A:FUEL TANK SELECTOR:1, Enum) 19 == if{ 1 (>K:BKSQTbm850-fuel_tank_selector_right) } els{ 1 (>K:BKSQTbm850-fuel_tank_selector_off) }
//Black Square/TBM850/Gear
BS_TBM850_Landing_Gear_Down_Check_Down#1 (>L:var_landingGearDownCheck, Number)
BS_TBM850_Landing_Gear_Down_Check_Release#0 (>L:var_landingGearDownCheck, Number)
BS_TBM850_Landing_Gear_Light_Test_Down#1 (>L:var_landingGearLightTestIlluminate, Number)
BS_TBM850_Landing_Gear_Light_Test_Release#0 (>L:var_landingGearLightTestIlluminate, Number)
//Black Square/TBM850/Lights
BS_TBM850_Eadi_Brightness_0#0 (>L:var_EADI_Brightness, Number)
BS_TBM850_Eadi_Brightness_100#100 (>L:var_EADI_Brightness, Number)
BS_TBM850_Eadi_Brightness_Dec#(L:var_EADI_Brightness, Number) 5 - 0 max (>L:var_EADI_Brightness, Number)
BS_TBM850_Eadi_Brightness_Inc#(L:var_EADI_Brightness, Number) 5 + 100 min (>L:var_EADI_Brightness, Number)
BS_TBM850_Eadi_Test_Press#1 (>H:EADI_TestButton)
BS_TBM850_Light_Int_Access_Off#0 (>L:var_AccessLights_Button, Bool)
BS_TBM850_Light_Int_Access_On#1 (>L:var_AccessLights_Button, Bool)
BS_TBM850_Light_Int_Access_Toggle#(L:var_AccessLights_Button, Bool) ! (>L:var_AccessLights_Button, Bool)
BS_TBM850_Light_Int_Cabin_Aft_L_Toggle#(L:var_CabinLights_Aft_L_Button, Bool) ! (>L:var_CabinLights_Aft_L_Button, Bool)
BS_TBM850_Light_Int_Cabin_Aft_R_Toggle#(L:var_CabinLights_Aft_R_Button, Bool) ! (>L:var_CabinLights_Aft_R_Button, Bool)
BS_TBM850_Light_Int_Cabin_Middle_L_Toggle#(L:var_CabinLights_Middle_L_Button, Bool) ! (>L:var_CabinLights_Middle_L_Button, Bool)
BS_TBM850_Light_Int_Cabin_Middle_R_Toggle#(L:var_CabinLights_Middle_R_Button, Bool) ! (>L:var_CabinLights_Middle_R_Button, Bool)
BS_TBM850_Light_Int_Cabin_Status# 16 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:15, Bool) (>L:var_CabinLightstatus, Number)
BS_TBM850_Light_Int_Cabin_Toggle#16 15 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
BS_TBM850_Light_Int_Instrument_Dec#(L:var_InstrumentLightingKnob, number) 4 - 0 max (>L:var_InstrumentLightingKnob, number)
BS_TBM850_Light_Int_Instrument_Inc#(L:var_InstrumentLightingKnob, number) 4 + 100 min (>L:var_InstrumentLightingKnob, number)
BS_TBM850_Light_Int_Instrument_Off#0 (>L:var_InstrumentLightingKnob, number)
BS_TBM850_Light_Int_Instrument_On#100 (>L:var_InstrumentLightingKnob, number)
BS_TBM850_Light_Int_Panel_Dec#(L:var_PanelLightingKnob, number) 4 - 0 max (>L:var_PanelLightingKnob, number)
BS_TBM850_Light_Int_Panel_Inc#(L:var_PanelLightingKnob, number) 4 + 100 min (>L:var_PanelLightingKnob, number)
BS_TBM850_Light_Int_Panel_Off#0 (>L:var_PanelLightingKnob, number)
BS_TBM850_Light_Int_Panel_On#100 (>L:var_PanelLightingKnob, number)
BS_TBM850_Light_Int_Reading_Left_Off#0 (>L:var_ReadingLightSwitch_L, Bool)
BS_TBM850_Light_Int_Reading_Left_On#1 (>L:var_ReadingLightSwitch_L, Bool)
BS_TBM850_Light_Int_Reading_Left_Toggle#(L:var_ReadingLightSwitch_L, Bool) ! (>L:var_ReadingLightSwitch_L, Bool)
BS_TBM850_Light_Int_Reading_Right_Off#0 (>L:var_ReadingLightSwitch_R, Bool)
BS_TBM850_Light_Int_Reading_Right_On#1 (>L:var_ReadingLightSwitch_R, Bool)
BS_TBM850_Light_Int_Reading_Right_Toggle#(L:var_ReadingLightSwitch_R, Bool) ! (>L:var_ReadingLightSwitch_R, Bool)
BS_TBM850_Oh_Light_Emergency_Dec#(L:var_EmergencyLightsKnob, number) 5 - 0 max (>L:var_EmergencyLightsKnob, number)
BS_TBM850_Oh_Light_Emergency_Full#100 (>L:var_EmergencyLightsKnob, number)
BS_TBM850_Oh_Light_Emergency_Inc#(L:var_EmergencyLightsKnob, number) 5 + 100 min (>L:var_EmergencyLightsKnob, number)
BS_TBM850_Oh_Light_Emergency_Off#0 (>L:var_EmergencyLightsKnob, number)
BS_TBM850_Oh_Light_Landing_Left_Off#1 0 (>K:2:LANDING_LIGHTS_SET)
BS_TBM850_Oh_Light_Landing_Left_On#1 1 (>K:2:LANDING_LIGHTS_SET)
BS_TBM850_Oh_Light_Landing_Left_Toggle#1 (L:LIGHTING_LANDING_1, Number) ! (>K:2:LANDING_LIGHTS_SET)
BS_TBM850_Oh_Light_Landing_Right_Off#2 0 (>K:2:LANDING_LIGHTS_SET)
BS_TBM850_Oh_Light_Landing_Right_On#2 1 (>K:2:LANDING_LIGHTS_SET)
BS_TBM850_Oh_Light_Landing_Right_Toggle#2 (L:LIGHTING_LANDING_2, Number) ! (>K:2:LANDING_LIGHTS_SET)
BS_TBM850_Oh_Light_Nav_Off#1 0 (>K:2:NAV_LIGHTS_SET)
BS_TBM850_Oh_Light_Nav_On#1 1 (>K:2:NAV_LIGHTS_SET)
BS_TBM850_Oh_Light_Nav_Toggle#1 (L:LIGHTING_NAV_1, Number) ! (>K:2:NAV_LIGHTS_SET)
BS_TBM850_Oh_Light_Pulse_Off#1 0 (>K:2:RECOGNITION_LIGHTS_SET)
BS_TBM850_Oh_Light_Pulse_On#1 1 (>K:2:RECOGNITION_LIGHTS_SET)
BS_TBM850_Oh_Light_Pulse_Toggle#1 (L:LIGHTING_RECOGNITION_1, Number) ! (>K:2:RECOGNITION_LIGHTS_SET)
BS_TBM850_Oh_Light_Strobe_Off#1 0 (>K:2:STROBES_SET)
BS_TBM850_Oh_Light_Strobe_On#1 1 (>K:2:STROBES_SET)
BS_TBM850_Oh_Light_Strobe_Toggle#1 (L:LIGHTING_STROBE_1, Number) ! (>K:2:STROBES_SET)
BS_TBM850_Oh_Light_Taxi_Off#1 0 (>K:2:TAXI_LIGHTS_SET)
BS_TBM850_Oh_Light_Taxi_On#1 1 (>K:2:TAXI_LIGHTS_SET)
BS_TBM850_Oh_Light_Taxi_Toggle#1 (L:LIGHTING_TAXI_1, Number) ! (>K:2:TAXI_LIGHTS_SET)
BS_TBM850_Oh_Lights_Test_Down#1 (>L:var_OverheadLightTestButton_IsDown, Number)
BS_TBM850_Oh_Lights_Test_Release#0 (>L:var_OverheadLightTestButton_IsDown, Number)
//Black Square/TBM850/Miscellaneous
BS_TBM850_Armrest_L_Down#70 (>L:var_Armrest_L, Number)
BS_TBM850_Armrest_L_Full#100 (>L:var_Armrest_L, Number)
BS_TBM850_Armrest_L_Stowed#0 (>L:var_Armrest_L, Number)
BS_TBM850_Armrest_L_Up#30 (>L:var_Armrest_L, Number)
BS_TBM850_Armrest_R_Down#70 (>L:var_Armrest_R, Number)
BS_TBM850_Armrest_R_Full#100 (>L:var_Armrest_R, Number)
BS_TBM850_Armrest_R_Stowed#0 (>L:var_Armrest_R, Number)
BS_TBM850_Armrest_R_Up#30 (>L:var_Armrest_R, Number)
BS_TBM850_Door_Aft_Door_Close_Button#(A:EXIT OPEN:1, Percent) 50 > (L:var_AftLadder, Bool) ! and 2 (>A:BUS LOOKUP INDEX, Number) (A:CIRCUIT CONNECTION ON:62, Bool) if{ 1 (>L:var_AftDoorLockedLatching, Bool) 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) }
BS_TBM850_Door_Aft_Door_Toggle#(L:var_AftDoorLockedLatching, Number) 0 == if{ 1 (>L:var_AftDoorLockedLatching, Number) 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } els{ (A:EXIT OPEN:1, Percent) 50 > (L:var_AftLadder, Bool) ! and if{ 1 (>L:var_AftDoorLockedLatching, Number) 2 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) } }
BS_TBM850_Door_Aft_Door_Toggle_Full#(A:EXIT OPEN:1, Percent) 0 == if{ 1 (>K:BKSQTbm850-door_aft_door_open) } els{ 1 (>K:BKSQTbm850-door_aft_door_close) }
BS_TBM850_Door_Aft_Ladder_Toggle#(L:var_AftLadder, Bool) (A:EXIT OPEN:1, Percent) 30 > (L:var_AftLadder, Bool) ! and or if{ (L:var_AftLadder, Bool) ! (>L:var_AftLadder, Bool) }
BS_TBM850_Door_Aft_Latch#(L:var_AftDoorLockedLatching, Number) 2 == (L:var_cabinPressureDifferential, PSI) 0.25 < && if{ 0 (>L:var_AftDoorLockedLatching, Number) }
BS_TBM850_Door_Baggage_Nose_Close#0 (>L:bksq_BaggageDoor, Bool)
BS_TBM850_Door_Baggage_Nose_Open#1 (>L:bksq_BaggageDoor, Bool)
BS_TBM850_Door_Baggage_Nose_Toggle#(L:bksq_BaggageDoor, Bool) ! (>L:bksq_BaggageDoor, Bool)
BS_TBM850_Door_Pilot_Door_Toggle#(L:var_PilotDoorLockedLatching, Number) 0 == if{ 0 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) 1 (>L:var_PilotDoorLockedLatching, Number) } els{ (A:EXIT OPEN:0, Percent) 50 > (L:var_PilotLadder, Bool) ! and if{ 0 (>K:TOGGLE_AIRCRAFT_EXIT_FAST) 1 (>L:var_PilotDoorLockedLatching, Number) } }
BS_TBM850_Door_Pilot_Door_Toggle_Full#(A:EXIT OPEN:0, Percent) 0 == if{ 1 (>K:BKSQTbm850-door_pilot_door_open) } els{ 1 (>K:BKSQTbm850-door_pilot_door_close) }
BS_TBM850_Door_Pilot_Latch#(L:var_PilotDoorLockedLatching, Number) 2 == (L:var_cabinPressureDifferential, PSI) 0.25 < && if{ 0 (>L:var_PilotDoorLockedLatching, Number) }
BS_TBM850_Etm_Btn_Clock_Reset#1 (>H:Etm_ClockReset)
BS_TBM850_Etm_Btn_Clock_Start#1 (>H:Etm_ClockStart)
BS_TBM850_Etm_Btn_Clock_Stop#1 (>H:Etm_ClockStop)
BS_TBM850_Etm_Btn_Dec#1 (>H:Etm_Dec)
BS_TBM850_Etm_Btn_Enter_Test#1 (>H:Etm_EnterTest)
BS_TBM850_Etm_Btn_Inc#1 (>H:Etm_Inc)
BS_TBM850_Etm_Btn_Mode_Airdata#3 (>L:var_EtmMode, Number)
BS_TBM850_Etm_Btn_Mode_Etm#0 (>L:var_EtmMode, Number)
BS_TBM850_Etm_Btn_Mode_Fuel#2 (>L:var_EtmMode, Number)
BS_TBM850_Etm_Btn_Mode_Nav#1 (>L:var_EtmMode, Number)
BS_TBM850_Etm_Btn_Mode_Turn_Ccw#(L:var_EtmMode, Number) 1 - 0 max (>L:var_EtmMode, Number)
BS_TBM850_Etm_Btn_Mode_Turn_Cw#(L:var_EtmMode, Number) 1 + 3 min (>L:var_EtmMode, Number)
BS_TBM850_Etm_Btn_Page_Down#1 (>H:Etm_PageDown)
BS_TBM850_Etm_Btn_Page_Up#1 (>H:Etm_PageUp)
BS_TBM850_Etm_Btn_Record#1 (>H:Etm_Record)
BS_TBM850_Exterior_Wheel_Chocks_Off#0 (>L:bksq_WheelChocks, bool)
BS_TBM850_Exterior_Wheel_Chocks_On#1 (>L:bksq_WheelChocks, bool)
BS_TBM850_Exterior_Wheel_Chocks_Toggle#(L:bksq_WheelChocks, bool) ! (>L:bksq_WheelChocks, bool)
BS_TBM850_Manual_Override_Dec#(L:var_emergencyPowerLeverPosition, Number) 5 - 0 max (>L:var_emergencyPowerLeverPosition, Number)
BS_TBM850_Manual_Override_Full#100 (>L:var_emergencyPowerLeverPosition, Number)
BS_TBM850_Manual_Override_Inc#(L:var_emergencyPowerLeverPosition, Number) 5 + 100 min (>L:var_emergencyPowerLeverPosition, Number)
BS_TBM850_Manual_Override_Off#0 (>L:var_emergencyPowerLeverPosition, Number)
BS_TBM850_Microphone_Cover_Close#0 (>L:var_MaskMicCover, Bool) 0 (>L:var_MaskMicSwitch, Bool)
BS_TBM850_Microphone_Cover_Open#1 (>L:var_MaskMicCover, Bool)
BS_TBM850_Microphone_Cover_Toggle#(L:var_MaskMicCover, Bool) ! (>L:var_MaskMicCover, Bool) 0 (>L:var_MaskMicSwitch, Bool)
BS_TBM850_Microphone_Switch_Mask#(L:var_MaskMicCover, Bool) if{ 1 (>L:var_MaskMicSwitch, Bool) }
BS_TBM850_Microphone_Switch_Mask_Force#1 (>L:var_MaskMicCover, Bool) 1 (>L:var_MaskMicSwitch, Bool)
BS_TBM850_Microphone_Switch_Norm#0 (>L:var_MaskMicSwitch, Bool)
BS_TBM850_Microphone_Switch_Toggle#(L:var_MaskMicCover, Bool) if{ (L:var_MaskMicSwitch, Bool) ! (>L:var_MaskMicSwitch, Bool) }
BS_TBM850_Microphone_Switch_Toggle_Force#(L:var_MaskMicCover, Bool) ! if{ 1 (>L:var_MaskMicCover, Bool) } (L:var_MaskMicSwitch, Bool) ! (>L:var_MaskMicSwitch, Bool)
BS_TBM850_Oh_Oxygen_Copilot_Off#0 (>L:var_coPilotOxygen, Bool)
BS_TBM850_Oh_Oxygen_Copilot_On#1 (>L:var_coPilotOxygen, Bool)
BS_TBM850_Oh_Oxygen_Copilot_Toggle#(L:var_coPilotOxygen, Bool) ! (>L:var_coPilotOxygen, Bool)
BS_TBM850_Oh_Oxygen_Pilot_Off#0 (>L:var_pilotOxygen, Bool)
BS_TBM850_Oh_Oxygen_Pilot_On#1 (>L:var_pilotOxygen, Bool)
BS_TBM850_Oh_Oxygen_Pilot_Toggle#(L:var_pilotOxygen, Bool) ! (>L:var_pilotOxygen, Bool)
BS_TBM850_Oh_Oxygen_Supply_Off#0 (>L:var_oxygenMaster, Bool)
BS_TBM850_Oh_Oxygen_Supply_On#1 (>L:var_oxygenMaster, Bool)
BS_TBM850_Oh_Oxygen_Supply_Toggle#(L:var_oxygenMaster, Bool) ! (>L:var_oxygenMaster, Bool)
BS_TBM850_Oh_Passenger_Oxygen_Supply_Off#0 (>L:var_passengerOxygen, Bool)
BS_TBM850_Oh_Passenger_Oxygen_Supply_On#1 (>L:var_passengerOxygen, Bool)
BS_TBM850_Oh_Passenger_Oxygen_Supply_Toggle#(L:var_passengerOxygen, Bool) ! (>L:var_passengerOxygen, Bool)
BS_TBM850_Storm_Scope_Move_Down#(L:var_stormScopeSwitch, Number) 1 + 2 min (>L:var_stormScopeSwitch, Number)
BS_TBM850_Storm_Scope_Move_Up#(L:var_stormScopeSwitch, Number) 1 - 0 max (>L:var_stormScopeSwitch, Number)
BS_TBM850_Storm_Scope_Off#2 (>L:var_stormScopeSwitch, Number)
BS_TBM850_Storm_Scope_On#1 (>L:var_stormScopeSwitch, Number)
BS_TBM850_Storm_Scope_Storm_Clear#0 (>L:var_stormScopeSwitch, Number)
BS_TBM850_Temp_Display_Cabin_Button#(L:var_CabinTempUnitMode, Bool) ! (>L:var_CabinTempUnitMode, Bool)
BS_TBM850_Temp_Display_Cabin_Celsius#1 (>L:var_CabinTempUnitMode, Bool)
BS_TBM850_Temp_Display_Cabin_Fahrenheit#0 (>L:var_CabinTempUnitMode, Bool)
BS_TBM850_Temp_Display_Oat_Button#1 (>H:FreeAirTempMode)
BS_TBM850_Visor_L_Down#0 (>L:var_Visor_L, Number)
BS_TBM850_Visor_L_Side#100 (>L:var_Visor_L, Number)
BS_TBM850_Visor_L_Stowed#20 (>L:var_Visor_L, Number)
BS_TBM850_Visor_R_Down#0 (>L:var_Visor_R, Number)
BS_TBM850_Visor_R_Side#100 (>L:var_Visor_R, Number)
BS_TBM850_Visor_R_Stowed#20 (>L:var_Visor_R, Number)
//Black Square/TBM850/Navigation
BS_TBM850_Gps_Message_1_Press#2 (>L:var_gpsMessageButton1Latching, Number)
BS_TBM850_Gps_Message_2_Press#2 (>L:var_gpsMessageButton2Latching, Number)
BS_TBM850_Gyro_Adjust_Ccw#(L:var_GyroSlaveModeSwitch, Bool) (A:CIRCUIT ON:57, Bool) and if{ 1 (>K:GYRO_DRIFT_INC) }
BS_TBM850_Gyro_Adjust_Cw#(L:var_GyroSlaveModeSwitch, Bool) (A:CIRCUIT ON:57, Bool) and if{ 1 (>K:GYRO_DRIFT_DEC) }
BS_TBM850_Gyro_Mode_Free#1 (>L:var_GyroSlaveModeSwitch, Bool)
BS_TBM850_Gyro_Mode_Slave#0 (>L:var_GyroSlaveModeSwitch, Bool)
BS_TBM850_Gyro_Mode_Toggle#(L:var_GyroSlaveModeSwitch, Bool) ! (>L:var_GyroSlaveModeSwitch, Bool)
BS_TBM850_Kas297B_Alt_Dec_100#(L:var_VsAdjustMode, Bool) 1 == if{ 0 (>K:BKSQTbm850-KAS297B_altSel_mode_alt_press) } 1 (>K:BKSQTbm850-KAS297B_altSel_inner_ccw)
BS_TBM850_Kas297B_Alt_Dec_1000#(L:var_VsAdjustMode, Bool) 1 == if{ 0 (>K:BKSQTbm850-KAS297B_altSel_mode_alt_press) } 1 (>K:BKSQTbm850-KAS297B_altSel_outer_ccw)
BS_TBM850_Kas297B_Alt_Inc_100#(L:var_VsAdjustMode, Bool) 1 == if{ 0 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_inner_cw)
BS_TBM850_Kas297B_Alt_Inc_1000#(L:var_VsAdjustMode, Bool) 1 == if{ 0 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_outer_cw)
BS_TBM850_Kas297B_Altsel_Inner_Ccw#(A:CIRCUIT ON:21, Bool) if{ (L:var_VsAdjustMode, Bool) if{ (A:AUTOPILOT ALTITUDE LOCK, Bool) if{ 1 (>K:AP_PANEL_ALTITUDE_OFF) 1 (>K:AP_PANEL_VS_ON) } 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 - -3000 max (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 0 > if{ 100 (>K:AP_ALT_VAR_DEC) } } }
BS_TBM850_Kas297B_Altsel_Inner_Cw#(A:CIRCUIT ON:21, Bool) if{ (L:var_VsAdjustMode, Bool) if{ (A:AUTOPILOT ALTITUDE LOCK, Bool) if{ 1 (>K:AP_PANEL_ALTITUDE_OFF) 1 (>K:AP_PANEL_VS_ON) } 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 + 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 34900 < if{ 100 (>K:AP_ALT_VAR_INC) } } }
BS_TBM850_Kas297B_Altsel_Mode_Alt_Press#0 (>L:var_VsAdjustMode, Bool)
BS_TBM850_Kas297B_Altsel_Mode_Toggle#(L:var_VsAdjustMode, Bool) ! (>L:var_VsAdjustMode, Bool)
BS_TBM850_Kas297B_Altsel_Mode_Vs_Pull#1 (>L:var_VsAdjustMode, Bool)
BS_TBM850_Kas297B_Altsel_Outer_Ccw#(A:CIRCUIT ON:21, Bool) if{ (L:var_VsAdjustMode, Bool) if{ 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 1000 - -3000 max (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 900 > if{ 1000 (>K:AP_ALT_VAR_DEC) } } }
BS_TBM850_Kas297B_Altsel_Outer_Cw#(A:CIRCUIT ON:21, Bool) if{ (L:var_VsAdjustMode, Bool) if{ 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 1000 + 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT ALTITUDE LOCK VAR, Feet) 34000 < if{ 1000 (>K:AP_ALT_VAR_INC) } } }
BS_TBM850_Kas297B_Btn_Arm_Press#1 (>K:AP_PANEL_VS_HOLD)
BS_TBM850_Kas297B_Btn_Eng_Press#1 (>K:AP_PANEL_VS_HOLD)
BS_TBM850_Kas297B_Vs_Dec_100#(L:var_VsAdjustMode, Bool) 0 == if{ 1 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_inner_ccw)
BS_TBM850_Kas297B_Vs_Dec_1000#(L:var_VsAdjustMode, Bool) 0 == if{ 1 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_outer_ccw)
BS_TBM850_Kas297B_Vs_Inc_100#(L:var_VsAdjustMode, Bool) 0 == if{ 1 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_inner_cw)
BS_TBM850_Kas297B_Vs_Inc_1000#(L:var_VsAdjustMode, Bool) 0 == if{ 1 (>L:var_VsAdjustMode, Bool) } 1 (>K:BKSQTbm850-KAS297B_altSel_outer_cw)
BS_TBM850_Kdi572_Dme_Mode_Hld#2 (>L:var_dmeMode, Number) 1 (>H:dmeMode2)
BS_TBM850_Kdi572_Dme_Mode_N1#1 (>L:var_dmeMode, Number) 1 (>H:dmeMode1)
BS_TBM850_Kdi572_Dme_Mode_N2#3 (>L:var_dmeMode, Number) 1 (>H:dmeMode3)
BS_TBM850_Kdi572_Dme_Mode_Off#0 (>L:var_dmeMode, Number) 1 (>H:dmeMode0)
BS_TBM850_Kdi572_Dme_Mode_Turn_Ccw#(L:var_dmeMode, Number) 1 - 0 max s0 (>L:var_dmeMode, Number) l0 0 == if{ 1 (>H:dmeMode0) } l0 1 == if{ 1 (>H:dmeMode1) } l0 2 == if{ 1 (>H:dmeMode2) } l0 3 == if{ 1 (>H:dmeMode3) }
BS_TBM850_Kdi572_Dme_Mode_Turn_Cw#(L:var_dmeMode, Number) 1 + 3 min s0 (>L:var_dmeMode, Number) l0 0 == if{ 1 (>H:dmeMode0) } l0 1 == if{ 1 (>H:dmeMode1) } l0 2 == if{ 1 (>H:dmeMode2) } l0 3 == if{ 1 (>H:dmeMode3) }
BS_TBM850_Kns80_Btn_Dme#1 (>H:KNS80_dmeHoldButton) (L:var_RNAV_DMEHOLDE, Bool) ! (>L:var_RNAV_DMEHOLDE, Bool)
BS_TBM850_Kns80_Btn_Mode_Left_Vor#1 (>H:KNS80_vorModeButton)
BS_TBM850_Kns80_Btn_Mode_Right_Rnav#1 (>H:KNS80_rnavModeButton)
BS_TBM850_Kns80_Btn_Req_Rad_Dist#1 (>H:KNS80_dataButton)
BS_TBM850_Kns80_Btn_Waypoint_Left_Use#1 (>H:KNS80_useButton)
BS_TBM850_Kns80_Btn_Waypoint_Right_Display#1 (>H:KNS80_displayButton)
BS_TBM850_Kns80_Knob_Inner_Ccw#1 (>H:KNS80_smallDec)
BS_TBM850_Kns80_Knob_Inner_Cw#1 (>H:KNS80_smallInc)
BS_TBM850_Kns80_Knob_Inner_Press#0 (>L:var_rnavKnobPulled, Bool)
BS_TBM850_Kns80_Knob_Inner_Pull#1 (>L:var_rnavKnobPulled, Bool)
BS_TBM850_Kns80_Knob_Inner_Toggle#(L:var_rnavKnobPulled, Bool) ! (>L:var_rnavKnobPulled, Bool)
BS_TBM850_Kns80_Knob_Outer_Ccw#1 (>H:KNS80_bigDec)
BS_TBM850_Kns80_Knob_Outer_Cw#1 (>H:KNS80_bigInc)
BS_TBM850_Kns80_Vol_Dec#(L:var_RNAV_VOLUME, Number) 5 - 0 max s0 (>L:var_RNAV_VOLUME, Number) l0 0 != (>A:CIRCUIT SWITCH ON:76, Bool)
BS_TBM850_Kns80_Vol_Inc#(L:var_RNAV_VOLUME, Number) 5 + 100 min s0 (>L:var_RNAV_VOLUME, Number) l0 0 != (>A:CIRCUIT SWITCH ON:76, Bool)
BS_TBM850_Kx155B_1_Spacing_Toggle#1 (>H:RADIO1_COM_Freq_Spacing_press)
BS_TBM850_Oh_Gyro_Adi2_Off#0 (>A:CIRCUIT SWITCH ON:59, Bool)
BS_TBM850_Oh_Gyro_Adi2_On#1 (>A:CIRCUIT SWITCH ON:59, Bool)
BS_TBM850_Oh_Gyro_Adi2_Toggle#(A:CIRCUIT SWITCH ON:59, Bool) ! (>A:CIRCUIT SWITCH ON:59, Bool)
BS_TBM850_Oh_Gyro_Gyro_Off#0 (>A:CIRCUIT SWITCH ON:57, Bool)
BS_TBM850_Oh_Gyro_Gyro_On#1 (>A:CIRCUIT SWITCH ON:57, Bool)
BS_TBM850_Oh_Gyro_Gyro_Toggle#(A:CIRCUIT SWITCH ON:57, Bool) ! (>A:CIRCUIT SWITCH ON:57, Bool)
BS_TBM850_Oh_Gyro_Hs2_Off#0 (>A:CIRCUIT SWITCH ON:60, Bool)
BS_TBM850_Oh_Gyro_Hs2_On#1 (>A:CIRCUIT SWITCH ON:60, Bool)
BS_TBM850_Oh_Gyro_Hs2_Toggle#(A:CIRCUIT SWITCH ON:60, Bool) ! (>A:CIRCUIT SWITCH ON:60, Bool)
BS_TBM850_Oh_Gyro_Rmi_Off#0 (>A:CIRCUIT SWITCH ON:58, Bool)
BS_TBM850_Oh_Gyro_Rmi_On#1 (>A:CIRCUIT SWITCH ON:58, Bool)
BS_TBM850_Oh_Gyro_Rmi_Toggle#(A:CIRCUIT SWITCH ON:58, Bool) ! (>A:CIRCUIT SWITCH ON:58, Bool)
BS_TBM850_Xpdr_Btn_Clr#1 (>H:TRANSPONDERCLR, Number)
BS_TBM850_Xpdr_Btn_Crsr#1 (>H:TRANSPONDERCRSR, Number)
BS_TBM850_Xpdr_Btn_Digit_0#1 (>H:TRANSPONDER0, Number)
BS_TBM850_Xpdr_Btn_Digit_1#1 (>H:TRANSPONDER1, Number)
BS_TBM850_Xpdr_Btn_Digit_2#1 (>H:TRANSPONDER2, Number)
BS_TBM850_Xpdr_Btn_Digit_3#1 (>H:TRANSPONDER3, Number)
BS_TBM850_Xpdr_Btn_Digit_4#1 (>H:TRANSPONDER4, Number)
BS_TBM850_Xpdr_Btn_Digit_5#1 (>H:TRANSPONDER5, Number)
BS_TBM850_Xpdr_Btn_Digit_6#1 (>H:TRANSPONDER6, Number)
BS_TBM850_Xpdr_Btn_Digit_7#1 (>H:TRANSPONDER7, Number)
BS_TBM850_Xpdr_Btn_Func#1 (>H:TRANSPONDERFUNC, Number)
BS_TBM850_Xpdr_Btn_Ident#1 (>K:XPNDR_IDENT_ON)
BS_TBM850_Xpdr_Btn_Mode_0_Off#0 (>A:TRANSPONDER STATE:1, Number)
BS_TBM850_Xpdr_Btn_Mode_1_Standby#1 (>A:TRANSPONDER STATE:1, Number)
BS_TBM850_Xpdr_Btn_Mode_3_On#3 (>A:TRANSPONDER STATE:1, Number)
BS_TBM850_Xpdr_Btn_Mode_4_Alt#4 (>A:TRANSPONDER STATE:1, Number)
BS_TBM850_Xpdr_Btn_Startstop#1 (>H:TRANSPONDERSTARTSTOP, Number)
BS_TBM850_Xpdr_Btn_Vfr#1 (>H:TRANSPONDERVFR, Number)
BS_TBM850_Xpdr_Mode_Down#4 3 1 0 4 (A:TRANSPONDER STATE:1, Number) case (>A:TRANSPONDER STATE:1, Number)
BS_TBM850_Xpdr_Mode_Up#0 1 3 4 4 (A:TRANSPONDER STATE:1, Number) case (>A:TRANSPONDER STATE:1, Number)
//Black Square/TBM850/Radio
BS_TBM850_Config_Radio1_Gns530#1 (>L:var_radio1Mode, number) 1 (>L:GTN750_INIT_HIDDEN, Bool) 1 (>L:XMLVAR_GPS_DISABLED_GTN750, Bool) 0 (>L:AS530_1_HIDDEN, Bool) 1 (>L:KX155B_1_HIDDEN, Bool)
BS_TBM850_Config_Radio1_Gtn750#0 (>L:var_radio1Mode, number) 0 (>L:GTN750_INIT_HIDDEN, Bool) 0 (>L:XMLVAR_GPS_DISABLED_GTN750, Bool) 1 (>L:AS530_1_HIDDEN, Bool) 1 (>L:KX155B_1_HIDDEN, Bool)
BS_TBM850_Config_Radio1_Kx155#2 (>L:var_radio1Mode, number) 1 (>L:GTN750_INIT_HIDDEN, Bool) 1 (>L:XMLVAR_GPS_DISABLED_GTN750, Bool) 1 (>L:AS530_1_HIDDEN, Bool) 0 (>L:KX155B_1_HIDDEN, Bool)
BS_TBM850_Config_Radio2_Gns530#0 (>L:var_radio2Mode, number) 1 (>L:AS530_2_HIDDEN, Bool) 0 (>L:KX155B_2_HIDDEN, Bool)
BS_TBM850_Config_Radio2_Kx155#1 (>L:var_radio2Mode, number) 0 (>L:AS530_2_HIDDEN, Bool) 1 (>L:KX155B_2_HIDDEN, Bool)
BS_TBM850_Radio_Master_Off#(L:var_RadioMasterSwitch, Bool) if{ 0 (>L:var_RadioMasterSwitch, Bool) 4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:10, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:11, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:12, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:13, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:14, Bool) (L:var_RadioMasterSwitch, Bool) != if{ 10 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
BS_TBM850_Radio_Master_On#(L:var_RadioMasterSwitch, Bool) 0 == if{ 1 s0 (>L:var_RadioMasterSwitch, Bool) 4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:10, Bool) l0 != if{ 10 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:11, Bool) l0 != if{ 10 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:12, Bool) l0 != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:13, Bool) l0 != if{ 10 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:14, Bool) l0 != if{ 10 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
BS_TBM850_Radio_Master_Toggle#(L:var_RadioMasterSwitch, Bool) ! s0 (>L:var_RadioMasterSwitch, Bool) 4 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:10, Bool) l0 != if{ 10 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 5 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:11, Bool) l0 != if{ 10 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 6 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:12, Bool) l0 != if{ 10 6 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:13, Bool) l0 != if{ 10 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 7 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:14, Bool) l0 != if{ 10 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
//Black Square/TBM850/Safety
BS_TBM850_Oh_Horn_Down#1 (>L:var_HornTest_IsDown, Number)
BS_TBM850_Oh_Horn_Release#0 (>L:var_HornTest_IsDown, Number)
BS_TBM850_Terrain_Test_Press#(A:CIRCUIT ON:80, Bool) (L:var_AutopilotStartupCounter, Number) 0 == (L:var_TerrainTest, Number) 0 == and and if{ 30 (>L:var_TerrainTest, Number) }
BS_TBM850_Terrain_Warning_Lights_Press#1 (>L:var_PanelLightTestButton_IsDown, Number)
BS_TBM850_Terrain_Warning_Lights_Release#0 (>L:var_PanelLightTestButton_IsDown, Number)
//Black Square/TBM850/Warning
BS_TBM850_Master_Caution_Press#2 (>L:var_masterCautionLatching, Number)
BS_TBM850_Master_Warning_Press#2 (>L:var_masterWarningLatching, Number)
//Black Square/Turbine Duke/Electrical
Duke_Turb_CB_ADF_1#78 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_ATT#75 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Air_Cond#6 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Alt#77 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Alt_Sel#50 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Audio_Ampl#71 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Auto_Plt#51 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Avionics_Controller#28 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Avionics_Interm_Bus_L#10 12 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Duke_Turb_CB_Avionics_Interm_Bus_R#11 13 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Duke_Turb_CB_Batt_Mon#53 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Cabin_Temp#3 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Clock_Hobbs_Yoke#41 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 42 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 43 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Com_1#69 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Com_2#73 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Compass#44 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Copilot_Instr#31 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_DME_1#84 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Dome_Read_Cabin#35 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 36 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 37 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 38 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 39 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 40 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Electronics_Bus_1_L#7 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Duke_Turb_CB_Electronics_Bus_1_R#7 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Duke_Turb_CB_Electronics_Bus_2_L#8 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Duke_Turb_CB_Electronics_Bus_2_R#8 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Duke_Turb_CB_Eng_Instr#49 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Eng_Monitor#88 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Fire_Detect#103 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Fire_Exting#104 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Flap_Motor#13 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Gen_Overvoltage_L#1 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Gen_Overvoltage_R#2 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_HIS#76 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Ind_Flap___LG#47 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Instr_Flood#24 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 25 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_L_Gen_Overcurrent#97 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_L_Wshld_Heat#12 15 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Land_Gear_Motor#14 9 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Land_Gear_Relay#9 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Land_Gear_Warn#15 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Ldg_Gear_Left#20 16 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 21 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Ldg_Gear_Right#29 17 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 30 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Left_Aux_Pump#93 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Left_Fuel_Qty#60 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Left_Fuel_Vent_Heat#62 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Left_Ice_Door#64 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Left_Ignition#95 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Left_Oil_Door#66 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Left_Wing_Pump#58 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Lights_Annun_Panel#16 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Lights_Beacon_Strobe#18 8 (>K:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 19 8 (>K:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Lights_Nav#17 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Lt_Feather_Warning#99 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Lt_Oil_Temp_Press#101 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Nav_1#70 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Nav_2#74 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Pilot_Instr#22 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 23 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Pitch_Trim#52 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Pitot_Left#7 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Press_Cont#4 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Prop_Heat#10 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Prop_Sync#54 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_R_Gen_Overcurrent#98 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_RNAV_1#80 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Rad_Alt#72 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Right_Aux_Pump#94 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Right_Fuel_Qty#61 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Right_Fuel_Vent_Heat#63 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Right_Ice_Door#65 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Right_Ignition#96 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Right_Oil_Door#67 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Right_Wing_Pump#59 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Rt_Feather_Warning#100 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Rt_Oil_Temp_Press#102 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Stall_R_Pitot#8 8 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Stall_Warn#48 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Sub_Panel#33 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 34 4 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Surf_Sys#9 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Taxi_and_Ice#26 18 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) 27 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Transponder#89 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Turn___Slip#87 11 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Vent_Blwr#5 3 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_Volt_Meter#46 7 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_WRDR_Ant#83 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
Duke_Turb_CB_WRDR_Cont#82 10 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE)
//Blackbird/Milviz/CH47D Chinook (2024)/Autopilot
CH47D_SAMPLE_INPUT#1 (>L:some lvar)
//Blackbird/Milviz/Cessna 310R/Air Conditioning / Pressurisation / Ventilation
C310R_Cabin_Air_Control_DEC#(L:C310_SW_CABIN_AIR) 5 - 0 max (>L:C310_SW_CABIN_AIR)
C310R_Cabin_Air_Control_INC#(L:C310_SW_CABIN_AIR) 5 + 100 min (>L:C310_SW_CABIN_AIR)
C310R_Forward_Cabin_Air_Control_DEC#(L:C310_SW_FWD_CABIN_AIR) 5 - 0 max (>L:C310_SW_FWD_CABIN_AIR)
C310R_Forward_Cabin_Air_Control_INC#(L:C310_SW_FWD_CABIN_AIR) 5 + 100 min (>L:C310_SW_FWD_CABIN_AIR)
C310R_Temperature_Control_DEC#(L:C310_SW_TEMP_CONTROL) 5 - 0 max (>L:C310_SW_TEMP_CONTROL)
C310R_Temperature_Control_INC#(L:C310_SW_TEMP_CONTROL) 5 + 100 min (>L:C310_SW_TEMP_CONTROL)
C310R_Window_Defrost_DEC#(L:C310_SW_DEFROST) 5 - 0 max (>L:C310_SW_DEFROST)
C310R_Window_Defrost_INC#(L:C310_SW_DEFROST) 5 + 100 min (>L:C310_SW_DEFROST)
//Blackbird/Milviz/Cessna 310R/Anti-Ice
C310R_Cabin_Heat_Fan#2 (>L:C310_SW_HEATER, enum)
C310R_Cabin_Heat_Off#1 (>L:C310_SW_HEATER, enum)
C310R_Cabin_Heat_On#0 (>L:C310_SW_HEATER, enum)
C310R_Deice_Boots_Auto#2 (>L:C310_SW_DEICE_SURFACE, enum)
C310R_Deice_Boots_Inflate#0 (>L:C310_SW_DEICE_SURFACE, enum)
C310R_Deice_Boots_Off#1 (>L:C310_SW_DEICE_SURFACE, enum)
C310R_Pitot_Heat_Off#(>K:PITOT_HEAT_OFF)
C310R_Pitot_Heat_On#(>K:PITOT_HEAT_ON)
C310R_Prop_Deice_Off#(>K:ANTI_ICE_OFF)
C310R_Prop_Deice_On#(>K:ANTI_ICE_ON)
C310R_Windshield_Heat_Off#0 (>L:C310_SW_DEICE_WINDSHLD, bool)
C310R_Windshield_Heat_On#1 (>L:C310_SW_DEICE_WINDSHLD, bool)
//Blackbird/Milviz/Cessna 310R/Autopilot
C310R_AP_ALT_HOLD#(>H:KAP140_PUSH_ALT)
C310R_AP_HDG_HOLD#(A:AUTOPILOT MASTER, Bool) if{ (>K:AP_PANEL_HEADING_HOLD) }
C310R_AP_NAV_HOLD#(A:AUTOPILOT MASTER, Bool) if{ (>K:AP_NAV1_HOLD) }
C310R_AP_ON_OFF#(L:C310_SW_AVIONICS) if{ (A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) } }
C310R_APR_HOLD#(A:AUTOPILOT MASTER, Bool) if{ (>K:AP_APR_HOLD) }
C310R_Altitude_DEC_-_1000#1000 (>K:AP_ALT_VAR_DEC)
C310R_Altitude_INC__100#100 (>K:AP_ALT_VAR_INC)
C310R_Altitude_INC__1000#1000 (>K:AP_ALT_VAR_INC)
C319_Altitude_DEC_-100#100 (>K:AP_ALT_VAR_DEC)
//Blackbird/Milviz/Cessna 310R/Avionics
C310R_Avionics_Master_Off#(A:AVIONICS MASTER SWITCH:1, Bool) 1 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) }
C310R_Avionics_Master_On#(A:AVIONICS MASTER SWITCH:1, Bool) 0 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) }
C310R_Nav_1_Select#1 (>L:C310_SW_NAV_SELECTOR, bool)
C310R_Nav_2_Select#0 (>L:C310_SW_NAV_SELECTOR, bool)
//Blackbird/Milviz/Cessna 310R/Controls
Elevator_Trim_Slow_DOWN#(A:ELEVATOR TRIM PCT, Percent) 163.83 * 81.915 - -16383 max (>K:ELEVATOR_TRIM_SET)
Elevator_Trim_Slow_UP#(A:ELEVATOR TRIM PCT, Percent) 163.83 * 81.915 + 16383 min (>K:ELEVATOR_TRIM_SET)
//Blackbird/Milviz/Cessna 310R/Electrical
C310R_AMP_Meter_Select_BAT#2 (>L:C310_ELEC_AMP_KNOB, enum)
C310R_AMP_Meter_Select_L_ALT#0 (>L:C310_ELEC_AMP_KNOB, enum)
C310R_AMP_Meter_Select_R_ALT#1 (>L:C310_ELEC_AMP_KNOB, enum)
C310R_AMP_Meter_Select_VOLT#3 (>L:C310_ELEC_AMP_KNOB, enum)
C310R_Battery_Off#(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
C310R_Battery_On#(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
C310R_Left_Alt_Off#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }
C310R_Left_Alt_On#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR1) }
C310R_Right_Alt_Off#(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) 1 == if{ 1 (>K:TOGGLE_ALTERNATOR2) }
C310R_Right_Alt_On#(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) 0 == if{ 1 (>K:TOGGLE_ALTERNATOR2) }
//Blackbird/Milviz/Cessna 310R/Engine
C310R_Left_Engine_EDM_LF_Button_Press#1 (>L:C310_SW_EDML_R, bool)
C310R_Left_Engine_EDM_LF_Button_Release#0 (>L:C310_SW_EDML_R, bool)
C310R_Left_Engine_EDM_Step_Button_Press#1 (>L:C310_SW_EDML_L, bool)
C310R_Left_Engine_EDM_Step_Button_Release#0 (>L:C310_SW_EDML_L, bool)
C310R_Left_Mag_1_Off#0 (>A:RECIP ENG LEFT MAGNETO:1, Bool)
C310R_Left_Mag_1_On#1 (>A:RECIP ENG LEFT MAGNETO:1, Bool)
C310R_Left_Mag_2_Off#0 (>A:RECIP ENG RIGHT MAGNETO:1, Bool)
C310R_Left_Mag_2_On#1 (>A:RECIP ENG RIGHT MAGNETO:1, Bool)
C310R_Primer_Left#0 (>L:C310_SW_PRIMER, enum)
C310R_Primer_Right#2 (>L:C310_SW_PRIMER, enum)
C310R_Primer_off#1 (>L:C310_SW_PRIMER, enum)
C310R_Right_Engine_EDM_LF_Button_Press#1 (>L:C310_SW_EDMR_R, bool)
C310R_Right_Engine_EDM_LF_Button_Release#0 (>L:C310_SW_EDMR_R, bool)
C310R_Right_Engine_EDM_Step_Button_Press#1 (>L:C310_SW_EDMR_L, bool)
C310R_Right_Engine_EDM_Step_Button_Release#0 (>L:C310_SW_EDMR_L, bool)
C310R_Right_Mag_1_Off#0 (>A:RECIP ENG LEFT MAGNETO:2, Bool)
C310R_Right_Mag_1_On#1 (>A:RECIP ENG LEFT MAGNETO:2, Bool)
C310R_Right_Mag_2_Off#0 (>A:RECIP ENG RIGHT MAGNETO:2, Bool)
C310R_Right_Mag_2_On#1 (>A:RECIP ENG RIGHT MAGNETO:2, Bool)
C310R_Start_Left_Engine#(>K:TOGGLE_STARTER1)
C310R_Start_Right_Engine#(>K:TOGGLE_STARTER2)
//Blackbird/Milviz/Cessna 310R/Fuel
C310R_Fuel_Gauge_Aux#2 (>L:C310_SW_FUEL_IND, enum)
C310R_Fuel_Gauge_Main#0 (>L:C310_SW_FUEL_IND, enum)
C310R_Fuel_Gauge_Selected#1 (>L:C310_SW_FUEL_IND, enum)
C310R_Fuel_Pump_Left__Low#2 (>L:C310_SW_FUEL_PUMP_LEFT, enum)
C310R_Fuel_Pump_Left__Off#1 (>L:C310_SW_FUEL_PUMP_LEFT, enum)
C310R_Fuel_Pump_Left_High#0 (>L:C310_SW_FUEL_PUMP_LEFT, enum)
C310R_Fuel_Pump_Right_High#0 (>L:C310_SW_FUEL_PUMP_RIGHT, enum)
C310R_Fuel_Pump_Right_Low#2 (>L:C310_SW_FUEL_PUMP_RIGHT, enum)
C310R_Fuel_Pump_Right_Off#1 (>L:C310_SW_FUEL_PUMP_RIGHT, enum)
C310R_Left_Fuel_Selector_Left_Aux#1 (>L:C310_SW_FUEL_SEL_LEFT, enum)
C310R_Left_Fuel_Selector_Left_Main#2 (>L:C310_SW_FUEL_SEL_LEFT, enum)
C310R_Left_Fuel_Selector_Off#3 (>L:C310_SW_FUEL_SEL_LEFT, enum)
C310R_Left_Fuel_Selector_Right_Main#0 (>L:C310_SW_FUEL_SEL_LEFT, enum)
C310R_Right_Fuel_Selector_Left_Main#0 (>L:C310_SW_FUEL_SEL_RIGHT, enum)
C310R_Right_Fuel_Selector_Off#3 (>L:C310_SW_FUEL_SEL_RIGHT, enum)
C310R_Right_Fuel_Selector_Right_Aux#1 (>L:C310_SW_FUEL_SEL_RIGHT, enum)
C310R_Right_Fuel_Selector_Right_Main#2 (>L:C310_SW_FUEL_SEL_RIGHT, enum)
//Blackbird/Milviz/Cessna 310R/Lights
C310R_Beacon_Lights__On#1 (>K:BEACON_LIGHTS_SET)
C310R_Beacon_Lights_Off#0 (>K:BEACON_LIGHTS_SET)
C310R_Engine_Instrument_Lighting_DEC#(L:C310_SW_LIGHTS_ENG_INST) 5 - 0 max (>L:C310_SW_LIGHTS_ENG_INST) (L:C310_SW_LIGHTS_ENG_INST, enum) (>K:LIGHT_POTENTIOMETER_6_SET)
C310R_Engine_Instrument_Lighting_INC#(L:C310_SW_LIGHTS_ENG_INST) 5 + 100 min (>L:C310_SW_LIGHTS_ENG_INST) (L:C310_SW_LIGHTS_ENG_INST, enum) (>K:LIGHT_POTENTIOMETER_6_SET)
C310R_Flight_Instrument_Lighting_DEC#(L:C310_SW_LIGHTS_FLT_INST) 5 - 0 max (>L:C310_SW_LIGHTS_FLT_INST) (L:C310_SW_LIGHTS_FLT_INST) (>K:LIGHT_POTENTIOMETER_4_SET)
C310R_Flight_Instrument_Lighting_INC#(L:C310_SW_LIGHTS_FLT_INST) 5 + 100 min (>L:C310_SW_LIGHTS_FLT_INST) (L:C310_SW_LIGHTS_FLT_INST) (>K:LIGHT_POTENTIOMETER_4_SET)
C310R_Forward_Cabin_Light_DEC#(L:C310_SW_FLOOD_LEFT) 5 - 0 max (>L:C310_SW_FLOOD_LEFT) (L:C310_SW_FLOOD_LEFT, enum) (>K:LIGHT_POTENTIOMETER_8_SET) (L:C310_SW_FLOOD_LEFT, enum) ! if{ (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } }
C310R_Forward_Cabin_Light_INC#(L:C310_SW_FLOOD_LEFT) 5 + 100 min (>L:C310_SW_FLOOD_LEFT) (L:C310_SW_FLOOD_LEFT, enum) (>K:LIGHT_POTENTIOMETER_8_SET) (L:C310_SW_FLOOD_LEFT, enum) if{ (A:CIRCUIT SWITCH ON:23, bool) ! if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } }
C310R_Front_Cabin_Light_DEC#(L:C310_SW_FLOOD_CENTER) 5 - 0 max (>L:C310_SW_FLOOD_CENTER) (L:C310_SW_FLOOD_CENTER, enum) (>K:LIGHT_POTENTIOMETER_9_SET) (L:C310_SW_FLOOD_CENTER, enum) ! if{ (A:CIRCUIT SWITCH ON:53, bool) if{ 53 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } }
C310R_Front_Cabin_Light_INC#(L:C310_SW_FLOOD_CENTER) 5 + 100 min (>L:C310_SW_FLOOD_CENTER) (L:C310_SW_FLOOD_CENTER, enum) (>K:LIGHT_POTENTIOMETER_9_SET) (L:C310_SW_FLOOD_CENTER, enum) if{ (A:CIRCUIT SWITCH ON:53, bool) ! if{ 53 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } }
C310R_Landing_Lights_Extend#0 (>L:C310_SW_LIGHTS_LANDING, enum)
C310R_Landing_Lights_Off#1 (>L:C310_SW_LIGHTS_LANDING, enum)
C310R_Landing_Lights_Retract#2 (>L:C310_SW_LIGHTS_LANDING, enum)
C310R_Left_Switch_Panel_Lighting_DEC#(L:C310_SW_LIGHTS_SIDE) 5 - 0 max (>L:C310_SW_LIGHTS_SIDE) (L:C310_SW_LIGHTS_SIDE, enum) (>K:LIGHT_POTENTIOMETER_7_SET)
C310R_Left_Switch_Panel_Lighting_INC#(L:C310_SW_LIGHTS_SIDE) 5 + 100 min (>L:C310_SW_LIGHTS_SIDE) (L:C310_SW_LIGHTS_SIDE, enum) (>K:LIGHT_POTENTIOMETER_7_SET)
C310R_Nav_Lghts_Off#0 (>K:NAV_LIGHTS_SET)
C310R_Nav_Lights_On#1 (>K:NAV_LIGHTS_SET)
C310R_Radio_Lighting_DEC#(L:C310_SW_LIGHTS_RADIO) 5 - 0 max (>L:C310_SW_LIGHTS_RADIO) (L:C310_SW_LIGHTS_RADIO, enum) (>K:LIGHT_POTENTIOMETER_5_SET)
C310R_Radio_Lighting_INC#(L:C310_SW_LIGHTS_RADIO) 5 + 100 min (>L:C310_SW_LIGHTS_RADIO) (L:C310_SW_LIGHTS_RADIO, enum) (>K:LIGHT_POTENTIOMETER_5_SET)
C310R_Strobe_Lights_Off#(>K:STROBES_OFF)
C310R_Strobe_Lights_On#(>K:STROBES_ON)
C310R_Taxi_Lights_Off#0 (>K:TAXI_LIGHTS_SET)
C310R_Taxi_Lights_On#1 (>K:TAXI_LIGHTS_SET)
C310R_Wing_Ice_Lights_Off#0 (>K:WING_LIGHTS_SET)
C310R_Wing_Ice_Lights_On#1 (>K:WING_LIGHTS_SET)
//Blackbird/Milviz/Cessna 310R/Miscellaneous
Copilot_Window_Shade_Down#(L:WindowShadeLeft) 0.05 + 1 min (>L:WindowShadeLeft)
Copilot_Window_Shade_Up#(L:WindowShadeRight) 0.05 - 0 max (>L:WindowShadeRight)
Pilot_Window_Shade_Down#(L:WindowShadeLeft) 0.05 + 1 min (>L:WindowShadeLeft)
Pilot_Window_Shade_Up#(L:WindowShadeLeft) 0.05 - 0 max (>L:WindowShadeLeft)
Tablet_Toggle_On_Off#1 (>L:C310_TOGGLE_TABLET_HIDDEN)
//Blackbird/Milviz/PC6 Turbo Porter/Avionics
Avionics_BUS_1_On#3 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
Avionics_BUS_2#3 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
PC6_AVIONICS1_TOGGLE#3 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
PC6_AVIONICS2_TOGGLE#3 5 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
//Blackbird/Milviz/PC6 Turbo Porter/Fuel
Left_Transfer_Tank_Pump_Toggle#3 (>K:ELECTRICAL_CIRCUIT_TOGGLE) 
Right_Transfer_Tank_Pump_Toggle#4 (>K:ELECTRICAL_CIRCUIT_TOGGLE) 
//Blackbird/Milviz/PC6 Turbo Porter/Gear
TailWheel_Lock#(A:TAILWHEEL LOCK ON, Bool) 0 == if{(>K:TOGGLE_TAILWHEEL_LOCK)} 
Tailwheel_Unlock#(A:TAILWHEEL LOCK ON, Bool) 1 == if{(>K:TOGGLE_TAILWHEEL_LOCK)} 
//Blackbird/Milviz/PC6 Turbo Porter/Lights
Landing_Light_Position_DOWN#(L:LandingLight_Position) 0 == if{(>L:LandingLight_Position,Number) 0 (>L:LandingLight_SwitchPosition, Number)} 
Landing_Light_Position_UP#(L:LandingLight_Position) 0 == if{(>L:LandingLight_Position,Number) 1 (>L:LandingLight_SwitchPosition, Number)} 
//Blackbird/Milviz/T-6a/Electrical
Avionics_Master#211 (>L:EVENT_ID, enum)
//Blackbird/Milviz/T-6a/Lights
Landing_Light#9 (>L:EVENT_ID, enum)
//Blackbird/Milviz/T-6a/Navigation
GPS_ALT#170 (>L:EVENT_ID, enum)
GPS_Clr#167 (>L:EVENT_ID, enum)
GPS_Direct_to#166 (>L:EVENT_ID, enum)
GPS_ENT#168 (>L:EVENT_ID, enum)
GPS_Left_Inner_nob_left_turn#159 (>L:EVENT_ID, enum)
GPS_Left_Inner_nob_right_turn#160 (>L:EVENT_ID, enum)
GPS_Left_Outer_nob_left_turn#157 (>L:EVENT_ID, enum)
GPS_Left_Outer_nob_right_turn#158 (>L:EVENT_ID, enum)
GPS_Msg#172 (>L:EVENT_ID, enum)
GPS_OBS#169 (>L:EVENT_ID, enum)
GPS_Right_Inner_knob_pull#165 (>L:EVENT_ID, enum)
GPS_Right_Inner_knob_turn_left#163 (>L:EVENT_ID, enum)
GPS_Right_Inner_knob_turn_right#164 (>L:EVENT_ID, enum)
GPS_Right_Outer_nob_left_turn#161 (>L:EVENT_ID, enum)
GPS_Right_Outer_nob_right_turn#162 (>L:EVENT_ID, enum)
GPS_SAVE#173 (>L:EVENT_ID, enum)
Left_Gps_Cursor#155 (>L:EVENT_ID, enum)
Right_Gps_Cursor#156 (>L:EVENT_ID, enum)
//Bredok3d/737-MAX/EFIS
737_AS01B_PFD_Mins_DEC#(>H:AS01B_PFD_Mins_DEC)
737_AS01B_PFD_Mins_INC#(>H:AS01B_PFD_Mins_INC)
737_AS01B_PFD_Mins_Press#(>H:AS01B_PFD_Mins_Press)
737_XMLVAR_Mins_Selector_Baro_BARO#1 (>L:XMLVAR_Mins_Selector_Baro)
737_XMLVAR_Mins_Selector_Baro_RADIO#0 (>L:XMLVAR_Mins_Selector_Baro)
AS01B_MFD_1_AUTOPILOT_CTR#(>H:AS01B_MFD_1_AUTOPILOT_CTR)
AS01B_MFD_1_CHKL#(>H:AS01B_MFD_1_CHKL)
AS01B_MFD_1_COMM#(>H:AS01B_MFD_1_COMM)
AS01B_MFD_1_Cursor_DEC#(>H:AS01B_MFD_1_Cursor_DEC)
AS01B_MFD_1_Cursor_INC#(>H:AS01B_MFD_1_Cursor_INC)
AS01B_MFD_1_Cursor_Press#(>H:AS01B_MFD_1_Cursor_Press)
AS01B_MFD_1_EICAS#(>H:AS01B_MFD_1_EICAS)
AS01B_MFD_1_ENG#(>H:AS01B_MFD_1_ENG)
AS01B_MFD_1_INFO#(>H:AS01B_MFD_1_INFO)
AS01B_MFD_1_ND#(>H:AS01B_MFD_1_ND)
AS01B_MFD_1_Range_DEC#(>H:AS01B_MFD_1_Range_DEC)
AS01B_MFD_1_Range_INC#(>H:AS01B_MFD_1_Range_INC)
AS01B_MFD_1_SYS#(>H:AS01B_MFD_1_SYS)
AS01B_MFD_1_TERR#(>H:AS01B_MFD_1_TERR)
AS01B_MFD_1_TFC#(>H:AS01B_MFD_1_TFC)
AS01B_MFD_1_WXR#(>H:AS01B_MFD_1_WXR)
AS01B_MFD_2_AUTOPILOT_CTR#(>H:AS01B_MFD_2_AUTOPILOT_CTR)
AS01B_MFD_2_Cursor_DEC#(>H:AS01B_MFD_2_Cursor_DEC)
AS01B_MFD_2_Cursor_INC#(>H:AS01B_MFD_2_Cursor_INC)
AS01B_MFD_2_Cursor_Press#(>H:AS01B_MFD_2_Cursor_Press)
AS01B_MFD_2_Range_DEC#(>H:AS01B_MFD_2_Range_DEC)
AS01B_MFD_2_Range_INC#(>H:AS01B_MFD_2_Range_INC)
AS01B_PFD_Mins_DEC#(>H:AS01B_PFD_Mins_DEC)
AS01B_PFD_Mins_INC#(>H:AS01B_PFD_Mins_INC)
AS01B_PFD_Mins_Press#(>H:AS01B_PFD_Mins_Press)
KNOB_Baro_1_DEC#(L:XMLVAR_Baro1_ForcedToSTD) ! if{ 1 (>K:KOHLSMAN_DEC) }
KNOB_Baro_1_INC#(L:XMLVAR_Baro1_ForcedToSTD) ! if{ 1 (>K:KOHLSMAN_INC) }
KNOB_Baro_2_DEC#(L:XMLVAR_Baro1_ForcedToSTD) ! if{ 1 (>K:KOHLSMAN_DEC) }
KNOB_Baro_2_INC#(L:XMLVAR_Baro1_ForcedToSTD) ! if{ 1 (>K:KOHLSMAN_INC) }
KNOB_Baro_1_Press#(L:XMLVAR_Baro1_ForcedToSTD) ! (>L:XMLVAR_Baro1_ForcedToSTD) (L:XMLVAR_Baro1_ForcedToSTD) if{ (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) 1 (>K:BAROMETRIC_STD_PRESSURE) } els{ 1 (L:XMLVAR_Baro1_SavedPressure) (>K:2:KOHLSMAN_SET) }
KNOB_Baro_2_Press#(L:XMLVAR_Baro1_ForcedToSTD) ! (>L:XMLVAR_Baro1_ForcedToSTD) (L:XMLVAR_Baro1_ForcedToSTD) if{ (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) 1 (>K:BAROMETRIC_STD_PRESSURE) } els{ 1 (L:XMLVAR_Baro1_SavedPressure) (>K:2:KOHLSMAN_SET) }
XMLVAR_Baro_Selector_HPA_1_HPA#1 (>L:XMLVAR_Baro_Selector_HPA_1)
XMLVAR_Baro_Selector_HPA_1_IN#0 (>L:XMLVAR_Baro_Selector_HPA_1)
XMLVAR_Baro_Selector_HPA_2_HPA#1 (>L:XMLVAR_Baro_Selector_HPA_2)
XMLVAR_Baro_Selector_HPA_2_IN#0 (>L:XMLVAR_Baro_Selector_HPA_2)
XMLVAR_Mins_Selector_Baro_BARO#1 (>L:XMLVAR_Mins_Selector_Baro)
XMLVAR_Mins_Selector_Baro_RADIO#0 (>L:XMLVAR_Mins_Selector_Baro)
//COWS/DA42/Controls
Elevator_Trim_DN#(L:INPUT_TRIM_AXIS) 2.5 - -100 max 100 min (>L:INPUT_TRIM_AXIS)
Elevator_Trim_UP#(L:INPUT_TRIM_AXIS) 2.5 + -100 max 100 min (>L:INPUT_TRIM_AXIS)
//COWS/DA42/Electrical
DA42_BREAKER_ADC_TOGGLE#40 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_ADF_TOGGLE#43 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_AH_TOGGLE#28 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_AHRS_TOGGLE#41 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_ALT__LH_TOGGLE#(L:CB_ALT:1) ! (>L:CB_ALT:1)
DA42_BREAKER_ALT__RH_TOGGLE#(L:CB_ALT:2) ! (>L:CB_ALT:2)
DA42_BREAKER_AV_CONT__TOGGLE#8 9 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
DA42_BREAKER_AV_CDU_Fan_TOGGLE#29 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_AVIONIC_BUS_TOGGLE#6 8 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
DA42_BREAKER_Autopilot_TOGGLE#45 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_COM1_TOGGLE#36 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_COM2_TOGGLE#38 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_DATA_LINK_TOGGLE#42 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_DME_TOGGLE#43 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_ENG_INST_TOGGLE#47 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_FLAP_TOGGLE#8 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_FLOOD_TOGGLE#22 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_FUEL_PUMP_A_LEFT_TOGGLE#50 11 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  50 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_FUEL_PUMP_A_RIGHT_TOGGLE#52 13 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  52 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_FUEL_PUMP_B_LEFT_TOGGLE#51 12 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  51 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_FUEL_PUMP_B_RIGHT_TOGGLE#53 14 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  53 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_GPS_NAV1_TOGGLE#35 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  49 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_GPS_NAV2_TOGGLE#37 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  49 10 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_Gear_TOGGLE#5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
DA42_BREAKER_Gear_WRN_ELEV__LIMIT_TOGGLE#48 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_INST_LT_NAV_LT_TOGGLE#6 7 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
DA42_BREAKER_LDG_LT_START_TOGGLE#17 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_LH_BATT_TOGGLE#(L:CB_ECUBAT:1) ! (>L:CB_ECUBAT:1)
DA42_BREAKER_LH_ECU_A_TOGGLE#54 11 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_LH_ECU_B_TOGGLE#55 12 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  62 12 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_MFD_TOGGLE#32 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_PFD_TOGGLE#31 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_PITOT_TOGGLE#11 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_RH_BATT_TOGGLE#(L:CB_ECUBAT:2) ! (>L:CB_ECUBAT:2)
DA42_BREAKER_RH_ECU_A_TOGGLE#56 13 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_RH_ECU_B_TOGGLE#57 14 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  63 14 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_RH_ECU_BUS_TOGGLE#(L:CB_ECUBUS:2) ! (>L:CB_ECUBUS:2)
DA42_BREAKER_STALL_TOGGLE#7 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)  66 6 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
DA42_BREAKER_TAXI_MAP_ACL_TOGGLE#4 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
DA42_BREAKER_XFER_PUMP_DE-ICE_TOGGLE#3 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
DA42_BREAKER_XPDR_TOGGLE#33 2 (>K:2:ELECTRICAL_CIRCUIT_BREAKER_TOGGLE)
//COWS/DA42/Engine
ALTERNATE_AIR_VALVE_TOGGLE#(L:ENGINE_ALTERNATE_AIR) ! (>L:ENGINE_ALTERNATE_AIR)
//COWS/DA42/Environment
HEADSET_OFF#(L:HEADSET) ! (>L:HEADSET)
HEADSET_ON#(L:HEADSET) ! (>L:HEADSET)
//COWS/DA42/FADEC
ECU_TEST_LEFT_BUTTON_ON_PRESS#1 (>L:FADEC_ECUTEST_BUTTON:1_IsDown)
ECU_TEST_LEFT_BUTTON_RELEASE#0 (>L:FADEC_ECUTEST_BUTTON:1_IsDown)
ECU_TEST_RIGHT_BUTTON_PRESS#1 (>L:FADEC_ECUTEST_BUTTON:2_IsDown)
ECU_TEST_RIGHT_BUTTON_RELEASE#0 (>L:FADEC_ECUTEST_BUTTON:2_IsDown)
//COWS/DA42/Gear
EMERGENCY_GEAR_EXTENSION_HANDLE_TOGGLE#(L:GEAR_EMERGENCY) ! (>L:GEAR_EMERGENCY)
GEAR_FIRE_TEST_BUTTON_PRESS#1 (>L:GEAR_FIRE_TEST_IsDown)
GEAR_FIRE_TEST_BUTTON_RELEASE#0 (>L:GEAR_FIRE_TEST_IsDown)
Parking_Brake_OFF#1 (>L:INPUT_PARK)
Parking_Brake_ON#0 (>L:INPUT_PARK)
//CSS/737-500/FMS
CSS_737_FMS_Left_0#1 (>L:btn_cdu1_0)
CSS_737_FMS_Left_1#1 (>L:btn_cdu1_1)
CSS_737_FMS_Left_2#1 (>L:btn_cdu1_2)
CSS_737_FMS_Left_3#1 (>L:btn_cdu1_3)
CSS_737_FMS_Left_4#1 (>L:btn_cdu1_4)
CSS_737_FMS_Left_5#1 (>L:btn_cdu1_5)
CSS_737_FMS_Left_6#1 (>L:btn_cdu1_6)
CSS_737_FMS_Left_7#1 (>L:btn_cdu1_7)
CSS_737_FMS_Left_8#1 (>L:btn_cdu1_8)
CSS_737_FMS_Left_9#1 (>L:btn_cdu1_9)
CSS_737_FMS_Left_A#1 (>L:btn_cdu1_a)
CSS_737_FMS_Left_B#1 (>L:btn_cdu1_b)
CSS_737_FMS_Left_Brt_Dec#(L:pot_cdu1_brt) 0.05 - 0 max (>L:pot_cdu1_brt)
CSS_737_FMS_Left_Brt_Inc#(L:pot_cdu1_brt) 0.05 + 1 min (>L:pot_cdu1_brt)
CSS_737_FMS_Left_C#1 (>L:btn_cdu1_c)
CSS_737_FMS_Left_Clb#1 (>L:btn_cdu1_clb)
CSS_737_FMS_Left_Clr_Press#1 (>L:btn_cdu1_clr_IsDown)
CSS_737_FMS_Left_Clr_Release#0 (>L:btn_cdu1_clr_IsDown)
CSS_737_FMS_Left_Crz#1 (>L:btn_cdu1_crz)
CSS_737_FMS_Left_D#1 (>L:btn_cdu1_d)
CSS_737_FMS_Left_Del#1 (>L:btn_cdu1_del)
CSS_737_FMS_Left_Dep_Arr#1 (>L:btn_cdu1_dep_arr)
CSS_737_FMS_Left_Des#1 (>L:btn_cdu1_des)
CSS_737_FMS_Left_Dir_Intc#1 (>L:btn_cdu1_dir_intc)
CSS_737_FMS_Left_Dot#1 (>L:btn_cdu1_dot)
CSS_737_FMS_Left_E#1 (>L:btn_cdu1_e)
CSS_737_FMS_Left_Exec#1 (>L:btn_cdu1_exec)
CSS_737_FMS_Left_F#1 (>L:btn_cdu1_f)
CSS_737_FMS_Left_Fix#1 (>L:btn_cdu1_fix)
CSS_737_FMS_Left_G#1 (>L:btn_cdu1_g)
CSS_737_FMS_Left_H#1 (>L:btn_cdu1_h)
CSS_737_FMS_Left_Hold#1 (>L:btn_cdu1_hold)
CSS_737_FMS_Left_I#1 (>L:btn_cdu1_i)
CSS_737_FMS_Left_Init_Ref#1 (>L:btn_cdu1_init_ref)
CSS_737_FMS_Left_J#1 (>L:btn_cdu1_j)
CSS_737_FMS_Left_K#1 (>L:btn_cdu1_k)
CSS_737_FMS_Left_L#1 (>L:btn_cdu1_l)
CSS_737_FMS_Left_Legs#1 (>L:btn_cdu1_legs)
CSS_737_FMS_Left_Lsk_L1#1 (>L:btn_cdu1_l1)
CSS_737_FMS_Left_Lsk_L2#1 (>L:btn_cdu1_l2)
CSS_737_FMS_Left_Lsk_L3#1 (>L:btn_cdu1_l3)
CSS_737_FMS_Left_Lsk_L4#1 (>L:btn_cdu1_l4)
CSS_737_FMS_Left_Lsk_L5#1 (>L:btn_cdu1_l5)
CSS_737_FMS_Left_Lsk_L6#1 (>L:btn_cdu1_l6)
CSS_737_FMS_Left_Lsk_R1#1 (>L:btn_cdu1_r1)
CSS_737_FMS_Left_Lsk_R2#1 (>L:btn_cdu1_r2)
CSS_737_FMS_Left_Lsk_R3#1 (>L:btn_cdu1_r3)
CSS_737_FMS_Left_Lsk_R4#1 (>L:btn_cdu1_r4)
CSS_737_FMS_Left_Lsk_R5#1 (>L:btn_cdu1_r5)
CSS_737_FMS_Left_Lsk_R6#1 (>L:btn_cdu1_r6)
CSS_737_FMS_Left_M#1 (>L:btn_cdu1_m)
CSS_737_FMS_Left_N#1 (>L:btn_cdu1_n)
CSS_737_FMS_Left_N1_Limit#1 (>L:btn_cdu1_n1_limit)
CSS_737_FMS_Left_Next_Page#1 (>L:btn_cdu1_next_page)
CSS_737_FMS_Left_O#1 (>L:btn_cdu1_o)
CSS_737_FMS_Left_P#1 (>L:btn_cdu1_p)
CSS_737_FMS_Left_Plus_Minus#1 (>L:btn_cdu1_plus_minus)
CSS_737_FMS_Left_Prev_Page#1 (>L:btn_cdu1_prev_page)
CSS_737_FMS_Left_Prog#1 (>L:btn_cdu1_prog)
CSS_737_FMS_Left_Q#1 (>L:btn_cdu1_q)
CSS_737_FMS_Left_R#1 (>L:btn_cdu1_r)
CSS_737_FMS_Left_Rte#1 (>L:btn_cdu1_rte)
CSS_737_FMS_Left_S#1 (>L:btn_cdu1_s)
CSS_737_FMS_Left_Slash#1 (>L:btn_cdu1_slash)
CSS_737_FMS_Left_Space#1 (>L:btn_cdu1_sp)
CSS_737_FMS_Left_T#1 (>L:btn_cdu1_t)
CSS_737_FMS_Left_U#1 (>L:btn_cdu1_u)
CSS_737_FMS_Left_V#1 (>L:btn_cdu1_v)
CSS_737_FMS_Left_W#1 (>L:btn_cdu1_w)
CSS_737_FMS_Left_X#1 (>L:btn_cdu1_x)
CSS_737_FMS_Left_Y#1 (>L:btn_cdu1_y)
CSS_737_FMS_Left_Z#1 (>L:btn_cdu1_z)
//Captain Sim/C-130/Autopilot System
Altitude_Hold#(>L:P17_003_SW2)
Flight_Director_Toggle#(>L:L10_001_SW2)
Pitch_Control_Knob#(L:m133_AP_target_pitch )
Radio_Beam_Coupler_Switch#(>L:P19_001_GL4)
Turn_Control_Knob#(L:P17_001_KNB)
//Carenado/PA34/Autopilot
Autopilot_Master_On#(>K:AP_MASTER)
//Carenado/C170B/Avionics
C170B_GPS_VISIBILITY_TOGGLE#(L:GPS_VIS, Bool) 0 == if{ 1 (>L:GPS_VIS) } els{ 0 (>L:GPS_VIS) }
C170B_RADIO_POWER_TOGGLE#(>K:TOGGLE_AVIONICS_MASTER)
//Carenado/C170B/Electrical
C170B_BATTERY_TOGGLE#(>K:TOGGLE_MASTER_BATTERY)
//Carenado/C170B/Engines
C170B_MAGNETO_BOTH#(>K:MAGNETO1_BOTH)
C170B_MAGNETO_LEFT#(>K:MAGNETO_LEFT)
C170B_MAGNETO_OFF#(>K:MAGNETO_OFF)
C170B_MAGNETO_RIGHT#(>K:MAGNETO_RIGHT)
C170B_STARTER_PULL#(>K:TOGGLE_STARTER1)
C170B_THROTTLE_SET#@ 16.0147 * 0 max 16383 min (>K:THROTTLE_SET)
//Carenado/C170B/Flight Instrumentation
C170B_BAROMETER_DEC#(>K:KOHLSMAN_DEC)
C170B_BAROMETER_INC#(>K:KOHLSMAN_INC)
//Carenado/C170B/Fuel
C170B_FUEL_SELECTOR_BOTH_OFF#0 (>K:FUEL_SELECTOR_SET)
C170B_FUEL_SELECTOR_BOTH_ON#16 (>K:FUEL_SELECTOR_SET)
C170B_FUEL_SELECTOR_DEC#(A:FUEL TANK SELECTOR:1, Enum) s0 0 == if{ 3 (>K:FUEL_SELECTOR_SET) } els{ l0 3 == if{ 16 (>K:FUEL_SELECTOR_SET) } els{ l0 16 == if{ 2 (>K:FUEL_SELECTOR_SET) } els{ 0 (>K:FUEL_SELECTOR_SET) } } }
C170B_FUEL_SELECTOR_INC#(A:FUEL TANK SELECTOR:1, Enum) s0 0 == if{ 2 (>K:FUEL_SELECTOR_SET) } els{ l0 2 == if{ 16 (>K:FUEL_SELECTOR_SET) } els{ l0 16 == if{ 3 (>K:FUEL_SELECTOR_SET) } els{ 0 (>K:FUEL_SELECTOR_SET) } } }
C170B_FUEL_SELECTOR_LEFT_TANK#2 (>K:FUEL_SELECTOR_SET)
C170B_FUEL_SELECTOR_RIGHT_TANK#3 (>K:FUEL_SELECTOR_SET)
C170B_PRIMER_PULL#1 (>L:XMLVAR_PUSH_PRIMER_BTN)
//Carenado/C170B/Gear
C170B_PARKING_BRAKE_TOGGLE#(>K:PARKING_BRAKES)
//Carenado/C170B/Interaction
C170B_AIR_VENT_COPILOT_TOGGLE#(L:SWITCH_DUMMY_AIR_TEMP, Bool) 0 == if{ 1 (>L:SWITCH_DUMMY_AIR_TEMP) } els{ 0 (>L:SWITCH_DUMMY_AIR_TEMP) }
C170B_AIR_VENT_PILOT_TOGGLE#(L:SWITCH_DUMMY_WINDOWS, Bool) 0 == if{ 1 (>L:SWITCH_DUMMY_WINDOWS) } els{ 0 (>L:SWITCH_DUMMY_WINDOWS) }
C170B_DOOR_COPILOT_CLOSE#0 (>A:INTERACTIVE POINT GOAL:1, percent over 100)
C170B_DOOR_COPILOT_OPEN#1 (>A:INTERACTIVE POINT GOAL:1, percent over 100)
C170B_DOOR_COPILOT_TOGGLE#(A:INTERACTIVE POINT GOAL:1, percent over 100) 0 == if{ 1 (>A:INTERACTIVE POINT GOAL:1, percent over 100) } els{ 0 (>A:INTERACTIVE POINT GOAL:1, percent over 100) }
C170B_DOOR_PILOT_CLOSE#0 (>A:INTERACTIVE POINT GOAL:0, percent over 100)
C170B_DOOR_PILOT_OPEN#1 (>A:INTERACTIVE POINT GOAL:0, percent over 100)
C170B_DOOR_PILOT_TOGGLE#(A:INTERACTIVE POINT GOAL:0, percent over 100) 0 == if{ 1 (>A:INTERACTIVE POINT GOAL:0, percent over 100) } els{ 0 (>A:INTERACTIVE POINT GOAL:0, percent over 100) }
C170B_SUNVISOR_COPILOT_TOGGLE#(L:SUNVISOR2, number) 0 == if{ 1 (>L:SUNVISOR2, number) } els{ 0 (>L:SUNVISOR2, number) }
C170B_SUNVISOR_PILOT_TOGGLE#(L:SUNVISOR1, number) 0 == if{ 1 (>L:SUNVISOR1, number) } els{ 0 (>L:SUNVISOR1, number) }
C170B_WINDOW_COPILOT_CLOSE#0 (>A:INTERACTIVE POINT GOAL:4, percent over 100)
C170B_WINDOW_COPILOT_OPEN#1 (>A:INTERACTIVE POINT GOAL:4, percent over 100)
C170B_WINDOW_COPILOT_TOGGLE#(A:INTERACTIVE POINT GOAL:4, percent over 100) 0 == if{ 1 (>A:INTERACTIVE POINT GOAL:4, percent over 100) } els{ 0 (>A:INTERACTIVE POINT GOAL:4, percent over 100) }
C170B_WINDOW_PILOT_CLOSE#0 (>A:INTERACTIVE POINT GOAL:3, percent over 100)
C170B_WINDOW_PILOT_OPEN#1 (>A:INTERACTIVE POINT GOAL:3, percent over 100)
C170B_WINDOW_PILOT_TOGGLE#(A:INTERACTIVE POINT GOAL:3, percent over 100) 0 == if{ 1 (>A:INTERACTIVE POINT GOAL:3, percent over 100) } els{ 0 (>A:INTERACTIVE POINT GOAL:3, percent over 100) }
//Carenado/C170B/Lights
C170B_LIGHTS_BEACON_TOGGLE#(>K:TOGGLE_BEACON_LIGHTS)
C170B_LIGHTS_LANDING_TOGGLE#(>K:LANDING_LIGHTS_TOGGLE)
C170B_MAP_LIGHT_OFF#3 0 (>K:2:CABIN_LIGHTS_SET) 
C170B_MAP_LIGHT_ON#3 1 (>K:2:CABIN_LIGHTS_SET) 
C170B_MAP_LIGHT_TOGGLE#3 (>K:TOGGLE_CABIN_LIGHTS)
C170B_RED_CABIN_LIGHT_OFF#1 0 (>K:2:CABIN_LIGHTS_SET) 
C170B_RED_CABIN_LIGHT_ON#1 1 (>K:2:CABIN_LIGHTS_SET) 
C170B_RED_CABIN_LIGHT_TOGGLE#1 (>K:TOGGLE_CABIN_LIGHTS)
C170B_WHITE_CABIN_LIGHT_OFF#2 0 (>K:2:CABIN_LIGHTS_SET) 
C170B_WHITE_CABIN_LIGHT_ON#2 1 (>K:2:CABIN_LIGHTS_SET) 
C170B_WHITE_CABIN_LIGHT_TOGGLE#2 (>K:TOGGLE_CABIN_LIGHTS)
//Carenado/C170B/Radio
C170B_COM_FREQUENCY_FRACT_DEC#(>K:COM_RADIO_FRACT_DEC)
C170B_COM_FREQUENCY_FRACT_INC#(>K:COM_RADIO_FRACT_INC)
C170B_COM_FREQUENCY_WHOLE_DEC#(>K:COM_RADIO_WHOLE_DEC)
C170B_COM_FREQUENCY_WHOLE_INC#(>K:COM_RADIO_WHOLE_INC)
C170B_COM_STBY_SWAP#(>K:COM_STBY_RADIO_SWAP)
C170B_COM_VOLUME_DEC#(>K:COM1_VOLUME_DEC)
C170B_COM_VOLUME_INC#(>K:COM1_VOLUME_INC)
C170B_NAV_FREQUENCY_FRACT_DEC#(>K:NAV1_RADIO_FRACT_DEC)
C170B_NAV_FREQUENCY_FRACT_INC#(>K:NAV1_RADIO_FRACT_INC)
C170B_NAV_FREQUENCY_WHOLE_DEC#(>K:NAV1_RADIO_WHOLE_DEC)
C170B_NAV_FREQUENCY_WHOLE_INC#(>K:NAV1_RADIO_WHOLE_INC)
C170B_NAV_STBY_SWAP#(>K:NAV1_RADIO_SWAP)
C170B_TRANSPONDER_1000_DEC#(>K:XPNDR_1000_DEC)
C170B_TRANSPONDER_1000_INC#(>K:XPNDR_1000_INC)
C170B_TRANSPONDER_100_DEC#(>K:XPNDR_100_DEC)
C170B_TRANSPONDER_100_INC#(>K:XPNDR_100_INC)
C170B_TRANSPONDER_10_DEC#(>K:XPNDR_10_DEC)
C170B_TRANSPONDER_10_INC#(>K:XPNDR_10_INC)
C170B_TRANSPONDER_1_DEC#(>K:XPNDR_1_DEC)
C170B_TRANSPONDER_1_INC#(>K:XPNDR_1_INC)
C170B_TRANSPONDER_ALT#4 (>A:TRANSPONDER STATE:1, Enum)
C170B_TRANSPONDER_IDENT#1 (>L:XMLVAR_CUSTOM_TRANSPONDER_TEST)
C170B_TRANSPONDER_OFF#0 (>A:TRANSPONDER STATE:1, Enum)
C170B_TRANSPONDER_ON#3 (>A:TRANSPONDER STATE:1, Enum)
C170B_TRANSPONDER_SBY#1 (>A:TRANSPONDER STATE:1, Enum)
C170B_TRANSPONDER_TST#2 (>A:TRANSPONDER STATE:1, Enum)
//Carenado/C182RG II/Electrical
Avionics_Master___AVN_PWR__Off#(A:AVIONICS MASTER SWITCH:1, Bool) 1 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) }
Avionics_Master___AVN_PWR__On#(A:AVIONICS MASTER SWITCH:1, Bool) 0 == if{ 1 (>K:TOGGLE_AVIONICS_MASTER) }
//Carenado/M20R OVATION/Autopilot
KAS297_VS_DEC#(L:GAUGE_ALT_ALERT_MODE, Number) 1 == if{1 (>L:KASVsAltWheelDN) }
KAS297_VS_INC#(L:GAUGE_ALT_ALERT_MODE, Number) 1 == if{1 (>L:KASVsAltWheelUP) }
KFC150_Gauge_TEST_OnPress#1 (>L:Gauge_TEST_KFC150)
KFC150_Gauge_TEST_OnRelease#0 (>L:Gauge_TEST_KFC150)
KAS297_ALT_ARM_PUSH#1 (>L:KAS297_ALT_ARM_PUSH)
KAS297_ALT_DEC_100# (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) 100 - 0 max (>L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet)
KAS297_ALT_DEC_1000# (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) 1000 - 0 max (>L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet)
KAS297_ALT_INC_100# (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) 100 + (>L:CUSTOM_AP_ALT_VAR_SET_ENGLISH)
KAS297_ALT_INC_1000# (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) (L:CUSTOM_AP_ALT_VAR_SET_ENGLISH, feet) 1000 + (>L:CUSTOM_AP_ALT_VAR_SET_ENGLISH)
KAS297_AP_SELECT_ALT_OR_VS# (L:GAUGE_ALT_ALERT_MODE, Number) 0 == if{ 1 (>L:GAUGE_ALT_ALERT_MODE, Number) } els{ (L:GAUGE_ALT_ALERT_MODE, Number) 1 == if{ 0 (>L:GAUGE_ALT_ALERT_MODE, Number) }
//Carenado/M20R OVATION/Lights
LIGHTING_GLARESHIELD_DEC#(L:LIGHTING_GLARESHIELD_1) 5 - 0 max 100 min s0 (>L:LIGHTING_GLARESHIELD_1) l0 5 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT GLARESHIELD:1, Bool) s2 (L:LIGHTING_GLARESHIELD_1) 0 > != if{ l2 ! 1 l0 (>K:2:GLARESHIELD_LIGHTS_SET) quit }
LIGHTING_GLARESHIELD_INC#(L:LIGHTING_GLARESHIELD_1) 5 + 0 max 100 min s0 (>L:LIGHTING_GLARESHIELD_1) l0 5 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT GLARESHIELD:1, Bool) s2 (L:LIGHTING_GLARESHIELD_1) 0 > != if{ l2 ! 1 l0 (>K:2:GLARESHIELD_LIGHTS_SET) quit }
LIGHT_CABIN_DEC#(L:LIGHTING_POTENTIOMETER_5) 13 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_5) (L:LIGHTING_POTENTIOMETER_5)  (>K:LIGHT_POTENTIOMETER_5_SET) 
LIGHT_CABIN_INC#(L:LIGHTING_POTENTIOMETER_5) 13 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_5) (L:LIGHTING_POTENTIOMETER_5)  (>K:LIGHT_POTENTIOMETER_5_SET) 
LIGHT_PANEL_DEC#(L:LIGHTING_PANEL_1) 5 - 0 max 100 min s0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT PANEL:1, Bool) s2 (L:LIGHTING_PANEL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) quit }
LIGHT_PANEL_INC#(L:LIGHTING_PANEL_1) 5 + 0 max 100 min s0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT PANEL:1, Bool) s2 (L:LIGHTING_PANEL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) quit }
//Carenado/PA34/Radio
Radio_ADF#(A:ADF SOUND:1, Bool) ! (>K:RADIO_ADF_IDENT_TOGGLE)
Radio_COM1#(A:COM RECEIVE EX1:1, Bool) ! (>K:COM1_RECEIVE_SELECT)
Radio_COM2#(A:COM RECEIVE EX1:2, Bool) ! (>K:COM2_RECEIVE_SELECT)
Radio_DME#(A:DME SOUND:1, Bool) ! (>K:RADIO_DME1_IDENT_TOGGLE)
Radio_MKR_MUTE#(A:MARKER SOUND:1, Bool) ! (>K:MARKER_SOUND_TOGGLE)
Radio_NAV1#(A:NAV SOUND:1, Bool) ! (>K:RADIO_VOR1_IDENT_TOGGLE)
Radio_NAV2#(A:NAV SOUND:2, Bool) ! (>K:RADIO_VOR2_IDENT_TOGGLE)
Radio_PILOT#(A:INTERCOM SYSTEM ACTIVE, Bool) ! (>K:TOGGLE_ICS)
Radio_SPKR#(A:SPEAKER ACTIVE, Bool) ! (>K:TOGGLE_SPEAKER)
//Carenado/PA42/Light
Wing_Light#sim/cockpit2/switches/generic_lights_switch[52]
//Cockspur/C510/Anti Ice
Engine_1_Anti_Ice_off#0 (A:ENG ANTI ICE:1, Bool) != if{ (>K:ANTI_ICE_TOGGLE_ENG1) }
Engine_1_Anti_Ice_on#1 (A:ENG ANTI ICE:1, Bool) != if{ (>K:ANTI_ICE_TOGGLE_ENG1) }
Engine_2_Anti_Ice_off#0 (A:ENG ANTI ICE:2, Bool) != if{ (>K:ANTI_ICE_TOGGLE_ENG2) }
Engine_2_Anti_Ice_on#1 (A:ENG ANTI ICE:2, Bool) != if{ (>K:ANTI_ICE_TOGGLE_ENG2) }
Windshield_Anti_Ice_off#0 (A:WINDSHIELD DEICE SWITCH, Bool) != if{ (>K:WINDSHIELD_DEICE_TOGGLE) }
Windshield_Anti_Ice_on#1 (A:WINDSHIELD DEICE SWITCH, Bool) != if{ (>K:WINDSHIELD_DEICE_TOGGLE) }
//Cockspur/C510/Electrical
Avionics_Master_off#0 (>K:AVIONICS_MASTER_SET)
Avionics_Master_on#1 (>K:AVIONICS_MASTER_SET)
Generator_1_off#(A:GENERAL ENG MASTER ALTERNATOR:1, bool) if{ (>K:TOGGLE_ALTERNATOR1) } 1 (>O:XMLVAR_Alternator_1_Reset)
Generator_1_on#(A:GENERAL ENG MASTER ALTERNATOR:1, bool) ! if{ (>K:TOGGLE_ALTERNATOR1) } 0 (>O:XMLVAR_Alternator_1_Reset)
Generator_2_off#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) } 1 (>O:XMLVAR_Alternator_2_Reset)
Generator_2_on#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) } 0 (>O:XMLVAR_Alternator_2_Reset)
Master_Battery_off#0 (>A:ELECTRICAL MASTER BATTERY:1, Bool)
Master_Battery_on#1 (>A:ELECTRICAL MASTER BATTERY:1, Bool)
//Cockspur/C510/Fuel
Switch_Fuel_L_Cut_Off#0 (>L:switch_fuel_left) 0 (>K:SET_FUEL_VALVE_ENG1)
Switch_Fuel_L_Idle#1 (>L:switch_fuel_left) 1 (>K:SET_FUEL_VALVE_ENG1)
Switch_Fuel_R_Cut_Off#0 (>L:switch_fuel_right) 0 (>K:SET_FUEL_VALVE_ENG2)
Switch_Fuel_R_Idle#1 (>L:switch_fuel_right) 1 (>K:SET_FUEL_VALVE_ENG2)
//Cockspur/C510/O2 System
Oxygen_Supply_off#0 (>L:C510_Oxygen_Supply)
Oxygen_Supply_on#1 (>L:C510_Oxygen_Supply)
//Cockspur/PH100/Electrical
GPU_Toggle#(>K:APU_GENERATOR_SWITCH_TOGGLE)
//Cockspur/PH100/Engine
Engine_1_Ignition__off#0 (>L:PH100_ignition_switch1) 0 (>K:TURBINE_IGNITION_SWITCH_SET1)
Engine_1_Ignition__on#2 (>L:PH100_ignition_switch1) 1 (>K:TURBINE_IGNITION_SWITCH_SET1)
Engine_1_Ignition_Auto#1 (>L:PH100_ignition_switch1)
Engine_2_Ignition_off#0 (>L:PH100_ignition_switch2) 0 (>K:TURBINE_IGNITION_SWITCH_SET2)
Engine_2_Ignition_auto#1 (>L:PH100_ignition_switch2)
Engine_2_Ignition_on#2 (>L:PH100_ignition_switch2) 1 (>K:TURBINE_IGNITION_SWITCH_SET2)
//Cockspur/PH100/O2 System
Oxygen_Supply_off#0 (>L:PH100_Oxygen_Supply)
Oxygen_Supply_on#1 (>L:PH100_Oxygen_Supply)
//Cockspur/PH100/Safety
Announciator_Test_off#0 (>L:PH100_Announce_Test)
Announciator_Test_on#1 (>L:PH100_Announce_Test)
Fire_Test_off#0 (>L:PH100_FIRE_Test)
Fire_Test_on#1 (>L:PH100_FIRE_Test)
Stall_Test_off#0 (>L:PH100_STALL_Test)
Stall_Test_on#1 (>L:PH100_STALL_Test)
//Cowan Simulation/H 125/Anti Ice
H125_PITOT_Button_Press#1 (L:DEICE_Pitot_1,bool) ! (>K:2:PITOT_HEAT_SET)
//Cowan Simulation/H 125/Electrical
Battery_OFF#0 (>K:TOGGLE_MASTER_BATTERY)
Battery_ON#1 (>K:TOGGLE_MASTER_BATTERY)
//Cowan Simulation/H 125/Fuel
Emergency_Fuel_CUTOFF_OFF#2 (>K:FUELSYSTEM_VALVE_CLOSE)
Emergency_Fuel_CUTOFF_ON#2 (>K:FUELSYSTEM_VALVE_OPEN)
H125_FUEL_PUMP_TOGGLE#1 (>K:FUELSYSTEM_PUMP_TOGGLE)
//DC Designs/Concorde/Autopilot
CONC_AP_ALT_DEC_100#(L:ALT_AP_VALUE, feet) 0 > if{ (L:ALT_TENS, number) 0 == if{ (L:ALT_AP_VALUE, feet) 100 - (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 1 == if{ (L:ALT_AP_VALUE, feet) 10 - (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 2 == if{ (L:ALT_AP_VALUE, feet) 1 - (>L:ALT_AP_VALUE) } }
CONC_AP_ALT_DEC_1000#(L:ALT_AP_VALUE, feet) 0 > if{ (L:ALT_TENS, number) 0 == if{ (L:ALT_AP_VALUE, feet) 1000 - (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 1 == if{ (L:ALT_AP_VALUE, feet) 100 - (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 2 == if{ (L:ALT_AP_VALUE, feet) 10 - (>L:ALT_AP_VALUE) } }
CONC_AP_ALT_INC_100#(L:ALT_AP_VALUE, feet) 60000 < if{ (L:ALT_TENS, number) 0 == if{ (L:ALT_AP_VALUE, feet) 100 + (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 1 == if{ (L:ALT_AP_VALUE, feet) 10 + (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 2 == if{ (L:ALT_AP_VALUE, feet) 1 + (>L:ALT_AP_VALUE) } }
CONC_AP_ALT_INC_1000#(L:ALT_AP_VALUE, feet) 60000 < if{ (L:ALT_TENS, number) 0 == if{ (L:ALT_AP_VALUE, feet) 1000 + (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 1 == if{ (L:ALT_AP_VALUE, feet) 100 + (>L:ALT_AP_VALUE) } (L:ALT_TENS, number) 2 == if{ (L:ALT_AP_VALUE, feet) 10 + (>L:ALT_AP_VALUE) } }
CONC_AP_AT_ARM_1#(A:AUTOPILOT THROTTLE ARM:1, Bool) ! 1 (>K:AUTO_THROTTLE_ARM)
CONC_AP_AT_ARM_2#(A:AUTOPILOT THROTTLE ARM:2, Bool) ! 2 (>K:AUTO_THROTTLE_ARM)
CONC_AP_MASTER_TGL_1#(L:XMLVAR_Autopilot_1_Status) ! (>L:XMLVAR_Autopilot_1_Status) (L:XMLVAR_Autopilot_1_Status) (L:XMLVAR_Autopilot_2_Status) or (A:AUTOPILOT MASTER, Bool) != if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ 0 (>L:XMLVAR_Autopilot_1_Status) (>H:Generic_Autopilot_1_Manual_Off) } }
CONC_AP_MASTER_TGL_2#(L:XMLVAR_Autopilot_2_Status) ! (>L:XMLVAR_Autopilot_2_Status) (L:XMLVAR_Autopilot_2_Status) (L:XMLVAR_Autopilot_1_Status) or (A:AUTOPILOT MASTER, Bool) != if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ 0 (>L:XMLVAR_Autopilot_2_Status) (>H:Generic_Autopilot_2_Manual_Off) } }
CONC_AP_SPD_DEC#(L:IAS_AP_VALUE, Knots) 0 > if{ (L:IAS_TENS, Bool) ! if{ (L:IAS_AP_VALUE, Knots) 1 - (>L:IAS_AP_VALUE) } (L:IAS_TENS, Bool) if{ (L:IAS_AP_VALUE, Knots) 10 - (>L:IAS_AP_VALUE) } }
CONC_AP_SPD_INC#(L:IAS_AP_VALUE, Knots) 400 < if{ (L:IAS_TENS, Bool) ! if{ (L:IAS_AP_VALUE, Knots) 1 + (>L:IAS_AP_VALUE) } (L:IAS_TENS, Bool) if{ (L:IAS_AP_VALUE, Knots) 10 + (>L:IAS_AP_VALUE) } }
CONC_BTN_AP_ALT_ACQ_B#(L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) } (L:ALT_ACQ, Bool) ! (>L:ALT_ACQ) (L:ALT_ACQ, Bool) if{ (A:AUTOPILOT ALTITUDE LOCK, Bool) ! if{ (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) ! if{ (>K:AP_ALT_HOLD_ON) } (L:ALT_AP_VALUE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) } (A:AUTOPILOT ALTITUDE LOCK, Bool) if{ (L:ALT_AP_VALUE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) } }
CONC_BTN_AP_ALT_HOLD#(L:ALT_ACQ, Bool) if{ 0 (>L:ALT_ACQ) } (L:MAX CLIMB, Bool) if{ 0 (>L:MAX CLIMB) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) } (>K:AP_ALT_HOLD)
CONC_BTN_AP_BACKBEAM	#(>K:AP_BC_HOLD)
CONC_BTN_AP_GLIDE#(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD)
CONC_BTN_AP_GOARND	#(>K:AUTO_THROTTLE_TO_GA)
CONC_BTN_AP_HDG#(A:AUTOPILOT HEADING LOCK, Bool) ! (>K:AP_HDG_HOLD) (A:AUTOPILOT HEADING LOCK, Bool) if{ (A:PLANE HEADING DEGREES GYRO, Degrees) (>K:HEADING_BUG_SET) } (L:AP_PANEL_HEADING_HOLD, Bool) if{ 0 (>L:AP_PANEL_HEADING_HOLD) (A:AUTOPILOT HEADING LOCK, Bool) ! if{ (>K:AP_HDG_HOLD) } }
CONC_BTN_AP_IAS_ACQ#(L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) } (L:XMLVAR_AirSpeedIsInMach, Bool) if{ 0 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) } (A:AUTOPILOT THROTTLE ARM, Bool) if{ (L:IAS_ACQ, Bool) ! (>L:IAS_ACQ) } (L:IAS_ACQ, Bool) if{ (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) ! if{ (>K:AP_AIRSPEED_ON) } (L:IAS_AP_VALUE, Knots) (>K:AP_SPD_VAR_SET) }
CONC_BTN_AP_IAS_HOLD#(L:XMLVAR_AirSpeedIsInMach, Bool) if{ 0 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) } (L:IAS_ACQ, Bool) if{ 0 (>L:IAS_ACQ) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) 0 (>K:AP_AIRSPEED_SET) } (L:MAX CLIMB, Bool) ! (L:MAX CRUISE, Bool) ! & if{ (A:AUTOPILOT AIRSPEED HOLD, Bool) ! (>K:AP_AIRSPEED_SET) }
CONC_BTN_AP_INS#(A:AUTOPILOT NAV1 LOCK, Bool) ! (>K:AP_NAV1_HOLD)
CONC_BTN_AP_LAND#(L:AUTOLAND, Bool) ! (>L:AUTOLAND, Bool) (L:AUTOLAND, Bool) if{ (A:AUTOPILOT MASTER, Bool) ! if{ (>K:AUTOPILOT_ON) 1 (>L:XMLVAR_Autopilot_1_Status) 1 (>L:XMLVAR_Autopilot_2_Status) } (A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD) (A:AUTOPILOT THROTTLE ARM, Bool) ! if{ (>K:AUTO_THROTTLE_ARM) } } }
CONC_BTN_AP_MACH_HOLD#(L:XMLVAR_AirSpeedIsInMach, Bool) ! if{ 1 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) ! if{ (>K:AP_MANAGED_SPEED_IN_MACH_ON) } (L:IAS_ACQ, Bool) if{ 0 (>L:IAS_ACQ) } (L:MAX CLIMB, Bool) if{ 0 (>L:MAX CLIMB) 0 (>K:AP_MACH_SET) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) 0 (>K:AP_MACH_SET) } (A:AUTOPILOT MACH HOLD, Bool) ! (>K:AP_MACH_SET) (A:AUTOPILOT MACH HOLD, Bool) if{ (A:AIRSPEED MACH, Mach) (>AP_MACH_VAR_SET) }
CONC_BTN_AP_MAX_CLIMB#(L:XMLVAR_AirSpeedIsInMach, Bool) if{ 0 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) } (L:MAX CLIMB, Bool) ! (>L:MAX CLIMB) (L:MAX CLIMB, Bool) if{ (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) ! if{ (>K:FLIGHT_LEVEL_CHANGE) } 400 (>L:IAS_AP_VALUE) 400 (>K:AP_SPD_VAR_SET) } (L:MAX CLIMB, Bool) ! if{ (A:AIRSPEED INDICATED, Knots) 400 > if{ 400 (>K:AP_SPD_VAR_SET) 400 (>L:IAS_AP_VALUE) (L:ALT_AP_VALUE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) } (A:AIRSPEED INDICATED, Knots) 400 < if{ (A:AIRSPEED INDICATED, Knots) (>L:IAS_AP_VALUE) (L:IAS_AP_VALUE, Knots) (>K:AP_SPD_VAR_SET) } }
CONC_BTN_AP_MAX_CRUISE#(L:MAX CLIMB, Bool) if{ 0 (>L:MAX CLIMB) } (L:MAX CRUISE, Bool) ! (>L:MAX CRUISE) (L:MAX CRUISE, Bool) ! if { (A:AUTOPILOT MACH HOLD, Bool) if{ (A:AIRSPEED MACH, Mach) (>AP_MACH_VAR_SET) } }
CONC_BTN_AP_PITCH_HOLD#(L:ALT_ACQ, Bool) if{ 0 (>L:ALT_ACQ) } (A:AUTOPILOT ALTITUDE LOCK, Bool) if{ 0 (>K:AP_ALT_VAR_SET_ENGLISH) (>K:AP_ALT_HOLD_OFF) } (A:AUTOPILOT PITCH HOLD, Bool) ! (>K:AP_PITCH_LEVELER)
CONC_BTN_AP_SPD#(L:XMLVAR_AirSpeedIsInMach, Bool) if{ 0 (>L:XMLVAR_AirSpeedIsInMach) } (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MANAGED_SPEED_IN_MACH_OFF) } (L:IAS_ACQ, Bool) if{ 0 (>L:IAS_ACQ) } (L:MAX CRUISE, Bool) if{ 0 (>L:MAX CRUISE) 0 (>K:AP_AIRSPEED_SET) } (L:MAX CLIMB, Bool) ! (L:MAX CRUISE, Bool) ! & if{ (A:AUTOPILOT AIRSPEED HOLD, Bool) ! (>K:AP_AIRSPEED_SET) }
CONC_BTN_AP_TRK_HDG#(L:AP_PANEL_HEADING_HOLD, Bool) ! (>L:AP_PANEL_HEADING_HOLD) (L:AP_PANEL_HEADING_HOLD, Bool) if{ (A:AUTOPILOT HEADING LOCK, Bool) ! if{ (>K:AP_HDG_HOLD) } } (L:AP_PANEL_HEADING_HOLD, Bool) ! if{ (A:AUTOPILOT HEADING LOCK, Bool) if{ (>K:AP_HDG_HOLD) } }
CONC_BTN_AP_TURB	#(>K:AP_WING_LEVELER)
CONC_BTN_AP_VOR_LOC#(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) and if{ (>K:AP_LOC_HOLD) } (>K:AP_LOC_HOLD)
CONC_BTN_AP_VS#(A:AUTOPILOT VERTICAL HOLD, Bool) ! (>K:AP_VS_SET) (A:AUTOPILOT VERTICAL HOLD, Bool) if{ (A:VERTICAL SPEED, feet per minute) (>K:AP_VS_VAR_SET_ENGLISH) }
CONC_CRS_BUG_DEC#(>K:VOR1_OBI_DEC)
CONC_CRS_BUG_INC#(>K:VOR1_OBI_INC)
CONC_FD_SLCT_1#(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:1, Bool) ! 1 (>K:TOGGLE_FLIGHT_DIRECTOR)
CONC_FD_SLCT_2#(A:AUTOPILOT FLIGHT DIRECTOR ACTIVE:2, Bool) ! 2 (>K:TOGGLE_FLIGHT_DIRECTOR)
CONC_FD_SW_PILOT#(L:FD_Selector, Bool) ! (>L:FD_Selector)
CONC_HDG_BUG_DEC#(L:HDG_AP_VALUE, Degrees) 1 - (>L:HDG_AP_VALUE)
CONC_HDG_BUG_INC#(L:HDG_AP_VALUE, Degrees) 1 + (>L:HDG_AP_VALUE)
CONC_RAD_INS_SW#(L:GPS_DRIVES_NAV, Bool) ! (>L:GPS_DRIVES_NAV)
//DC Designs/Concorde/Electrical
BATTERY1_OFF#0 (>K:BATTERY1_SET) 
BATTERY1_ON#1 (>K:BATTERY1_SET) 
BATTERY2__ON#1 (>K:BATTERY2_SET) 
BATTERY2_OFF#0 (>K:BATTERY2_SET) 
//DC Designs/Concorde/Engine
REHEAT_1_Afterburner#(L:ENG_CTRL1, Bool) ! (>L:ENG_CTRL) (L:ENG_CTRL1, Bool) ! if (A: TURB ENG AFTERBURNER:1, Boolean) if { 14728 (>K:THROTTLE1_SET) } }
//DC Designs/Concorde/Radio
Transponder_RA_TA#4 (>L:KNOB_ATC_ALT2)
Transponder_Standby#0 (>L:KNOB_ATC_ALT2)
Transponder_TA#2 (>L:KNOB_ATC_ALT2)
Transponder_XPDR#1 (>L:KNOB_ATC_ALT2)
Transponder_XPDR#1 (>L:KNOB_ATC_ALT2)
//FSReborn/FSR500/Air Conditioning
FSR500_BLEED_LEVER_PULL#100 (>L:FSR_M500_BLEED_LEVER)
FSR500_BLEED_LEVER_PUSH#0 (>L:FSR_M500_BLEED_LEVER)
//FSReborn/FSR500/Anti-Ice
Pitot_Heat_Switch_Off# 1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1) 
Pitot_Heat_Switch_On# 1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1) 
Prop_Heat_Switch_Off#0 (A:PROP DEICE SWITCH:1, Bool) != if{ (>K:TOGGLE_PROPELLER_DEICE) } 0 (>L:DEICE_Propeller_1) 
Prop_Heat_Switch_On#1 (A:PROP DEICE SWITCH:1, Bool) != if{ (>K:TOGGLE_PROPELLER_DEICE) } 1 (>L:DEICE_Propeller_1) 
Stall_Heat_Switch_Off#3 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_3) 
Stall_Heat_Switch_On#3 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_3) 
Surf_De-Ice_Switch_Off#0 (>L:FSR_M500_DEICE_Switch_Airframe) 0 (>A:CIRCUIT SWITCH ON:74, bool) 
Surf_De-Ice_Switch_On#1 (>L:FSR_M500_DEICE_Switch_Airframe) 1 (>A:CIRCUIT SWITCH ON:74, bool) 
Windshield_Ht_Anti_ice#2 (>L:FSR_M500_DEICE_SWITCH_WINDSHIELD)
Windshield_Ht_Defog#0 (>L:FSR_M500_DEICE_SWITCH_WINDSHIELD)
Windshield_Ht_Off#1 (>L:FSR_M500_DEICE_SWITCH_WINDSHIELD)
//FSReborn/FSR500/Avionics
Avionics_Master_Off#0 (A:CIRCUIT SWITCH ON:26, Bool) != if{ 26 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:26, Bool) 1 (A:1:BUS CONNECTION ON:2, Bool) != if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 0 (A:CIRCUIT SWITCH ON:27, Bool) != if{ 27 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:27, Bool) 1 (A:1:BUS CONNECTION ON:3, Bool) != if{ 3 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
Avionics_Master_On#1 (A:CIRCUIT SWITCH ON:26, Bool) != if{ 26 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:26, Bool) 1 (A:1:BUS CONNECTION ON:2, Bool) != if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 1 (A:CIRCUIT SWITCH ON:27, Bool) != if{ 27 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:27, Bool) 1 (A:1:BUS CONNECTION ON:3, Bool) != if{ 3 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
//FSReborn/FSR500/Electrical
Alternator_Off#0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ 2 0 (>K:2:ALTERNATOR_SET) } 
Alternator_On#1 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ 2 1 (>K:2:ALTERNATOR_SET) } 
Battery_Off#0 (>L:FSR_M500_BATTERY_SWITCH_ON)
Battery_On#1 (>L:FSR_M500_BATTERY_SWITCH_ON)
Battery_Toggle#(L:FSR_M500_BATTERY_SWITCH_ON) ! (>L:FSR_M500_BATTERY_SWITCH_ON)
Emer_Off#0 (>L:FSR_M500_EMERGENCY_POWER)
Emer_On#1 (>L:FSR_M500_EMERGENCY_POWER)
FSR500_GPU_UNIT_AVAILABLE#1 (>L:FSR_M500_GPU_AVAILABLE)
FSR500_GPU_UNIT_AVAILABLE_TOGGLE#(L:FSR_M500_GPU_AVAILABLE) ! (>L:FSR_M500_GPU_AVAILABLE)
FSR500_GPU_UNIT_CONNECTED#1 (>L:FSR_M500_GPU_CONNECTED)
FSR500_GPU_UNIT_CONNECTED_TOGGLE#(L:FSR_M500_GPU_CONNECTED) ! (>L:FSR_M500_GPU_CONNECTED)
FSR500_GPU_UNIT_DEPLOY#1 (>L:FSR_M500_GPU_DEPLOY)
FSR500_GPU_UNIT_DEPLOY_TOGGLE# (L:FSR_M500_GPU_DEPLOY) ! (>L:FSR_M500_GPU_DEPLOY)
FSR500_GPU_UNIT_DISCONNECTED#0 (>L:FSR_M500_GPU_CONNECTED)
FSR500_GPU_UNIT_UNAVAILABLE#0 (>L:FSR_M500_GPU_AVAILABLE)
FSR500_GPU_UNIT_UNDEPLOY#0 (>L:FSR_M500_GPU_DEPLOY)
Generator_Switch_Off#0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 0 (>K:2:ALTERNATOR_SET) } 
Generator_Switch_On#1 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 1 (>K:2:ALTERNATOR_SET) } 
//FSReborn/FSR500/Engine
Ignition_Switch_Auto#1 (>L:FSR_M500_ENGINE_IGNITION_1)
Ignition_Switch_Man#2 (>L:FSR_M500_ENGINE_IGNITION_1)
Ignition_Switch_Off#0 (>L:FSR_M500_ENGINE_IGNITION_1)
Overspeed_Gov_Test_Cover_Close#0 (>L:FSR_M500_Electrical_Switch_Gov_Test_Cover
Overspeed_Gov_Test_Cover_Open#1 (>L:FSR_M500_Electrical_Switch_Gov_Test_Cover
Overspeed_Gov_Test_Off#0 (>L:FSR_M500_Electrical_Switch_Gov_Test_IsDown)
Overspeed_Gov_Test_On#1 (>L:FSR_M500_Electrical_Switch_Gov_Test_IsDown)
Push_Start#1 (>K:STARTER1_SET)
Reverse_Lock_Out_Off#0 (>L:FSR_M500_Electrical_Switch_Reverse_Lock)
Reverse_Lock_Out_On#1 (>L:FSR_M500_Electrical_Switch_Reverse_Lock)
Start_Mode_Man_Stop_Off#0 (>L:FSR_M500_StarterStopButton)
Start_Mode_Man_Stop_On#1 (>L:FSR_M500_StarterStopButton)
//FSReborn/FSR500/Fuel
Fuel_Pump_Auto#2 (>K:ELECT_FUEL_PUMP1_SET)
Fuel_Pump_Manual#1 (>K:ELECT_FUEL_PUMP1_SET)
Fuel_Pump_Off#0 (>K:ELECT_FUEL_PUMP1_SET)
//FSReborn/FSR500/Interaction
FSR500__PITOT_COVER__IN_PLACE#1 (>L:FSR_M500_PITOTCOVER_VIS)
FSR500_CHOCKS_IN_PLACE#1 (>L:FSR_M500_CHOKES_VIS)
FSR500_CHOCKS_REMOVED#0 (>L:FSR_M500_CHOKES_VIS)
FSR500_HIDE_EFB#0 (>L:FSR_M500_SHOW_EFB)
FSR500_PITOT_COVER_REMOVED#0 (>L:FSR_M500_PITOTCOVER_VIS)
FSR500_PROPELLER_COVERS_IN_PLACE#1 (>L:FSR_M500_PROPCOVERS_VIS)
FSR500_PROPELLER_COVERS_REMOVED#0 (>L:FSR_M500_PROPCOVERS_VIS)
FSR500_SECURITY_CONES_IN_PLACE#1 (>L:FSR_M500_CONES_AVAILABLE)
FSR500_SECURITY_CONES_REMOVED#0 (>L:FSR_M500_CONES_AVAILABLE)
FSR500_SHOW_EFB#1 (>L:FSR_M500_SHOW_EFB)
//FSReborn/FSR500/Lights
Ice_Light_Off#1 0 (>K:2:WING_LIGHTS_SET) 0 (>L:LIGHTING_WING_1)
Ice_Light_On#1 1 (>K:2:WING_LIGHTS_SET) 1 (>L:LIGHTING_WING_1)
Landing_Light_Off#1 0 (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_1) 
Landing_Light_On#1 1 (>K:2:LANDING_LIGHTS_SET) 1 (>L:LIGHTING_LANDING_1) 
Nav_Light_On#1 1 (>K:2:NAV_LIGHTS_SET) 1 (>L:LIGHTING_NAV_1) 
Nav_Lights_Off#1 0 (>K:2:NAV_LIGHTS_SET) 0 (>L:LIGHTING_NAV_1) 
Strobe_Light_Off#1 0 (>K:2:STROBES_SET) 0 (>L:LIGHTING_STROBE_1)
Strobe_Light_On#1 1 (>K:2:STROBES_SET) 1 (>L:LIGHTING_STROBE_1)
Taxi___Rec_Lt_Pulse#1 0 r (>K:2:TAXI_LIGHTS_SET) 1 1 r (>K:2:RECOGNITION_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_26_SET) 0 (>K:LIGHT_POTENTIOMETER_1_SET)
Taxi___Rec_Lt_Switch_Off#0 1 r (>K:2:TAXI_LIGHTS_SET) 0 1 r (>K:2:RECOGNITION_LIGHTS_SET) 0 (>K:LIGHT_POTENTIOMETER_26_SET) 100 (>K:LIGHT_POTENTIOMETER_1_SET)
Taxi___Rec_Lt_Switch_Taxi#1 1 r (>K:2:TAXI_LIGHTS_SET) 0 1 r (>K:2:RECOGNITION_LIGHTS_SET) 0 (>K:LIGHT_POTENTIOMETER_26_SET) 100 (>K:LIGHT_POTENTIOMETER_1_SET)
//FSReborn/FSR500/Warning
Fire_Det___Ann_Test_Off#0 (>L:FSR_M500_Electrical_Switch_Fire_Test_IsDown)
Fire_Det___Ann_Test_On#1 (>L:FSR_M500_Electrical_Switch_Fire_Test_IsDown)
Stall_Warn_Test_Off#0 (>L:FSR_M500_Electrical_Switch_Stall_Test)
Stall_Warn_Test_On#1 (>L:FSR_M500_Electrical_Switch_Stall_Test)
//FSReborn/Sting S4/Engine
Choke_Toggle_Inc_Dec#(L:FSR_ENGINE_Lever_Choke_Position, Number) s0 (L:FSRChoke) s1 l0 0 == if{ l1 0 == if{ 50 s2 } els{ 50 s2 } 0 s1 } l0 50 == if{ l1 0 == if{ 100 s2 } els{ 0 s2 } } l0 100 == if{ l1 0 == if{ 50 s2 } els{ 50 s2 } 50 s1 } l2 (>L:FSR_ENGINE_Lever_Choke_Position, Number) l1 (>L:FSRChoke)
Heating_Toggle#(L:CABIN_Hotair_Lever_Position, Number) 0 == if{ 100 (>L:CABIN_Hotair_Lever_Position, Number) } els{ 0 (>L:CABIN_Hotair_Lever_Position, Number) }
Toggle_PropAuto_Switch#(L:FSR_S4_PropAutoSwitch, Number) ! (>L:FSR_S4_PropAutoSwitch, Number)
//FSReborn/Sting S4/Environment
Canopy_Open_Close_Toggle#(L:CanopyLeftHandle_Position, Number) 0 == if{ 100 (>L:CanopyLeftHandle_Position, Number) } els{ 0 (>L:CanopyLeftHandle_Position, Number) }
//FSReborn/Sting S4/Fuel
Fuel_Switch#(L:FSR_S4_FUEL_Switch_Valve_1, Number) 0 == if{ 1 (>L:FSR_S4_FUEL_Switch_Valve_1, Number) } els{ 0 (>L:FSR_S4_FUEL_Switch_Valve_1, Number) }
//FSReborn/Sting S4/Safety
Emergency_Parachute_Pull#(L:BRS_Chute_Lever_Position, Number) 0 == if{ 100 (>L:BRS_Chute_Lever_Position, Number) }
//FSS/B727-200 F/APU
APU_OFF#0 (>L:FSS_B727_FE_APU_MASTER_SWITCH, Number)
APU_ON#1 (>L:FSS_B727_FE_APU_MASTER_SWITCH, Number)
APU_START#2 (>L:FSS_B727_FE_APU_MASTER_SWITCH, Number)
//FSS/B727-200 F/Air Conditioning
APU_BLEED_Switch_OFF#0 (>L:FSS_B727_FE_PRESS_APU_BLEED_SWITCH,number)
APU_BLEED_Switch_ON#1 (>L:FSS_B727_FE_PRESS_APU_BLEED_SWITCH,number)
BLEED_AIR_Engine_1_OFF#0 (>L:FSS_B727_FE_PRESS_ENGINE_1_BLEED_SWITCH,number)
BLEED_AIR_Engine_1_ON#1 (>L:FSS_B727_FE_PRESS_ENGINE_1_BLEED_SWITCH,number)
BLEED_AIR_Engine_2_OFF#0 (>L:FSS_B727_FE_PRESS_ENGINE_2_BLEED_SWITCH,number)
BLEED_AIR_Engine_2_ON#1 (>L:FSS_B727_FE_PRESS_ENGINE_2_BLEED_SWITCH,number)
BLEED_AIR_Engine_3_OFF#0 (>L:FSS_B727_FE_PRESS_ENGINE_3_BLEED_SWITCH,number)
BLEED_AIR_Engine_3_ON#1 (>L:FSS_B727_FE_PRESS_ENGINE_3_BLEED_SWITCH,number)
PACK_SWITCH_1_OFF#0 (>L:FSS_B727_FE_PRESS_PACK_SWITCH_1,number)
PACK_SWITCH_1_ON#1 (>L:FSS_B727_FE_PRESS_PACK_SWITCH_1,number)
PACK_SWITCH_2_OFF#0 (>L:FSS_B727_FE_PRESS_PACK_SWITCH_2,number)
PACK_SWITCH_2_ON#1 (>L:FSS_B727_FE_PRESS_PACK_SWITCH_2,number)
//FSS/B727-200 F/Electrical
B727_BATT_OFF#0 (>L:FSS_B727_FE_ELEC_DC_BATT_SWITCH, Number) 
B727_BATT_ON#1 (>L:FSS_B727_FE_ELEC_DC_BATT_SWITCH, Number) 
ESS_POWER_APU#1 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)
ESS_POWER_EXT_PWR#5 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)
ESS_POWER_GEN_1#2 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)
ESS_POWER_GEN_2#3 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)
ESS_POWER_GEN_3#4 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)
ESS_POWER_STBY#0 (>L:FSS_B727_FE_ELEC_ESS_POWER_SELECTOR, Number)
EXT_PWR_GRD_SERVICE#0 (>L:FSS_B727_FE_ELEC_EXT_POWER_SWITCH, Number)
EXT_PWR_OFF#1 (>L:FSS_B727_FE_ELEC_EXT_POWER_SWITCH, Number)
EXT_PWR_ON#2 (>L:FSS_B727_FE_ELEC_EXT_POWER_SWITCH, Number)
//FSS/B727-200 F/Fuel
Fuel_Lever__1_to_IDLE#1 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_1, Number)
Fuel_Lever_1_to_CUT_OFF#0 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_1, Number)
Fuel_Lever_2_to_CUT_OFF#0 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_2, Number)
Fuel_Lever_2_to_IDLE#1 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_2, Number)
Fuel_Lever_3_to_CUT_OFF#0 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_3, Number)
Fuel_Lever_3_to_IDLE#1 (>L:FSS_B727_PDSTL_FUEL_CUT_OFF_3, Number)
//FSS/B727-200 F/Pressurization
FLT_GRD_SWITCH_FLT#0 (>L:FSS_B727_FE_PRESS_FLT_GRD_SWITCH,number)
FLT_GRD_SWITCH_GRD#1 (>L:FSS_B727_FE_PRESS_FLT_GRD_SWITCH,number)
//FSS/E1XX/Air Conditioning
AIR_COND_Bleed_1_Off#0 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_1_BTN)
AIR_COND_Bleed_1_On#1 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_1_BTN)
AIR_COND_Bleed_2_On#1 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_2_BTN)
AIR_COND_Bleed_APU_Off#0 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_APU_BTN)
AIR_COND_Bleed_APU_On#1 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_APU_BTN)
AIR_COND_Ckpt_Knob_Decrease#(L:FSS_EXX_OVHD_AIRCOND_CKPT) 0.05 - 1 min 0 max (>L:FSS_EXX_OVHD_AIRCOND_CKPT)
AIR_COND_Ckpt_Knob_Increase#(L:FSS_EXX_OVHD_AIRCOND_CKPT) 0.05 + 1 min 0 max (>L:FSS_EXX_OVHD_AIRCOND_CKPT)
AIR_COND_Pack_1_Off#0 (>L:FSS_EXX_OVHD_AIRCOND_PACK1_BTN)
AIR_COND_Pack_1_On#1 (>L:FSS_EXX_OVHD_AIRCOND_PACK1_BTN)
AIR_COND_Pack_2_Off#0 (>L:FSS_EXX_OVHD_AIRCOND_PACK2_BTN)
AIR_COND_Pack_2_On#1 (>L:FSS_EXX_OVHD_AIRCOND_PACK2_BTN)
AIR_COND_Pax_Cabin_Knob_Decrease#(L:FSS_EXX_OVHD_AIRCOND_PSGR) 0.05 - 1 min 0 max (>L:FSS_EXX_OVHD_AIRCOND_PSGR)
AIR_COND_Pax_Cabin_Knob_Increase#(L:FSS_EXX_OVHD_AIRCOND_PSGR) 0.05 + 1 min 0 max (>L:FSS_EXX_OVHD_AIRCOND_PSGR)
AIR_COND_Recirc_Off#0 (>L:FSS_EXX_OVHD_AIRCOND_RECIRC_BTN)
AIR_COND_Recirc_On#1 (>L:FSS_EXX_OVHD_AIRCOND_RECIRC_BTN)
AIR_COND_XBleed_Off#0 (>L:FSS_EXX_OVHD_AIRCOND_XBLEED_BTN)
AIR_COND_XBleed_On#1 (>L:FSS_EXX_OVHD_AIRCOND_XBLEED_BTN)
AIR_COND_Bleed_2_Off#0 (>L:FSS_EXX_OVHD_AIRCOND_BLEED_2_BTN)
//FSS/E1XX/Anti-Ice
Ice_Prot_Engine_1_Off#0 (>L:FSS_EXX_OVHD_HEATING_ICE_ENG1_BTN)
Ice_Prot_Engine_1_On#1 (>L:FSS_EXX_OVHD_HEATING_ICE_ENG1_BTN)
Ice_Prot_Engine_2_Off#0 (>L:FSS_EXX_OVHD_HEATING_ICE_ENG2_BTN)
Ice_Prot_Engine_2_On#1 (>L:FSS_EXX_OVHD_HEATING_ICE_ENG2_BTN)
Ice_Prot_Mode_Auto#0 (>L:FSS_EXX_OVHD_HEATING_ICE_MODE)
Ice_Prot_Mode_On#1 (>L:FSS_EXX_OVHD_HEATING_ICE_MODE)
Ice_Prot_Test_Eng#0 (>L:FSS_EXX_OVHD_HEATING_TEST)
Ice_Prot_Test_Off#1 (>L:FSS_EXX_OVHD_HEATING_TEST)
Ice_Prot_Test_Wing#2 (>L:FSS_EXX_OVHD_HEATING_TEST)
Ice_Prot_Wing_Off#0 (>L:FSS_EXX_OVHD_HEATING_ICE_WING_BTN)
Ice_Prot_Wing_On#1 (>L:FSS_EXX_OVHD_HEATING_ICE_WING_BTN)
Windshield_Heating_1_Off#0 (>L:FSS_EXX_OVHD_HEATING_WSHIELD_1_BTN)
Windshield_Heating_1_On#1 (>L:FSS_EXX_OVHD_HEATING_WSHIELD_1_BTN)
Windshield_Heating_2_Off#0 (>L:FSS_EXX_OVHD_HEATING_WSHIELD_2_BTN)
Windshield_Heating_2_On#1 (>L:FSS_EXX_OVHD_HEATING_WSHIELD_2_BTN)
//FSS/E1XX/Autopilot
FGP_ALT_Sel_Push#(L:FSS_EXX_GSHIELD_VERTG_ALT_SEL_BUTTON) ! (>L:FSS_EXX_GSHIELD_VERTG_ALT_SEL_BUTTON)
FGC_A_T_PRESS#(L:FSS_EXX_FGC_BTN_AT) ! (>L:FSS_EXX_FGC_BTN_AT)
FGC_ALT_UNIT#(L:FSS_EXX_FGC_BTN_ALT_UNIT) ! (>L:FSS_EXX_FGC_BTN_ALT_UNIT)
FGC_SPEED_SOURCE#(L:FSS_EXX_FGC_BTN_SPD_SRC) ! (>L:FSS_EXX_FGC_BTN_SPD_SRC)
FGP_ALT_Decr_100#(L:FSS_EXX_FGC_ROT_POS_ALT) 0.00277777777777778 - (>L:FSS_EXX_FGC_ROT_POS_ALT)
FGP_ALT_Decrease#(L:FSS_EXX_FGC_ROT_POS_ALT) 0.0277777777777778 - (>L:FSS_EXX_FGC_ROT_POS_ALT)
FGP_ALT_Incr_100#(L:FSS_EXX_FGC_ROT_POS_ALT) 0.00277777777777778 + (>L:FSS_EXX_FGC_ROT_POS_ALT)
FGP_ALT_Increase#(L:FSS_EXX_FGC_ROT_POS_ALT) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_ALT)
FGP_ALT_Increase_#(L:FSS_EXX_FGC_ROT_POS_ALT) 0.0277777777777778 + (>L:FSS_EXX_FGC_ROT_POS_ALT)
FGP_ALT_Push#(L:FSS_EXX_FGC_BTN_ALT) ! (>L:FSS_EXX_FGC_BTN_ALT)
FGP_AP_Push#(L:FSS_EXX_FGC_BTN_AP) ! (>L:FSS_EXX_FGC_BTN_AP)
FGP_APP_Push#(L:FSS_EXX_FGC_BTN_APP) ! (>L:FSS_EXX_FGC_BTN_APP)
FGP_BANK_Push#(L:FSS_EXX_FGC_BTN_BANK) ! (>L:FSS_EXX_FGC_BTN_BANK)
FGP_FLCH_Push#(L:FSS_EXX_FGC_BTN_FLCH) ! (>L:FSS_EXX_FGC_BTN_FLCH)
FGP_FPA_Decrease#(L:FSS_EXX_FGC_ROT_POS_FPA) 0.028 - (>L:FSS_EXX_FGC_ROT_POS_FPA)
FGP_FPA_Increase#(L:FSS_EXX_FGC_ROT_POS_FPA) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_FPA)
FGP_FPA_Push#(L:FSS_EXX_FGC_BTN_FPA) ! (>L:FSS_EXX_FGC_BTN_FPA)
FGP_HDG_Decrease#(L:FSS_EXX_FGC_ROT_POS_HDG) 0.028 - (>L:FSS_EXX_FGC_ROT_POS_HDG)
FGP_HDG_Increase#(L:FSS_EXX_FGC_ROT_POS_HDG) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_HDG)
FGP_HDG_Push#(L:FSS_EXX_FGC_BTN_HDG) ! (>L:FSS_EXX_FGC_BTN_HDG)
FGP_HDG_Sync_Push#(L:FSS_EXX_FGC_BTN_HDG_SYNC) ! (>L:FSS_EXX_FGC_BTN_HDG_SYNC)
FGP_NAV_Push#(L:FSS_EXX_FGC_BTN_NAV) ! (>L:FSS_EXX_FGC_BTN_NAV)
FGP_SPD_Decrease#(L:FSS_EXX_FGC_ROT_POS_SPD) 0.028 - (>L:FSS_EXX_FGC_ROT_POS_SPD)
FGP_SPD_Increase#(L:FSS_EXX_FGC_ROT_POS_SPD) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_SPD)
FGP_SPD_Push#(L:FSS_EXX_FGC_BTN_SPD_UNIT) ! (>L:FSS_EXX_FGC_BTN_SPD_UNIT)
FGP_SRC_Push#(L:FSS_EXX_FGC_BTN_SRC) ! (>L:FSS_EXX_FGC_BTN_SRC)
FGP_VS_Decrease#(L:FSS_EXX_FGC_ROT_POS_VS) 0.028 - (>L:FSS_EXX_FGC_ROT_POS_VS)
FGP_VS_Increase#(L:FSS_EXX_FGC_ROT_POS_VS) 0.028 + (>L:FSS_EXX_FGC_ROT_POS_VS)
FGP_VS_Push#(L:FSS_EXX_FGC_BTN_VS) ! (>L:FSS_EXX_FGC_BTN_VS)
FGP_YD_Push#(L:FSS_EXX_FGC_BTN_YD) ! (>L:FSS_EXX_FGC_BTN_YD)
Set_FMS_Speed#0 (>L:FSS_EXX_FGC_BTN_SPD_SRC)
Set_Manual_Speed#1 (>L:FSS_EXX_FGC_BTN_SPD_SRC)
Left_Thr_A_T_Disc_Press#(L:FSS_EXX_THROTTLE_L_ATDC_BTN, Number) ! (>L:FSS_EXX_THROTTLE_L_ATDC_BTN, Number)
Right_Thr_A_T_Disc_Press#(L:FSS_EXX_THROTTLE_R_ATDC_BTN, Number) ! (>L:FSS_EXX_THROTTLE_R_ATDC_BTN, Number)
TOGA_Press#(L:FSS_EXX_THROTTLE_BV_TO_MODE, Number) ! (>L:FSS_EXX_THROTTLE_BV_TO_MODE, Number)
//FSS/E1XX/Controls
Flaps_0#0 (>L:FSS_EXX_FLAPS_BV_LEVER)
Flaps_1#0.167 (>L:FSS_EXX_FLAPS_BV_LEVER)
Flaps_2#0.333 (>L:FSS_EXX_FLAPS_BV_LEVER)
Flaps_3#0.5 (>L:FSS_EXX_FLAPS_BV_LEVER)
Flaps_4#0.667 (>L:FSS_EXX_FLAPS_BV_LEVER)
Flaps_5#0.833 (>L:FSS_EXX_FLAPS_BV_LEVER)
Flaps_Full#1 (>L:FSS_EXX_FLAPS_BV_LEVER)
TRIM_PITCH_BACKUP_SW_DN_Press#1 (>L:FSS_EXX_TRIM_PITCH_1_DN, Number)
TRIM_PITCH_BACKUP_SW_DN_Release#0 (>L:FSS_EXX_TRIM_PITCH_1_DN, Number)
TRIM_PITCH_BACKUP_SW_UP_Press#1 (>L:FSS_EXX_TRIM_PITCH_1_UP, Number)
TRIM_PITCH_BACKUP_SW_UP_Release#0 (>L:FSS_EXX_TRIM_PITCH_1_UP, Number)
TRIM_ROLL_LWD_Press#1 (>L:FSS_EXX_TRIM_AIL_DN, Number)
TRIM_ROLL_LWD_Release#0 (>L:FSS_EXX_TRIM_AIL_DN, Number)
TRIM_ROLL_RWD_Press#1 (>L:FSS_EXX_TRIM_AIL_UP, Number)
TRIM_ROLL_RWD_Release#0 (>L:FSS_EXX_TRIM_AIL_UP, Number)
TRIM_YAW_Left#0 (>L:FSS_EXX_TRIM_YAW, Number)
TRIM_YAW_Neutral#1 (>L:FSS_EXX_TRIM_YAW, Number)
TRIM_YAW_Right#2 (>L:FSS_EXX_TRIM_YAW, Number)
//FSS/E1XX/EFIS
CPT_DCP_Minimums_Increase#(L:FSS_EXX_DCP_L_MIN_ROT) 0.028 + (>L:FSS_EXX_DCP_L_MIN_ROT)
//FSS/E1XX/Efis
CPT_DCP_BRG_Circle_Push#(L:FSS_EXX_DCP_L_MODES_BRG_C) 1 + 4 % (>L:FSS_EXX_DCP_L_MODES_BRG_C)
CPT_DCP_BRG_Diamond_Push#(L:FSS_EXX_DCP_L_MODES_BRG_D) 1 + 4 % (>L:FSS_EXX_DCP_L_MODES_BRG_D)
CPT_DCP_Baro_Decrease#(L:FSS_EXX_DCP_L_BARO_ROT) 0.028 - (>L:FSS_EXX_DCP_L_BARO_ROT)
CPT_DCP_Baro_Increase#(L:FSS_EXX_DCP_L_BARO_ROT) 0.028 + (>L:FSS_EXX_DCP_L_BARO_ROT)
CPT_DCP_Baro_Push_STD#1 (>L:FSS_EXX_DCP_L_BARO_STD)
CPT_DCP_Baro_Unit_IN#0 (>L:FSS_EXX_DCP_L_BARO_UNIT)
CPT_DCP_Baro_Unit_hPa#1 (>L:FSS_EXX_DCP_L_BARO_UNIT)
CPT_DCP_CRS_Decrease#(L:FSS_EXX_DCP_L_CRS_ROT) 0.028 - (>L:FSS_EXX_DCP_L_CRS_ROT)
CPT_DCP_CRS_Increase#(L:FSS_EXX_DCP_L_CRS_ROT) 0.028 + (>L:FSS_EXX_DCP_L_CRS_ROT)
CPT_DCP_CRS_Sync#(L:FSS_EXX_DCP_L_CRS_SYNC) ! (>L:FSS_EXX_DCP_L_CRS_SYNC)
CPT_DCP_FD_Push#(L:FSS_EXX_DCP_L_MODES_FD) ! (>L:FSS_EXX_DCP_L_MODES_FD)
CPT_DCP_FMS_Push#(L:FSS_EXX_DCP_L_MODES_FMS) ! (>L:FSS_EXX_DCP_L_MODES_FMS)
CPT_DCP_FPR_Push#(L:FSS_EXX_DCP_L_MODES_FPR) ! (>L:FSS_EXX_DCP_L_MODES_FPR)
CPT_DCP_HSI_Push#(L:FSS_EXX_DCP_L_MODES_HSI) 1 + 3 % (>L:FSS_EXX_DCP_L_MODES_HSI)
CPT_DCP_Minimums_BARO#1 (>L:FSS_EXX_DCP_L_MIN_SRC)
CPT_DCP_Minimums_Decrease#(L:FSS_EXX_DCP_L_MIN_ROT) 0.028 - (>L:FSS_EXX_DCP_L_MIN_ROT)
CPT_DCP_Minimums_RA#0 (>L:FSS_EXX_DCP_L_MIN_SRC)
CPT_DCP_PREV_Push#(L:FSS_EXX_DCP_L_MODES_PREV) 1 + 3 % (>L:FSS_EXX_DCP_L_MODES_PREV)
CPT_DCP_VL_Push#(L:FSS_EXX_DCP_L_MODES_VL) ! (>L:FSS_EXX_DCP_L_MODES_VL)
CPT_DCP_WX_Push#(L:FSS_EXX_DCP_L_MODES_WX) ! (>L:FSS_EXX_DCP_L_MODES_WX)
FO_DCP_Baro_Decrease#(L:FSS_EXX_DCP_R_BARO_ROT) 0.028 - (>L:FSS_EXX_DCP_R_BARO_ROT)
FO_DCP_Baro_Increase#(L:FSS_EXX_DCP_R_BARO_ROT) 0.028 + (>L:FSS_EXX_DCP_R_BARO_ROT)
FO_DCP_Baro_Push_STD#1 (>L:FSS_EXX_DCP_R_BARO_STD)
FO_DCP_Baro_Unit_IN#0 (>L:FSS_EXX_DCP_R_BARO_UNIT)
FO_DCP_Baro_Unit_hPa#1 (>L:FSS_EXX_DCP_R_BARO_UNIT)
FO_DCP_CRS_Decrease#(L:FSS_EXX_DCP_R_CRS_ROT) 0.028 - (>L:FSS_EXX_DCP_R_CRS_ROT)
FO_DCP_CRS_Increase#(L:FSS_EXX_DCP_R_CRS_ROT) 0.028 + (>L:FSS_EXX_DCP_R_CRS_ROT)
FO_DCP_CRS_Sync#(L:FSS_EXX_DCP_R_CRS_SYNC) ! (>L:FSS_EXX_DCP_R_CRS_SYNC)
FO_DCP_FD_Push#(L:FSS_EXX_DCP_R_MODES_FD) ! (>L:FSS_EXX_DCP_R_MODES_FD)
FO_DCP_Minimums_BARO#1 (>L:FSS_EXX_DCP_R_MIN_SRC)
FO_DCP_Minimums_Decrease#(L:FSS_EXX_DCP_R_MIN_ROT) 0.028 - (>L:FSS_EXX_DCP_R_MIN_ROT)
FO_DCP_Minimums_Increase#(L:FSS_EXX_DCP_R_MIN_ROT) 0.028 + (>L:FSS_EXX_DCP_R_MIN_ROT)
FO_DCP_Minimums_RA#0 (>L:FSS_EXX_DCP_R_MIN_SRC)
//FSS/E1XX/Electrical
AC_BUS_Ties_1_Open#0 (>L:FSS_EXX_ELEC_BV_AC_BUS_TIES)
AC_BUS_Ties_2_Open#2 (>L:FSS_EXX_ELEC_BV_AC_BUS_TIES)
AC_BUS_Ties_Auto#1 (>L:FSS_EXX_ELEC_BV_AC_BUS_TIES)
APU_CONTROL_Off#0 (>L:FSS_EXX_OVHD_APU_MASTER)
APU_CONTROL_On#1 (>L:FSS_EXX_OVHD_APU_MASTER)
APU_CONTROL_Start#2 (>L:FSS_EXX_OVHD_APU_MASTER)
APU_GEN_Off#0 (>L:FSS_EXX_ELEC_BV_APUGEN_BTN)
APU_GEN_On#1 (>L:FSS_EXX_ELEC_BV_APUGEN_BTN)
BATT_1_Off#0 (>L:FSS_EXX_ELEC_BV_BATT1_SWITCH)
BATT_1_On#1 (>L:FSS_EXX_ELEC_BV_BATT1_SWITCH)
BATT_2_Off#0 (>L:FSS_EXX_ELEC_BV_BATT2_SWITCH)
BATT_2_On#1 (>L:FSS_EXX_ELEC_BV_BATT2_SWITCH)
DC_BUS_Ties_Auto#1 (>L:FSS_EXX_ELEC_BV_DC_BUS_TIES_SWITCH)
DC_BUS_Ties_Off#0 (>L:FSS_EXX_ELEC_BV_DC_BUS_TIES_SWITCH)
DC_PUMP_AUTO#1 (>L:FSS_EXX_OVHD_FUEL_DC_PUMP)
DC_PUMP_Off#0 (>L:FSS_EXX_OVHD_FUEL_DC_PUMP)
DC_PUMP_On#2 (>L:FSS_EXX_OVHD_FUEL_DC_PUMP)
GPU_Off#0 (>L:FSS_EXX_ELEC_BV_GPU_BTN)
GPU_On#1 (>L:FSS_EXX_ELEC_BV_GPU_BTN)
IDG_1_Auto#2 (>L:FSS_EXX_ELEC_BV_IDG1)
IDG_1_Disc#0 (>L:FSS_EXX_ELEC_BV_IDG1)
IDG_1_Off#1 (>L:FSS_EXX_ELEC_BV_IDG1)
IDG_2_Auto#2 (>L:FSS_EXX_ELEC_BV_IDG2)
IDG_2_Disc#0 (>L:FSS_EXX_ELEC_BV_IDG2)
IDG_2_Off#1 (>L:FSS_EXX_ELEC_BV_IDG2)
TRU_1_Auto#1 (>L:FSS_EXX_ELEC_BV_DC_TRU1_SWITCH)
TRU_1_Off#0 (>L:FSS_EXX_ELEC_BV_DC_TRU1_SWITCH)
TRU_2_Auto#1 (>L:FSS_EXX_ELEC_BV_DC_TRU2_SWITCH)
TRU_2_Off#0 (>L:FSS_EXX_ELEC_BV_DC_TRU2_SWITCH)
TRU_ESS_Off#0 (>L:FSS_EXX_ELEC_BV_DC_TRUESS_SWITCH)
TRU_ESS_On#1 (>L:FSS_EXX_ELEC_BV_DC_TRUESS_SWITCH)
//FSS/E1XX/Engines
Engine_1_Start_Switch_Cover_Close#0 (>L:FSS_EXX_PDSTL_POWERPLANT_L_COVER, Number)
Engine_1_Start_Switch_Cover_Open#1 (>L:FSS_EXX_PDSTL_POWERPLANT_L_COVER, Number)
Engine_1_Start_Switch_Run#1 (>L:FSS_EXX_PDSTL_POWERPLANT_L, Number)
Engine_1_Start_Switch_Start#2 (>L:FSS_EXX_PDSTL_POWERPLANT_L, Number)
Engine_1_Start_Switch_Stop#0 (>L:FSS_EXX_PDSTL_POWERPLANT_L, Number)
Engine_2_Start_Switch_Cover_Close#0 (>L:FSS_EXX_PDSTL_POWERPLANT_R_COVER, Number)
Engine_2_Start_Switch_Cover_Open#1 (>L:FSS_EXX_PDSTL_POWERPLANT_R_COVER, Number)
Engine_2_Start_Switch_Run#1 (>L:FSS_EXX_PDSTL_POWERPLANT_R, Number)
Engine_2_Start_Switch_Start#2 (>L:FSS_EXX_PDSTL_POWERPLANT_R, Number)
Engine_2_Start_Switch_Stop#0 (>L:FSS_EXX_PDSTL_POWERPLANT_R, Number)
//FSS/E1XX/Flight Instrumentation
CPT_EICAS_Brightness_Decrease#(L:FSS_EXX_GSHIELD_EICAS_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_EICAS_BRT_KNOB)
CPT_EICAS_Brightness_Increase#(L:FSS_EXX_GSHIELD_EICAS_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_EICAS_BRT_KNOB)
CPT_MFD_Brightness_Decrease#(L:FSS_EXX_GSHIELD_MFD_L_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_MFD_L_BRT_KNOB)
CPT_MFD_Brightness_Increase#(L:FSS_EXX_GSHIELD_MFD_L_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_MFD_L_BRT_KNOB)
CPT_PFD_Brightness_Decrease#(L:FSS_EXX_GSHIELD_PFD_L_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_PFD_L_BRT_KNOB)
CPT_PFD_Brightness_Increase#(L:FSS_EXX_GSHIELD_PFD_L_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_PFD_L_BRT_KNOB)
CPT_Reversionary_Panel_Displays_Auto#1 (>L:FSS_EXX_REVPANEL_L_DISPLAY)
CPT_Reversionary_Panel_Displays_EICAS#3 (>L:FSS_EXX_REVPANEL_L_DISPLAY)
CPT_Reversionary_Panel_Displays_MFD#2 (>L:FSS_EXX_REVPANEL_L_DISPLAY)
CPT_Reversionary_Panel_Displays_PFD#0 (>L:FSS_EXX_REVPANEL_L_DISPLAY)
Cpt_HGS_BRT_Dec#(L:FSS_E19X_HGS_PILOT_BRT, Number) 0.05 - 1 min 0 max (>L:FSS_E19X_HGS_PILOT_BRT, Number)
Cpt_HGS_BRT_Inc#(L:FSS_E19X_HGS_PILOT_BRT, Number) 0.05 + 1 min 0 max (>L:FSS_E19X_HGS_PILOT_BRT, Number)
Cpt_HGS_Down#0 (>L:FSS_E19X_HGS_PILOT_STOWED, Number)
Cpt_HGS_Up#1 (>L:FSS_E19X_HGS_PILOT_STOWED, Number)
EICAS_Full_Press#(L:FSS_EXX_EICAS_DECLUTTER_CANCEL, Number) ! (>L:FSS_EXX_EICAS_DECLUTTER_CANCEL, Number)
FO_MFD_Brightness_Decrease#(L:FSS_EXX_GSHIELD_MFD_R_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_MFD_R_BRT_KNOB)
FO_MFD_Brightness_Increase#(L:FSS_EXX_GSHIELD_MFD_R_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_MFD_R_BRT_KNOB)
FO_PFD_Brightness_Decrease#(L:FSS_EXX_GSHIELD_PFD_R_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_PFD_R_BRT_KNOB)
FO_PFD_Brightness_Increase#(L:FSS_EXX_GSHIELD_PFD_R_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_PFD_R_BRT_KNOB)
FO_Reversionary_Panel_Displays_Auto#1 (>L:FSS_EXX_REVPANEL_R_DISPLAY)
FO_Reversionary_Panel_Displays_EICAS#3 (>L:FSS_EXX_REVPANEL_R_DISPLAY)
FO_Reversionary_Panel_Displays_MFD#2 (>L:FSS_EXX_REVPANEL_R_DISPLAY)
FO_Reversionary_Panel_Displays_PFD#0 (>L:FSS_EXX_REVPANEL_R_DISPLAY)
CPT_CCD_Rotary_Inner_Decrease# (L:FSS_EXX_CCD_LEFT_BV_ROTARY_INNER) 0.028 - (>L:FSS_EXX_CCD_LEFT_BV_ROTARY_INNER)
CPT_CCD_Rotary_Inner_Increase# (L:FSS_EXX_CCD_LEFT_BV_ROTARY_INNER) 0.028 + (>L:FSS_EXX_CCD_LEFT_BV_ROTARY_INNER)
CPT_CCD_Rotary_Outer_Decrease# (L:FSS_EXX_CCD_LEFT_BV_ROTARY_OUTER) 0.028 - (>L:FSS_EXX_CCD_LEFT_BV_ROTARY_OUTER)
CPT_CCD_Rotary_Outer_Increase# (L:FSS_EXX_CCD_LEFT_BV_ROTARY_OUTER) 0.028 + (>L:FSS_EXX_CCD_LEFT_BV_ROTARY_OUTER)
FO_CCD_Rotary_Inner_Decrease# (L:FSS_EXX_CCD_RIGHT_BV_ROTARY_INNER) 0.028 - (>L:FSS_EXX_CCD_RIGHT_BV_ROTARY_INNER)
FO_CCD_Rotary_Inner_Increase# (L:FSS_EXX_CCD_RIGHT_BV_ROTARY_INNER) 0.028 + (>L:FSS_EXX_CCD_RIGHT_BV_ROTARY_INNER)
FO_CCD_Rotary_Outer_Decrease# (L:FSS_EXX_CCD_RIGHT_BV_ROTARY_OUTER) 0.028 - (>L:FSS_EXX_CCD_RIGHT_BV_ROTARY_OUTER)
FO_CCD_Rotary_Outer_Increase# (L:FSS_EXX_CCD_RIGHT_BV_ROTARY_OUTER) 0.028 + (>L:FSS_EXX_CCD_RIGHT_BV_ROTARY_OUTER)
//FSS/E1XX/Fuel
AC_PUMP_1_Auto#1 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_1)
AC_PUMP_1_Off#0 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_1)
AC_PUMP_1_On#2 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_1)
AC_PUMP_2_Auto#1 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_2)
AC_PUMP_2_Off#0 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_2)
AC_PUMP_2_On#2 (>L:FSS_EXX_OVHD_FUEL_AC_PUMP_2)
Fuel_XFEED_LOW_1#0 (>L:FSS_EXX_OVHD_FUEL_XFEED)
Fuel_XFEED_LOW_2#2 (>L:FSS_EXX_OVHD_FUEL_XFEED)
Fuel_XFEED_OFF#1 (>L:FSS_EXX_OVHD_FUEL_XFEED)
//FSS/E1XX/Gear
Autobrake_Hi#4 (>L:FSS_EXX_AUTOBRAKE)
Autobrake_Lo#2 (>L:FSS_EXX_AUTOBRAKE)
Autobrake_Med#3 (>L:FSS_EXX_AUTOBRAKE)
Autobrake_Off#1 (>L:FSS_EXX_AUTOBRAKE)
Autobrake_RTO#0 (>L:FSS_EXX_AUTOBRAKE)
Parking_Brake_Release#0 (>L:FSS_EXX_PARKBRAKE_BV_LEVER, Number)
Parking_Brake_Set#1 (>L:FSS_EXX_PARKBRAKE_BV_LEVER, Number)
//FSS/E1XX/Hydraulic
ENG_PUMP_SHUTOFF_SYS_1_Cover_Close#0 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS1_SHUT_COVER)
ENG_PUMP_SHUTOFF_SYS_1_Cover_Open#1 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS1_SHUT_COVER)
ENG_PUMP_SHUTOFF_SYS_1_Off#0 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS1_SHUT_BTN)
ENG_PUMP_SHUTOFF_SYS_1_On#1 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS1_SHUT_BTN)
ENG_PUMP_SHUTOFF_SYS_2_Cover_Close#0 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS2_SHUT_COVER)
ENG_PUMP_SHUTOFF_SYS_2_Cover_Open#1 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS2_SHUT_COVER)
ENG_PUMP_SHUTOFF_SYS_2_Off#0 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS2_SHUT_BTN)
ENG_PUMP_SHUTOFF_SYS_2_On#1 (>L:FSS_EXX_OVHD_HYD_ENG_PUMP_SYS2_SHUT_BTN)
PTU_Auto#1 (>L:FSS_EXX_OVHD_HYD_PTU)
PTU_Off#0 (>L:FSS_EXX_OVHD_HYD_PTU)
PTU_On#2 (>L:FSS_EXX_OVHD_HYD_PTU)
SYS_1_ELEC_PUMP_Auto#1 (>L:FSS_EXX_OVHD_HYD_ELC_SYS1_PUMP)
SYS_1_ELEC_PUMP_Off#0 (>L:FSS_EXX_OVHD_HYD_ELC_SYS1_PUMP)
SYS_1_ELEC_PUMP_On#2 (>L:FSS_EXX_OVHD_HYD_ELC_SYS1_PUMP)
SYS_2_ELEC_PUMP_Auto#1 (>L:FSS_EXX_OVHD_HYD_ELC_SYS2_PUMP)
SYS_2_ELEC_PUMP_Off#0 (>L:FSS_EXX_OVHD_HYD_ELC_SYS2_PUMP)
SYS_2_ELEC_PUMP_On#2 (>L:FSS_EXX_OVHD_HYD_ELC_SYS2_PUMP)
SYS_3_ELEC_PUMP_A_Off#0 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_A)
SYS_3_ELEC_PUMP_A_On#1 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_A)
SYS_3_ELEC_PUMP_B_Auto#1 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_B)
SYS_3_ELEC_PUMP_B_Off#0 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_B)
SYS_3_ELEC_PUMP_B_On#2 (>L:FSS_EXX_OVHD_HYD_ELC_PUMP_B)
//FSS/E1XX/ISIS
Standby_Instrument_Brightness_Decrease#1 (>L:FSS_EXX_IESS_BV_BRT_DN_BTN) 0 (>L:FSS_EXX_IESS_BV_BRT_DN_BTN)
Standby_Instrument_Brightness_Increase#1 (>L:FSS_EXX_IESS_BV_BRT_UP_BTN) 0 (>L:FSS_EXX_IESS_BV_BRT_UP_BTN)
Standby_Instrument_BARO_Decrease#(L:FSS_EXX_IESS_BV_BARO_KNOB) 0.028 - (>L:FSS_EXX_IESS_BV_BARO_KNOB)
Standby_Instrument_BARO_Increase#(L:FSS_EXX_IESS_BV_BARO_KNOB) 0.028 + (>L:FSS_EXX_IESS_BV_BARO_KNOB)
Standby_Instrument_STD_Press#1 (>L:FSS_EXX_IESS_BV_STD_BTN)
//FSS/E1XX/Lights
Annunciators_Test_Press#1 (>L:FSS_EXX_OVHD_CPL_ANUNTEST_BTN)
Annunciators_Test_Release#0 (>L:FSS_EXX_OVHD_CPL_ANUNTEST_BTN)
CPT_Chart_Light_Decrease#(L:FSS_EXX_GSHIELD_CHART_L_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_CHART_L_BRT_KNOB)
CPT_Chart_Light_Increase#(L:FSS_EXX_GSHIELD_CHART_L_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_CHART_L_BRT_KNOB)
CPT_Flood_Storm_Light_Decrease#(L:FSS_EXX_GSHIELD_FLOOD_L_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_FLOOD_L_BRT_KNOB)
CPT_Flood_Storm_Light_Increase#(L:FSS_EXX_GSHIELD_FLOOD_L_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_FLOOD_L_BRT_KNOB)
DOME_Light_Off#0 (>L:FSS_EXX_CPLT_BV_DOMELIGHT_SWITCH)
DOME_Light_On#1 (>L:FSS_EXX_CPLT_BV_DOMELIGHT_SWITCH)
FO_Chart_Light_Decrease#(L:FSS_EXX_GSHIELD_CHART_R_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_CHART_R_BRT_KNOB)
FO_Chart_Light_Increase#(L:FSS_EXX_GSHIELD_CHART_R_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_CHART_R_BRT_KNOB)
FO_Comp_Clk_Light_Decrease#(L:FSS_EXX_GSHIELD_COMP_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_COMP_BRT_KNOB)
FO_Comp_Clk_Light_Increase#(L:FSS_EXX_GSHIELD_COMP_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_COMP_BRT_KNOB)
FO_Flood_Storm_Light_Decrease#(L:FSS_EXX_GSHIELD_FLOOD_R_BRT_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_GSHIELD_FLOOD_R_BRT_KNOB)
FO_Flood_Storm_Light_Increase#(L:FSS_EXX_GSHIELD_FLOOD_R_BRT_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_GSHIELD_FLOOD_R_BRT_KNOB)
INSP_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_INSP_SWITCH)
INSP_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_INSP_SWITCH)
LANDING_LEFT_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_LANDING_L_SWITCH)
LANDING_LEFT_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_LANDING_L_SWITCH)
LANDING_NOSE_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_LANDING_NOSE_SWITCH)
LANDING_NOSE_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_LANDING_NOSE_SWITCH)
LANDING_RIGHT_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_LANDING_R_SWITCH)
LANDING_RIGHT_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_LANDING_R_SWITCH)
LOGO_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_LOGO_SWITCH)
LOGO_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_LOGO_SWITCH)
MAIN_PNL_Light_Decrease#(L:FSS_EXX_CPLT_BV_MAIN_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_CPLT_BV_MAIN_KNOB)
MAIN_PNL_Light_Increase#(L:FSS_EXX_CPLT_BV_MAIN_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_CPLT_BV_MAIN_KNOB)
NAV_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_NAV_SWITCH)
NAV_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_NAV_SWITCH)
OVHD_PNL_Light_Decrease#(L:FSS_EXX_CPLT_BV_OVHD_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_CPLT_BV_OVHD_KNOB)
OVHD_PNL_Light_Increase#(L:FSS_EXX_CPLT_BV_OVHD_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_CPLT_BV_OVHD_KNOB)
PEDESTAL_Light_Decrease#(L:FSS_EXX_CPLT_BV_PDSTL_KNOB) 0.05 - 1 min 0 max (>L:FSS_EXX_CPLT_BV_PDSTL_KNOB)
PEDESTAL_Light_Increase#(L:FSS_EXX_CPLT_BV_PDSTL_KNOB) 0.05 + 1 min 0 max (>L:FSS_EXX_CPLT_BV_PDSTL_KNOB)
RED_BCN_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_RED_BCN_SWITCH)
RED_BCN_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_RED_BCN_SWITCH)
STERILE_Off#0 (>L:FSS_EXX_OVHD_PSGR_STERILE_SWITCH)
STERILE_On#1 (>L:FSS_EXX_OVHD_PSGR_STERILE_SWITCH)
STROBE_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_STROBE_SWITCH)
STROBE_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_STROBE_SWITCH)
TAXI_NOSE_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_TAXI_NOSE_SWITCH)
TAXI_NOSE_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_TAXI_NOSE_SWITCH)
TAXI_SIDE_Light_Off#0 (>L:FSS_EXX_OVHD_EXLT_TAXI_SIDE_SWITCH)
TAXI_SIDE_Light_On#1 (>L:FSS_EXX_OVHD_EXLT_TAXI_SIDE_SWITCH)
//FSS/E1XX/MCDU
Left_MCDU___-_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_PLUSMIN_BTN)
Left_MCDU___Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_DOT_BTN)
Left_MCDU___Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_SLASH_BTN)
Left_MCDU_0_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_0_BTN)
Left_MCDU_1_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_1_BTN)
Left_MCDU_2_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_2_BTN)
Left_MCDU_3_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_3_BTN)
Left_MCDU_4_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_4_BTN)
Left_MCDU_5_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_5_BTN)
Left_MCDU_6_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_6_BTN)
Left_MCDU_7_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_7_BTN)
Left_MCDU_8_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_8_BTN)
Left_MCDU_9_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_9_BTN)
Left_MCDU_A_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_A_BTN)
Left_MCDU_B_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_B_BTN)
Left_MCDU_BRT_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_BRT_BTN)
Left_MCDU_C_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_C_BTN)
Left_MCDU_CB_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_CB_BTN)
Left_MCDU_CLR_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_CLR_BTN)
Left_MCDU_D_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_D_BTN)
Left_MCDU_DEL_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_DEL_BTN)
Left_MCDU_DIM_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_DIM_BTN)
Left_MCDU_DLK_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_DLK_BTN)
Left_MCDU_E_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_E_BTN)
Left_MCDU_F_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_F_BTN)
Left_MCDU_FPL_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_FPL_BTN)
Left_MCDU_G_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_G_BTN)
Left_MCDU_H_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_H_BTN)
Left_MCDU_I_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_I_BTN)
Left_MCDU_Inner_Knob_Clockwise#(L:FSS_EXX_MCDU_LEFT_BV_ROTARY_INNER) 0.028 + (>L:FSS_EXX_MCDU_LEFT_BV_ROTARY_INNER)
Left_MCDU_Inner_Knob_Counter_Clockwise#(L:FSS_EXX_MCDU_LEFT_BV_ROTARY_INNER) 0.028 - (>L:FSS_EXX_MCDU_LEFT_BV_ROTARY_INNER)
Left_MCDU_J_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_J_BTN)
Left_MCDU_K_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_K_BTN)
Left_MCDU_L_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_L_BTN)
Left_MCDU_L1_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L1_BTN)
Left_MCDU_L2_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L2_BTN)
Left_MCDU_L3_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L3_BTN)
Left_MCDU_L4_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L4_BTN)
Left_MCDU_L5_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L5_BTN)
Left_MCDU_L6_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_L6_BTN)
Left_MCDU_M_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_M_BTN)
Left_MCDU_MENU_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_MENU_BTN)
Left_MCDU_N_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_N_BTN)
Left_MCDU_NAV_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_NAV_BTN)
Left_MCDU_NEXT_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_NEXT_BTN)
Left_MCDU_O_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_O_BTN)
Left_MCDU_Outer_Knob_Clockwise#(L:FSS_EXX_MCDU_LEFT_BV_ROTARY_OUTER) 0.028 + (>L:FSS_EXX_MCDU_LEFT_BV_ROTARY_OUTER)
Left_MCDU_Outer_Knob_Counter_Clockwise#(L:FSS_EXX_MCDU_LEFT_BV_ROTARY_OUTER) 0.028 - (>L:FSS_EXX_MCDU_LEFT_BV_ROTARY_OUTER)
Left_MCDU_P_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_P_BTN)
Left_MCDU_PERF_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_PERF_BTN)
Left_MCDU_PREV_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_PREV_BTN)
Left_MCDU_PROG_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_PROG_BTN)
Left_MCDU_Q_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_Q_BTN)
Left_MCDU_R_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_R_BTN)
Left_MCDU_R1_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R1_BTN)
Left_MCDU_R2_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R2_BTN)
Left_MCDU_R3_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R3_BTN)
Left_MCDU_R4_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R4_BTN)
Left_MCDU_R5_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R5_BTN)
Left_MCDU_R6_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_LSK_R6_BTN)
Left_MCDU_RADIO_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_RADIO_BTN)
Left_MCDU_RTE_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_RTE_BTN)
Left_MCDU_S_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_S_BTN)
Left_MCDU_SPACE_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_NUMBTN_SPACE_BTN)
Left_MCDU_T_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_T_BTN)
Left_MCDU_TRS_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_PGBTN_TRS_BTN)
Left_MCDU_U_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_U_BTN)
Left_MCDU_V_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_V_BTN)
Left_MCDU_W_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_W_BTN)
Left_MCDU_X_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_X_BTN)
Left_MCDU_Y_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_Y_BTN)
Left_MCDU_Z_Press#1 (>H:FSS_EXX_MCDU_LEFT_BV_KEY_Z_BTN)
RIGHT_MCDU___-_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_PLUSMIN_BTN)
RIGHT_MCDU___Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_DOT_BTN)
RIGHT_MCDU___Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_SLASH_BTN)
RIGHT_MCDU_0_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_0_BTN)
RIGHT_MCDU_1_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_1_BTN)
RIGHT_MCDU_2_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_2_BTN)
RIGHT_MCDU_3_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_3_BTN)
RIGHT_MCDU_4_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_4_BTN)
RIGHT_MCDU_5_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_5_BTN)
RIGHT_MCDU_6_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_6_BTN)
RIGHT_MCDU_7_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_7_BTN)
RIGHT_MCDU_8_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_8_BTN)
RIGHT_MCDU_9_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_9_BTN)
RIGHT_MCDU_A_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_A_BTN)
RIGHT_MCDU_B_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_B_BTN)
RIGHT_MCDU_BRT_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_BRT_BTN)
RIGHT_MCDU_C_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_C_BTN)
RIGHT_MCDU_CB_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_CB_BTN)
RIGHT_MCDU_CLR_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_CLR_BTN)
RIGHT_MCDU_D_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_D_BTN)
RIGHT_MCDU_DEL_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_DEL_BTN)
RIGHT_MCDU_DIM_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_DIM_BTN)
RIGHT_MCDU_DLK_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_DLK_BTN)
RIGHT_MCDU_E_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_E_BTN)
RIGHT_MCDU_F_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_F_BTN)
RIGHT_MCDU_FPL_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_FPL_BTN)
RIGHT_MCDU_G_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_G_BTN)
RIGHT_MCDU_H_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_H_BTN)
RIGHT_MCDU_I_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_I_BTN)
RIGHT_MCDU_Inner_Knob_Clockwise#(L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_INNER) 0.028 + (>L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_INNER)
RIGHT_MCDU_Inner_Knob_Counter_Clockwise#(L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_INNER) 0.028 - (>L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_INNER)
RIGHT_MCDU_J_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_J_BTN)
RIGHT_MCDU_K_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_K_BTN)
RIGHT_MCDU_L_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_L_BTN)
RIGHT_MCDU_L1_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L1_BTN)
RIGHT_MCDU_L2_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L2_BTN)
RIGHT_MCDU_L3_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L3_BTN)
RIGHT_MCDU_L4_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L4_BTN)
RIGHT_MCDU_L5_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L5_BTN)
RIGHT_MCDU_L6_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_L6_BTN)
RIGHT_MCDU_M_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_M_BTN)
RIGHT_MCDU_MENU_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_MENU_BTN)
RIGHT_MCDU_N_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_N_BTN)
RIGHT_MCDU_NAV_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_NAV_BTN)
RIGHT_MCDU_NEXT_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_NEXT_BTN)
RIGHT_MCDU_O_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_O_BTN)
RIGHT_MCDU_Outer_Knob_Clockwise#(L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_OUTER) 0.028 + (>L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_OUTER)
RIGHT_MCDU_Outer_Knob_Counter_Clockwise#(L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_OUTER) 0.028 - (>L:FSS_EXX_MCDU_RIGHT_BV_ROTARY_OUTER)
RIGHT_MCDU_P_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_P_BTN)
RIGHT_MCDU_PERF_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_PERF_BTN)
RIGHT_MCDU_PREV_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_PREV_BTN)
RIGHT_MCDU_PROG_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_PROG_BTN)
RIGHT_MCDU_Q_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_Q_BTN)
RIGHT_MCDU_R_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_R_BTN)
RIGHT_MCDU_R1_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R1_BTN)
RIGHT_MCDU_R2_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R2_BTN)
RIGHT_MCDU_R3_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R3_BTN)
RIGHT_MCDU_R4_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R4_BTN)
RIGHT_MCDU_R5_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R5_BTN)
RIGHT_MCDU_R6_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_LSK_R6_BTN)
RIGHT_MCDU_RADIO_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_RADIO_BTN)
RIGHT_MCDU_RTE_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_RTE_BTN)
RIGHT_MCDU_S_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_S_BTN)
RIGHT_MCDU_SPACE_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_NUMBTN_SPACE_BTN)
RIGHT_MCDU_T_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_T_BTN)
RIGHT_MCDU_TRS_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_PGBTN_TRS_BTN)
RIGHT_MCDU_U_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_U_BTN)
RIGHT_MCDU_V_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_V_BTN)
RIGHT_MCDU_W_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_W_BTN)
RIGHT_MCDU_X_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_X_BTN)
RIGHT_MCDU_Y_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_Y_BTN)
RIGHT_MCDU_Z_Press#1 (>H:FSS_EXX_MCDU_RIGHT_BV_KEY_Z_BTN)
//FSS/E1XX/Miscellaneous
COCKPIT_DOOR_CONTROL_INHIB_Press#(L:FSS_EXX_DOORCTRL_INHIB, Number) ! (>L:FSS_EXX_DOORCTRL_INHIB, Number)
COCKPIT_DOOR_CONTROL_LOCK_Cover_Close#0 (>L:FSS_EXX_DOORCTRL_LOCK_COVER, Number)
COCKPIT_DOOR_CONTROL_LOCK_Cover_Open#1 (>L:FSS_EXX_DOORCTRL_LOCK_COVER, Number)
COCKPIT_DOOR_CONTROL_LOCK_Press#(L:FSS_EXX_DOORCTRL_LOCK, Number) ! (>L:FSS_EXX_DOORCTRL_LOCK, Number)
CPT_Visor_Position_Dec#(L:FSS_EXX_SUNVISOR_POS_PILOT, Number) 0.05 - 1 min 0 max (>L:FSS_EXX_SUNVISOR_POS_PILOT, Number)
CPT_Visor_Position_Inc#(L:FSS_EXX_SUNVISOR_POS_PILOT, Number) 0.05 + 1 min 0 max (>L:FSS_EXX_SUNVISOR_POS_PILOT, Number)
CPT_Visor_Stow#1 (>L:FSS_EXX_SUNVISOR_STOW_PILOT, Number)
CPT_Visor_Unstow#0 (>L:FSS_EXX_SUNVISOR_STOW_PILOT, Number)
Cpt_Window_Close#0 (>L:FSS_EXX_WINDOW_L, Number)
Cpt_Window_Open#1 (>L:FSS_EXX_WINDOW_L, Number)
Cpt_Windshield_Wiper_Left_Hi#3 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_1)
Cpt_Windshield_Wiper_Left_Low#2 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_1)
Cpt_Windshield_Wiper_Left_Off#1 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_1)
Cpt_Windshield_Wiper_Left_Timer#0 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_1)
FO_Visor_Position_Dec#(L:FSS_EXX_SUNVISOR_POS_COPILOT, Number) 0.05 - 1 min 0 max (>L:FSS_EXX_SUNVISOR_POS_COPILOT, Number)
FO_Visor_Position_Inc#(L:FSS_EXX_SUNVISOR_POS_COPILOT, Number) 0.05 + 1 min 0 max (>L:FSS_EXX_SUNVISOR_POS_COPILOT, Number)
FO_Visor_Stow#1 (>L:FSS_EXX_SUNVISOR_STOW_COPILOT, Number)
FO_Visor_Unstow#0 (>L:FSS_EXX_SUNVISOR_STOW_COPILOT, Number)
Fo_Window_Close#0 (>L:FSS_EXX_WINDOW_R, Number)
Fo_Window_Open#1 (>L:FSS_EXX_WINDOW_R, Number)
Fo_Windshield_Wiper_Right_Hi#3 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_2)
Fo_Windshield_Wiper_Right_Low#2 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_2)
Fo_Windshield_Wiper_Right_Off#1 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_2)
Fo_Windshield_Wiper_Right_Timer#0 (>L:FSS_EXX_OVHD_WSHIELD_WIPER_2)
Steep_Approach_Press#(L:FSS_E19X_STEEP_APPR, Number) ! (>L:FSS_E19X_STEEP_APPR, Number)
//FSS/E1XX/Pressurization
CABIN_ALT_Down#0 (>L:FSS_EXX_OVHD_PRESS_CABIN_ALT)
CABIN_ALT_Stop#1 (>L:FSS_EXX_OVHD_PRESS_CABIN_ALT)
CABIN_ALT_Up#2 (>L:FSS_EXX_OVHD_PRESS_CABIN_ALT)
PRESSURIZATION_Dump_Btn_Off#0 (>L:FSS_EXX_OVHD_PRESS_DUMP_BTN)
PRESSURIZATION_Dump_Btn_On#1 (>L:FSS_EXX_OVHD_PRESS_DUMP_BTN)
PRESSURIZATION_Dump_Cover_Close#0 (>L:FSS_EXX_OVHD_PRESS_DUMP_COVER)
PRESSURIZATION_Dump_Cover_Open#1 (>L:FSS_EXX_OVHD_PRESS_DUMP_COVER)
PRESSURIZATION_LFE_Down#0 (>L:FSS_EXX_OVHD_PRESS_LFE)
PRESSURIZATION_LFE_Stop#1 (>L:FSS_EXX_OVHD_PRESS_LFE)
PRESSURIZATION_LFE_Up#2 (>L:FSS_EXX_OVHD_PRESS_LFE)
PRESSURIZATION_MODE_Auto#1 (>L:FSS_EXX_OVHD_PRESS_MODE)
PRESSURIZATION_MODE_LFE_CTRL#2 (>L:FSS_EXX_OVHD_PRESS_MODE)
PRESSURIZATION_MODE_Man#0 (>L:FSS_EXX_OVHD_PRESS_MODE)
//FSS/E1XX/Radio
CPT_ACP_ADF1_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_ADF1_BTN, Number)
CPT_ACP_ADF2_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_ADF2_BTN, Number)
CPT_ACP_DME1_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_DME1_BTN, Number)
CPT_ACP_DME2_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_DME2_BTN, Number)
CPT_ACP_NAV1_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_NAV1_BTN, Number)
CPT_ACP_NAV2_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_NAV2_BTN, Number)
CPT_ACP_NAV3_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_NAV3_BTN, Number)
CPT_ACP_TEL_Ramp_Press#1 (>L:FSS_EXX_AUDIO_L_TEL_RAMP_BTN, Number)
CPT_ACP_VHF1_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_VHF1_BTN, Number)
CPT_ACP_VHF1_Mic_Press#1 (>L:FSS_EXX_AUDIO_L_MIC_BV_VHF1_BTN, Number)
CPT_ACP_VHF2_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_VHF2_BTN, Number)
CPT_ACP_VHF2_Mic_Press#1 (>L:FSS_EXX_AUDIO_L_MIC_BV_VHF2_BTN, Number)
CPT_ACP_VHF3_Aud_Press#1 (>L:FSS_EXX_AUDIO_L_AUD_BV_VHF3_BTN, Number)
CPT_ACP_VHF3_Mic_Press#1 (>L:FSS_EXX_AUDIO_L_MIC_BV_VHF3_BTN, Number)
CPT_ACP_Vol_Dec#(L:FSS_EXX_AUDIO_L_VOLUME_ROTARY, Number) 0.028 - (>L:FSS_EXX_AUDIO_L_VOLUME_ROTARY, Number)
CPT_ACP_Vol_Inc#(L:FSS_EXX_AUDIO_L_VOLUME_ROTARY, Number) 0.028 + (>L:FSS_EXX_AUDIO_L_VOLUME_ROTARY, Number)
FO_ACP_ADF1_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_ADF1_BTN, Number)
FO_ACP_ADF2_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_ADF2_BTN, Number)
FO_ACP_DME1_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_DME1_BTN, Number)
FO_ACP_DME2_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_DME2_BTN, Number)
FO_ACP_NAV1_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_NAV1_BTN, Number)
FO_ACP_NAV2_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_NAV2_BTN, Number)
FO_ACP_NAV3_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_NAV3_BTN, Number)
FO_ACP_TEL_Ramp_Press#1 (>L:FSS_EXX_AUDIO_R_TEL_RAMP_BTN, Number)
FO_ACP_VHF1_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_VHF1_BTN, Number)
FO_ACP_VHF1_Mic_Press#1 (>L:FSS_EXX_AUDIO_R_MIC_BV_VHF1_BTN, Number)
FO_ACP_VHF2_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_VHF2_BTN, Number)
FO_ACP_VHF2_Mic_Press#1 (>L:FSS_EXX_AUDIO_R_MIC_BV_VHF2_BTN, Number)
FO_ACP_VHF3_Aud_Press#1 (>L:FSS_EXX_AUDIO_R_AUD_BV_VHF3_BTN, Number)
FO_ACP_VHF3_Mic_Press#1 (>L:FSS_EXX_AUDIO_R_MIC_BV_VHF3_BTN, Number)
FO_ACP_Vol_Dec#(L:FSS_EXX_AUDIO_R_VOLUME_ROTARY, Number) 0.028 - (>L:FSS_EXX_AUDIO_R_VOLUME_ROTARY, Number)
FO_ACP_Vol_Inc#(L:FSS_EXX_AUDIO_R_VOLUME_ROTARY, Number) 0.028 + (>L:FSS_EXX_AUDIO_R_VOLUME_ROTARY, Number)
//FSS/E1XX/Safety
EMER_LT_Armed#1 (>L:FSS_EXX_OVHD_PSGR_EMER_LT_SWITCH)
EMER_LT_Off#0 (>L:FSS_EXX_OVHD_PSGR_EMER_LT_SWITCH)
EMER_LT_On#2 (>L:FSS_EXX_OVHD_PSGR_EMER_LT_SWITCH)
FSTN_Belts_Off#0 (>L:FSS_EXX_OVHD_PSGR_FSTN_BELT_SWITCH)
FSTN_Belts_On#1 (>L:FSS_EXX_OVHD_PSGR_FSTN_BELT_SWITCH)
Fire_Extinguisher_Test_Push#1 (>L:FSS_EXX_OVHD_FE_TEST_BTN)
Fire_Extinguisher_Test_Release#0 (>L:FSS_EXX_OVHD_FE_TEST_BTN)
ATTND_CALL_BUTTON_PUSH#1 (>L:FSS_EXX_OVHD_PSGR_ATTND_CALL)
ATTND_CALL_BUTTON_RELEASE#0 (>L:FSS_EXX_OVHD_PSGR_ATTND_CALL)
NO_SMKG_Off#0 (>L:FSS_EXX_OVHD_PSGR_NOSMK_SWITCH)
NO_SMKG_On#1 (>L:FSS_EXX_OVHD_PSGR_NOSMK_SWITCH)
Passenger_Oxygen_Masks_Deploy_Auto#1 (>L:FSS_EXX_OVHD_OXY_MASK)
Passenger_Oxygen_Masks_Deploy_OVR#2 (>L:FSS_EXX_OVHD_OXY_MASK)
Passenger_Oxygen_Masks_Deploy_Off#0 (>L:FSS_EXX_OVHD_OXY_MASK)
//FSS/E1XX/Warning
CPT_Master_Caution_Push#(L:FSS_EXX_MASTER_CAUT_L_BTN) ! (>L:FSS_EXX_MASTER_CAUT_L_BTN)
CPT_Master_Warning_Push#(L:FSS_EXX_MASTER_WARN_L_BTN) ! (>L:FSS_EXX_MASTER_WARN_L_BTN)
FO_Master_Caution_Push#(L:FSS_EXX_MASTER_CAUT_R_BTN) ! (>L:FSS_EXX_MASTER_CAUT_R_BTN)
FO_Master_Warning_Push#(L:FSS_EXX_MASTER_WARN_R_BTN) ! (>L:FSS_EXX_MASTER_WARN_R_BTN)
T_O_Config_Press#1 (>L:FSS_EXX_TO_CONFIG_BTN, Number)
T_O_Config_Release#0 (>L:FSS_EXX_TO_CONFIG_BTN, Number)
//FSS/Tecnam P2006T/Fuel
L_Eng_Fuel_Selector__-_OFF#1 s0 (A:FUELSYSTEM JUNCTION SETTING:1, Enum) != if{  l0 1 (>K:2:FUELSYSTEM_JUNCTION_SET) }
//FenixSim/A320/ADIRS
FNX320_ADIRS_Data_Selector_Knob_Dec#(L:S_OH_NAV_DATA_DISP) 0.1 - 0 max (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_Data_Selector_Knob_Inc#(L:S_OH_NAV_DATA_DISP) 0.1 + 1 min (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_IR_1_Knob_ATT#2 (>L:S_OH_NAV_IR1_MODE)
FNX320_ADIRS_IR_1_Knob_NAV#1 (>L:S_OH_NAV_IR1_MODE)
FNX320_ADIRS_IR_1_Knob_OFF#0 (>L:S_OH_NAV_IR1_MODE)
FNX320_ADIRS_IR_2_Knob_ATT#2 (>L:S_OH_NAV_IR2_MODE)
FNX320_ADIRS_IR_2_Knob_NAV#1 (>L:S_OH_NAV_IR2_MODE)
FNX320_ADIRS_IR_2_Knob_OFF#0 (>L:S_OH_NAV_IR2_MODE)
FNX320_ADIRS_IR_3_Knob_ATT#2 (>L:S_OH_NAV_IR3_MODE)
FNX320_ADIRS_IR_3_Knob_NAV#1 (>L:S_OH_NAV_IR3_MODE)
FNX320_ADIRS_IR_3_Knob_OFF#0 (>L:S_OH_NAV_IR3_MODE)
FNX320_ADIRS_System_Selector_Knob_Dec#(L:S_OH_NAV_SYS_DISP) 0.1 - 0 max (>L:S_OH_NAV_SYS_DISP)
FNX320_ADIRS_System_Selector_Knob_Inc#(L:S_OH_NAV_SYS_DISP) 0.1 + 1 min (>L:S_OH_NAV_SYS_DISP)
FNX320_ADIRS_ADR_1_Button_Press#(L:S_OH_NAV_ADR1) ++ (>L:S_OH_NAV_ADR1)
FNX320_ADIRS_ADR_1_Button_Release#(L:S_OH_NAV_ADR1) ++ (>L:S_OH_NAV_ADR1)
FNX320_ADIRS_ADR_2_Button_Press#(L:S_OH_NAV_ADR2) ++ (>L:S_OH_NAV_ADR2)
FNX320_ADIRS_ADR_2_Button_Release#(L:S_OH_NAV_ADR2) s0 2 % 0 != if{ l0 ++ (>L:S_OH_NAV_ADR2) }
FNX320_ADIRS_ADR_3_Button_Press#(L:S_OH_NAV_ADR3) ++ (>L:S_OH_NAV_ADR3)
FNX320_ADIRS_ADR_3_Button_Release#(L:S_OH_NAV_ADR3) ++ (>L:S_OH_NAV_ADR3)
FNX320_ADIRS_Data_Selector_Knob_HDG#2 (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_Data_Selector_Knob_PPOS#1 (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_Data_Selector_Knob_STS#3 (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_Data_Selector_Knob_STS#3 (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_Data_Selector_Knob_TEST#5 (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_Data_Selector_Knob_TK_GS#4 (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_Data_Selector_Knob_WIND#0 (>L:S_OH_NAV_DATA_DISP)
FNX320_ADIRS_Key_0_Press#(L:S_OH_ADIRS_KEY_0) ++ (>L:S_OH_ADIRS_KEY_0)
FNX320_ADIRS_Key_0_Release#(L:S_OH_ADIRS_KEY_0) ++ (>L:S_OH_ADIRS_KEY_0)
FNX320_ADIRS_Key_1_Press#(L:S_OH_ADIRS_KEY_1) ++ (>L:S_OH_ADIRS_KEY_1)
FNX320_ADIRS_Key_1_Release#(L:S_OH_ADIRS_KEY_1) ++ (>L:S_OH_ADIRS_KEY_1)
FNX320_ADIRS_Key_2_Press#(L:S_OH_ADIRS_KEY_2) ++ (>L:S_OH_ADIRS_KEY_2)
FNX320_ADIRS_Key_2_Release#(L:S_OH_ADIRS_KEY_2) ++ (>L:S_OH_ADIRS_KEY_2)
FNX320_ADIRS_Key_3_Press#(L:S_OH_ADIRS_KEY_3) ++ (>L:S_OH_ADIRS_KEY_3)
FNX320_ADIRS_Key_3_Release#(L:S_OH_ADIRS_KEY_3) ++ (>L:S_OH_ADIRS_KEY_3)
FNX320_ADIRS_Key_4_Press#(L:S_OH_ADIRS_KEY_4) ++ (>L:S_OH_ADIRS_KEY_4)
FNX320_ADIRS_Key_4_Release#(L:S_OH_ADIRS_KEY_4) ++ (>L:S_OH_ADIRS_KEY_4)
FNX320_ADIRS_Key_5_Press#(L:S_OH_ADIRS_KEY_5) ++ (>L:S_OH_ADIRS_KEY_5)
FNX320_ADIRS_Key_5_Release#(L:S_OH_ADIRS_KEY_5) ++ (>L:S_OH_ADIRS_KEY_5)
FNX320_ADIRS_Key_6_Press#(L:S_OH_ADIRS_KEY_6) ++ (>L:S_OH_ADIRS_KEY_6)
FNX320_ADIRS_Key_6_Release#(L:S_OH_ADIRS_KEY_6) ++ (>L:S_OH_ADIRS_KEY_6)
FNX320_ADIRS_Key_7_Press#(L:S_OH_ADIRS_KEY_7) ++ (>L:S_OH_ADIRS_KEY_7)
FNX320_ADIRS_Key_7_Release#(L:S_OH_ADIRS_KEY_7) ++ (>L:S_OH_ADIRS_KEY_7)
FNX320_ADIRS_Key_8_Press#(L:S_OH_ADIRS_KEY_8) ++ (>L:S_OH_ADIRS_KEY_8)
FNX320_ADIRS_Key_8_Release#(L:S_OH_ADIRS_KEY_8) ++ (>L:S_OH_ADIRS_KEY_8)
FNX320_ADIRS_Key_9_Press#(L:S_OH_ADIRS_KEY_9) ++ (>L:S_OH_ADIRS_KEY_9)
FNX320_ADIRS_Key_9_Release#(L:S_OH_ADIRS_KEY_9) ++ (>L:S_OH_ADIRS_KEY_9)
FNX320_ADIRS_Key_Clear_Press#(L:S_OH_ADIRS_KEY_CLR) ++ (>L:S_OH_ADIRS_KEY_CLR)
FNX320_ADIRS_Key_Clear_Release#(L:S_OH_ADIRS_KEY_CLR) ++ (>L:S_OH_ADIRS_KEY_CLR)
FNX320_ADIRS_Key_Enter_Press#(L:S_OH_ADIRS_KEY_ENT) ++ (>L:S_OH_ADIRS_KEY_ENT)
FNX320_ADIRS_Key_Enter_Release#(L:S_OH_ADIRS_KEY_ENT) ++ (>L:S_OH_ADIRS_KEY_ENT)
FNX320_OH_ADIRS_IR1_Button_Push#(L:S_OH_NAV_IR1_SWITCH) 2 + (>L:S_OH_NAV_IR1_SWITCH)
FNX320_OH_ADIRS_IR2_Button_Push#(L:S_OH_NAV_IR2_SWITCH) 2 + (>L:S_OH_NAV_IR2_SWITCH)
FNX320_OH_ADIRS_IR3_Button_Push#(L:S_OH_NAV_IR3_SWITCH) 2 + (>L:S_OH_NAV_IR3_SWITCH)
FNX320_OVHD_IR1_KNOB_OFF-NAV_SWITCH#(L:S_OH_NAV_IR1_MODE) ! (>L:S_OH_NAV_IR1_MODE)
FNX320_OVHD_IR1_KNOB_OFF-NAV-ATT_TOGGLE#(L:S_OH_NAV_IR1_MODE, Number) ++ 3 % (>L:S_OH_NAV_IR1_MODE, Number)
FNX320_OVHD_IR2_KNOB_OFF-NAV_SWITCH#(L:S_OH_NAV_IR2_MODE) ! (>L:S_OH_NAV_IR2_MODE)
FNX320_OVHD_IR2_KNOB_OFF-NAV-ATT_TOGGLE#(L:S_OH_NAV_IR2_MODE, Number) ++ 3 % (>L:S_OH_NAV_IR2_MODE, Number)
FNX320_OVHD_IR3_KNOB_OFF-NAV_SWITCH#(L:S_OH_NAV_IR3_MODE) ! (>L:S_OH_NAV_IR3_MODE)
FNX320_OVHD_IR3_KNOB_OFF-NAV-ATT_TOGGLE#(L:S_OH_NAV_IR3_MODE, Number) ++ 3 % (>L:S_OH_NAV_IR3_MODE, Number)
//FenixSim/A320/APU
APU_Start_Button_Push#1 (L:S_OH_ELEC_APU_START) ++ (>L:S_OH_ELEC_APU_START)
APU_Start_Button_Release#0 (L:S_OH_ELEC_APU_START) ++ (>L:S_OH_ELEC_APU_START)
APU_Master_Toggle#(L:S_OH_ELEC_APU_MASTER) ++ (>L:S_OH_ELEC_APU_MASTER)
//FenixSim/A320/Air Conditioning and Pressurization
FNX320_Pressurization_Manual_Vertical_Speed_Control_Down#2 (>L:S_OH_PNEUMATIC_PRESS_MAN)
FNX320_Pressurization_Manual_Vertical_Speed_Control_Mid#1 (>L:S_OH_PNEUMATIC_PRESS_MAN)
FNX320_Pressurization_Manual_Vertical_Speed_Control_Up#0 (>L:S_OH_PNEUMATIC_PRESS_MAN)
FNX230_Ventilation_Blower_Button_Press#(L:S_OH_PNEUMATIC_BLOWER) ! (>L:S_OH_PNEUMATIC_BLOWER) 
FNX230_Ventilation_Cabin_Fans_Button_Press#(L:S_OH_PNEUMATIC_CAB_FANS) ! (>L:S_OH_PNEUMATIC_CAB_FANS) 
FNX230_Ventilation_Extract_Button_Press#(L:S_OH_PNEUMATIC_EXTRACT) ! (>L:S_OH_PNEUMATIC_EXTRACT) 
FNX320_OVHD_APU_BLEED_SWITCH_OFF#0 (>L:S_OH_PNEUMATIC_APU_BLEED)
FNX320_OVHD_APU_BLEED_SWITCH_ON#1 (>L:S_OH_PNEUMATIC_APU_BLEED) 
FNX320_OVHD_APU_BLEED_SWITCH_TOGGLE#(L:S_OH_PNEUMATIC_APU_BLEED) ! (>L:S_OH_PNEUMATIC_APU_BLEED)
FNX320_Pressurization_Ditching_Button_Press#(L:S_OH_PNEUMATIC_DITCHING) ! (>L:S_OH_PNEUMATIC_DITCHING) 
FNX320_Pressurization_Landing_Elevation_Knob_Dec#(L:A_OH_PNEUMATIC_LDG_ELEV) 0.25 - -3 max (>L:A_OH_PNEUMATIC_LDG_ELEV)
FNX320_Pressurization_Landing_Elevation_Knob_Inc#(L:A_OH_PNEUMATIC_LDG_ELEV) 0.25 + 14 min (>L:A_OH_PNEUMATIC_LDG_ELEV)
FNX320_Pressurization_Mode_Select_Button_Press#(L:S_OH_PNEUMATIC_PRESS_MODE) ! (>L:S_OH_PNEUMATIC_PRESS_MODE) 
//FenixSim/A320/Anti-Ice
FNX320_Icing_Engine_1_Button_Press#(L:S_OH_PNEUMATIC_ENG1_ANTI_ICE) ! (>L:S_OH_PNEUMATIC_ENG1_ANTI_ICE) 
FNX320_Icing_Engine_2_Button_Press#(L:S_OH_PNEUMATIC_ENG2_ANTI_ICE) ! (>L:S_OH_PNEUMATIC_ENG2_ANTI_ICE) 
FNX320_Icing_Probe_Heat_Button_Press#(L:S_OH_PROBE_HEAT) ! (>L:S_OH_PROBE_HEAT) 
FNX320_Icing_Wing_Button_Press#(L:S_OH_PNEUMATIC_WING_ANTI_ICE) ! (>L:S_OH_PNEUMATIC_WING_ANTI_ICE) 
Wing_Anti_Ice_OFF# 0 (>L:S_OH_PNEUMATIC_WING_ANTI_ICE)
Wing_Anti_Ice_ON# 1 (>L:S_OH_PNEUMATIC_WING_ANTI_ICE)
//FenixSim/A320/Audio Panel
FNX320_HF1_CABIN_MUSIC_ON_OFF_POTENTIOMETER_SWITCH_ON_PRESS#1 (>L:S_ASP_HF_1_REC_LATCH)
FNX320_HF1_CABIN_MUSIC_ON_OFF_POTENTIOMETER_SWITCH_ON_RELEASE#0 (>L:S_ASP_HF_1_REC_LATCH)
//FenixSim/A320/Autopilot
FNX320_Misc_Sidestick_AP_Disconnect_FO_Button_Press#1 (>L:S_FC_FO_INST_DISCONNECT)
FNX320_Misc_Sidestick_AP_Disconnect_FO_Button_Release#0 (>L:S_FC_FO_INST_DISCONNECT)
FNX320_Misc_Sidestick_AP_Disconnect_Captain_Button_Press#1 (>L:S_FC_CAPT_INST_DISCONNECT)
FNX320_Misc_Sidestick_AP_Disconnect_Captain_Button_Release#0 (>L:S_FC_CAPT_INST_DISCONNECT)
FNX320_FCU_ALTITUDE_KNOB_DEC#(L:E_FCU_ALTITUDE) -- (>L:E_FCU_ALTITUDE)
FNX320_FCU_ALTITUDE_KNOB_INC#(L:E_FCU_ALTITUDE) ++ (>L:E_FCU_ALTITUDE)
FNX320_FCU_ALTITUDE_KNOB_PULL#(L:S_FCU_ALTITUDE) ++ (>L:S_FCU_ALTITUDE)
FNX320_FCU_ALTITUDE_KNOB_PUSH#(L:S_FCU_ALTITUDE) -- (>L:S_FCU_ALTITUDE)
FNX320_FCU_ALTITUDE_KNOB_TOGGLE#(L:S_FCU_ALTITUDE, BOOL) if{ 0 (>L:S_FCU_ALTITUDE) } els{ 1 (>L:S_FCU_ALTITUDE) }
FNX320_FCU_ALTITUDE_SCALE_100#0 (>L:S_FCU_ALTITUDE_SCALE)
FNX320_FCU_ALTITUDE_SCALE_1000#1 (>L:S_FCU_ALTITUDE_SCALE)
FNX320_FCU_ALTITUDE_SCALE_TOGGLE#(L:S_FCU_ALTITUDE_SCALE, Bool) if{ 0 (>L:S_FCU_ALTITUDE_SCALE) } els{ 1 (>L:S_FCU_ALTITUDE_SCALE) }
FNX320_FCU_AP1_PUSH#(L:S_FCU_AP1) ++ (>L:S_FCU_AP1)
FNX320_FCU_AP1_RELEASE#(L:S_FCU_AP1) ++ (>L:S_FCU_AP1)
FNX320_FCU_AP2_PUSH#(L:S_FCU_AP2) ++ (>L:S_FCU_AP2)
FNX320_FCU_AP2_RELEASE#(L:S_FCU_AP2) ++ (>L:S_FCU_AP2)
FNX320_FCU_APPR_PUSH#(L:S_FCU_APPR) ++ (>L:S_FCU_APPR)
FNX320_FCU_APPR_RELEASE#(L:S_FCU_APPR) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_APPR) }
FNX320_FCU_ATHR_PUSH#(L:S_FCU_ATHR) ++ (>L:S_FCU_ATHR)
FNX320_FCU_ATHR_RELEASE#(L:S_FCU_ATHR) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_ATHR) }
FNX320_FCU_EFIS1_FD_PUSH#(L:S_FCU_EFIS1_FD) ++ (>L:S_FCU_EFIS1_FD)
FNX320_FCU_EFIS1_FD_RELEASE#(L:S_FCU_EFIS1_FD) ++ (>L:S_FCU_EFIS1_FD)
FNX320_FCU_EFIS1_LS_PUSH#(L:S_FCU_EFIS1_LS) ++ (>L:S_FCU_EFIS1_LS)
FNX320_FCU_EFIS1_LS_RELEASE#(L:S_FCU_EFIS1_LS) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_EFIS1_LS) }
FNX320_FCU_EFIS2_FD_PUSH#(L:S_FCU_EFIS2_FD) ++ (>L:S_FCU_EFIS2_FD)
FNX320_FCU_EFIS2_FD_RELEASE#(L:S_FCU_EFIS2_FD) (>L:S_FCU_EFIS2_FD
FNX320_FCU_EFIS2_LS_PUSH#(L:S_FCU_EFIS2_LS) ++ (>L:S_FCU_EFIS2_LS)
FNX320_FCU_EFIS2_LS_RELEASE#(L:S_FCU_EFIS2_LS) s0 2 % 0 != if{  l0 ++ (>L:S_FCU_EFIS2_LS) }
FNX320_FCU_EXPED_PUSH#(L:S_FCU_EXPED) ++ (>L:S_FCU_EXPED)
FNX320_FCU_EXPED_RELEASE#(L:S_FCU_EXPED) ++ (>L:S_FCU_EXPED)
FNX320_FCU_HEADING_KNOB_DEC#(L:E_FCU_HEADING) -- (>L:E_FCU_HEADING)
FNX320_FCU_HEADING_KNOB_INC#(L:E_FCU_HEADING) ++ (>L:E_FCU_HEADING)
FNX320_FCU_HEADING_KNOB_PULL#(L:S_FCU_HEADING) ++ (>L:S_FCU_HEADING)
FNX320_FCU_HEADING_KNOB_PUSH#(L:S_FCU_HEADING) -- (>L:S_FCU_HEADING)
FNX320_FCU_HEADING_KNOB_TOGGLE#(L:S_FCU_HEADING, BOOL) if{ 0 (>L:S_FCU_HEADING) } els{ 1 (>L:S_FCU_HEADING) } 
FNX320_FCU_LOC_PUSH#(L:S_FCU_LOC) ++ (>L:S_FCU_LOC)
FNX320_FCU_LOC_RELEASE#(L:S_FCU_LOC) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_LOC) }
FNX320_FCU_METRIC_ALT_PUSH#(L:S_FCU_METRIC_ALT) ++ (>L:S_FCU_METRIC_ALT)
FNX320_FCU_METRIC_ALT_RELEASE#(L:S_FCU_METRIC_ALT) s0 2 % 0 != if{ l0 ++ (>L:S_FCU_METRIC_ALT) }
FNX320_FCU_SPD_MACH_PUSH#(L:S_FCU_SPD_MACH) ++ (>L:S_FCU_SPD_MACH)
FNX320_FCU_SPD_MACH_RELEASE#(L:S_FCU_SPD_MACH) ++ (>L:S_FCU_SPD_MACH)
FNX320_FCU_SPEED_KNOB_DEC#(L:E_FCU_SPEED) -- (>L:E_FCU_SPEED)
FNX320_FCU_SPEED_KNOB_INC#(L:E_FCU_SPEED) ++ (>L:E_FCU_SPEED)
FNX320_FCU_SPEED_KNOB_PULL#(L:S_FCU_SPEED) ++ (>L:S_FCU_SPEED)
FNX320_FCU_SPEED_KNOB_PUSH#(L:S_FCU_SPEED) -- (>L:S_FCU_SPEED)
FNX320_FCU_SPEED_KNOB_TOGGLE#(L:S_FCU_SPEED, BOOL) if{ 0 (>L:S_FCU_SPEED) } els{ 1 (>L:S_FCU_SPEED) }
FNX320_FCU_TRK_FPA_PUSH#(L:S_FCU_HDGVS_TRKFPA) ++ (>L:S_FCU_HDGVS_TRKFPA)
FNX320_FCU_TRK_FPA_RELEASE#(L:S_FCU_HDGVS_TRKFPA) ++ (>L:S_FCU_HDGVS_TRKFPA)
FNX320_FCU_VS_KNOB_DEC#(L:E_FCU_VS) -- (>L:E_FCU_VS)
FNX320_FCU_VS_KNOB_INC#(L:E_FCU_VS) ++ (>L:E_FCU_VS)
FNX320_FCU_VS_KNOB_PULL#(L:S_FCU_VERTICAL_SPEED) ++ (>L:S_FCU_VERTICAL_SPEED)
FNX320_FCU_VS_KNOB_PUSH#(L:S_FCU_VERTICAL_SPEED) -- (>L:S_FCU_VERTICAL_SPEED)
FNX320_FCU_VS_KNOB_TOGGLE#(L:S_FCU_VERTICAL_SPEED, BOOL) if{ 0 (>L:S_FCU_VERTICAL_SPEED) } els{ 1 (>L:S_FCU_VERTICAL_SPEED) } 
//FenixSim/A320/Avionics
FNX320_Glareshield_Autoland_Captain_Button_Press#1 (>L:S_MIP_AUTOLAND_CAPT)
FNX320_Glareshield_Autoland_Captain_Button_Release#0 (>L:S_MIP_AUTOLAND_CAPT)
FNX320_Glareshield_Autoland_FO_Button_Press#1 (>L:S_MIP_AUTOLAND_FO)
FNX320_Glareshield_Autoland_FO_Button_Release#0 (>L:S_MIP_AUTOLAND_FO)
FNX320_MainPanel_PFD_ND_Transfer_Captain_Button_Press#1 (>L:S_DISPLAY_PFDND_XFER_CAPT)
FNX320_MainPanel_PFD_ND_Transfer_Captain_Button_Release#0 (>L:S_DISPLAY_PFDND_XFER_CAPT)
FNX320_MainPanel_PFD_ND_Transfer_FO_Button_Press#1 (>L:S_DISPLAY_PFDND_XFER_FO)
FNX320_MainPanel_PFD_ND_Transfer_FO_Button_Release#0 (>L:S_DISPLAY_PFDND_XFER_FO)
FNX320_MainPanel_Standby_Altimeter_Imperial_Baro_Knob_Dec#(L:E_STANDBY_ALT_IMPERIAL_BARO) -- (>L:E_STANDBY_ALT_IMPERIAL_BARO)
FNX320_MainPanel_Standby_Altimeter_Imperial_Baro_Knob_Inc#(L:E_STANDBY_ALT_IMPERIAL_BARO) ++ (>L:E_STANDBY_ALT_IMPERIAL_BARO)
FNX320_MainPanel_Standby_Altimeter_Metric_Baro_Knob_Dec#(L:E_STANDBY_ALT_METRIC_BARO) -- (>L:E_STANDBY_ALT_METRIC_BARO)
FNX320_MainPanel_Standby_Altimeter_Metric_Baro_Knob_Inc#(L:E_STANDBY_ALT_METRIC_BARO) ++ (>L:E_STANDBY_ALT_METRIC_BARO)
FNX320_MainPanel_Standby_Attitude_Cage_Press#1 (>L:S_STANDBY_ATTITUDE_CAGE)
FNX320_MainPanel_Standby_Attitude_Cage_Release#0 (>L:S_STANDBY_ATTITUDE_CAGE)
FNX320_MainPanel_Standby_Baro_Knob_Dec#(L:E_MIP_ISFD_BARO) -- (>L:E_MIP_ISFD_BARO)
FNX320_MainPanel_Standby_Baro_Knob_Inc#(L:E_MIP_ISFD_BARO) ++ (>L:E_MIP_ISFD_BARO)
FNX320_MainPanel_Standby_Bugs_Button_Press#1 (>L:S_MIP_ISFD_BUGS)
FNX320_MainPanel_Standby_Bugs_Button_Release#0 (>L:S_MIP_ISFD_BUGS)
FNX320_MainPanel_Standby_LS_Button_Press#1 (>L:S_MIP_ISFD_LS)
FNX320_MainPanel_Standby_LS_Button_Release#0 (>L:S_MIP_ISFD_LS)
FNX320_MainPanel_Standby_Minus_Button_Press#1 (>L:S_MIP_ISFD_MINUS)
FNX320_MainPanel_Standby_Minus_Button_Release#0 (>L:S_MIP_ISFD_MINUS)
FNX320_MainPanel_Standby_Plus_Button_Press#1 (>L:S_MIP_ISFD_PLUS)
FNX320_MainPanel_Standby_Plus_Button_Release#0 (>L:S_MIP_ISFD_PLUS)
FNX320_MainPanel_Standby_RST_Button_Press#1 (>L:S_MIP_ISFD_RST)
FNX320_MainPanel_Standby_RST_Button_Release#0 (>L:S_MIP_ISFD_RST)
FNX320_MainPanel_Terrain_On_ND_Captain_Button_Press#1 (>L:S_MIP_GPWS_TERRAIN_ON_ND_CAPT)
FNX320_MainPanel_Terrain_On_ND_Captain_ButtonRelease#0 (>L:S_MIP_GPWS_TERRAIN_ON_ND_CAPT)
FNX320_MainPanel_Terrain_On_ND_FO_Button_Press#1 (>L:S_MIP_GPWS_TERRAIN_ON_ND_FO)
FNX320_MainPanel_Terrain_On_ND_FO_Button_Release#0 (>L:S_MIP_GPWS_TERRAIN_ON_ND_FO)
FNX320_Overhead_Avionics_Compt_Light_Button_Press#1 (>L:S_OH_LIGHTING_AVIONICS_COMPT)
FNX320_Overhead_Avionics_Compt_Light_Button_Release#0 (>L:S_OH_LIGHTING_AVIONICS_COMPT)
//FenixSim/A320/CPDLC
FNX320_MainPanel_CPDLC_Dim_Bright_Captain_Button_BRT#2 (>L:S_DCDU1_DIM_BRT)
FNX320_MainPanel_CPDLC_Dim_Bright_Captain_Button_DIM#0 (>L:S_DCDU1_DIM_BRT)
FNX320_MainPanel_CPDLC_Dim_Bright_Captain_Button_Mid#1 (>L:S_DCDU1_DIM_BRT)
FNX320_MainPanel_CPDLC_Dim_Bright_FO_Button_BRT#2 (>L:S_DCDU2_DIM_BRT)
FNX320_MainPanel_CPDLC_Dim_Bright_FO_Button_DIM#0 (>L:S_DCDU2_DIM_BRT)
FNX320_MainPanel_CPDLC_Dim_Bright_FO_Button_Mid#1 (>L:S_DCDU2_DIM_BRT)
FNX320_MainPanel_CPDLC_LSK_1_Left_Captain_Button_Press#1 (>L:S_DCDU1_LSK1L)
FNX320_MainPanel_CPDLC_LSK_1_Left_Captain_Button_Release#0 (>L:S_DCDU1_LSK1L)
FNX320_MainPanel_CPDLC_LSK_1_Left_FO_Button_Press#1 (>L:S_DCDU2_LSK1L)
FNX320_MainPanel_CPDLC_LSK_1_Left_FO_Button_Release#0 (>L:S_DCDU2_LSK1L)
FNX320_MainPanel_CPDLC_LSK_1_Right_Captain_Button_Press#1 (>L:S_DCDU1_LSK1R)
FNX320_MainPanel_CPDLC_LSK_1_Right_Captain_Button_Release#0 (>L:S_DCDU1_LSK1R)
FNX320_MainPanel_CPDLC_LSK_1_Right_FO_Button_Press#1 (>L:S_DCDU2_LSK1R)
FNX320_MainPanel_CPDLC_LSK_1_Right_FO_Button_Release#0 (>L:S_DCDU2_LSK1R)
FNX320_MainPanel_CPDLC_LSK_2_Left_Captain_Button_Press#1 (>L:S_DCDU1_LSK2L)
FNX320_MainPanel_CPDLC_LSK_2_Left_Captain_Button_Release#0 (>L:S_DCDU1_LSK2L)
FNX320_MainPanel_CPDLC_LSK_2_Left_FO_Button_Press#1 (>L:S_DCDU2_LSK2L)
FNX320_MainPanel_CPDLC_LSK_2_Left_FO_Button_Release#0 (>L:S_DCDU2_LSK2L)
FNX320_MainPanel_CPDLC_LSK_2_Right_Captain_Button_Press#1 (>L:S_DCDU1_LSK2R)
FNX320_MainPanel_CPDLC_LSK_2_Right_Captain_Button_Release#0 (>L:S_DCDU1_LSK2R)
FNX320_MainPanel_CPDLC_LSK_2_Right_FO_Button_Press#1 (>L:S_DCDU2_LSK2R)
FNX320_MainPanel_CPDLC_LSK_2_Right_FO_Button_Release#0 (>L:S_DCDU2_LSK2R)
FNX320_MainPanel_CPDLC_Message_Minus_Captain_Button_Press#1 (>L:S_DCDU1_MSGDWN)
FNX320_MainPanel_CPDLC_Message_Minus_Captain_Button_Release#0 (>L:S_DCDU1_MSGDWN)
FNX320_MainPanel_CPDLC_Message_Minus_FO_Button_Press#1 (>L:S_DCDU2_MSGDWN)
FNX320_MainPanel_CPDLC_Message_Minus_FO_Button_Release#0 (>L:S_DCDU2_MSGDWN)
FNX320_MainPanel_CPDLC_Message_Plus_Captain_Button_Press#1 (>L:S_DCDU1_MSGUP)
FNX320_MainPanel_CPDLC_Message_Plus_Captain_Button_Release#0 (>L:S_DCDU1_MSGUP)
FNX320_MainPanel_CPDLC_Message_Plus_FO_Button_Press#1 (>L:S_DCDU2_MSGUP)
FNX320_MainPanel_CPDLC_Message_Plus_FO_Button_Release#0 (>L:S_DCDU2_MSGUP)
FNX320_MainPanel_CPDLC_Page_Minus_Captain_Button_Press#1 (>L:S_DCDU1_PGUP)
FNX320_MainPanel_CPDLC_Page_Minus_Captain_Button_Release#0 (>L:S_DCDU1_PGUP)
FNX320_MainPanel_CPDLC_Page_Minus_FO_Button_Press#1 (>L:S_DCDU2_PGUP)
FNX320_MainPanel_CPDLC_Page_Minus_FO_Button_Release#0 (>L:S_DCDU2_PGUP)
FNX320_MainPanel_CPDLC_Page_Plus_Captain_Button_Press#1 (>L:S_DCDU1_PGDN)
FNX320_MainPanel_CPDLC_Page_Plus_Captain_Button_Release#0 (>L:S_DCDU1_PGDN)
FNX320_MainPanel_CPDLC_Page_Plus_FO_Button_Press#1 (>L:S_DCDU2_PGDN)
FNX320_MainPanel_CPDLC_Page_Plus_FO_Button_Release#0 (>L:S_DCDU2_PGDN)
FNX320_MainPanel_CPDLC_Print_Captain_Button_Press#1 (>L:S_DCDU1_PRINT)
FNX320_MainPanel_CPDLC_Print_Captain_Button_Release#0 (>L:S_DCDU1_PRINT)
FNX320_MainPanel_CPDLC_Print_FO_Button_Release#0 (>L:S_DCDU2_PRINT)
FNX320_MainPanel_CPDLC_Print_FO_Button_Press#1 (>L:S_DCDU2_PRINT)
//FenixSim/A320/Controls
FNX320_Glareshield_Sidestick_Priority_Captain_Button_Press#1 (>L:S_FC_CAPT_PRIORITY)
FNX320_Glareshield_Sidestick_Priority_Captain_Button_Release#0 (>L:S_FC_CAPT_PRIORITY)
FNX320_Glareshield_Sidestick_Priority_FO_Button_Press#1 (>L:S_FC_FO_PRIORITY)
FNX320_Glareshield_Sidestick_Priority_FO_Button_Release#0 (>L:S_FC_FO_PRIORITY)
FNX320_Pedestal_Rudder_Trim_Reset_Button_Press#1 (>L:S_FC_RUDDER_TRIM_RESET)
FNX320_Pedestal_Rudder_Trim_Reset_Button_Release#0 (>L:S_FC_RUDDER_TRIM_RESET)
FNX320_PED_Rudder_Trim_Knob_Center_Release#1 (>L:S_FC_RUDDER_TRIM)
FNX320_PED_Rudder_Trim_Knob_Left_Press#0 (>L:S_FC_RUDDER_TRIM)
FNX320_PED_Rudder_Trim_Knob_Right_Press#2 (>L:S_FC_RUDDER_TRIM)
//FenixSim/A320/ECAM
FNX320_ECAM_ALL_Button_Press#1 (>L:S_ECAM_ALL)
FNX320_ECAM_ALL_Button_Release#0 (>L:S_ECAM_ALL)
FNX320_ECAM_APU_Button_Press#1 (>L:S_ECAM_APU)
FNX320_ECAM_APU_Button_Release#0 (>L:S_ECAM_APU)
FNX320_ECAM_BLEED_Button_Press#1 (>L:S_ECAM_BLEED)
FNX320_ECAM_BLEED_Button_Release#0 (>L:S_ECAM_BLEED)
FNX320_ECAM_CLR_Left_Button_Press#1 (>L:S_ECAM_CLR_LEFT)
FNX320_ECAM_CLR_Left_Button_Release#0 (>L:S_ECAM_CLR_LEFT)
FNX320_ECAM_CLR_Right_Button_Press#1 (>L:S_ECAM_CLR_RIGHT)
FNX320_ECAM_CLR_Right_Button_Release#0 (>L:S_ECAM_CLR_RIGHT)
FNX320_ECAM_COND_Button_Press#1 (>L:S_ECAM_COND)
FNX320_ECAM_COND_Button_Release#0 (>L:S_ECAM_COND)
FNX320_ECAM_DOOR_Button_Press#1 (>L:S_ECAM_DOOR)
FNX320_ECAM_DOOR_Button_Release#0 (>L:S_ECAM_DOOR)
FNX320_ECAM_ELEC_Button_Press#1 (>L:S_ECAM_ELEC)
FNX320_ECAM_ELEC_Button_Release#0 (>L:S_ECAM_ELEC)
FNX320_ECAM_EMER_CANC_Button_Press#1 (>L:S_ECAM_EMER_CANCEL)
FNX320_ECAM_EMER_CANC_Button_Release#0 (>L:S_ECAM_EMER_CANCEL)
FNX320_ECAM_FCTL_Button_Press#1 (>L:S_ECAM_FCTL)
FNX320_ECAM_FCTL_Button_Release#0 (>L:S_ECAM_FCTL)
FNX320_ECAM_FUEL_Button_Press#1 (>L:S_ECAM_FUEL)
FNX320_ECAM_FUEL_Button_Release#0 (>L:S_ECAM_FUEL)
FNX320_ECAM_HYD_Button_Press#1 (>L:S_ECAM_HYD)
FNX320_ECAM_HYD_Button_Release#0 (>L:S_ECAM_HYD)
FNX320_ECAM_PRESS_Button_Press#1 (>L:S_ECAM_CAB_PRESS)
FNX320_ECAM_PRESS_Button_Release#0 (>L:S_ECAM_CAB_PRESS)
FNX320_ECAM_RCL_Button_Press#1 (>L:S_ECAM_RCL)
FNX320_ECAM_RCL_Button_Release#0 (>L:S_ECAM_RCL)
FNX320_ECAM_STS_Button_Press#1 (>L:S_ECAM_STATUS)
FNX320_ECAM_STS_Button_Release#0 (>L:S_ECAM_STATUS)
FNX320_ECAM_TO_CONFIG_Button_Press#1 (>L:S_ECAM_TO)
FNX320_ECAM_TO_CONFIG_Button_Release#0 (>L:S_ECAM_TO)
FNX320_ECAM_WHEEL_Button_Press#1 (>L:S_ECAM_WHEEL)
FNX320_ECAM_WHEEL_Button_Release#0 (>L:S_ECAM_WHEEL)
FNX320_ECAM_ENG_Button_Press#(L:S_ECAM_ENGINE) ++ (>L:S_ECAM_ENGINE)
FNX320_ECAM_ENG_Button_Release#(L:S_ECAM_ENGINE) 2 % 1 == if{ (L:S_ECAM_ENGINE) ++ (>L:S_ECAM_ENGINE) }
//FenixSim/A320/EFIS
FNX320_EFIS_1_ARPT_Button_Press#1 (>L:S_FCU_EFIS1_ARPT)
FNX320_EFIS_1_ARPT_Button_Release#0 (>L:S_FCU_EFIS1_ARPT)
FNX320_EFIS_1_CSTR_Button_Press#1 (>L:S_FCU_EFIS1_CSTR)
FNX320_EFIS_1_CSTR_Button_Release#0 (>L:S_FCU_EFIS1_CSTR)
FNX320_EFIS_1_NDB_Button_Press#1 (>L:S_FCU_EFIS1_NDB)
FNX320_EFIS_1_NDB_Button_Release#0 (>L:S_FCU_EFIS1_NDB)
FNX320_EFIS_1_VORD_Button_Press#1 (>L:S_FCU_EFIS1_VORD)
FNX320_EFIS_1_VORD_Button_Release#0 (>L:S_FCU_EFIS1_VORD)
FNX320_EFIS_1_WPT_Button_Press#1 (>L:S_FCU_EFIS1_WPT)
FNX320_EFIS_1_WPT_Button_Release#0 (>L:S_FCU_EFIS1_WPT)
FNX320_EFIS_2_ARPT_Button_Press#1 (>L:S_FCU_EFIS2_ARPT)
FNX320_EFIS_2_ARPT_Button_Release#0 (>L:S_FCU_EFIS2_ARPT)
FNX320_EFIS_2_CSTR_Button_Press#1 (>L:S_FCU_EFIS2_CSTR)
FNX320_EFIS_2_CSTR_Button_Release#0 (>L:S_FCU_EFIS2_CSTR)
FNX320_EFIS_2_NDB_Button_Press#1 (>L:S_FCU_EFIS2_NDB)
FNX320_EFIS_2_NDB_Button_Release#0 (>L:S_FCU_EFIS2_NDB)
FNX320_EFIS_2_VORD_Button_Press#1 (>L:S_FCU_EFIS2_VORD)
FNX320_EFIS_2_VORD_Button_Release#0 (>L:S_FCU_EFIS2_VORD)
FNX320_EFIS_2_WPT_Button_Press#1 (>L:S_FCU_EFIS2_WPT)
FNX320_EFIS_2_WPT_Button_Release#0 (>L:S_FCU_EFIS2_WPT)
FNX320_EFIS_1_FD_Button_Press#1 (>L:S_FCU_EFIS1_FD)
FNX320_EFIS_1_FD_Button_Release#0 (>L:S_FCU_EFIS1_FD)
FNX320_EFIS_1_LS_Button_Press#1 (>L:S_FCU_EFIS1_LS)
FNX320_EFIS_1_LS_Button_Release#0 (>L:S_FCU_EFIS1_LS)
FNX320_EFIS_2_FD_Button_Press#1 (>L:S_FCU_EFIS2_FD)
FNX320_EFIS_2_FD_Button_Release#0 (>L:S_FCU_EFIS2_FD)
FNX320_EFIS_2_LS_Button_Press#1 (>L:S_FCU_EFIS2_LS)
FNX320_EFIS_2_LS_Button_Release#0 (>L:S_FCU_EFIS2_LS)
FNX320_EFIS_L_Baro_Knob_Pull#(L:S_FCU_EFIS1_BARO_STD) ++ (>L:S_FCU_EFIS1_BARO_STD)
FNX320_EFIS_L_Baro_Knob_Push#(L:S_FCU_EFIS1_BARO_STD) -- (>L:S_FCU_EFIS1_BARO_STD)
FNX320_EFIS_L_FD_Button_Press#(L:S_FCU_EFIS1_FD) ++ (>L:S_FCU_EFIS1_FD)
FNX320_EFIS_L_LS_Button_Press#(L:S_FCU_EFIS1_LS) ++ (>L:S_FCU_EFIS1_LS)
FNX320_EFIS_R_Baro_Knob_Pull#(L:S_FCU_EFIS2_BARO_STD) ++ (>L:S_FCU_EFIS2_BARO_STD)
FNX320_EFIS_R_Baro_Knob_Push#(L:S_FCU_EFIS2_BARO_STD) -- (>L:S_FCU_EFIS2_BARO_STD)
FNX320_EFIS_R_FD_Button_Press#(L:S_FCU_EFIS2_FD) ++ (>L:S_FCU_EFIS2_FD)
FNX320_EFIS_R_LS_Button_Press#(L:S_FCU_EFIS2_LS) ++ (>L:S_FCU_EFIS2_LS)
FNX320_EFIS_1_NAV_1_SWITCH_ADF#0 (>L:S_FCU_EFIS1_NAV1)
FNX320_EFIS_1_NAV_1_SWITCH_OFF#1 (>L:S_FCU_EFIS1_NAV1)
FNX320_EFIS_1_NAV_1_SWITCH_VOR#2 (>L:S_FCU_EFIS1_NAV1)
FNX320_EFIS_1_NAV_2_SWITCH_ADF#0 (>L:S_FCU_EFIS1_NAV2)
FNX320_EFIS_1_NAV_2_SWITCH_OFF#1 (>L:S_FCU_EFIS1_NAV2) 
FNX320_EFIS_1_NAV_2_SWITCH_VOR#2 (>L:S_FCU_EFIS1_NAV2)
FNX320_EFIS_2_NAV_1_SWITCH_ADF#0 (>L:S_FCU_EFIS2_NAV1)
FNX320_EFIS_2_NAV_1_SWITCH_OFF#1 (>L:S_FCU_EFIS2_NAV1)
FNX320_EFIS_2_NAV_1_SWITCH_VOR#2 (>L:S_FCU_EFIS2_NAV1)
FNX320_EFIS_2_NAV_2_SWITCH_ADF#0 (>L:S_FCU_EFIS2_NAV2)
FNX320_EFIS_2_NAV_2_SWITCH_OFF#1 (>L:S_FCU_EFIS2_NAV2) 
FNX320_EFIS_2_NAV_2_SWITCH_VOR#2 (>L:S_FCU_EFIS2_NAV2)
FNX320_EFIS_L_BARO_KNOB_DEC#(L:E_FCU_EFIS1_BARO) -- (>L:E_FCU_EFIS1_BARO)
FNX320_EFIS_L_BARO_KNOB_INC#(L:E_FCU_EFIS1_BARO) ++ (>L:E_FCU_EFIS1_BARO)
FNX320_EFIS_L_BARO_MODE_HPA#1 (>L:S_FCU_EFIS1_BARO_MODE) 
FNX320_EFIS_L_BARO_MODE_INHG#0 (>L:S_FCU_EFIS1_BARO_MODE) 
FNX320_EFIS_L_BARO_MODE_TOG#(L:S_FCU_EFIS1_BARO_MODE) 0 == if{ 1 } els{ 0 } (>L:S_FCU_EFIS1_BARO_MODE)
FNX320_EFIS_L_BARO_STD_OFF#0 (>L:S_FCU_EFIS1_BARO_STD)
FNX320_EFIS_L_BARO_STD_ON#1 (>L:S_FCU_EFIS1_BARO_STD)
FNX320_EFIS_L_BARO_STD_TOG#(L:S_FCU_EFIS1_BARO_STD) 0 == if{ 1 } els{ 0 } (>L:S_FCU_EFIS1_BARO_STD)
FNX320_EFIS_L_ND_MODE_ARC#3 (>L:S_FCU_EFIS1_ND_MODE)
FNX320_EFIS_L_ND_MODE_DEC#(L:S_FCU_EFIS1_ND_MODE) -- 0 max (>L:S_FCU_EFIS1_ND_MODE)
FNX320_EFIS_L_ND_MODE_INC#(L:S_FCU_EFIS1_ND_MODE) ++ 4 min (>L:S_FCU_EFIS1_ND_MODE)
FNX320_EFIS_L_ND_MODE_LS#0 (>L:S_FCU_EFIS1_ND_MODE)
FNX320_EFIS_L_ND_MODE_NAV#2 (>L:S_FCU_EFIS1_ND_MODE)
FNX320_EFIS_L_ND_MODE_PLAN#4 (>L:S_FCU_EFIS1_ND_MODE)
FNX320_EFIS_L_ND_MODE_VOR#1 (>L:S_FCU_EFIS1_ND_MODE)
FNX320_EFIS_L_ND_RANGE_10#0 (>L:S_FCU_EFIS1_ND_ZOOM)
FNX320_EFIS_L_ND_RANGE_160#4 (>L:S_FCU_EFIS1_ND_ZOOM)
FNX320_EFIS_L_ND_RANGE_20#1 (>L:S_FCU_EFIS1_ND_ZOOM)
FNX320_EFIS_L_ND_RANGE_320#5 (>L:S_FCU_EFIS1_ND_ZOOM)
FNX320_EFIS_L_ND_RANGE_40#2 (>L:S_FCU_EFIS1_ND_ZOOM)
FNX320_EFIS_L_ND_RANGE_80#3 (>L:S_FCU_EFIS1_ND_ZOOM)
FNX320_EFIS_L_ND_RANGE_DEC#(L:S_FCU_EFIS1_ND_ZOOM) -- 0 max (>L:S_FCU_EFIS1_ND_ZOOM)
FNX320_EFIS_L_ND_RANGE_INC#(L:S_FCU_EFIS1_ND_ZOOM) ++ 5 min (>L:S_FCU_EFIS1_ND_ZOOM)
FNX320_EFIS_R_BARO_KNOB_DEC#(L:E_FCU_EFIS2_BARO) -- (>L:E_FCU_EFIS2_BARO)
FNX320_EFIS_R_BARO_KNOB_INC#(L:E_FCU_EFIS2_BARO) ++ (>L:E_FCU_EFIS2_BARO)
FNX320_EFIS_R_BARO_MODE_HPA#1 (>L:S_FCU_EFIS2_BARO_MODE) 
FNX320_EFIS_R_BARO_MODE_INHG#0 (>L:S_FCU_EFIS2_BARO_MODE) 
FNX320_EFIS_R_BARO_MODE_TOG#(L:S_FCU_EFIS2_BARO_MODE) 0 == if{ 1 } els{ 0 } (>L:S_FCU_EFIS2_BARO_MODE) 
FNX320_EFIS_R_BARO_STD_OFF#0 (>L:S_FCU_EFIS2_BARO_STD) 
FNX320_EFIS_R_BARO_STD_ON#1 (>L:S_FCU_EFIS2_BARO_STD) 
FNX320_EFIS_R_BARO_STD_TOG#(L:S_FCU_EFIS2_BARO_STD) 0 == if{ 1 } els{ 0 } (>L:S_FCU_EFIS2_BARO_STD)
FNX320_EFIS_R_ND_MODE_ARC#3 (>L:S_FCU_EFIS2_ND_MODE) 
FNX320_EFIS_R_ND_MODE_DEC#(L:S_FCU_EFIS2_ND_MODE) -- 0 max (>L:S_FCU_EFIS2_ND_MODE) 
FNX320_EFIS_R_ND_MODE_INC#(L:S_FCU_EFIS2_ND_MODE) ++ 4 min (>L:S_FCU_EFIS2_ND_MODE) 
FNX320_EFIS_R_ND_MODE_LS#0 (>L:S_FCU_EFIS2_ND_MODE) 
FNX320_EFIS_R_ND_MODE_NAV#2 (>L:S_FCU_EFIS2_ND_MODE) 
FNX320_EFIS_R_ND_MODE_PLAN#4 (>L:S_FCU_EFIS2_ND_MODE) 
FNX320_EFIS_R_ND_MODE_VOR#1 (>L:S_FCU_EFIS2_ND_MODE) 
FNX320_EFIS_R_ND_RANGE_10#0 (>L:S_FCU_EFIS2_ND_ZOOM) 
FNX320_EFIS_R_ND_RANGE_160#4 (>L:S_FCU_EFIS2_ND_ZOOM) 
FNX320_EFIS_R_ND_RANGE_20#1 (>L:S_FCU_EFIS2_ND_ZOOM) 
FNX320_EFIS_R_ND_RANGE_320#5 (>L:S_FCU_EFIS2_ND_ZOOM) 
FNX320_EFIS_R_ND_RANGE_40#2 (>L:S_FCU_EFIS2_ND_ZOOM) 
FNX320_EFIS_R_ND_RANGE_80#3 (>L:S_FCU_EFIS2_ND_ZOOM) 
FNX320_EFIS_R_ND_RANGE_DEC#(L:S_FCU_EFIS2_ND_ZOOM) -- 0 max (>L:S_FCU_EFIS2_ND_ZOOM) 
FNX320_EFIS_R_ND_RANGE_INC#(L:S_FCU_EFIS2_ND_ZOOM) ++ 5 min (>L:S_FCU_EFIS2_ND_ZOOM) 
//FenixSim/A320/Electrical
FNX320_Breaker_A01_HP_FUEL_SOV_1#(L:CB_A01_HP_FUEL_SOV_1) ! (>L:CB_A01_HP_FUEL_SOV_1)
FNX320_Breaker_A02_HP_FUEL_SOV_2#(L:CB_A02_HP_FUEL_SOV_2) ! (>L:CB_A02_HP_FUEL_SOV_2)
FNX320_Breaker_A03_ENG12_IGN_SYSA#(L:CB_A03_ENG12_IGN_SYSA) ! (>L:CB_A03_ENG12_IGN_SYSA)
FNX320_Breaker_A04_ENG1_FADEC_A_EIU_1#(L:CB_A04_ENG1_FADEC_A_EIU_1) ! (>L:CB_A04_ENG1_FADEC_A_EIU_1)
FNX320_Breaker_A05_ENG2_FADEC_A_EIU_2#(L:CB_A05_ENG2_FADEC_A_EIU_2) ! (>L:CB_A05_ENG2_FADEC_A_EIU_2)
FNX320_Breaker_A06_ENG1_DET_LOOP_A#(L:CB_A06_ENG1_DET_LOOP_A) ! (>L:CB_A06_ENG1_DET_LOOP_A)
FNX320_Breaker_A07_ENG2_DET_LOOP_B#(L:CB_A07_ENG2_DET_LOOP_B) ! (>L:CB_A07_ENG2_DET_LOOP_B)
FNX320_Breaker_A08_LP_VALVE_MOT1_ENG1#(L:CB_A08_LP_VALVE_MOT1_ENG1) ! (>L:CB_A08_LP_VALVE_MOT1_ENG1)
FNX320_Breaker_A09_LP_VALVE_MOT1_ENG2#(L:CB_A09_LP_VALVE_MOT1_ENG2) ! (>L:CB_A09_LP_VALVE_MOT1_ENG2)
FNX320_Breaker_A10_XFR_VALVE_1_L#(L:CB_A10_XFR_VALVE_1_L) ! (>L:CB_A10_XFR_VALVE_1_L)
FNX320_Breaker_A11_XFR_VALVE_1_R#(L:CB_A11_XFR_VALVE_1_R) ! (>L:CB_A11_XFR_VALVE_1_R)
FNX320_Breaker_A12_XFEED_VALVE_MOT1#(L:CB_A12_XFEED_VALVE_MOT1) ! (>L:CB_A12_XFEED_VALVE_MOT1)
FNX320_Breaker_A13_FQI_CHAN_1#(L:CB_A13_FQI_CHAN_1) ! (>L:CB_A13_FQI_CHAN_1)
FNX320_Breaker_A14_SMOKE_CONFIG_PUMP_CTL#(L:CB_A14_SMOKE_CONFIG_PUMP_CTL) ! (>L:CB_A14_SMOKE_CONFIG_PUMP_CTL)
FNX320_Breaker_AB01_BUS_2_231XP_SPLY#(L:CB_AB01_BUS_2_231XP_SPLY) ! (>L:CB_AB01_BUS_2_231XP_SPLY)
FNX320_Breaker_AB09_B_HYD_ELEC_PUMP#(L:CB_AB09_B_HYD_ELEC_PUMP) ! (>L:CB_AB09_B_HYD_ELEC_PUMP)
FNX320_Breaker_AB12_BUS_1_131XP_SPLY#(L:CB_AB12_BUS_1_131XP_SPLY) ! (>L:CB_AB12_BUS_1_131XP_SPLY)
FNX320_Breaker_B01_MCDU_1#(L:CB_B01_MCDU_1) ! (>L:CB_B01_MCDU_1)
FNX320_Breaker_B02_FMGC1#(L:CB_B02_FMGC1) ! (>L:CB_B02_FMGC1)
FNX320_Breaker_B03_FAC_1_NORM#(L:CB_B03_FAC_1_NORM) ! (>L:CB_B03_FAC_1_NORM)
FNX320_Breaker_B04_FAC_1_STBY#(L:CB_B04_FAC_1_STBY) ! (>L:CB_B04_FAC_1_STBY)
FNX320_Breaker_B05_FCU1#(L:CB_B05_FCU1) ! (>L:CB_B05_FCU1)
FNX320_Breaker_B06_SLAT_CTL_MON_SYS_1#(L:CB_B06_SLAT_CTL_MON_SYS_1) ! (>L:CB_B06_SLAT_CTL_MON_SYS_1)
FNX320_Breaker_B07_FLAP_CTL_MON_SYS_1#(L:CB_B07_FLAP_CTL_MON_SYS_1) ! (>L:CB_B07_FLAP_CTL_MON_SYS_1)
FNX320_Breaker_B08_SEC_1_NORM#(L:CB_B08_SEC_1_NORM) ! (>L:CB_B08_SEC_1_NORM)
FNX320_Breaker_B09_FC_THS_MOT2#(L:CB_B09_FC_THS_MOT2) ! (>L:CB_B09_FC_THS_MOT2)
FNX320_Breaker_B10_FCTL_FCDC1_SPLY#(L:CB_B10_FCTL_FCDC1_SPLY) ! (>L:CB_B10_FCTL_FCDC1_SPLY)
FNX320_Breaker_B11_ELAC_1_NORM#(L:CB_B11_ELAC_1_NORM) ! (>L:CB_B11_ELAC_1_NORM)
FNX320_Breaker_B12_SLT_FLP_1_POS_IND#(L:CB_B12_SLT_FLP_1_POS_IND) ! (>L:CB_B12_SLT_FLP_1_POS_IND)
FNX320_Breaker_B14_APU_FUEL_BLOWOFF_PUMP#(L:CB_B14_APU_FUEL_BLOWOFF_PUMP) ! (>L:CB_B14_APU_FUEL_BLOWOFF_PUMP)
FNX320_Breaker_C01_WING_ANTI_ICE_MON#(L:CB_C01_WING_ANTI_ICE_MON) ! (>L:CB_C01_WING_ANTI_ICE_MON)
FNX320_Breaker_C02_WING_ANTI_ICE_CTL#(L:CB_C02_WING_ANTI_ICE_CTL) ! (>L:CB_C02_WING_ANTI_ICE_CTL)
FNX320_Breaker_C07_AFT_CARGO_VENT_CTL_MON#(L:CB_C07_AFT_CARGO_VENT_CTL_MON) ! (>L:CB_C07_AFT_CARGO_VENT_CTL_MON)
FNX320_Breaker_C09_LGCIU_1#(L:CB_C09_LGCIU_1) ! (>L:CB_C09_LGCIU_1)
FNX320_Breaker_C10_ABCU_SPLY#(L:CB_C10_ABCU_SPLY) ! (>L:CB_C10_ABCU_SPLY)
FNX320_Breaker_C11_HYD_RESS_XMTR#(L:CB_C11_HYD_RESS_XMTR) ! (>L:CB_C11_HYD_RESS_XMTR)
FNX320_Breaker_C12_HYD_POWER_B_WARN_CTL#(L:CB_C12_HYD_POWER_B_WARN_CTL) ! (>L:CB_C12_HYD_POWER_B_WARN_CTL)
FNX320_Breaker_C13_FIRE_VALVE_G_ENG_1#(L:CB_C13_FIRE_VALVE_G_ENG_1) ! (>L:CB_C13_FIRE_VALVE_G_ENG_1)
FNX320_Breaker_C14_FIRE_VALVE_Y_ENG_2#(L:CB_C14_FIRE_VALVE_Y_ENG_2) ! (>L:CB_C14_FIRE_VALVE_Y_ENG_2)
FNX320_Breaker_D02_PROBES_1_PITOT#(L:CB_D02_PROBES_1_PITOT) ! (>L:CB_D02_PROBES_1_PITOT)
FNX320_Breaker_D03_PROBES_1_PHC_SUPPLY#(L:CB_D03_PROBES_1_PHC_SUPPLY) ! (>L:CB_D03_PROBES_1_PHC_SUPPLY)
FNX320_Breaker_D04_PROBES_1_AOA#(L:CB_D04_PROBES_1_AOA) ! (>L:CB_D04_PROBES_1_AOA)
FNX320_Breaker_D05_AVNCS_VENT_CTL_DC#(L:CB_D05_AVNCS_VENT_CTL_DC) ! (>L:CB_D05_AVNCS_VENT_CTL_DC)
FNX320_Breaker_D06_AVNCS_VENT_CTL_ESS#(L:CB_D06_AVNCS_VENT_CTL_ESS) ! (>L:CB_D06_AVNCS_VENT_CTL_ESS)
FNX320_Breaker_D08_TEMP_CTL_SYS1_CHANB#(L:CB_D08_TEMP_CTL_SYS1_CHANB) ! (>L:CB_D08_TEMP_CTL_SYS1_CHANB)
FNX320_Breaker_D09_CAB_PRESS_CTL_1#(L:CB_D09_CAB_PRESS_CTL_1) ! (>L:CB_D09_CAB_PRESS_CTL_1)
FNX320_Breaker_D10_RAM_AIR_INLET#(L:CB_D10_RAM_AIR_INLET) ! (>L:CB_D10_RAM_AIR_INLET)
FNX320_Breaker_D11_AIRBLEED_ENG1_MONG#(L:CB_D11_AIRBLEED_ENG1_MONG) ! (>L:CB_D11_AIRBLEED_ENG1_MONG)
FNX320_Breaker_D12_AIRBLEED_ENG1_CTL#(L:CB_D12_AIRBLEED_ENG1_CTL) ! (>L:CB_D12_AIRBLEED_ENG1_CTL)
FNX320_Breaker_D13_X_FEED_VALVE_BAT#(L:CB_D13_X_FEED_VALVE_BAT) ! (>L:CB_D13_X_FEED_VALVE_BAT)
FNX320_Breaker_E01_CAPT_ND#(L:CB_E01_CAPT_ND) ! (>L:CB_E01_CAPT_ND)
FNX320_Breaker_E02_DU_ND_CAPT_SWTG#(L:CB_E02_DU_ND_CAPT_SWTG) ! (>L:CB_E02_DU_ND_CAPT_SWTG)
FNX320_Breaker_E03_CAPT_PFD#(L:CB_E03_CAPT_PFD) ! (>L:CB_E03_CAPT_PFD)
FNX320_Breaker_E04_DU_PFD_CAPT_SWTG#(L:CB_E04_DU_PFD_CAPT_SWTG) ! (>L:CB_E04_DU_PFD_CAPT_SWTG)
FNX320_Breaker_E05_UPPER_ECAM#(L:CB_E05_UPPER_ECAM) ! (>L:CB_E05_UPPER_ECAM)
FNX320_Breaker_E06_DU_ECAM_UPPER_SWTG#(L:CB_E06_DU_ECAM_UPPER_SWTG) ! (>L:CB_E06_DU_ECAM_UPPER_SWTG)
FNX320_Breaker_E07_DMC3_SWTG#(L:CB_E07_DMC3_SWTG) ! (>L:CB_E07_DMC3_SWTG)
FNX320_Breaker_E09_DMC1_SWTG#(L:CB_E09_DMC1_SWTG) ! (>L:CB_E09_DMC1_SWTG)
FNX320_Breaker_E10_DMC3_STDBY_SPLY#(L:CB_E10_DMC3_STDBY_SPLY) ! (>L:CB_E10_DMC3_STDBY_SPLY)
FNX320_Breaker_E11_DMC1_SPLY#(L:CB_E11_DMC1_SPLY) ! (>L:CB_E11_DMC1_SPLY)
FNX320_Breaker_E12_ECAM_CTL_PNL#(L:CB_E12_ECAM_CTL_PNL) ! (>L:CB_E12_ECAM_CTL_PNL)
FNX320_Breaker_E13_CVR_CTL#(L:CB_E13_CVR_CTL) ! (>L:CB_E13_CVR_CTL)
FNX320_Breaker_E14_CVR_DC_SPLY#(L:CB_E14_CVR_DC_SPLY) ! (>L:CB_E14_CVR_DC_SPLY)
FNX320_Breaker_F01_FWC_1_SUPPLY#(L:CB_F01_FWC_1_SUPPLY) ! (>L:CB_F01_FWC_1_SUPPLY)
FNX320_Breaker_F02_SDAC1_AC_ESS_REF#(L:CB_F02_SDAC1_AC_ESS_REF) ! (>L:CB_F02_SDAC1_AC_ESS_REF)
FNX320_Breaker_F03_SDAC2_AC_ESS_REF#(L:CB_F03_SDAC2_AC_ESS_REF) ! (>L:CB_F03_SDAC2_AC_ESS_REF)
FNX320_Breaker_F04_SDAC_1_SUPPLY#(L:CB_F04_SDAC_1_SUPPLY) ! (>L:CB_F04_SDAC_1_SUPPLY)
FNX320_Breaker_F06_ADIRU_1_115#(L:CB_F06_ADIRU_1_115) ! (>L:CB_F06_ADIRU_1_115)
FNX320_Breaker_F11_CLOCK_NORM_SPLY#(L:CB_F11_CLOCK_NORM_SPLY) ! (>L:CB_F11_CLOCK_NORM_SPLY)
FNX320_Breaker_G01_CIDS_DIR_ESS_1#(L:CB_G01_CIDS_DIR_ESS_1) ! (>L:CB_G01_CIDS_DIR_ESS_1)
FNX320_Breaker_G06_ACP_CAPT#(L:CB_G06_ACP_CAPT) ! (>L:CB_G06_ACP_CAPT)
FNX320_Breaker_G07_ACP_FO#(L:CB_G07_ACP_FO) ! (>L:CB_G07_ACP_FO)
FNX320_Breaker_G09_COM_VHF1#(L:CB_G09_COM_VHF1) ! (>L:CB_G09_COM_VHF1)
FNX320_Breaker_G10_COM_RMP1#(L:CB_G10_COM_RMP1) ! (>L:CB_G10_COM_RMP1)
FNX320_Breaker_G11_NAV_ATC1#(L:CB_G11_NAV_ATC1) ! (>L:CB_G11_NAV_ATC1)
FNX320_Breaker_G12_NAV_ILS1#(L:CB_G12_NAV_ILS1) ! (>L:CB_G12_NAV_ILS1)
FNX320_Breaker_G13_NAV_VOR1#(L:CB_G13_NAV_VOR1) ! (>L:CB_G13_NAV_VOR1)
FNX320_Breaker_G14_NAV_DME1#(L:CB_G14_NAV_DME1) ! (>L:CB_G14_NAV_DME1)
FNX320_Breaker_H01_COM_FWD_ATT#(L:CB_H01_COM_FWD_ATT) ! (>L:CB_H01_COM_FWD_ATT)
FNX320_Breaker_H04_ICE_STBY_COMPASS_LT#(L:CB_H04_ICE_STBY_COMPASS_LT) ! (>L:CB_H04_ICE_STBY_COMPASS_LT)
FNX320_Breaker_H08_CKPT_DOME#(L:CB_H08_CKPT_DOME) ! (>L:CB_H08_CKPT_DOME)
FNX320_Breaker_H10_LT_CTL#(L:CB_H10_LT_CTL) ! (>L:CB_H10_LT_CTL)
FNX320_Breaker_H11_AC_BUS_8XP_MONG#(L:CB_H11_AC_BUS_8XP_MONG) ! (>L:CB_H11_AC_BUS_8XP_MONG)
FNX320_Breaker_H11_CIDS_L_AFT#(L:CB_H11_CIDS_L_AFT) ! (>L:CB_H11_CIDS_L_AFT)
FNX320_Breaker_H14_NAV_ADF1#(L:CB_H14_NAV_ADF1) ! (>L:CB_H14_NAV_ADF1)
FNX320_Breaker_HA1_CREW_OXY_SPLY#(L:CB_HA1_CREW_OXY_SPLY) ! (>L:CB_HA1_CREW_OXY_SPLY)
FNX320_Breaker_HA10_CIDS_R_FWD#(L:CB_HA10_CIDS_R_FWD) ! (>L:CB_HA10_CIDS_R_FWD)
FNX320_Breaker_HA12_CIDS_R_AFT#(L:CB_HA12_CIDS_R_AFT) ! (>L:CB_HA12_CIDS_R_AFT)
FNX320_Breaker_HA14_COM_HF1#(L:CB_HA14_COM_HF1) ! (>L:CB_HA14_COM_HF1)
FNX320_Breaker_HA2_PASS_OXY_CTL_1#(L:CB_HA2_PASS_OXY_CTL_1) ! (>L:CB_HA2_PASS_OXY_CTL_1)
FNX320_Breaker_HA3_PASS_OXY_CTL_2#(L:CB_HA3_PASS_OXY_CTL_2) ! (>L:CB_HA3_PASS_OXY_CTL_2)
FNX320_Breaker_HA4_PASS_OXY_CTL_3#(L:CB_HA4_PASS_OXY_CTL_3) ! (>L:CB_HA4_PASS_OXY_CTL_3)
FNX320_Breaker_HA5_PASS_OXY_ACT_1#(L:CB_HA5_PASS_OXY_ACT_1) ! (>L:CB_HA5_PASS_OXY_ACT_1)
FNX320_Breaker_HA6_PASS_OXY_ACT_2#(L:CB_HA6_PASS_OXY_ACT_2) ! (>L:CB_HA6_PASS_OXY_ACT_2)
FNX320_Breaker_HA7_PASS_OXY_ACT_3#(L:CB_HA7_PASS_OXY_ACT_3) ! (>L:CB_HA7_PASS_OXY_ACT_3)
FNX320_Breaker_HA8_PASS_OXY_ACT_4#(L:CB_HA8_PASS_OXY_ACT_4) ! (>L:CB_HA8_PASS_OXY_ACT_4)
FNX320_Breaker_HA9_CIDS_L_FWD#(L:CB_HA9_CIDS_L_FWD) ! (>L:CB_HA9_CIDS_L_FWD)
FNX320_Breaker_J18_CFDIU#(L:CB_J18_CFDIU) ! (>L:CB_J18_CFDIU)
FNX320_Breaker_K02_NAV_ADF2#(L:CB_K02_NAV_ADF2) ! (>L:CB_K02_NAV_ADF2)
FNX320_Breaker_K06_NAV_DME2#(L:CB_K06_NAV_DME2) ! (>L:CB_K06_NAV_DME2)
FNX320_Breaker_K07_NAV_ATC2#(L:CB_K07_NAV_ATC2) ! (>L:CB_K07_NAV_ATC2)
FNX320_Breaker_K08_NAV_VOR2#(L:CB_K08_NAV_VOR2) ! (>L:CB_K08_NAV_VOR2)
FNX320_Breaker_K11_RADIO_ALT_1#(L:CB_K11_RADIO_ALT_1) ! (>L:CB_K11_RADIO_ALT_1)
FNX320_Breaker_K12_RADIO_ALT_2#(L:CB_K12_RADIO_ALT_2) ! (>L:CB_K12_RADIO_ALT_2)
FNX320_Breaker_K19_PDL_PWR_SPLY#(L:CB_K19_PDL_PWR_SPLY) ! (>L:CB_K19_PDL_PWR_SPLY)
FNX320_Breaker_K23_#(L:CB_K23_) ! (>L:CB_K23_)
FNX320_Breaker_K25_STAT_INV#(L:CB_K25_STAT_INV) ! (>L:CB_K25_STAT_INV)
FNX320_Breaker_K39_APU_FUEL_BLOWOFF_CTL#(L:CB_K39_APU_FUEL_BLOWOFF_CTL) ! (>L:CB_K39_APU_FUEL_BLOWOFF_CTL)
FNX320_Breaker_L02_COM_RMP2#(L:CB_L02_COM_RMP2) ! (>L:CB_L02_COM_RMP2)
FNX320_Breaker_L03_COM_RMP3#(L:CB_L03_COM_RMP3) ! (>L:CB_L03_COM_RMP3)
FNX320_Breaker_L04_COM_VHF2#(L:CB_L04_COM_VHF2) ! (>L:CB_L04_COM_VHF2)
FNX320_Breaker_L05_COM_VHF3#(L:CB_L05_COM_VHF3) ! (>L:CB_L05_COM_VHF3)
FNX320_Breaker_L13_COM_HF1#(L:CB_L13_COM_HF1) ! (>L:CB_L13_COM_HF1)
FNX320_Breaker_L15_ATSU#(L:CB_L15_ATSU) ! (>L:CB_L15_ATSU)
FNX320_Breaker_L16_ATSU#(L:CB_L16_ATSU) ! (>L:CB_L16_ATSU)
FNX320_Breaker_L17_DCDU1#(L:CB_L17_DCDU1) ! (>L:CB_L17_DCDU1)
FNX320_Breaker_L18_DCDU2#(L:CB_L18_DCDU2) ! (>L:CB_L18_DCDU2)
FNX320_Breaker_L32_BRK_FAN12#(L:CB_L32_BRK_FAN12) ! (>L:CB_L32_BRK_FAN12)
FNX320_Breaker_L35_BRK_FAN34#(L:CB_L35_BRK_FAN34) ! (>L:CB_L35_BRK_FAN34)
FNX320_Breaker_L38_FIRE_EXTNG_APU_A#(L:CB_L38_FIRE_EXTNG_APU_A) ! (>L:CB_L38_FIRE_EXTNG_APU_A)
FNX320_Breaker_L39_FIRE_EXTNG_APU_B#(L:CB_L39_FIRE_EXTNG_APU_B) ! (>L:CB_L39_FIRE_EXTNG_APU_B)
FNX320_Breaker_L40_APU_AUTO_EXT_GND_TEST#(L:CB_L40_APU_AUTO_EXT_GND_TEST) ! (>L:CB_L40_APU_AUTO_EXT_GND_TEST)
FNX320_Breaker_L41_ECP_SUPPLY#(L:CB_L41_ECP_SUPPLY) ! (>L:CB_L41_ECP_SUPPLY)
FNX320_Breaker_L42_APU_CTL#(L:CB_L42_APU_CTL) ! (>L:CB_L42_APU_CTL)
FNX320_Breaker_L43_FIRE_DET_APU_LOOP_A#(L:CB_L43_FIRE_DET_APU_LOOP_A) ! (>L:CB_L43_FIRE_DET_APU_LOOP_A)
FNX320_Breaker_L44_FIRE_DET_APU_LOOP_B#(L:CB_L44_FIRE_DET_APU_LOOP_B) ! (>L:CB_L44_FIRE_DET_APU_LOOP_B)
FNX320_Breaker_M02_ACP_3D#(L:CB_M02_ACP_3D) ! (>L:CB_M02_ACP_3D)
FNX320_Breaker_M17_FMGC2#(L:CB_M17_FMGC2) ! (>L:CB_M17_FMGC2)
FNX320_Breaker_M18_FAC_2_NORM#(L:CB_M18_FAC_2_NORM) ! (>L:CB_M18_FAC_2_NORM)
FNX320_Breaker_M19_FAC_2_STBY#(L:CB_M19_FAC_2_STBY) ! (>L:CB_M19_FAC_2_STBY)
FNX320_Breaker_M20_RUDDER_TRIM_IND#(L:CB_M20_RUDDER_TRIM_IND) ! (>L:CB_M20_RUDDER_TRIM_IND)
FNX320_Breaker_M21_FCU2#(L:CB_M21_FCU2) ! (>L:CB_M21_FCU2)
FNX320_Breaker_M22_XFR_VALVE_2_L#(L:CB_M22_XFR_VALVE_2_L) ! (>L:CB_M22_XFR_VALVE_2_L)
FNX320_Breaker_M23_XFR_VALVE_2_R#(L:CB_M23_XFR_VALVE_2_R) ! (>L:CB_M23_XFR_VALVE_2_R)
FNX320_Breaker_M24_XFEED_VALVE_MOT2#(L:CB_M24_XFEED_VALVE_MOT2) ! (>L:CB_M24_XFEED_VALVE_MOT2)
FNX320_Breaker_M25_LP_VALVE_MOT2_ENG1#(L:CB_M25_LP_VALVE_MOT2_ENG1) ! (>L:CB_M25_LP_VALVE_MOT2_ENG1)
FNX320_Breaker_M26_LP_VALVE_MOT2_ENG2#(L:CB_M26_LP_VALVE_MOT2_ENG2) ! (>L:CB_M26_LP_VALVE_MOT2_ENG2)
FNX320_Breaker_M27_FQI_CHAN_2#(L:CB_M27_FQI_CHAN_2) ! (>L:CB_M27_FQI_CHAN_2)
FNX320_Breaker_M32_BRK_FAN_CTL#(L:CB_M32_BRK_FAN_CTL) ! (>L:CB_M32_BRK_FAN_CTL)
FNX320_Breaker_M33_BSCU_1_SPLY#(L:CB_M33_BSCU_1_SPLY) ! (>L:CB_M33_BSCU_1_SPLY)
FNX320_Breaker_M34_BSCU_1_CTL#(L:CB_M34_BSCU_1_CTL) ! (>L:CB_M34_BSCU_1_CTL)
FNX320_Breaker_M35_BSCU_2_SPLY#(L:CB_M35_BSCU_2_SPLY) ! (>L:CB_M35_BSCU_2_SPLY)
FNX320_Breaker_M36_BSCU_2_CTL#(L:CB_M36_BSCU_2_CTL) ! (>L:CB_M36_BSCU_2_CTL)
FNX320_Breaker_M38_APU_FUEL_PUMP_CTL#(L:CB_M38_APU_FUEL_PUMP_CTL) ! (>L:CB_M38_APU_FUEL_PUMP_CTL)
FNX320_Breaker_M39_APU_LP_VALVE_SPLY#(L:CB_M39_APU_LP_VALVE_SPLY) ! (>L:CB_M39_APU_LP_VALVE_SPLY)
FNX320_Breaker_M40_APU_LP_VALVE_CTL#(L:CB_M40_APU_LP_VALVE_CTL) ! (>L:CB_M40_APU_LP_VALVE_CTL)
FNX320_Breaker_M41_APU_FIRE_STBY#(L:CB_M41_APU_FIRE_STBY) ! (>L:CB_M41_APU_FIRE_STBY)
FNX320_Breaker_M42_APU_FIRE_NORM#(L:CB_M42_APU_FIRE_NORM) ! (>L:CB_M42_APU_FIRE_NORM)
FNX320_Breaker_N03_CLOCK_STBY_SPLY#(L:CB_N03_CLOCK_STBY_SPLY) ! (>L:CB_N03_CLOCK_STBY_SPLY)
FNX320_Breaker_N04_ADIRS_3_28#(L:CB_N04_ADIRS_3_28) ! (>L:CB_N04_ADIRS_3_28)
FNX320_Breaker_N05_ADIRS_2_28#(L:CB_N05_ADIRS_2_28) ! (>L:CB_N05_ADIRS_2_28)
FNX320_Breaker_N06_ADIRU_3_115#(L:CB_N06_ADIRU_3_115) ! (>L:CB_N06_ADIRU_3_115)
FNX320_Breaker_N07_ADIRU_2_115#(L:CB_N07_ADIRU_2_115) ! (>L:CB_N07_ADIRU_2_115)
FNX320_Breaker_N10_2PWR_SHED#(L:CB_N10_2PWR_SHED) ! (>L:CB_N10_2PWR_SHED)
FNX320_Breaker_N16_STICK_LOCK#(L:CB_N16_STICK_LOCK) ! (>L:CB_N16_STICK_LOCK)
FNX320_Breaker_N20_MCDU_2#(L:CB_N20_MCDU_2) ! (>L:CB_N20_MCDU_2)
FNX320_Breaker_N23_L_PUMP1_SPLY#(L:CB_N23_L_PUMP1_SPLY) ! (>L:CB_N23_L_PUMP1_SPLY)
FNX320_Breaker_N26_L_PUMP2_SPLY#(L:CB_N26_L_PUMP2_SPLY) ! (>L:CB_N26_L_PUMP2_SPLY)
FNX320_Breaker_N28_IGGS_CTLR#(L:CB_N28_IGGS_CTLR) ! (>L:CB_N28_IGGS_CTLR)
FNX320_Breaker_N30_HYD_POWER_Y#(L:CB_N30_HYD_POWER_Y) ! (>L:CB_N30_HYD_POWER_Y)
FNX320_Breaker_N34_PTU_CTL#(L:CB_N34_PTU_CTL) ! (>L:CB_N34_PTU_CTL)
FNX320_Breaker_N35_GYB_LEAK_TEST#(L:CB_N35_GYB_LEAK_TEST) ! (>L:CB_N35_GYB_LEAK_TEST)
FNX320_Breaker_N36_PARKING_BRAKE_CTL_NORM#(L:CB_N36_PARKING_BRAKE_CTL_NORM) ! (>L:CB_N36_PARKING_BRAKE_CTL_NORM)
FNX320_Breaker_N37_PARKING_BRAKE_CTL_STBY#(L:CB_N37_PARKING_BRAKE_CTL_STBY) ! (>L:CB_N37_PARKING_BRAKE_CTL_STBY)
FNX320_Breaker_N44_ENG1_REV_LOCK#(L:CB_N44_ENG1_REV_LOCK) ! (>L:CB_N44_ENG1_REV_LOCK)
FNX320_Breaker_N45_ENG2_REV_LOCK#(L:CB_N45_ENG2_REV_LOCK) ! (>L:CB_N45_ENG2_REV_LOCK)
FNX320_Breaker_P06_GPWS_28#(L:CB_P06_GPWS_28) ! (>L:CB_P06_GPWS_28)
FNX320_Breaker_P07_GPWS_115#(L:CB_P07_GPWS_115) ! (>L:CB_P07_GPWS_115)
FNX320_Breaker_P09_HORN_SUPPLY#(L:CB_P09_HORN_SUPPLY) ! (>L:CB_P09_HORN_SUPPLY)
FNX320_Breaker_P16_SLT_FLP_2_POS_IND#(L:CB_P16_SLT_FLP_2_POS_IND) ! (>L:CB_P16_SLT_FLP_2_POS_IND)
FNX320_Breaker_P19_WTB_SLT_2#(L:CB_P19_WTB_SLT_2) ! (>L:CB_P19_WTB_SLT_2)
FNX320_Breaker_P20_WTB_FLP_2#(L:CB_P20_WTB_FLP_2) ! (>L:CB_P20_WTB_FLP_2)
FNX320_Breaker_P29_ACT_XFR_VLV_AUTO_CTL#(L:CB_P29_ACT_XFR_VLV_AUTO_CTL) ! (>L:CB_P29_ACT_XFR_VLV_AUTO_CTL)
FNX320_Breaker_P30_ABCU_HOT_BUS_SPLY#(L:CB_P30_ABCU_HOT_BUS_SPLY) ! (>L:CB_P30_ABCU_HOT_BUS_SPLY)
FNX320_Breaker_P33_RAT_SPLY_EXTN_SOL1#(L:CB_P33_RAT_SPLY_EXTN_SOL1) ! (>L:CB_P33_RAT_SPLY_EXTN_SOL1)
FNX320_Breaker_P39_IGN_ENG1_SYSA#(L:CB_P39_IGN_ENG1_SYSA) ! (>L:CB_P39_IGN_ENG1_SYSA)
FNX320_Breaker_P40_IGN_ENG2_SYSA#(L:CB_P40_IGN_ENG2_SYSA) ! (>L:CB_P40_IGN_ENG2_SYSA)
FNX320_Breaker_P41_IGN_ENG1_SYSB#(L:CB_P41_IGN_ENG1_SYSB) ! (>L:CB_P41_IGN_ENG1_SYSB)
FNX320_Breaker_P42_IGN_ENG2_SYSB#(L:CB_P42_IGN_ENG2_SYSB) ! (>L:CB_P42_IGN_ENG2_SYSB)
FNX320_Breaker_Q02_SDAC2_AC_REF_2#(L:CB_Q02_SDAC2_AC_REF_2) ! (>L:CB_Q02_SDAC2_AC_REF_2)
FNX320_Breaker_Q03_SDAC1_AC_REF_2#(L:CB_Q03_SDAC1_AC_REF_2) ! (>L:CB_Q03_SDAC1_AC_REF_2)
FNX320_Breaker_Q05_SDAC2_AC_REF_1#(L:CB_Q05_SDAC2_AC_REF_1) ! (>L:CB_Q05_SDAC2_AC_REF_1)
FNX320_Breaker_Q06_SDAC_2_SUPPLY#(L:CB_Q06_SDAC_2_SUPPLY) ! (>L:CB_Q06_SDAC_2_SUPPLY)
FNX320_Breaker_Q07_FWC_2_SUPPLY#(L:CB_Q07_FWC_2_SUPPLY) ! (>L:CB_Q07_FWC_2_SUPPLY)
FNX320_Breaker_Q08_DMC2_SPLY#(L:CB_Q08_DMC2_SPLY) ! (>L:CB_Q08_DMC2_SPLY)
FNX320_Breaker_Q09_DMC3_SPLY#(L:CB_Q09_DMC3_SPLY) ! (>L:CB_Q09_DMC3_SPLY)
FNX320_Breaker_Q16_FC_THS_MOT1#(L:CB_Q16_FC_THS_MOT1) ! (>L:CB_Q16_FC_THS_MOT1)
FNX320_Breaker_Q17_FC_THS_MOT3#(L:CB_Q17_FC_THS_MOT3) ! (>L:CB_Q17_FC_THS_MOT3)
FNX320_Breaker_Q18_SEC_2#(L:CB_Q18_SEC_2) ! (>L:CB_Q18_SEC_2)
FNX320_Breaker_Q19_SEC_3#(L:CB_Q19_SEC_3) ! (>L:CB_Q19_SEC_3)
FNX320_Breaker_Q20_FCTL_FCDC1_SPLY#(L:CB_Q20_FCTL_FCDC1_SPLY) ! (>L:CB_Q20_FCTL_FCDC1_SPLY)
FNX320_Breaker_Q21_FLAP_CTL_MON_SYS_2#(L:CB_Q21_FLAP_CTL_MON_SYS_2) ! (>L:CB_Q21_FLAP_CTL_MON_SYS_2)
FNX320_Breaker_Q23_R_PUMP1_SPLY#(L:CB_Q23_R_PUMP1_SPLY) ! (>L:CB_Q23_R_PUMP1_SPLY)
FNX320_Breaker_Q26_R_PUMP2_SPLY#(L:CB_Q26_R_PUMP2_SPLY) ! (>L:CB_Q26_R_PUMP2_SPLY)
FNX320_Breaker_Q34_LGCIU_1_GND#(L:CB_Q34_LGCIU_1_GND) ! (>L:CB_Q34_LGCIU_1_GND)
FNX320_Breaker_Q35_LGCIU_2#(L:CB_Q35_LGCIU_2) ! (>L:CB_Q35_LGCIU_2)
FNX320_Breaker_Q38_ENG1_DET_LOOP_B#(L:CB_Q38_ENG1_DET_LOOP_B) ! (>L:CB_Q38_ENG1_DET_LOOP_B)
FNX320_Breaker_Q39_ENG2_DET_LOOP_A#(L:CB_Q39_ENG2_DET_LOOP_A) ! (>L:CB_Q39_ENG2_DET_LOOP_A)
FNX320_Breaker_Q40_ENG2_FADEC_B_EIU_2#(L:CB_Q40_ENG2_FADEC_B_EIU_2) ! (>L:CB_Q40_ENG2_FADEC_B_EIU_2)
FNX320_Breaker_Q41_FIRE_EXTNG_2A#(L:CB_Q41_FIRE_EXTNG_2A) ! (>L:CB_Q41_FIRE_EXTNG_2A)
FNX320_Breaker_Q42_FIRE_EXTNG_2B#(L:CB_Q42_FIRE_EXTNG_2B) ! (>L:CB_Q42_FIRE_EXTNG_2B)
FNX320_Breaker_Q43_FIRE_EXTNG_1A#(L:CB_Q43_FIRE_EXTNG_1A) ! (>L:CB_Q43_FIRE_EXTNG_1A)
FNX320_Breaker_Q44_FIRE_EXTNG_1B#(L:CB_Q44_FIRE_EXTNG_1B) ! (>L:CB_Q44_FIRE_EXTNG_1B)
FNX320_Breaker_R03_FO_PFD#(L:CB_R03_FO_PFD) ! (>L:CB_R03_FO_PFD)
FNX320_Breaker_R04_FO_ND#(L:CB_R04_FO_ND) ! (>L:CB_R04_FO_ND)
FNX320_Breaker_R05_DU_PFD_FO_SWTG#(L:CB_R05_DU_PFD_FO_SWTG) ! (>L:CB_R05_DU_PFD_FO_SWTG)
FNX320_Breaker_R06_DU_ND_FO_SWTG#(L:CB_R06_DU_ND_FO_SWTG) ! (>L:CB_R06_DU_ND_FO_SWTG)
FNX320_Breaker_R08_DMC2_SWTG#(L:CB_R08_DMC2_SWTG) ! (>L:CB_R08_DMC2_SWTG)
FNX320_Breaker_R10_DU_ECAM_LOWER_SWTG#(L:CB_R10_DU_ECAM_LOWER_SWTG) ! (>L:CB_R10_DU_ECAM_LOWER_SWTG)
FNX320_Breaker_R11_LOWER_ECAM#(L:CB_R11_LOWER_ECAM) ! (>L:CB_R11_LOWER_ECAM)
FNX320_Breaker_R14_ELT_NAV_AC_IDENT#(L:CB_R14_ELT_NAV_AC_IDENT) ! (>L:CB_R14_ELT_NAV_AC_IDENT)
FNX320_Breaker_R16_RUDDER_FTU#(L:CB_R16_RUDDER_FTU) ! (>L:CB_R16_RUDDER_FTU)
FNX320_Breaker_R20_ELAC_2_NORM#(L:CB_R20_ELAC_2_NORM) ! (>L:CB_R20_ELAC_2_NORM)
FNX320_Breaker_R21_SLAT_CTL_MON_SYS_2#(L:CB_R21_SLAT_CTL_MON_SYS_2) ! (>L:CB_R21_SLAT_CTL_MON_SYS_2)
FNX320_Breaker_R23_L_PUMP1_CTL#(L:CB_R23_L_PUMP1_CTL) ! (>L:CB_R23_L_PUMP1_CTL)
FNX320_Breaker_R24_L_PUMP2_CTL#(L:CB_R24_L_PUMP2_CTL) ! (>L:CB_R24_L_PUMP2_CTL)
FNX320_Breaker_R25_CTR_PUMP1_CTL#(L:CB_R25_CTR_PUMP1_CTL) ! (>L:CB_R25_CTR_PUMP1_CTL)
FNX320_Breaker_R26_CTR_PUMP2_CTL#(L:CB_R26_CTR_PUMP2_CTL) ! (>L:CB_R26_CTR_PUMP2_CTL)
FNX320_Breaker_R27_CTR_AUTO_CTL#(L:CB_R27_CTR_AUTO_CTL) ! (>L:CB_R27_CTR_AUTO_CTL)
FNX320_Breaker_R28_R_PUMP1_CTL#(L:CB_R28_R_PUMP1_CTL) ! (>L:CB_R28_R_PUMP1_CTL)
FNX320_Breaker_R29_L_PUMP2_CTL#(L:CB_R29_L_PUMP2_CTL) ! (>L:CB_R29_L_PUMP2_CTL)
FNX320_Breaker_R41_ENG1_FADEC_B_EIU_1#(L:CB_R41_ENG1_FADEC_B_EIU_1) ! (>L:CB_R41_ENG1_FADEC_B_EIU_1)
FNX320_Breaker_S06_WTB_SLT_1#(L:CB_S06_WTB_SLT_1) ! (>L:CB_S06_WTB_SLT_1)
FNX320_Breaker_S07_WTB_FLP_1#(L:CB_S07_WTB_FLP_1) ! (>L:CB_S07_WTB_FLP_1)
FNX320_Breaker_S22_AFT_CARGO_VENT_FAN#(L:CB_S22_AFT_CARGO_VENT_FAN) ! (>L:CB_S22_AFT_CARGO_VENT_FAN)
FNX320_Breaker_T02_NAV_LOGO_2#(L:CB_T02_NAV_LOGO_2) ! (>L:CB_T02_NAV_LOGO_2)
FNX320_Breaker_T03_NAV_LOGO_1#(L:CB_T03_NAV_LOGO_1) ! (>L:CB_T03_NAV_LOGO_1)
FNX320_Breaker_T04_LANDING_LIGHT_SPLY_L#(L:CB_T04_LANDING_LIGHT_SPLY_L) ! (>L:CB_T04_LANDING_LIGHT_SPLY_L)
FNX320_Breaker_T05_LANDING_LIGHT_CTL_L#(L:CB_T05_LANDING_LIGHT_CTL_L) ! (>L:CB_T05_LANDING_LIGHT_CTL_L)
FNX320_Breaker_T06_LANDING_LIGHT_SPLY_R#(L:CB_T06_LANDING_LIGHT_SPLY_R) ! (>L:CB_T06_LANDING_LIGHT_SPLY_R)
FNX320_Breaker_T07_LANDING_LIGHT_CTL_R#(L:CB_T07_LANDING_LIGHT_CTL_R) ! (>L:CB_T07_LANDING_LIGHT_CTL_R)
FNX320_Breaker_T13_CPKT_LOCK#(L:CB_T13_CPKT_LOCK) ! (>L:CB_T13_CPKT_LOCK)
FNX320_Breaker_U03_BEACON_LOWER#(L:CB_U03_BEACON_LOWER) ! (>L:CB_U03_BEACON_LOWER)
FNX320_Breaker_U06_BEACON_UPPER#(L:CB_U06_BEACON_UPPER) ! (>L:CB_U06_BEACON_UPPER)
FNX320_Breaker_U19_LAV_GALLEY_FAN_SPLY#(L:CB_U19_LAV_GALLEY_FAN_SPLY) ! (>L:CB_U19_LAV_GALLEY_FAN_SPLY)
FNX320_Breaker_U21_LAV_GALLEY_FAN_CTL#(L:CB_U21_LAV_GALLEY_FAN_CTL) ! (>L:CB_U21_LAV_GALLEY_FAN_CTL)
FNX320_Breaker_V02_LOGO_LIGHT_RIGHT#(L:CB_V02_LOGO_LIGHT_RIGHT) ! (>L:CB_V02_LOGO_LIGHT_RIGHT)
FNX320_Breaker_V03_LOGO_LIGHT_LEFT#(L:CB_V03_LOGO_LIGHT_LEFT) ! (>L:CB_V03_LOGO_LIGHT_LEFT)
FNX320_Breaker_V05_WING_STROBE_LIGHT#(L:CB_V05_WING_STROBE_LIGHT) ! (>L:CB_V05_WING_STROBE_LIGHT)
FNX320_Breaker_V12_ICE_DET_L#(L:CB_V12_ICE_DET_L) ! (>L:CB_V12_ICE_DET_L)
FNX320_Breaker_V13_ICE_DET_R#(L:CB_V13_ICE_DET_R) ! (>L:CB_V13_ICE_DET_R)
FNX320_Breaker_W02_WING_LIGHT_LEFT#(L:CB_W02_WING_LIGHT_LEFT) ! (>L:CB_W02_WING_LIGHT_LEFT)
FNX320_Breaker_W03_WING_LIGHT_RIGHT#(L:CB_W03_WING_LIGHT_RIGHT) ! (>L:CB_W03_WING_LIGHT_RIGHT)
FNX320_Breaker_W05_RWY_TURNOFF_R#(L:CB_W05_RWY_TURNOFF_R) ! (>L:CB_W05_RWY_TURNOFF_R)
FNX320_Breaker_W06_RWY_TURNOFF_L#(L:CB_W06_RWY_TURNOFF_L) ! (>L:CB_W06_RWY_TURNOFF_L)
FNX320_Breaker_W07_NOSE_LIGHT_TAKEOFF#(L:CB_W07_NOSE_LIGHT_TAKEOFF) ! (>L:CB_W07_NOSE_LIGHT_TAKEOFF)
FNX320_Breaker_W08_NOSE_LIGHT_TAXI#(L:CB_W08_NOSE_LIGHT_TAXI) ! (>L:CB_W08_NOSE_LIGHT_TAXI)
FNX320_Breaker_W09_NOSE_LIGHT_CTL#(L:CB_W09_NOSE_LIGHT_CTL) ! (>L:CB_W09_NOSE_LIGHT_CTL)
FNX320_Breaker_W10_ENG_ANTI_ICE_2#(L:CB_W10_ENG_ANTI_ICE_2) ! (>L:CB_W10_ENG_ANTI_ICE_2)
FNX320_Breaker_W12_WIPER_FO#(L:CB_W12_WIPER_FO) ! (>L:CB_W12_WIPER_FO)
FNX320_Breaker_W13_WHC_2#(L:CB_W13_WHC_2) ! (>L:CB_W13_WHC_2)
FNX320_Breaker_W18_RECIRC_R_SPLY#(L:CB_W18_RECIRC_R_SPLY) ! (>L:CB_W18_RECIRC_R_SPLY)
FNX320_Breaker_W20_RECIRC_R_CTL#(L:CB_W20_RECIRC_R_CTL) ! (>L:CB_W20_RECIRC_R_CTL)
FNX320_Breaker_W25_DC_BUS_TIE#(L:CB_W25_DC_BUS_TIE) ! (>L:CB_W25_DC_BUS_TIE)
FNX320_Breaker_W26_ESS_DC_BUS_TIE#(L:CB_W26_ESS_DC_BUS_TIE) ! (>L:CB_W26_ESS_DC_BUS_TIE)
FNX320_Breaker_X10_ENG_ANTI_ICE_1#(L:CB_X10_ENG_ANTI_ICE_1) ! (>L:CB_X10_ENG_ANTI_ICE_1)
FNX320_Breaker_X12_WIPER_CAPT#(L:CB_X12_WIPER_CAPT) ! (>L:CB_X12_WIPER_CAPT)
FNX320_Breaker_X13_WHC_1#(L:CB_X13_WHC_1) ! (>L:CB_X13_WHC_1)
FNX320_Breaker_X18_RECIRC_L_SPLY#(L:CB_X18_RECIRC_L_SPLY) ! (>L:CB_X18_RECIRC_L_SPLY)
FNX320_Breaker_X20_RECIRC_L_CTL#(L:CB_X20_RECIRC_L_CTL) ! (>L:CB_X20_RECIRC_L_CTL)
FNX320_Breaker_Y03_OVHD_PANEL#(L:CB_Y03_OVHD_PANEL) ! (>L:CB_Y03_OVHD_PANEL)
FNX320_Breaker_Y04_INST_LIGHT_PED#(L:CB_Y04_INST_LIGHT_PED) ! (>L:CB_Y04_INST_LIGHT_PED)
FNX320_Breaker_Y05_GLARE_SHIELD#(L:CB_Y05_GLARE_SHIELD) ! (>L:CB_Y05_GLARE_SHIELD)
FNX320_Breaker_Y06_CKPT_DOME#(L:CB_Y06_CKPT_DOME) ! (>L:CB_Y06_CKPT_DOME)
FNX320_Breaker_Y11_PROBES_2_STATIC#(L:CB_Y11_PROBES_2_STATIC) ! (>L:CB_Y11_PROBES_2_STATIC)
FNX320_Breaker_Y12_PROBES_2_PHC_SUPPLY#(L:CB_Y12_PROBES_2_PHC_SUPPLY) ! (>L:CB_Y12_PROBES_2_PHC_SUPPLY)
FNX320_Breaker_Y13_PROBES_2_AOA#(L:CB_Y13_PROBES_2_AOA) ! (>L:CB_Y13_PROBES_2_AOA)
FNX320_Breaker_Y14_PROBES_2_PITOT#(L:CB_Y14_PROBES_2_PITOT) ! (>L:CB_Y14_PROBES_2_PITOT)
FNX320_Breaker_Y15_PROBES_2_TAT#(L:CB_Y15_PROBES_2_TAT) ! (>L:CB_Y15_PROBES_2_TAT)
FNX320_Breaker_Y16_PROBES_3_PHC_SUPPLY#(L:CB_Y16_PROBES_3_PHC_SUPPLY) ! (>L:CB_Y16_PROBES_3_PHC_SUPPLY)
FNX320_Breaker_Y17_AVNCS_VENT_MONG#(L:CB_Y17_AVNCS_VENT_MONG) ! (>L:CB_Y17_AVNCS_VENT_MONG)
FNX320_Breaker_Y22_CAB_PRESS_CTL_2#(L:CB_Y22_CAB_PRESS_CTL_2) ! (>L:CB_Y22_CAB_PRESS_CTL_2)
FNX320_Breaker_Y23_CAB_MAN_PRESS#(L:CB_Y23_CAB_MAN_PRESS) ! (>L:CB_Y23_CAB_MAN_PRESS)
FNX320_Breaker_Z04_LIGHTING_FLOOD_CTR#(L:CB_Z04_LIGHTING_FLOOD_CTR) ! (>L:CB_Z04_LIGHTING_FLOOD_CTR)
FNX320_Breaker_Z05_LIGHTING_FLOOD_CAPT#(L:CB_Z05_LIGHTING_FLOOD_CAPT) ! (>L:CB_Z05_LIGHTING_FLOOD_CAPT)
FNX320_Breaker_Z06_LIGHTING_FLOOD_FO#(L:CB_Z06_LIGHTING_FLOOD_FO) ! (>L:CB_Z06_LIGHTING_FLOOD_FO)
FNX320_Breaker_Z07_LIGHTING_AVNCS_CPT#(L:CB_Z07_LIGHTING_AVNCS_CPT) ! (>L:CB_Z07_LIGHTING_AVNCS_CPT)
FNX320_Breaker_Z08_AVNCS_CPT_DC#(L:CB_Z08_AVNCS_CPT_DC) ! (>L:CB_Z08_AVNCS_CPT_DC)
FNX320_Breaker_Z09_AVNCS_CPT_AC#(L:CB_Z09_AVNCS_CPT_AC) ! (>L:CB_Z09_AVNCS_CPT_AC)
FNX320_Breaker_Z12_PROBES_1_TAT#(L:CB_Z12_PROBES_1_TAT) ! (>L:CB_Z12_PROBES_1_TAT)
FNX320_Breaker_Z13_PROBES_1_STATIC#(L:CB_Z13_PROBES_1_STATIC) ! (>L:CB_Z13_PROBES_1_STATIC)
FNX320_Breaker_Z14_PROBES_3_STATIC#(L:CB_Z14_PROBES_3_STATIC) ! (>L:CB_Z14_PROBES_3_STATIC)
FNX320_Breaker_Z15_PROBES_3_AOA#(L:CB_Z15_PROBES_3_AOA) ! (>L:CB_Z15_PROBES_3_AOA)
FNX320_Breaker_Z16_PROBES_3_PITOT#(L:CB_Z16_PROBES_3_PITOT) ! (>L:CB_Z16_PROBES_3_PITOT)
FNX320_Breaker_Z20_X_FEED_VALVE_NORM#(L:CB_Z20_X_FEED_VALVE_NORM) ! (>L:CB_Z20_X_FEED_VALVE_NORM)
FNX320_Breaker_Z22_AIRBLEED_ENG2_MONG#(L:CB_Z22_AIRBLEED_ENG2_MONG) ! (>L:CB_Z22_AIRBLEED_ENG2_MONG)
FNX320_Breaker_Z23_AIRBLEED_ENG2_CTL#(L:CB_Z23_AIRBLEED_ENG2_CTL) ! (>L:CB_Z23_AIRBLEED_ENG2_CTL)
FNX320_Overhead_APU_Auto_Exiting_Reset_Button_Press#1 (>L:S_OH_APU_AUTOEXTING_RESET)
FNX320_Overhead_APU_Auto_Exiting_Reset_Button_Release#0 (>L:S_OH_APU_AUTOEXTING_RESET)
FNX320_Overhead_APU_Auto_Exiting_Test_Button_Press#1 (>L:S_OH_APU_AUTOEXTING_TEST)
FNX320_Overhead_APU_Auto_Exiting_Test_Button_Release#0 (>L:S_OH_APU_AUTOEXTING_TEST)
EXT_PWR#(L:S_OH_ELEC_EXT_PWR) ++ (>L:S_OH_ELEC_EXT_PWR) 
FNX320_Electrical_AC_Essential_Feed_Button_Press#(L:S_OH_ELEC_AC_ESS_FEED) ++ (>L:S_OH_ELEC_AC_ESS_FEED)
FNX320_Electrical_AC_Essential_Feed_Button_Release#(L:S_OH_ELEC_AC_ESS_FEED) ++ (>L:S_OH_ELEC_AC_ESS_FEED)
FNX320_Electrical_APU_Generator_Button_Press#(L:S_OH_ELEC_APU_GENERATOR) ! (>L:S_OH_ELEC_APU_GENERATOR) 
FNX320_Electrical_Bus_Tie_Button_Press#(>L:S_OH_ELEC_BUSTIE) ++ (>L:S_OH_ELEC_BUSTIE)
FNX320_Electrical_Bus_Tie_Button_Release#(>L:S_OH_ELEC_BUSTIE) ++ (>L:S_OH_ELEC_BUSTIE)
FNX320_Electrical_Commercial_Button_Press#(L:S_OH_ELEC_COMMERCIAL) ++ (>L:S_OH_ELEC_COMMERCIAL)
FNX320_Electrical_Commercial_Button_Release#(L:S_OH_ELEC_COMMERCIAL) ++ (>L:S_OH_ELEC_COMMERCIAL)
FNX320_Electrical_Galley_Cabin_Button_Press#(L:S_OH_ELEC_GALY) ++ (>L:S_OH_ELEC_GALY)
FNX320_Electrical_Galley_Cabin_Button_Release#(L:S_OH_ELEC_GALY) ++ (>L:S_OH_ELEC_GALY)
FNX320_Electrical_IDG_1_Button_Press#(L:S_OH_ELEC_IDG1) ++ (>L:S_OH_ELEC_IDG1)
FNX320_Electrical_IDG_1_Button_Release#(L:S_OH_ELEC_IDG1) s0 2 % 0 != if{ l0 ++ (>L:S_OH_ELEC_IDG1) }
FNX320_Electrical_IDG_2_Button_Press#(L:S_OH_ELEC_IDG2) ++ (>L:S_OH_ELEC_IDG2)
FNX320_Electrical_IDG_2_Button_Release#(L:S_OH_ELEC_IDG2) s0 2 % 0 != if{ l0 ++ (>L:S_OH_ELEC_IDG2) }
FNX320_Emergency_Electrical_Generator_1_Line_Button_Press#(L:S_OH_ELEC_GEN1_LINE) ! (>L:S_OH_ELEC_GEN1_LINE) 
FNX320_Emergency_Electrical_Generator_Test_Button_Press#(L:S_OH_ELEC_EMER_GEN_TEST) ++ (>L:S_OH_ELEC_EMER_GEN_TEST) 
FNX320_Emergency_Electrical_Generator_Test_Button_Release#(L:S_OH_ELEC_EMER_GEN_TEST) ++ (>L:S_OH_ELEC_EMER_GEN_TEST)
FNX320_Emergency_Electrical_Manual_On_Button_Press#(L:S_OH_ELEC_EMER_GEN_MAN_ON) ++ (>L:S_OH_ELEC_EMER_GEN_MAN_ON) 
FNX320_Emergency_Electrical_Manual_On_Button_Release#(L:S_OH_ELEC_EMER_GEN_MAN_ON) s0 2 % 0 != if{ l0 ++ (>L:S_OH_ELEC_EMER_GEN_MAN_ON) } 
FNX320_OH_ELEC_EXT_PWR_PRESS#(L:S_OH_ELEC_EXT_PWR) ++ (>L:S_OH_ELEC_EXT_PWR)
FNX320_OH_ELEC_EXT_PWR_RELEASE#(L:S_OH_ELEC_EXT_PWR) s0 2 % 0 != if{ l0 ++ (>L:S_OH_ELEC_EXT_PWR) }
FNX320_OH_EMER_ELEC_MAN_ON_Cover_Toggle#(L:S_OH_ELEC_EMER_GEN_MAN_ON_Cover) ! (>L:S_OH_ELEC_EMER_GEN_MAN_ON_Cover) 
FNX320_OH_EMER_ELEC_TEST_Cover_Toggle#(L:S_OH_ELEC_EMER_GEN_TEST_Cover) ! (>L:S_OH_ELEC_EMER_GEN_TEST_Cover)
FNX320_OH_Elec_Bat1_Press#(L:S_OH_ELEC_BAT1) ! (>L:S_OH_ELEC_BAT1) 
FNX320_OH_Elec_Bat2_Press#(L:S_OH_ELEC_BAT2) ! (>L:S_OH_ELEC_BAT2) 
FNX320_OH_Elec_Generator_1_Button_Press#(L:S_OH_ELEC_GEN1) ! (>L:S_OH_ELEC_GEN1) 
FNX320_OH_Elec_Generator_2_Button_Press#(L:S_OH_ELEC_GEN2) ! (>L:S_OH_ELEC_GEN2)
FNX320_OVHD_APU_MASTER_SWITCH_TOGGLE#(L:S_OH_ELEC_APU_MASTER) ! (>L:S_OH_ELEC_APU_MASTER)
FNX320_APU_START_SWITCH#(L:S_OH_ELEC_APU_START) 2 + (>L:S_OH_ELEC_APU_START)
FNX320_OVHD_BAT1_L_OFF#0 (>L:S_OH_ELEC_BAT1)
FNX320_OVHD_BAT1_L_ON#1 (>L:S_OH_ELEC_BAT1)
FNX320_OVHD_BAT2_L_OFF#0 (>L:S_OH_ELEC_BAT2)
FNX320_OVHD_BAT2_L_ON#1 (>L:S_OH_ELEC_BAT2)
//FenixSim/A320/Engines
FNX320_Engine_Manual_Start_1_Button_Press#(L:S_OH_ENG_MANSTART_1) ! (>L:S_OH_ENG_MANSTART_1)
FNX320_Engine_Manual_Start_2_Button_Press#(L:S_OH_ENG_MANSTART_2) ! (>L:S_OH_ENG_MANSTART_2) 
FNX320_Engine_N1_Mode_1_Button_Press#(L:S_OH_ENG_N1_MODE_1) ! (>L:S_OH_ENG_N1_MODE_1)
FNX320_Engine_N1_Mode_2_Button_Press#(L:S_OH_ENG_N1_MODE_2) ! (>L:S_OH_ENG_N1_MODE_2) 
FNX320_Overhead_Blue_Pump_Override_Button_Press#(L:S_OH_HYD_BLUE_PUMP_OVERRIDE) ! (>L:S_OH_HYD_BLUE_PUMP_OVERRIDE) 
FNX320_Overhead_Engine_FADEC_Ground_1_Button_Press#(L:S_OH_AFT_FADEC_GND_1) ! (>L:S_OH_AFT_FADEC_GND_1) 
FNX320_Overhead_Engine_FADEC_Ground_2_Button_Press#(L:S_OH_AFT_FADEC_GND_2) ! (>L:S_OH_AFT_FADEC_GND_2) 
FNX320_Overhead_LMV_Blue_Button_Press#(L:S_OH_HYD_LMV_BLUE) ! (>L:S_OH_HYD_LMV_BLUE) 
FNX320_Overhead_LMV_Green_Button_Press#(L:S_OH_HYD_LMV_GREEN) ! (>L:S_OH_HYD_LMV_GREEN) 
FNX320_Overhead_LMV_Yellow_Button_Press#(L:S_OH_HYD_LMV_YELLOW) ! (>L:S_OH_HYD_LMV_YELLOW) 
FNX320_Throttle_Engine_1_Master_Switch_Toggle#(L:S_ENG_MASTER_1) ! (>L:S_ENG_MASTER_1) 
FNX320_Throttle_Engine_2_Master_Switch_Toggle#(L:S_ENG_MASTER_2) ! (>L:S_ENG_MASTER_2) 
FNX320_Throttle_engine_1_Master_Switch_OFF#0 (>L:S_ENG_MASTER_1)
FNX320_Throttle_engine_1_Master_Switch_ON#1 (>L:S_ENG_MASTER_1)
FNX320_Throttle_engine_2_Master_Switch_OFF#0 (>L:S_ENG_MASTER_2)
FNX320_Throttle_engine_2_Master_Switch_ON#1 (>L:S_ENG_MASTER_2)
FNX320_AUTOTHROTTLE_LEFT_DISC_PUSH#(L:S_FC_THR_INST_DISCONNECT1) ++ (>L:S_FC_THR_INST_DISCONNECT1) 
FNX320_AUTOTHROTTLE_LEFT_DISC_RELEASE#(L:S_FC_THR_INST_DISCONNECT1) s0 2 % 0 != if{ l0 ++ (>L:S_FC_THR_INST_DISCONNECT1) } 
FNX320_AUTOTHROTTLE_RIGHT_DISC_PUSH#(L:S_FC_THR_INST_DISCONNECT2) ++ (>L:S_FC_THR_INST_DISCONNECT2) 
FNX320_AUTOTHROTTLE_RIGHT_DISC_RELEASE#(L:S_FC_THR_INST_DISCONNECT2) s0 2 % 0 != if{ l0 ++ (>L:S_FC_THR_INST_DISCONNECT2) }
FNX320_ENG_MODE_CRANK#0 (>L:S_ENG_MODE)
FNX320_ENG_MODE_IGNSTART#2 (>L:S_ENG_MODE)
FNX320_ENG_MODE_NORMAL#1 (>L:S_ENG_MODE) 
//FenixSim/A320/Flight Controls
FNX320_ELEVATOR_TRIM_WHEEL_DEC#(L:A_FC_ELEVATOR_TRIM) 100 - -4000 max (>L:A_FC_ELEVATOR_TRIM)
FNX320_ELEVATOR_TRIM_WHEEL_INC#(L:A_FC_ELEVATOR_TRIM) 100 + 13500 min (>L:A_FC_ELEVATOR_TRIM)
FNX320_FlightControl_ELAC_1_Button_Press#(L:S_OH_FLT_CTL_ELAC_1) ! (>L:S_OH_FLT_CTL_ELAC_1) 
FNX320_FlightControl_ELAC_2_Button_Press#(L:S_OH_FLT_CTL_ELAC_2) ! (>L:S_OH_FLT_CTL_ELAC_2) 
FNX320_FlightControl_FAC_1_Button_Press#(L:S_OH_FLT_CTL_FAC_1) ! (>L:S_OH_FLT_CTL_FAC_1) 
FNX320_FlightControl_FAC_2_Button_Press#(L:S_OH_FLT_CTL_FAC_2) ! (>L:S_OH_FLT_CTL_FAC_2) 
FNX320_FlightControl_SEC_1_Button_Press#(L:S_OH_FLT_CTL_SEC_1) ! (>L:S_OH_FLT_CTL_SEC_1) 
FNX320_FlightControl_SEC_2_Button_Press#(L:S_OH_FLT_CTL_SEC_2) ! (>L:S_OH_FLT_CTL_SEC_2) 
FNX320_FlightControl_SEC_3_Button_Press#(L:S_OH_FLT_CTL_SEC_3) ! (>L:S_OH_FLT_CTL_SEC_3) 
FNX320_FC_CAPT_TAKEOVER_PB_PUSH#(L:S_FC_CAPT_INST_DISCONNECT) ++ (>L:S_FC_CAPT_INST_DISCONNECT) 
FNX320_FC_CAPT_TAKEOVER_PB_RELEASE#(L:S_FC_CAPT_INST_DISCONNECT) ++ (>L:S_FC_CAPT_INST_DISCONNECT) 
FNX320_FC_FLAPS_LEVER_FOR_TCAQ-ADDON#@ 16383.75 / 0 max 4 min (>L:S_FC_FLAPS)
FNX320_FC_FLAPS_LEVER_POSITION_0_SWITCH#0 (>L:S_FC_FLAPS)
FNX320_FC_FLAPS_LEVER_POSITION_1_SWITCH#1 (>L:S_FC_FLAPS)
FNX320_FC_FLAPS_LEVER_POSITION_2_SWITCH#2 (>L:S_FC_FLAPS)
FNX320_FC_FLAPS_LEVER_POSITION_3_SWITCH#3 (>L:S_FC_FLAPS)
FNX320_FC_FLAPS_LEVER_POSITION_FULL_SWITCH#4 (>L:S_FC_FLAPS)
FNX320_FC_FO_TAKEOVER_PB_PUSH#(L:S_FC_FO_INST_DISCONNECT) ++ (>L:S_FC_FO_INST_DISCONNECT) 
FNX320_FC_FO_TAKEOVER_PB_RELEASE#(L:S_FC_FO_INST_DISCONNECT) ++ (>L:S_FC_FO_INST_DISCONNECT) 
FNX320_FC_GND_SPLRS_LEVER_ARM-DISARM_SWITCH#(L:A_FC_SPEEDBRAKE) ! (>L:A_FC_SPEEDBRAKE)
Flaps_Decrease#(L:S_FC_FLAPS) -- (>L:S_FC_FLAPS)
Flaps_Increase#(L:S_FC_FLAPS) ++ (>L:S_FC_FLAPS)
Speed_Brakes_Extend_Button__incremental_#(L:A_FC_SPEEDBRAKE) ++ (>L:A_FC_SPEEDBRAKE)
Speed_Brakes_Retract_Button__incremental_#(L:A_FC_SPEEDBRAKE) -- (>L:A_FC_SPEEDBRAKE)
//FenixSim/A320/Fuel
FNX320_OVHD_FUEL_CENTER_TK_PUMP_1_PRESS#(L:S_OH_FUEL_CENTER_1) ! (>L:S_OH_FUEL_CENTER_1) 
FNX320_OVHD_FUEL_CENTER_TK_PUMP_2_PRESS#(L:S_OH_FUEL_CENTER_2) ! (>L:S_OH_FUEL_CENTER_2) 
FNX320_OVHD_FUEL_L_TK_PUMP_1_PRESS#(L:S_OH_FUEL_LEFT_1) ! (>L:S_OH_FUEL_LEFT_1) 
FNX320_OVHD_FUEL_L_TK_PUMP_2_PRESS#(L:S_OH_FUEL_LEFT_2) ! (>L:S_OH_FUEL_LEFT_2)
FNX320_OVHD_FUEL_MODE_SEL_BUTTON#(L:S_OH_FUEL_MODE_SEL) ! (>L:S_OH_FUEL_MODE_SEL)
FNX320_OVHD_FUEL_MODE_SEL_PRESS#(L:S_OH_FUEL_MODE_SEL) ! (L:S_OH_FUEL_MODE_SEL)
FNX320_OVHD_FUEL_R_TK_PUMP_1_PRESS#(L:S_OH_FUEL_RIGHT_1) ! (>L:S_OH_FUEL_RIGHT_1) 
FNX320_OVHD_FUEL_R_TK_PUMP_2_PRESS#(L:S_OH_FUEL_RIGHT_2) ! (>L:S_OH_FUEL_RIGHT_2) 
FNX320_OVHD_FUEL_X-FEED_PRESS#(L:S_OH_FUEL_XFEED) ! (>L:S_OH_FUEL_XFEED) 
//FenixSim/A320/Gear
FNX320_MainPanel_Anti_Skid_Switch_Press#(L:S_FC_MIP_ANTI_SKID) ! (>L:S_FC_MIP_ANTI_SKID)
FNX320_MainPanel_Autobrake_Low_Button_Press#1 (>L:S_MIP_AUTOBRAKE_LO)
FNX320_MainPanel_Autobrake_Low_Button_Release#0 (>L:S_MIP_AUTOBRAKE_LO)
FNX320_MainPanel_Autobrake_Max_Button_Press#1 (>L:S_MIP_AUTOBRAKE_MAX)
FNX320_MainPanel_Autobrake_Max_Button_Release#0 (>L:S_MIP_AUTOBRAKE_MAX)
FNX320_MainPanel_Autobrake_Medium_Button_Press#1 (>L:S_MIP_AUTOBRAKE_MED)
FNX320_MainPanel_Autobrake_Medium_Button_Release#0 (>L:S_MIP_AUTOBRAKE_MED)
FNX320_Pedestal_Parking_Brake_Handle_Toggle#(L:S_MIP_PARKING_BRAKE) ! (>L:S_MIP_PARKING_BRAKE)
FNX320_MainPanel_Brake_Fan_Button_Press#(L:S_MIP_BRAKE_FAN) ! (>L:S_MIP_BRAKE_FAN) 
FNX320_Misc_Tiller_Pedal_Disconnect_Captain_Press#(L:S_FC_CAPT_TILLER_PEDAL_DISCONNECT) ! (>L:S_FC_CAPT_TILLER_PEDAL_DISCONNECT) 
FNX320_Misc_Tiller_Pedal_Disconnect_FO_Press#(L:S_FC_FO_TILLER_PEDAL_DISCONNECT) ! (>L:S_FC_FO_TILLER_PEDAL_DISCONNECT) 
FNX320_LANDING_GEAR_DOWN#1 (>L:S_MIP_GEAR)
FNX320_LANDING_GEAR_UP#0 (>L:S_MIP_GEAR)
FNX320_MIP_PARKING_BRAKE_OFF_SWITCH#0 (>L:S_MIP_PARKING_BRAKE)
FNX320_MIP_PARKING_BRAKE_ON_SWITCH#1 (>L:S_MIP_PARKING_BRAKE)
//FenixSim/A320/Hydraulic
FNX320_Hydraulic_Electrical_Pump_Blue_Button_Press# (L:S_OH_HYD_BLUE_ELEC_PUMP) ! (>L:S_OH_HYD_BLUE_ELEC_PUMP)
FNX320_Hydraulic_Electrical_Pump_Yellow_Button_Press#(L:S_OH_HYD_YELLOW_ELEC_PUMP) 2 + (>L:S_OH_HYD_YELLOW_ELEC_PUMP)
FNX320_Hydraulic_Engine_1_Pump_Green_Button_Press#(L:S_OH_HYD_ENG_1_PUMP) ! (>L:S_OH_HYD_ENG_1_PUMP)
FNX320_Hydraulic_Engine_2_Pump_Yellow_Button_Press#(L:S_OH_HYD_ENG_2_PUMP) ! (>L:S_OH_HYD_ENG_2_PUMP)
FNX320_Hydraulic_PTU_Button_Press# (L:S_OH_HYD_PTU) ! (>L:S_OH_HYD_PTU)
FNX320_Hydraulic_RAT_Manual_Button_Press#(L:S_OH_HYD_RAT_MAN_ON) ! (>L:S_OH_HYD_RAT_MAN_ON)
//FenixSim/A320/ISIS
FNX320_ISIS_BARO_KNOB_DEC#(L:E_MIP_ISFD_BARO) -- (>L:E_MIP_ISFD_BARO)
FNX320_ISIS_BARO_KNOB_INC#(L:E_MIP_ISFD_BARO) ++ (>L:E_MIP_ISFD_BARO)
FNX320_ISIS_BARO_KNOB_PUSH#(L:S_MIP_ISFD_BARO_BUTTON) ++ (>L:S_MIP_ISFD_BARO_BUTTON)
FNX320_ISIS_BARO_KNOB_RELEASE#(L:S_MIP_ISFD_BARO_BUTTON) ++ (>L:S_MIP_ISFD_BARO_BUTTON)
//FenixSim/A320/Lights
FNX320_Int_Light_Annunciator_Switch_TEST#2 (>L:S_OH_IN_LT_ANN_LT)
FNX320_Int_Light_Ice_Standby_Switch_Toggle#(L:S_OH_IN_LT_ICE) ! (>L:S_OH_IN_LT_ICE)
FNX320_MainPanel_Console_Floor_Light_Captain_Switch_BRT#2 (>L:S_MIP_LIGHT_CONSOLEFLOOR_CAPT)
FNX320_MainPanel_Console_Floor_Light_Captain_Switch_DIM#1 (>L:S_MIP_LIGHT_CONSOLEFLOOR_CAPT)
FNX320_MainPanel_Console_Floor_Light_Captain_Switch_OFF#0 (>L:S_MIP_LIGHT_CONSOLEFLOOR_CAPT)
FNX320_MainPanel_Console_Floor_Light_FO_Switch_BRT#2 (>L:S_MIP_LIGHT_CONSOLEFLOOR_FO)
FNX320_MainPanel_Console_Floor_Light_FO_Switch_DIM#1 (>L:S_MIP_LIGHT_CONSOLEFLOOR_FO)
FNX320_MainPanel_Console_Floor_Light_FO_Switch_OFF#0 (>L:S_MIP_LIGHT_CONSOLEFLOOR_FO)
FNX320_Misc_Chart_Light_Captain_Knob_Dec#(L:A_CHART_LIGHT_TEMP_CAPT) 0.1 - 0 max (>L:A_CHART_LIGHT_TEMP_CAPT)
FNX320_Misc_Chart_Light_Captain_Knob_Inc#(L:A_CHART_LIGHT_TEMP_CAPT) 0.1 + 1 min (>L:A_CHART_LIGHT_TEMP_CAPT)
FNX320_Misc_Chart_Light_Captain_Switch_Press#(L:S_CHART_LIGHT_TEMP_CAPT) ! (>L:S_CHART_LIGHT_TEMP_CAPT)
FNX320_Misc_Chart_Light_FO_Knob_Dec#(L:A_CHART_LIGHT_TEMP_FO) 0.1 - 0 max (>L:A_CHART_LIGHT_TEMP_FO)
FNX320_Misc_Chart_Light_FO_Knob_Inc#(L:A_CHART_LIGHT_TEMP_FO) 0.1 + 1 min (>L:A_CHART_LIGHT_TEMP_FO)
FNX320_Misc_Chart_Light_FO_Switch_Press#(L:S_CHART_LIGHT_TEMP_FO) ! (>L:S_CHART_LIGHT_TEMP_FO)
FNX320_Overhead_Reading_Light_Captain_Knob_Dec#(L:A_OH_LIGHTING_READING_CAPT) 0.1 - 0 max (>L:A_OH_LIGHTING_READING_CAPT)
FNX320_Overhead_Reading_Light_Captain_Knob_Inc#(L:A_OH_LIGHTING_READING_CAPT) 0.1 + 1 min (>L:A_OH_LIGHTING_READING_CAPT)
FNX320_Overhead_Reading_Light_FO_Knob_Dec#(L:A_OH_LIGHTING_READING_FO) 0.1 - 0 max (>L:A_OH_LIGHTING_READING_FO)
FNX320_Overhead_Reading_Light_FO_Knob_Inc#(L:A_OH_LIGHTING_READING_FO) 0.1 + 1 min (>L:A_OH_LIGHTING_READING_FO)
FNX32_OH_INTEG_LIGHTING_DEC#(L:A_OH_LIGHTING_OVD) 0.05 - 0 max (>L:A_OH_LIGHTING_OVD) 
FNX32_OH_INTEG_LIGHTING_INC#(L:A_OH_LIGHTING_OVD) 0.05 + 1 min (>L:A_OH_LIGHTING_OVD) 
FNX320_FCU_DISPLAY_BRIGHTNESS_DEC#(L:A_FCU_LIGHTING_TEXT) 0.05 - 0 max (>L:A_FCU_LIGHTING_TEXT) 
FNX320_FCU_DISPLAY_BRIGHTNESS_INC#(L:A_FCU_LIGHTING_TEXT) 0.05 + 1 min (>L:A_FCU_LIGHTING_TEXT) 
FNX320_FCU_INTG_BRIGHTNESS_DEC#(L:A_FCU_LIGHTING) 0.05 - 0 max (>L:A_FCU_LIGHTING) 
FNX320_FCU_INTG_BRIGHTNESS_INC#(L:A_FCU_LIGHTING) 0.05 + 1 min (>L:A_FCU_LIGHTING) 
FNX320_Int_Light_Annunciator_Switch_BRT#1 (>L:S_OH_IN_LT_ANN_LT)
FNX320_Int_Light_Annunciator_Switch_DIM#0 (>L:S_OH_IN_LT_ANN_LT)
FNX320_MIP_INTEG_LIGHTING_KNOB_DEC#(L:A_PED_LIGHTING_PEDESTAL) 0.05 - 0 max 1 min (>L:A_PED_LIGHTING_PEDESTAL)
FNX320_MIP_INTEG_LIGHTING_KNOB_INC#(L:A_PED_LIGHTING_PEDESTAL) 0.05 + 0 max 1 min (>L:A_PED_LIGHTING_PEDESTAL)
FNX320_LIGHT_BEACON_OFF#0 (>L:S_OH_EXT_LT_BEACON)
FNX320_LIGHT_BEACON_ON#1 (>L:S_OH_EXT_LT_BEACON)
FNX320_LIGHT_BEACON_TOGGLE#(L:S_OH_EXT_LT_BEACON) ! (>L:S_OH_EXT_LT_BEACON)
FNX320_LIGHT_DOME_BRT#2 (>L:S_OH_INT_LT_DOME)
FNX320_LIGHT_DOME_DIM#1 (>L:S_OH_INT_LT_DOME)
FNX320_LIGHT_DOME_OFF#0 (>L:S_OH_INT_LT_DOME)
FNX320_LIGHT_LANDING_BOTH_OFF#1 (>L:S_OH_EXT_LT_LANDING_L) 1 (>L:S_OH_EXT_LT_LANDING_R) 1 (>L:S_OH_EXT_LT_LANDING_BOTH) 
FNX320_LIGHT_LANDING_BOTH_ON#2 (>L:S_OH_EXT_LT_LANDING_L) 2 (>L:S_OH_EXT_LT_LANDING_R) 2 (>L:S_OH_EXT_LT_LANDING_BOTH) 
FNX320_LIGHT_LANDING_BOTH_RETRACT#0 (>L:S_OH_EXT_LT_LANDING_L) 0 (>L:S_OH_EXT_LT_LANDING_R) 0 (>L:S_OH_EXT_LT_LANDING_BOTH) 
FNX320_LIGHT_LANDING_BOTH_TOGGLE#(L:S_OH_EXT_LT_LANDING_L, Number) ++ 3 % (>L:S_OH_EXT_LT_LANDING_L, Number) (L:S_OH_EXT_LT_LANDING_R, Number) ++ 3 % (>L:S_OH_EXT_LT_LANDING_R, Number)
FNX320_LIGHT_LANDING_L_OFF#1 (>L:S_OH_EXT_LT_LANDING_L)
FNX320_LIGHT_LANDING_L_ON#2 (>L:S_OH_EXT_LT_LANDING_L)
FNX320_LIGHT_LANDING_L_RETRACT#0 (>L:S_OH_EXT_LT_LANDING_L)
FNX320_LIGHT_LANDING_L_TOGGLE#(L:S_OH_EXT_LT_LANDING_L, Number) ++ 3 % (>L:S_OH_EXT_LT_LANDING_L, Number)
FNX320_LIGHT_LANDING_R_OFF#1 (>L:S_OH_EXT_LT_LANDING_R)
FNX320_LIGHT_LANDING_R_ON#2 (>L:S_OH_EXT_LT_LANDING_R)
FNX320_LIGHT_LANDING_R_RETRACT#0 (>L:S_OH_EXT_LT_LANDING_R)
FNX320_LIGHT_LANDING_R_TOGGLE#(L:S_OH_EXT_LT_LANDING_R, Number) ++ 3 % (>L:S_OH_EXT_LT_LANDING_R, Number)
FNX320_LIGHT_NAVLOGO_LOGO#2 (>L:S_OH_EXT_LT_NAV_LOGO)
FNX320_LIGHT_NAVLOGO_NAV#1 (>L:S_OH_EXT_LT_NAV_LOGO)
FNX320_LIGHT_NAVLOGO_OFF#0 (>L:S_OH_EXT_LT_NAV_LOGO)
FNX320_LIGHT_NAVLOGO_TOGGLE#(L:S_OH_EXT_LT_NAV_LOGO, Number) ++ 3 % (>L:S_OH_EXT_LT_NAV_LOGO, Number)
FNX320_LIGHT_NOSE_OFF#0 (>L:S_OH_EXT_LT_NOSE)
FNX320_LIGHT_NOSE_TAXI#1 (>L:S_OH_EXT_LT_NOSE)
FNX320_LIGHT_NOSE_TO#2 (>L:S_OH_EXT_LT_NOSE)
FNX320_LIGHT_NOSE_TOGGLE#(L:S_OH_EXT_LT_NOSE, Number) ++ 3 % (>L:S_OH_EXT_LT_NOSE, Number)
FNX320_LIGHT_RWY_TURNOFF_OFF#0 (>L:S_OH_EXT_LT_RWY_TURNOFF)
FNX320_LIGHT_RWY_TURNOFF_ON#1 (>L:S_OH_EXT_LT_RWY_TURNOFF)
FNX320_LIGHT_RWY_TURNOFF_TOGGLE#(L:S_OH_EXT_LT_RWY_TURNOFF) ! (>L:S_OH_EXT_LT_RWY_TURNOFF)
FNX320_LIGHT_STROBE_AUTO#1 (>L:S_OH_EXT_LT_STROBE)
FNX320_LIGHT_STROBE_OFF#0 (>L:S_OH_EXT_LT_STROBE)
FNX320_LIGHT_STROBE_ON#2 (>L:S_OH_EXT_LT_STROBE)
FNX320_LIGHT_STROBE_TOGGLE#(L:S_OH_EXT_LT_STROBE, Number) ++ 3 % (>L:S_OH_EXT_LT_STROBE, Number)
FNX320_LIGHT_WING_OFF#0 (>L:S_OH_EXT_LT_WING)
FNX320_LIGHT_WING_ON#1 (>L:S_OH_EXT_LT_WING)
FNX320_OVHD_ANN_LT_DIM-BRT-TEST_TOGGLE#(L:S_OH_IN_LT_ANN_LT, Number) ++ 3 % (>L:S_OH_IN_LT_ANN_LT, Number)
FNX32_DISPLAY_BRIGHTNESS_L_ND_DEC#(L:A_DISPLAY_BRIGHTNESS_CI) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_CI) 
FNX32_DISPLAY_BRIGHTNESS_L_ND_INC#(L:A_DISPLAY_BRIGHTNESS_CI) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_CI) 
FNX32_DISPLAY_BRIGHTNESS_L_ND_WX_DEC#(L:A_DISPLAY_BRIGHTNESS_CI_OUTER) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_CI_OUTER) 
FNX32_DISPLAY_BRIGHTNESS_L_ND_WX_INC#(L:A_DISPLAY_BRIGHTNESS_CI_OUTER) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_CI_OUTER) 
FNX32_DISPLAY_BRIGHTNESS_L_PFD_DEC#(L:A_DISPLAY_BRIGHTNESS_CO) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_CO) 
FNX32_DISPLAY_BRIGHTNESS_L_PFD_INC#(L:A_DISPLAY_BRIGHTNESS_CO) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_CO) 
FNX32_DISPLAY_BRIGHTNESS_R_ND_DEC#(L:A_DISPLAY_BRIGHTNESS_FI) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_FI) 
FNX32_DISPLAY_BRIGHTNESS_R_ND_INC#(L:A_DISPLAY_BRIGHTNESS_FI) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_FI) 
FNX32_DISPLAY_BRIGHTNESS_R_ND_WX_DEC#(L:A_DISPLAY_BRIGHTNESS_FI_OUTER) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_FI_OUTER) 
FNX32_DISPLAY_BRIGHTNESS_R_ND_WX_INC#(L:A_DISPLAY_BRIGHTNESS_FI_OUTER) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_FI_OUTER) 
FNX32_DISPLAY_BRIGHTNESS_R_PFD_DEC#(L:A_DISPLAY_BRIGHTNESS_FO) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_FO) 
FNX32_DISPLAY_BRIGHTNESS_R_PFD_INC#(L:A_DISPLAY_BRIGHTNESS_FO) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_FO) 
FNX32_DISPLAY_BRIGHTNES_ECAM_L_DEC#(L:A_DISPLAY_BRIGHTNESS_ECAM_L) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_ECAM_L) 
FNX32_DISPLAY_BRIGHTNES_ECAM_L_INC#(L:A_DISPLAY_BRIGHTNESS_ECAM_L) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_ECAM_L) 
FNX32_DISPLAY_BRIGHTNES_ECAM_U_DEC#(L:A_DISPLAY_BRIGHTNESS_ECAM_U) 0.05 - 0 max (>L:A_DISPLAY_BRIGHTNESS_ECAM_U) 
FNX32_DISPLAY_BRIGHTNES_ECAM_U_INC#(L:A_DISPLAY_BRIGHTNESS_ECAM_U) 0.05 + 1 min (>L:A_DISPLAY_BRIGHTNESS_ECAM_U) 
FNX32_MIP_INTG_LIGHTING_DEC#(L:A_PED_LIGHTING_PEDESTAL) 0.05 - 0 max (>L:A_PED_LIGHTING_PEDESTAL)
FNX32_MIP_INTG_LIGHTING_INC#(L:A_PED_LIGHTING_PEDESTAL) 0.05 + 1 min (>L:A_PED_LIGHTING_PEDESTAL) 
FNX32_MIP_LIGHTING_FLOOD_MAIN_DEC#(L:A_MIP_LIGHTING_FLOOD_MAIN) 0.05 - 0 max (>L:A_MIP_LIGHTING_FLOOD_MAIN) 
FNX32_MIP_LIGHTING_FLOOD_MAIN_INC#(L:A_MIP_LIGHTING_FLOOD_MAIN) 0.05 + 1 min (>L:A_MIP_LIGHTING_FLOOD_MAIN) 
FNX32_MIP_LIGHTING_FLOOD_PED_DEC#(L:A_MIP_LIGHTING_FLOOD_PEDESTAL) 0.05 - 0 max (>L:A_MIP_LIGHTING_FLOOD_PEDESTAL) 
FNX32_MIP_LIGHTING_FLOOD_PED_INC#(L:A_MIP_LIGHTING_FLOOD_PEDESTAL) 0.05 + 1 min (>L:A_MIP_LIGHTING_FLOOD_PEDESTAL) 
FNX32_MIP_LIGHTING_MAP_L_DEC#(L:A_MIP_LIGHTING_MAP_L) 0.05 - 0 max (>L:A_MIP_LIGHTING_MAP_L) 
FNX32_MIP_LIGHTING_MAP_L_INC#(L:A_MIP_LIGHTING_MAP_L) 0.05 + 1 min (>L:A_MIP_LIGHTING_MAP_L) 
FNX32_MIP_LIGHTING_MAP_R_DEC#(L:A_MIP_LIGHTING_MAP_R) 0.05 - 0 max (>L:A_MIP_LIGHTING_MAP_R) 
FNX32_MIP_LIGHTING_MAP_R_INC#(L:A_MIP_LIGHTING_MAP_R) 0.05 + 1 min (>L:A_MIP_LIGHTING_MAP_R) 
Ice_Indicator_Light_OFF#0 (>L:S_OH_IN_LT_ICE)
Ice_Indicator_Light_ON#1 (>L:S_OH_IN_LT_ICE)
Landing_Lights#FENIX_LIGHTS_LANDING_TOGGLE 
//FenixSim/A320/MCDU
FNX320_CDU1_BRIGHTNESS_DOWN_Press#1 (>L:S_CDU1_BRIGHTNESS_DOWN)
FNX320_CDU1_BRIGHTNESS_DOWN_Release#0 (>L:S_CDU1_BRIGHTNESS_DOWN)
FNX320_CDU1_BRIGHTNESS_UP_Press#1 (>L:S_CDU1_BRIGHTNESS_UP)
FNX320_CDU1_BRIGHTNESS_UP_Release#0 (>L:S_CDU1_BRIGHTNESS_UP)
FNX320_CDU1_KEY_0_Press#1 (>L:S_CDU1_KEY_0)
FNX320_CDU1_KEY_0_Release#0 (>L:S_CDU1_KEY_0)
FNX320_CDU1_KEY_1_Press#1 (>L:S_CDU1_KEY_1)
FNX320_CDU1_KEY_2_Press#1 (>L:S_CDU1_KEY_2)
FNX320_CDU1_KEY_2_Release#0 (>L:S_CDU1_KEY_2)
FNX320_CDU1_KEY_3_Press#1 (>L:S_CDU1_KEY_3)
FNX320_CDU1_KEY_3_Release#0 (>L:S_CDU1_KEY_3)
FNX320_CDU1_KEY_4_Press#1 (>L:S_CDU1_KEY_4)
FNX320_CDU1_KEY_4_Release#0 (>L:S_CDU1_KEY_4)
FNX320_CDU1_KEY_5_Press#1 (>L:S_CDU1_KEY_5)
FNX320_CDU1_KEY_5_Release#0 (>L:S_CDU1_KEY_5)
FNX320_CDU1_KEY_6_Press#1 (>L:S_CDU1_KEY_6)
FNX320_CDU1_KEY_6_Release#0 (>L:S_CDU1_KEY_6)
FNX320_CDU1_KEY_7_Press#1 (>L:S_CDU1_KEY_7)
FNX320_CDU1_KEY_7_Release#0 (>L:S_CDU1_KEY_7)
FNX320_CDU1_KEY_8_Press#1 (>L:S_CDU1_KEY_8)
FNX320_CDU1_KEY_8_Release#0 (>L:S_CDU1_KEY_8)
FNX320_CDU1_KEY_9_Press#1 (>L:S_CDU1_KEY_9)
FNX320_CDU1_KEY_9_Release#0 (>L:S_CDU1_KEY_9)
FNX320_CDU1_KEY_A_Press#1 (>L:S_CDU1_KEY_A)
FNX320_CDU1_KEY_A_Release#0 (>L:S_CDU1_KEY_A)
FNX320_CDU1_KEY_AIRPORT_Press#1 (>L:S_CDU1_KEY_AIRPORT)
FNX320_CDU1_KEY_AIRPORT_Release#0 (>L:S_CDU1_KEY_AIRPORT)
FNX320_CDU1_KEY_ARROW_DOWN_Press#1 (>L:S_CDU1_KEY_ARROW_DOWN)
FNX320_CDU1_KEY_ARROW_DOWN_Release#0 (>L:S_CDU1_KEY_ARROW_DOWN)
FNX320_CDU1_KEY_ARROW_LEFT_Press#1 (>L:S_CDU1_KEY_ARROW_LEFT)
FNX320_CDU1_KEY_ARROW_LEFT_Release#0 (>L:S_CDU1_KEY_ARROW_LEFT)
FNX320_CDU1_KEY_ARROW_RIGHT_Press#1 (>L:S_CDU1_KEY_ARROW_RIGHT)
FNX320_CDU1_KEY_ARROW_RIGHT_Release#0 (>L:S_CDU1_KEY_ARROW_RIGHT)
FNX320_CDU1_KEY_ARROW_UP_Press#1 (>L:S_CDU1_KEY_ARROW_UP)
FNX320_CDU1_KEY_ARROW_UP_Release#0 (>L:S_CDU1_KEY_ARROW_UP)
FNX320_CDU1_KEY_ATC_COM_Release#0 (>L:S_CDU1_KEY_ATC_COM)
FNX320_CDU1_KEY_B_Press#1 (>L:S_CDU1_KEY_B)
FNX320_CDU1_KEY_B_Release#0 (>L:S_CDU1_KEY_B)
FNX320_CDU1_KEY_C_Press#1 (>L:S_CDU1_KEY_C)
FNX320_CDU1_KEY_C_Release#0 (>L:S_CDU1_KEY_C)
FNX320_CDU1_KEY_CLEAR_Press#1 (>L:S_CDU1_KEY_CLEAR)
FNX320_CDU1_KEY_CLEAR_Release#0 (>L:S_CDU1_KEY_CLEAR)
FNX320_CDU1_KEY_D_Press#1 (>L:S_CDU1_KEY_D)
FNX320_CDU1_KEY_D_Release#0 (>L:S_CDU1_KEY_D)
FNX320_CDU1_KEY_DATA_Press#1 (>L:S_CDU1_KEY_DATA)
FNX320_CDU1_KEY_DATA_Release#0 (>L:S_CDU1_KEY_DATA)
FNX320_CDU1_KEY_DIR_Press#1 (>L:S_CDU1_KEY_DIR)
FNX320_CDU1_KEY_DIR_Release#0 (>L:S_CDU1_KEY_DIR)
FNX320_CDU1_KEY_DOT_Press#1 (>L:S_CDU1_KEY_DOT)
FNX320_CDU1_KEY_DOT_Release#0 (>L:S_CDU1_KEY_DOT)
FNX320_CDU1_KEY_E_Press#1 (>L:S_CDU1_KEY_E)
FNX320_CDU1_KEY_E_Release#0 (>L:S_CDU1_KEY_E)
FNX320_CDU1_KEY_F_Press#1 (>L:S_CDU1_KEY_F)
FNX320_CDU1_KEY_F_Release#0 (>L:S_CDU1_KEY_F)
FNX320_CDU1_KEY_FPLN_Press#1 (>L:S_CDU1_KEY_FPLN)
FNX320_CDU1_KEY_FPLN_Release#0 (>L:S_CDU1_KEY_FPLN)
FNX320_CDU1_KEY_FUEL_PRED_Press#1 (>L:S_CDU1_KEY_FUEL_PRED)
FNX320_CDU1_KEY_FUEL_PRED_Release#0 (>L:S_CDU1_KEY_FUEL_PRED)
FNX320_CDU1_KEY_G_Press#1 (>L:S_CDU1_KEY_G)
FNX320_CDU1_KEY_G_Release#0 (>L:S_CDU1_KEY_G)
FNX320_CDU1_KEY_H_Press#1 (>L:S_CDU1_KEY_H)
FNX320_CDU1_KEY_H_Release#0 (>L:S_CDU1_KEY_H)
FNX320_CDU1_KEY_I_Press#1 (>L:S_CDU1_KEY_I)
FNX320_CDU1_KEY_I_Release#0 (>L:S_CDU1_KEY_I)
FNX320_CDU1_KEY_INIT_Press#1 (>L:S_CDU1_KEY_INIT)
FNX320_CDU1_KEY_INIT_Release#0 (>L:S_CDU1_KEY_INIT)
FNX320_CDU1_KEY_J_Press#1 (>L:S_CDU1_KEY_J)
FNX320_CDU1_KEY_J_Release#0 (>L:S_CDU1_KEY_J)
FNX320_CDU1_KEY_K_Press#1 (>L:S_CDU1_KEY_K)
FNX320_CDU1_KEY_K_Release#0 (>L:S_CDU1_KEY_K)
FNX320_CDU1_KEY_L_Press#1 (>L:S_CDU1_KEY_L)
FNX320_CDU1_KEY_L_Release#0 (>L:S_CDU1_KEY_L)
FNX320_CDU1_KEY_LSK1L_Press#1 (>L:S_CDU1_KEY_LSK1L)
FNX320_CDU1_KEY_LSK1L_Release#0 (>L:S_CDU1_KEY_LSK1L)
FNX320_CDU1_KEY_LSK1R_Press#1 (>L:S_CDU1_KEY_LSK1R)
FNX320_CDU1_KEY_LSK1R_Release#0 (>L:S_CDU1_KEY_LSK1R)
FNX320_CDU1_KEY_LSK2L_Press#1 (>L:S_CDU1_KEY_LSK2L)
FNX320_CDU1_KEY_LSK2L_Release#0 (>L:S_CDU1_KEY_LSK2L)
FNX320_CDU1_KEY_LSK2R_Press#1 (>L:S_CDU1_KEY_LSK2R)
FNX320_CDU1_KEY_LSK2R_Release#0 (>L:S_CDU1_KEY_LSK2R)
FNX320_CDU1_KEY_LSK3L_Press#1 (>L:S_CDU1_KEY_LSK3L)
FNX320_CDU1_KEY_LSK3L_Release#0 (>L:S_CDU1_KEY_LSK3L)
FNX320_CDU1_KEY_LSK3R_Press#1 (>L:S_CDU1_KEY_LSK3R)
FNX320_CDU1_KEY_LSK3R_Release#0 (>L:S_CDU1_KEY_LSK3R)
FNX320_CDU1_KEY_LSK4L_Press#1 (>L:S_CDU1_KEY_LSK4L)
FNX320_CDU1_KEY_LSK4L_Release#0 (>L:S_CDU1_KEY_LSK4L)
FNX320_CDU1_KEY_LSK4R_Press#1 (>L:S_CDU1_KEY_LSK4R)
FNX320_CDU1_KEY_LSK4R_Release#0 (>L:S_CDU1_KEY_LSK4R)
FNX320_CDU1_KEY_LSK5L_Press#1 (>L:S_CDU1_KEY_LSK5L)
FNX320_CDU1_KEY_LSK5L_Release#0 (>L:S_CDU1_KEY_LSK5L)
FNX320_CDU1_KEY_LSK5R_Press#1 (>L:S_CDU1_KEY_LSK5R)
FNX320_CDU1_KEY_LSK5R_Release#0 (>L:S_CDU1_KEY_LSK5R)
FNX320_CDU1_KEY_LSK6L_Press#1 (>L:S_CDU1_KEY_LSK6L)
FNX320_CDU1_KEY_LSK6L_Release#0 (>L:S_CDU1_KEY_LSK6L)
FNX320_CDU1_KEY_LSK6R_Press#1 (>L:S_CDU1_KEY_LSK6R)
FNX320_CDU1_KEY_LSK6R_Release#0 (>L:S_CDU1_KEY_LSK6R)
FNX320_CDU1_KEY_M_Press#1 (>L:S_CDU1_KEY_M)
FNX320_CDU1_KEY_M_Release#0 (>L:S_CDU1_KEY_M)
FNX320_CDU1_KEY_MENU_Press#1 (>L:S_CDU1_KEY_MENU)
FNX320_CDU1_KEY_MENU_Release#0 (>L:S_CDU1_KEY_MENU)
FNX320_CDU1_KEY_MINUS_Press#1 (>L:S_CDU1_KEY_MINUS)
FNX320_CDU1_KEY_MINUS_Release#0 (>L:S_CDU1_KEY_MINUS)
FNX320_CDU1_KEY_N_Press#1 (>L:S_CDU1_KEY_N)
FNX320_CDU1_KEY_N_Release#0 (>L:S_CDU1_KEY_N)
FNX320_CDU1_KEY_O_Press#1 (>L:S_CDU1_KEY_O)
FNX320_CDU1_KEY_O_Release#0 (>L:S_CDU1_KEY_O)
FNX320_CDU1_KEY_OVFLY_Press#1 (>L:S_CDU1_KEY_OVFLY)
FNX320_CDU1_KEY_OVFLY_Release#0 (>L:S_CDU1_KEY_OVFLY)
FNX320_CDU1_KEY_P_Press#1 (>L:S_CDU1_KEY_P)
FNX320_CDU1_KEY_P_Release#0 (>L:S_CDU1_KEY_P)
FNX320_CDU1_KEY_PERF_Press#1 (>L:S_CDU1_KEY_PERF)
FNX320_CDU1_KEY_PERF_Release#0 (>L:S_CDU1_KEY_PERF)
FNX320_CDU1_KEY_PROG_Press#1 (>L:S_CDU1_KEY_PROG)
FNX320_CDU1_KEY_PROG_Release#0 (>L:S_CDU1_KEY_PROG)
FNX320_CDU1_KEY_Q_Press#1 (>L:S_CDU1_KEY_Q)
FNX320_CDU1_KEY_Q_Release#0 (>L:S_CDU1_KEY_Q)
FNX320_CDU1_KEY_R_Press#1 (>L:S_CDU1_KEY_R)
FNX320_CDU1_KEY_R_Release#0 (>L:S_CDU1_KEY_R)
FNX320_CDU1_KEY_RAD_NAV_Press#1 (>L:S_CDU1_KEY_RAD_NAV)
FNX320_CDU1_KEY_RAD_NAV_Release#0 (>L:S_CDU1_KEY_RAD_NAV)
FNX320_CDU1_KEY_S_Press#1 (>L:S_CDU1_KEY_S)
FNX320_CDU1_KEY_S_Release#0 (>L:S_CDU1_KEY_S)
FNX320_CDU1_KEY_SEC_FPLN_Press#1 (>L:S_CDU1_KEY_SEC_FPLN)
FNX320_CDU1_KEY_SEC_FPLN_Release#0 (>L:S_CDU1_KEY_SEC_FPLN)
FNX320_CDU1_KEY_SLASH_Press#1 (>L:S_CDU1_KEY_SLASH)
FNX320_CDU1_KEY_SLASH_Release#0 (>L:S_CDU1_KEY_SLASH)
FNX320_CDU1_KEY_SPACE_Press#1 (>L:S_CDU1_KEY_SPACE)
FNX320_CDU1_KEY_SPACE_Release#0 (>L:S_CDU1_KEY_SPACE)
FNX320_CDU1_KEY_T_Press#1 (>L:S_CDU1_KEY_T)
FNX320_CDU1_KEY_T_Release#0 (>L:S_CDU1_KEY_T)
FNX320_CDU1_KEY_U_Press#1 (>L:S_CDU1_KEY_U)
FNX320_CDU1_KEY_U_Release#0 (>L:S_CDU1_KEY_U)
FNX320_CDU1_KEY_V_Press#1 (>L:S_CDU1_KEY_V)
FNX320_CDU1_KEY_V_Release#0 (>L:S_CDU1_KEY_V)
FNX320_CDU1_KEY_W_Press#1 (>L:S_CDU1_KEY_W)
FNX320_CDU1_KEY_W_Release#0 (>L:S_CDU1_KEY_W)
FNX320_CDU1_KEY_X_Press#1 (>L:S_CDU1_KEY_X)
FNX320_CDU1_KEY_X_Release#0 (>L:S_CDU1_KEY_X)
FNX320_CDU1_KEY_Y_Press#1 (>L:S_CDU1_KEY_Y)
FNX320_CDU1_KEY_Y_Release#0 (>L:S_CDU1_KEY_Y)
FNX320_CDU1_KEY_Z_Press#1 (>L:S_CDU1_KEY_Z)
FNX320_CDU1_KEY_Z_Release#0 (>L:S_CDU1_KEY_Z)
FNX320_CDU2_BRIGHTNESS_DOWN_Press#1 (>L:S_CDU2_BRIGHTNESS_DOWN)
FNX320_CDU2_BRIGHTNESS_DOWN_Release#0 (>L:S_CDU2_BRIGHTNESS_DOWN)
FNX320_CDU2_BRIGHTNESS_UP_Press#1 (>L:S_CDU2_BRIGHTNESS_UP)
FNX320_CDU2_BRIGHTNESS_UP_Release#0 (>L:S_CDU2_BRIGHTNESS_UP)
FNX320_CDU2_KEY_0_Press#1 (>L:S_CDU2_KEY_0)
FNX320_CDU2_KEY_0_Release#0 (>L:S_CDU2_KEY_0)
FNX320_CDU2_KEY_1_Press#1 (>L:S_CDU2_KEY_1)
FNX320_CDU2_KEY_1_Release#0 (>L:S_CDU2_KEY_1)
FNX320_CDU2_KEY_2_Press#1 (>L:S_CDU2_KEY_2)
FNX320_CDU2_KEY_2_Release#0 (>L:S_CDU2_KEY_2)
FNX320_CDU2_KEY_3_Press#1 (>L:S_CDU2_KEY_3)
FNX320_CDU2_KEY_3_Release#0 (>L:S_CDU2_KEY_3)
FNX320_CDU2_KEY_4_Press#1 (>L:S_CDU2_KEY_4)
FNX320_CDU2_KEY_4_Release#0 (>L:S_CDU2_KEY_4)
FNX320_CDU2_KEY_5_Press#1 (>L:S_CDU2_KEY_5)
FNX320_CDU2_KEY_5_Release#0 (>L:S_CDU2_KEY_5)
FNX320_CDU2_KEY_6_Press#1 (>L:S_CDU2_KEY_6)
FNX320_CDU2_KEY_6_Release#0 (>L:S_CDU2_KEY_6)
FNX320_CDU2_KEY_7_Press#1 (>L:S_CDU2_KEY_7)
FNX320_CDU2_KEY_7_Release#0 (>L:S_CDU2_KEY_7)
FNX320_CDU2_KEY_8_Press#1 (>L:S_CDU2_KEY_8)
FNX320_CDU2_KEY_8_Release#0 (>L:S_CDU2_KEY_8)
FNX320_CDU2_KEY_9_Press#1 (>L:S_CDU2_KEY_9)
FNX320_CDU2_KEY_9_Release#0 (>L:S_CDU2_KEY_9)
FNX320_CDU2_KEY_A_Press#1 (>L:S_CDU2_KEY_A)
FNX320_CDU2_KEY_A_Release#0 (>L:S_CDU2_KEY_A)
FNX320_CDU2_KEY_AIRPORT_Press#1 (>L:S_CDU2_KEY_AIRPORT)
FNX320_CDU2_KEY_AIRPORT_Release#0 (>L:S_CDU2_KEY_AIRPORT)
FNX320_CDU2_KEY_ARROW_DOWN_Press#1 (>L:S_CDU2_KEY_ARROW_DOWN)
FNX320_CDU2_KEY_ARROW_DOWN_Release#0 (>L:S_CDU2_KEY_ARROW_DOWN)
FNX320_CDU2_KEY_ARROW_LEFT_Press#1 (>L:S_CDU2_KEY_ARROW_LEFT)
FNX320_CDU2_KEY_ARROW_LEFT_Release#0 (>L:S_CDU2_KEY_ARROW_LEFT)
FNX320_CDU2_KEY_ARROW_RIGHT_Press#1 (>L:S_CDU2_KEY_ARROW_RIGHT)
FNX320_CDU2_KEY_ARROW_RIGHT_Release#0 (>L:S_CDU2_KEY_ARROW_RIGHT)
FNX320_CDU2_KEY_ARROW_UP_Press#1 (>L:S_CDU2_KEY_ARROW_UP)
FNX320_CDU2_KEY_ARROW_UP_Release#0 (>L:S_CDU2_KEY_ARROW_UP)
FNX320_CDU2_KEY_ATC_COM_Press#1 (>L:S_CDU2_KEY_ATC_COM)
FNX320_CDU2_KEY_ATC_COM_Release#0 (>L:S_CDU2_KEY_ATC_COM)
FNX320_CDU2_KEY_B_Press#1 (>L:S_CDU2_KEY_B)
FNX320_CDU2_KEY_B_Release#0 (>L:S_CDU2_KEY_B)
FNX320_CDU2_KEY_C_Press#1 (>L:S_CDU2_KEY_C)
FNX320_CDU2_KEY_C_Release#0 (>L:S_CDU2_KEY_C)
FNX320_CDU2_KEY_CLEAR_Press#1 (>L:S_CDU2_KEY_CLEAR)
FNX320_CDU2_KEY_CLEAR_Release#0 (>L:S_CDU2_KEY_CLEAR)
FNX320_CDU2_KEY_D_Press#1 (>L:S_CDU2_KEY_D)
FNX320_CDU2_KEY_D_Release#0 (>L:S_CDU2_KEY_D)
FNX320_CDU2_KEY_DATA_Press#1 (>L:S_CDU2_KEY_DATA)
FNX320_CDU2_KEY_DATA_Release#0 (>L:S_CDU2_KEY_DATA)
FNX320_CDU2_KEY_DIR_Press#1 (>L:S_CDU2_KEY_DIR)
FNX320_CDU2_KEY_DIR_Release#0 (>L:S_CDU2_KEY_DIR)
FNX320_CDU2_KEY_DOT_Press#1 (>L:S_CDU2_KEY_DOT)
FNX320_CDU2_KEY_DOT_Release#0 (>L:S_CDU2_KEY_DOT)
FNX320_CDU2_KEY_E_Press#1 (>L:S_CDU2_KEY_E)
FNX320_CDU2_KEY_E_Release#0 (>L:S_CDU2_KEY_E)
FNX320_CDU2_KEY_F_Press#1 (>L:S_CDU2_KEY_F)
FNX320_CDU2_KEY_F_Release#0 (>L:S_CDU2_KEY_F)
FNX320_CDU2_KEY_FPLN_Press#1 (>L:S_CDU2_KEY_FPLN)
FNX320_CDU2_KEY_FPLN_Release#0 (>L:S_CDU2_KEY_FPLN)
FNX320_CDU2_KEY_FUEL_PRED_Press#1 (>L:S_CDU2_KEY_FUEL_PRED)
FNX320_CDU2_KEY_FUEL_PRED_Release#0 (>L:S_CDU2_KEY_FUEL_PRED)
FNX320_CDU2_KEY_G_Press#1 (>L:S_CDU2_KEY_G)
FNX320_CDU2_KEY_G_Release#0 (>L:S_CDU2_KEY_G)
FNX320_CDU2_KEY_H_Press#1 (>L:S_CDU2_KEY_H)
FNX320_CDU2_KEY_H_Release#0 (>L:S_CDU2_KEY_H)
FNX320_CDU2_KEY_I_Press#1 (>L:S_CDU2_KEY_I)
FNX320_CDU2_KEY_I_Release#0 (>L:S_CDU2_KEY_I)
FNX320_CDU2_KEY_INIT_Press#1 (>L:S_CDU2_KEY_INIT)
FNX320_CDU2_KEY_INIT_Release#0 (>L:S_CDU2_KEY_INIT)
FNX320_CDU2_KEY_J_Press#1 (>L:S_CDU2_KEY_J)
FNX320_CDU2_KEY_J_Release#0 (>L:S_CDU2_KEY_J)
FNX320_CDU2_KEY_K_Press#1 (>L:S_CDU2_KEY_K)
FNX320_CDU2_KEY_K_Release#0 (>L:S_CDU2_KEY_K)
FNX320_CDU2_KEY_L_Press#1 (>L:S_CDU2_KEY_L)
FNX320_CDU2_KEY_L_Release#0 (>L:S_CDU2_KEY_L)
FNX320_CDU2_KEY_LSK1L_Press#1 (>L:S_CDU2_KEY_LSK1L)
FNX320_CDU2_KEY_LSK1L_Release#0 (>L:S_CDU2_KEY_LSK1L)
FNX320_CDU2_KEY_LSK1R_Press#1 (>L:S_CDU2_KEY_LSK1R)
FNX320_CDU2_KEY_LSK1R_Release#0 (>L:S_CDU2_KEY_LSK1R)
FNX320_CDU2_KEY_LSK2L_Press#1 (>L:S_CDU2_KEY_LSK2L)
FNX320_CDU2_KEY_LSK2L_Release#0 (>L:S_CDU2_KEY_LSK2L)
FNX320_CDU2_KEY_LSK2R_Press#1 (>L:S_CDU2_KEY_LSK2R)
FNX320_CDU2_KEY_LSK2R_Release#0 (>L:S_CDU2_KEY_LSK2R)
FNX320_CDU2_KEY_LSK3L_Press#1 (>L:S_CDU2_KEY_LSK3L)
FNX320_CDU2_KEY_LSK3L_Release#0 (>L:S_CDU2_KEY_LSK3L)
FNX320_CDU2_KEY_LSK3R_Press#1 (>L:S_CDU2_KEY_LSK3R)
FNX320_CDU2_KEY_LSK3R_Release#0 (>L:S_CDU2_KEY_LSK3R)
FNX320_CDU2_KEY_LSK4L_Press#1 (>L:S_CDU2_KEY_LSK4L)
FNX320_CDU2_KEY_LSK4L_Release#0 (>L:S_CDU2_KEY_LSK4L)
FNX320_CDU2_KEY_LSK4R_Press#1 (>L:S_CDU2_KEY_LSK4R)
FNX320_CDU2_KEY_LSK4R_Release#0 (>L:S_CDU2_KEY_LSK4R)
FNX320_CDU2_KEY_LSK5L_Press#1 (>L:S_CDU2_KEY_LSK5L)
FNX320_CDU2_KEY_LSK5L_Release#0 (>L:S_CDU2_KEY_LSK5L)
FNX320_CDU2_KEY_LSK5R_Press#1 (>L:S_CDU2_KEY_LSK5R)
FNX320_CDU2_KEY_LSK5R_Release#0 (>L:S_CDU2_KEY_LSK5R)
FNX320_CDU2_KEY_LSK6L_Press#1 (>L:S_CDU2_KEY_LSK6L)
FNX320_CDU2_KEY_LSK6L_Release#0 (>L:S_CDU2_KEY_LSK6L)
FNX320_CDU2_KEY_LSK6R_Press#1 (>L:S_CDU2_KEY_LSK6R)
FNX320_CDU2_KEY_LSK6R_Release#0 (>L:S_CDU2_KEY_LSK6R)
FNX320_CDU2_KEY_M_Press#1 (>L:S_CDU2_KEY_M)
FNX320_CDU2_KEY_M_Release#0 (>L:S_CDU2_KEY_M)
FNX320_CDU2_KEY_MENU_Press#1 (>L:S_CDU2_KEY_MENU)
FNX320_CDU2_KEY_MENU_Release#0 (>L:S_CDU2_KEY_MENU)
FNX320_CDU2_KEY_MINUS_Press#1 (>L:S_CDU2_KEY_MINUS)
FNX320_CDU2_KEY_MINUS_Release#0 (>L:S_CDU2_KEY_MINUS)
FNX320_CDU2_KEY_N_Press#1 (>L:S_CDU2_KEY_N)
FNX320_CDU2_KEY_N_Release#0 (>L:S_CDU2_KEY_N)
FNX320_CDU2_KEY_O_Press#1 (>L:S_CDU2_KEY_O)
FNX320_CDU2_KEY_O_Release#0 (>L:S_CDU2_KEY_O)
FNX320_CDU2_KEY_OVFLY_Press#1 (>L:S_CDU2_KEY_OVFLY)
FNX320_CDU2_KEY_OVFLY_Release#0 (>L:S_CDU2_KEY_OVFLY)
FNX320_CDU2_KEY_P_Press#1 (>L:S_CDU2_KEY_P)
FNX320_CDU2_KEY_P_Release#0 (>L:S_CDU2_KEY_P)
FNX320_CDU2_KEY_PERF_Press#1 (>L:S_CDU2_KEY_PERF)
FNX320_CDU2_KEY_PERF_Release#0 (>L:S_CDU2_KEY_PERF)
FNX320_CDU2_KEY_PROG_Press#1 (>L:S_CDU2_KEY_PROG)
FNX320_CDU2_KEY_PROG_Release#0 (>L:S_CDU2_KEY_PROG)
FNX320_CDU2_KEY_Q_Press#1 (>L:S_CDU2_KEY_Q)
FNX320_CDU2_KEY_Q_Release#0 (>L:S_CDU2_KEY_Q)
FNX320_CDU2_KEY_R_Press#1 (>L:S_CDU2_KEY_R)
FNX320_CDU2_KEY_R_Release#0 (>L:S_CDU2_KEY_R)
FNX320_CDU2_KEY_RAD_NAV_Press#1 (>L:S_CDU2_KEY_RAD_NAV)
FNX320_CDU2_KEY_RAD_NAV_Release#0 (>L:S_CDU2_KEY_RAD_NAV)
FNX320_CDU2_KEY_S_Press#1 (>L:S_CDU2_KEY_S)
FNX320_CDU2_KEY_S_Release#0 (>L:S_CDU2_KEY_S)
FNX320_CDU2_KEY_SEC_FPLN_Press#1 (>L:S_CDU2_KEY_SEC_FPLN)
FNX320_CDU2_KEY_SEC_FPLN_Release#0 (>L:S_CDU2_KEY_SEC_FPLN)
FNX320_CDU2_KEY_SLASH_Press#1 (>L:S_CDU2_KEY_SLASH)
FNX320_CDU2_KEY_SLASH_Release#0 (>L:S_CDU2_KEY_SLASH)
FNX320_CDU2_KEY_SPACE_Press#1 (>L:S_CDU2_KEY_SPACE)
FNX320_CDU2_KEY_SPACE_Release#0 (>L:S_CDU2_KEY_SPACE)
FNX320_CDU2_KEY_T_Press#1 (>L:S_CDU2_KEY_T)
FNX320_CDU2_KEY_T_Release#0 (>L:S_CDU2_KEY_T)
FNX320_CDU2_KEY_U_Press#1 (>L:S_CDU2_KEY_U)
FNX320_CDU2_KEY_U_Release#0 (>L:S_CDU2_KEY_U)
FNX320_CDU2_KEY_V_Press#1 (>L:S_CDU2_KEY_V)
FNX320_CDU2_KEY_V_Release#0 (>L:S_CDU2_KEY_V)
FNX320_CDU2_KEY_W_Press#1 (>L:S_CDU2_KEY_W)
FNX320_CDU2_KEY_W_Release#0 (>L:S_CDU2_KEY_W)
FNX320_CDU2_KEY_X_Press#1 (>L:S_CDU2_KEY_X)
FNX320_CDU2_KEY_X_Release#0 (>L:S_CDU2_KEY_X)
FNX320_CDU2_KEY_Y_Press#1 (>L:S_CDU2_KEY_Y)
FNX320_CDU2_KEY_Y_Release#0 (>L:S_CDU2_KEY_Y)
FNX320_CDU2_KEY_Z_Press#1 (>L:S_CDU2_KEY_Z)
FNX320_CDU2_KEY_Z_Release#0 (>L:S_CDU2_KEY_Z)
FNX320_CDU1_KEY_1_Release#0 (>L:S_CDU1_KEY_1)
FNX320_CDU1_KEY_ATC_COM_Press#1 (>L:S_CDU1_KEY_ATC_COM)
FNX320_CDU1_KEY_DIR_Press#(L:S_CDU1_KEY_DIR) 2 + (>L:S_CDU1_KEY_DIR)
FNX320_RMP1_KEY_VHF1_RELEASE#0 (L:S_PED_RMP1_VHF1) 
FNX320_RMP1_KEY_VHF2_PUSH#1 (L:S_PED_RMP1_VHF2) 
FNX320_RMP1_KEY_VHF2_RELEASE#0 (L:S_PED_RMP1_VHF2) 
//FenixSim/A320/Miscellaneous
FNX320_Glareshield_Chrono_Captain_Button_Press#1 (>L:S_MIP_CHRONO_CAPT)
FNX320_Glareshield_Chrono_Captain_Button_Release#0 (>L:S_MIP_CHRONO_CAPT)
FNX320_Glareshield_Chrono_FO_Button_Press#1 (>L:S_MIP_CHRONO_FO)
FNX320_Glareshield_Chrono_FO_Button_Release#0 (>L:S_MIP_CHRONO_FO)
FNX320_MainPanel_Clock_CHR_Button_Press#1 (>L:S_MIP_CLOCK_CHR)
FNX320_MainPanel_Clock_CHR_Button_Release#0 (>L:S_MIP_CLOCK_CHR)
FNX320_MainPanel_Clock_Date_Button_Press#1 (>L:S_MIP_CLOCK_SET)
FNX320_MainPanel_Clock_Date_Button_Release#0 (>L:S_MIP_CLOCK_SET)
FNX320_MainPanel_Clock_Date_Knob_Dec#(L:E_MIP_CLOCK_SET) -- (>L:E_MIP_CLOCK_SET)
FNX320_MainPanel_Clock_Date_Knob_Inc#(L:E_MIP_CLOCK_SET) ++ (>L:E_MIP_CLOCK_SET)
FNX320_MainPanel_Clock_ET_Selector_Knob_RST#2 (>L:S_MIP_CLOCK_ET)
FNX320_MainPanel_Clock_ET_Selector_Knob_Run#0 (>L:S_MIP_CLOCK_ET)
FNX320_MainPanel_Clock_ET_Selector_Knob_STP#1 (>L:S_MIP_CLOCK_ET)
FNX320_MainPanel_Clock_Reset_Button_Press#1 (>L:S_MIP_CLOCK_RST)
FNX320_MainPanel_Clock_Reset_Button_Release#0 (>L:S_MIP_CLOCK_RST)
FNX320_MainPanel_Clock_UTC_Selector_Knob_GPS#0 (>L:S_MIP_CLOCK_UTC)
FNX320_MainPanel_Clock_UTC_Selector_Knob_INT#1 (>L:S_MIP_CLOCK_UTC)
FNX320_MainPanel_Clock_UTC_Selector_Knob_SET#2 (>L:S_MIP_CLOCK_UTC)
FNX320_Misc_Cockpit_Door_Press#(L:S_COCKPIT_DOOR) ! (>L:S_COCKPIT_DOOR)
FNX320_Misc_Emergency_Gear_Lever_Dec#(L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) 3 == if{ 0 (>L:S_HYD_GRAVITY_GEAR_EXTEND) } (L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) 0.05 - 0 max (>L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION)
FNX320_Misc_Emergency_Gear_Lever_Inc#(L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) 0.05 + 3 min (>L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) (L:S_HYD_GRAVITY_GEAR_EXTEND_ROTATION) 3 == if{ 1 (>L:S_HYD_GRAVITY_GEAR_EXTEND) }
FNX320_Misc_Jumpseat_Headrest_Press#(L:S_JUMPSEAT_HEADREST) ! (>L:S_JUMPSEAT_HEADREST)
FNX320_Misc_Jumpseat_Press#(L:S_JUMPSEAT) ! (>L:S_JUMPSEAT)
FNX320_Misc_Oxygen_Mask_1_Test_Captain_Button_Press#1 (>L:S_OXYGEN_MASK_1_TEST_CAPT)
FNX320_Misc_Oxygen_Mask_1_Test_Captain_Button_Release#0 (>L:S_OXYGEN_MASK_1_TEST_CAPT)
FNX320_Misc_Oxygen_Mask_1_Test_FO_Button_Press#1 (>L:S_OXYGEN_MASK_1_TEST_FO)
FNX320_Misc_Oxygen_Mask_1_Test_FO_Button_Release#0 (>L:S_OXYGEN_MASK_1_TEST_FO)
FNX320_Misc_Oxygen_Mask_2_Test_Captain_Button_Press#1 (>L:S_OXYGEN_MASK_2_TEST_CAPT)
FNX320_Misc_Oxygen_Mask_2_Test_Captain_Button_Release#0 (>L:S_OXYGEN_MASK_2_TEST_CAPT)
FNX320_Misc_Oxygen_Mask_2_Test_FO_Button_Press#1 (>L:S_OXYGEN_MASK_2_TEST_FO)
FNX320_Misc_Oxygen_Mask_2_Test_FO_Button_Release#0 (>L:S_OXYGEN_MASK_2_TEST_FO)
FNX320_Misc_Oxygen_Mask_Cover_Captain_Press#(L:S_OXYGEN_MASK_COVER_CAPT) ! (>L:S_OXYGEN_MASK_COVER_CAPT)
FNX320_Misc_Oxygen_Mask_Cover_FO_Press#(L:S_OXYGEN_MASK_COVER_FO) ! (>L:S_OXYGEN_MASK_COVER_FO)
FNX320_Misc_Seat_Armrest_Left_Captain_Press#(L:S_ARMREST_LEFT_CAPT) ! (>L:S_ARMREST_LEFT_CAPT)
FNX320_Misc_Seat_Armrest_Left_FO_Press#(L:S_ARMREST_LEFT_FO) ! (>L:S_ARMREST_LEFT_FO)
FNX320_Misc_Seat_Armrest_Right_Captain_Press#(L:S_ARMREST_RIGHT_CAPT) ! (>L:S_ARMREST_RIGHT_CAPT)
FNX320_Misc_Seat_Armrest_Right_FO_Press#(L:S_ARMREST_RIGHT_FO) ! (>L:S_ARMREST_RIGHT_FO)
FNX320_Misc_Standby_Compass_Position_Press#(L:S_STANDBY_COMPASS) ! (>L:S_STANDBY_COMPASS)
FNX320_Misc_Sunshade_Captain_Press#(L:S_SUNSHADE_CAPT) ! (>L:S_SUNSHADE_CAPT)
FNX320_Misc_Sunshade_FO_Press#(L:S_SUNSHADE_FO) ! (>L:S_SUNSHADE_FO)
FNX320_Misc_Window_Blinds_Captain_Press#(L:S_WINDOW_BLINDS_CAPT) ! (>L:S_WINDOW_BLINDS_CAPT)
FNX320_Misc_Window_Blinds_FO_Press#(L:S_WINDOW_BLINDS_FO) ! (>L:S_WINDOW_BLINDS_FO)
FNX320_Misc_Window_Blinds_Rear_Captain_Press#(L:S_WINDOW_BLINDS_REAR_CAPT) ! (>L:S_WINDOW_BLINDS_REAR_CAPT)
FNX320_Misc_Window_Blinds_Rear_FO_Press#(L:S_WINDOW_BLINDS_REAR_FO) ! (>L:S_WINDOW_BLINDS_REAR_FO)
FNX320_Overhead_Audio_Switching_Knob_CA#0 (>L:S_AUDIO_SWITCHING)
FNX320_Overhead_Audio_Switching_Knob_FO#2 (>L:S_AUDIO_SWITCHING)
FNX320_Overhead_Audio_Switching_Knob_Norm#1 (>L:S_AUDIO_SWITCHING)
FNX320_Overhead_Svce_Int_Button_Press#1 (>L:S_OH_SVCE_INT_OVRD)
FNX320_Overhead_Svce_Int_Button_Release#0 (>L:S_OH_SVCE_INT_OVRD)
FNX320_Pedestal_AIDS_Print_Button_Press#1 (>L:S_PED_AIDS_PRINT)
FNX320_Pedestal_AIDS_Print_Button_Release#0 (>L:S_PED_AIDS_PRINT)
FNX320_Pedestal_Cockpit_Door_Mode_Switch_Lock#0 (>L:S_PED_COCKPIT_DOOR)
FNX320_Pedestal_Cockpit_Door_Mode_Switch_Mid#1 (>L:S_PED_COCKPIT_DOOR)
FNX320_Pedestal_Cockpit_Door_Mode_Switch_Unlock#2 (>L:S_PED_COCKPIT_DOOR)
FNX320_Pedestal_Cockpit_Door_Video_Button_Press#1 (>L:S_PED_COCKPIT_DOOR_VIDEO)
FNX320_Pedestal_Cockpit_Door_Video_Button_Release#0 (>L:S_PED_COCKPIT_DOOR_VIDEO)
FNX320_Pedestal_DFDR_Event_Button_Press#1 (>L:S_PED_DFDR_EVENT)
FNX320_Pedestal_DFDR_Event_Button_Release#0 (>L:S_PED_DFDR_EVENT)
FNX320_GND_CTL_Toggle#(>L:S_OH_RCRD_GND_CTL) ! (>L:OH_RCRD_GND_CTL) 
FNX320_MISC_CAPT_TRAY_TABLE_TOGGLE#(L:S_TRAY_TABLE_CAPT) ! (>L:S_TRAY_TABLE_CAPT) 
FNX320_MISC_FO_TRAY_TABLE_TOGGLE#(L:S_TRAY_TABLE_FO) ! (>L:S_TRAY_TABLE_FO)
FNX320_OH_CALLS_ALL_Button_Press#(L:S_OH_CALLS_ALL) 2 % 0 == if{ (L:S_OH_CALLS_ALL) ++ (>L:S_OH_CALLS_ALL) }
FNX320_OH_CALLS_ALL_Button_Release#(L:S_OH_CALLS_ALL) 2 % 1 == if{ (L:S_OH_CALLS_ALL) ++ (>L:S_OH_CALLS_ALL) }
FNX320_OH_CAPT_RAIN_RPLNT_Button_Press#(L:S_MISC_WIPER_REPELLENT_CAPT) ++ (>L:S_MISC_WIPER_REPELLENT_CAPT)
FNX320_OH_CAPT_RAIN_RPLNT_Button_Release#(L:S_MISC_WIPER_REPELLENT_CAPT) ++ (>L:S_MISC_WIPER_REPELLENT_CAPT)
FNX320_OH_CAPT_WIPER_KNOB_FAST#2 (>L:S_MISC_WIPER_CAPT)
FNX320_OH_CAPT_WIPER_KNOB_OFF#0 (>L:S_MISC_WIPER_CAPT)
FNX320_OH_CAPT_WIPER_KNOB_SLOW#1 (>L:S_MISC_WIPER_CAPT)
FNX320_OH_FO_RAIN_RPLNT_Button_Press#(L:S_MISC_WIPER_REPELLENT_FO) ++ (>L:S_MISC_WIPER_REPELLENT_FO)
FNX320_OH_FO_RAIN_RPLNT_Button_Release#(L:S_MISC_WIPER_REPELLENT_FO) ++ (>L:S_MISC_WIPER_REPELLENT_FO)
FNX320_OH_FO_WIPER_KNOB_FAST#2 (>L:S_MISC_WIPER_FO)
FNX320_OH_FO_WIPER_KNOB_OFF#0 (>L:S_MISC_WIPER_FO)
FNX320_OH_FO_WIPER_KNOB_SLOW#1 (>L:S_MISC_WIPER_FO)
FNX320_OH_RCDR_CVR_ERASE_Press#(L:S_OH_RCRD_ERASE) ** (>L:S_OH_RCRD_ERASE)
FNX320_OH_RCDR_CVR_ERASE_Release#(L:S_OH_RCRD_ERASE) ** (>L:S_OH_RCRD_ERASE)
FNX320_OH_RCDR_CVR_TEST_Press#(L:S_OH_RCRD_TEST) ++ (>L:S_OH_RCRD_TEST)
FNX320_OH_RCDR_CVR_TEST_Release#(L:S_OH_RCRD_TEST) ++ (>L:S_OH_RCRD_TEST)
FNX320_OH_RCDR_GND_CTL_Press#(L:S_OH_RCRD_GND_CTL) ++ (>L:S_OH_RCRD_GND_CTL)
FNX320_OH_RCDR_GND_CTL_Release#(L:S_OH_RCRD_GND_CTL) ++ (>L:S_OH_RCRD_GND_CTL)
FNX320_Overhead_Cockpit_Door_Video_Button_Press#(L:S_OH_COCKPIT_DOOR_VIDEO) ! (>L:S_OH_COCKPIT_DOOR_VIDEO) 
FNX320_OH_CALLS_AFT-SWITCH#(L:S_OH_CALLS_AFT) ++ (>L:S_OH_CALLS_AFT)
FNX320_OH_CALLS_EMER-COVER#(L:S_OH_CALLS_EMER_Cover) ! (>L:S_OH_CALLS_EMER_Cover)
FNX320_OH_CALLS_EMER_SWITCH#(L:S_OH_CALLS_EMER) ! (>L:S_OH_CALLS_EMER)
FNX320_OH_CALLS_EMER_SWITCH#(L:S_OH_CALLS_EMER) ! (>L:S_OH_CALLS_EMER)
FNX320_OH_CALLS_FWD-SWITCH#(L:S_OH_CALLS_FWD) ++ (>L:S_OH_CALLS_FWD)
FNX320_OH_CALLS_MECH-SWITCH#(L:S_OH_CALLS_MECH) ++ (>L:S_OH_CALLS_MECH)
FNX320_OH_WIPER_CAPT_DEC#(L:S_MISC_WIPER_CAPT) -- 0 max (>L:S_MISC_WIPER_CAPT)
FNX320_OH_WIPER_CAPT_INC#(L:S_MISC_WIPER_CAPT) ++ 2 min (>L:S_MISC_WIPER_CAPT)
FNX320_OH_WIPER_FO_DEC#(L:S_MISC_WIPER_FO) -- 0 max (>L:S_MISC_WIPER_FO)
FNX320_OH_WIPER_FO_INC#(L:S_MISC_WIPER_FO) ++ 2 min (>L:S_MISC_WIPER_FO)
FNX320_SEAT_CAPT_DISTANCE_SWITCH_BACKWARDS#2 (>L:S_SEAT_DISTANCE_CAPT)
FNX320_SEAT_CAPT_DISTANCE_SWITCH_BACKWARDS_STOP#1 (>L:S_SEAT_DISTANCE_CAPT)
FNX320_SEAT_CAPT_DISTANCE_SWITCH_FORWARD#0 (>L:S_SEAT_DISTANCE_CAPT)
FNX320_SEAT_CAPT_DISTANCE_SWITCH_FORWARD_STOP#1 (>L:S_SEAT_DISTANCE_CAPT)
FNX320_SEAT_CAPT_HEIGHT_SWITCH_DOWN#0 (>L:S_SEAT_HEIGHT_CAPT)
FNX320_SEAT_CAPT_HEIGHT_SWITCH_DOWN_STOP#1 (>L:S_SEAT_HEIGHT_CAPT)
FNX320_SEAT_CAPT_HEIGHT_SWITCH_UP#2 (>L:S_SEAT_HEIGHT_CAPT)
FNX320_SEAT_CAPT_HEIGHT_SWITCH_UP_STOP#1 (>L:S_SEAT_HEIGHT_CAPT)
FNX320_SEAT_FO_DISTANCE_SWITCH_BACKWARDS#2 (>L:S_SEAT_DISTANCE_FO)
FNX320_SEAT_FO_DISTANCE_SWITCH_BACKWARDS_STOP#1 (>L:S_SEAT_DISTANCE_FO)
FNX320_SEAT_FO_DISTANCE_SWITCH_FORWARD#0 (>L:S_SEAT_DISTANCE_FO)
FNX320_SEAT_FO_DISTANCE_SWITCH_FORWARD_STOP#1 (>L:S_SEAT_DISTANCE_FO)
FNX320_SEAT_FO_HEIGHT_SWITCH_DOWN#0 (>L:S_SEAT_HEIGHT_FO)
FNX320_SEAT_FO_HEIGHT_SWITCH_DOWN_STOP#1 (>L:S_SEAT_HEIGHT_FO)
FNX320_SEAT_FO_HEIGHT_SWITCH_UP#2 (>L:S_SEAT_HEIGHT_FO)
FNX320_SEAT_FO_HEIGHT_SWITCH_UP_STOP#1 (>L:S_SEAT_HEIGHT_FO)
//FenixSim/A320/Pneumatic
FNX320_Pneumatic_Cross_Bleed_Selector_Knob_AUTO#1 (>L:S_OH_PNEUMATIC_XBLEED_SELECTOR)
FNX320_Pneumatic_Cross_Bleed_Selector_Knob_OPEN#2 (>L:S_OH_PNEUMATIC_XBLEED_SELECTOR)
FNX320_Pneumatic_Cross_Bleed_Selector_Knob_SHUT#0 (>L:S_OH_PNEUMATIC_XBLEED_SELECTOR)
FNX320_Pneumatic_Pack_Flow_Selector_Knob_HIGH#2 (>L:S_OH_PNEUMATIC_PACK_FLOW)
FNX320_Pneumatic_Pack_Flow_Selector_Knob_LOW#0 (>L:S_OH_PNEUMATIC_PACK_FLOW)
FNX320_Pneumatic_Pack_Flow_Selector_Knob_NORMAL#1 (>L:S_OH_PNEUMATIC_PACK_FLOW)
FNX320_Pneumatic_Temp_Cabin_Aft_Selector_Knob_Dec#(L:A_OH_PNEUMATIC_AFT_TEMP) 0.1 - 0 max (>L:A_OH_PNEUMATIC_AFT_TEMP)
FNX320_Pneumatic_Temp_Cabin_Forward_Selector_Knob_Dec#(L:A_OH_PNEUMATIC_FWD_TEMP) 0.1 - 0 max (>L:A_OH_PNEUMATIC_FWD_TEMP)
FNX320_Pneumatic_Temp_Cabin_Forward_Selector_Knob_Inc#(L:A_OH_PNEUMATIC_FWD_TEMP) 0.1 + 1 min (>L:A_OH_PNEUMATIC_FWD_TEMP)
FNX320_Pneumatic_Temp_Cockpit_Selector_Knob_Dec#(L:A_OH_PNEUMATIC_COCKPIT_TEMP) 0.1 - 0 max (>L:A_OH_PNEUMATIC_COCKPIT_TEMP)
FNX320_Pneumatic_Temp_Cockpit_Selector_Knob_Inc#(L:A_OH_PNEUMATIC_COCKPIT_TEMP) 0.1 + 1 min (>L:A_OH_PNEUMATIC_COCKPIT_TEMP)
FNX320_Pneumatic_APU_Bleed_Button_Press#(L:S_OH_PNEUMATIC_APU_BLEED) ! (>L:S_OH_PNEUMATIC_APU_BLEED) 
FNX320_Pneumatic_Cargo_Aft_Isol_Valve_Toggle#(L:S_OH_PNEUMATIC_CARGO_AFT_ISOL_VALVE) ! (>L:S_OH_PNEUMATIC_CARGO_AFT_ISOL_VALVE)
FNX320_Pneumatic_Engine_Bleed_1_Button_Press#(L:S_OH_PNEUMATIC_ENG1_BLEED) ! (>L:S_OH_PNEUMATIC_ENG1_BLEED) 
FNX320_Pneumatic_Engine_Bleed_2_Button_Press#(L:S_OH_PNEUMATIC_ENG2_BLEED) ! (>L:S_OH_PNEUMATIC_ENG2_BLEED) 
FNX320_Pneumatic_Hot_Air_Aft_Cargo_Toggle#(L:S_OH_PNEUMATIC_HOT_AIR_AFT_CARGO) ! (>L:S_OH_PNEUMATIC_HOT_AIR_AFT_CARGO)
FNX320_Pneumatic_Hot_Air_Button_Press#(L:S_OH_PNEUMATIC_HOT_AIR) ! (>L:S_OH_PNEUMATIC_HOT_AIR) 
FNX320_Pneumatic_Pack_1_Button_Press#(L:S_OH_PNEUMATIC_PACK_1) ! (>L:S_OH_PNEUMATIC_PACK_1) 
FNX320_Pneumatic_Pack_2_Button_Press#(L:S_OH_PNEUMATIC_PACK_2) ! (>L:S_OH_PNEUMATIC_PACK_2)
FNX320_Pneumatic_Ram_Air_Button_Press#(L:S_OH_PNEUMATIC_RAM_AIR) ! (>L:S_OH_PNEUMATIC_RAM_AIR) 
FNX320_Pneumatic_Temp_Cabin_Aft_Selector_Knob_Inc#(L:A_OH_PNEUMATIC_AFT_TEMP) 0.1 + 1 min (>L:A_OH_PNEUMATIC_AFT_TEMP)
//FenixSim/A320/Radar
FNX320_WX_GCS_Switch#(L:S_WR_GCS) ! (>L:S_WR_GCS)
FNX320_WX_Image_Selector_Knob_Dec#(L:S_WR_MODE) 0.1 - 0 max (>L:S_WR_MODE)
FNX320_WX_Image_Selector_Knob_Inc#(L:S_WR_MODE) 0.1 + 1 min (>L:S_WR_MODE)
FNX320_WX_Multiscan_Switch#(L:S_WR_MULTISCAN) ! (>L:S_WR_MULTISCAN)
FNX320_WX_System_Switch_1#0 (>L:S_WR_SYS)
FNX320_WX_System_Switch_2#2 (>L:S_WR_SYS)
FNX320_WX_System_Switch_OFF#1 (>L:S_WR_SYS)
FNX320_WX_Gain_Knob_Dec#(L:A_WR_GAIN) -- -5 max (>L:A_WR_GAIN)
FNX320_WX_Gain_Knob_Inc#(L:A_WR_GAIN) ++ 4 min (>L:A_WR_GAIN)
FNX320_WX_PWS_OFF#0 (>L:S_WR_PRED_WS)
FNX320_WX_PWS_ON#1 (>L:S_WR_PRED_WS)
FNX320_WX_PWS_TOGGLE#(L:S_WR_PRED_WS) ! (>L:S_WR_PRED_WS)
FNX320_WX_System_Switch_1_Toggle#(L:S_WR_SYS) ! (>L:S_WR_SYS)
FNX320_WX_System_Switch_2_Toggle#(L::S_WR_SYS) 1 == if{ 2 (>L::S_WR_SYS) } els{ 1 (>L::S_WR_SYS) }
FNX320_WX_Tilt_Knob_Dec#(L:A_WR_TILT) -- -15 max (>L:A_WR_TILT)
FNX320_WX_Tilt_Knob_Inc#(L:A_WR_TILT) ++ 15 min (>L:A_WR_TILT)
//FenixSim/A320/Radio
FNX320_ACP1_ADF_1_Volume_Knob_Dec#(L:A_ASP_ADF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_ADF_1_VOLUME)
FNX320_ACP1_ADF_1_Volume_Knob_Inc#(L:A_ASP_ADF_1_VOLUME) 0.05 + 1 min (>L:A_ASP_ADF_1_VOLUME)
FNX320_ACP1_ADF_2_Volume_Knob_Dec#(L:A_ASP_ADF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_ADF_2_VOLUME)
FNX320_ACP1_ADF_2_Volume_Knob_Inc#(L:A_ASP_ADF_2_VOLUME) 0.05 + 1 min (>L:A_ASP_ADF_2_VOLUME)
FNX320_ACP1_CAB_Volume_Knob_Dec#(L:A_ASP_CAB_VOLUME) 0.05 - 0 max (>L:A_ASP_CAB_VOLUME)
FNX320_ACP1_CAB_Volume_Knob_Inc#(L:A_ASP_CAB_VOLUME) 0.05 + 1 min (>L:A_ASP_CAB_VOLUME)
FNX320_ACP1_HF_1_Volume_Knob_Dec#(L:A_ASP_HF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_HF_1_VOLUME)
FNX320_ACP1_HF_1_Volume_Knob_Inc#(L:A_ASP_HF_1_VOLUME) 0.05 + 1 min (>L:A_ASP_HF_1_VOLUME)
FNX320_ACP1_HF_2_Volume_Knob_Dec#(L:A_ASP_HF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_HF_2_VOLUME)
FNX320_ACP1_HF_2_Volume_Knob_Inc#(L:A_ASP_HF_2_VOLUME) 0.05 + 1 min (>L:A_ASP_HF_2_VOLUME)
FNX320_ACP1_ILS_Volume_Knob_Dec#(L:A_ASP_ILS_VOLUME) 0.05 - 0 max (>L:A_ASP_ILS_VOLUME)
FNX320_ACP1_ILS_Volume_Knob_Inc#(L:A_ASP_ILS_VOLUME) 0.05 + 1 min (>L:A_ASP_ILS_VOLUME)
FNX320_ACP1_INT_Volume_Knob_Dec#(L:A_ASP_INT_VOLUME) 0.05 - 0 max (>L:A_ASP_INT_VOLUME)
FNX320_ACP1_INT_Volume_Knob_Inc#(L:A_ASP_INT_VOLUME) 0.05 + 1 min (>L:A_ASP_INT_VOLUME)
FNX320_ACP1_INTRAD_Switch_INT#0 (>L:S_ASP_INTRAD)
FNX320_ACP1_INTRAD_Switch_OFF#1 (>L:S_ASP_INTRAD)
FNX320_ACP1_INTRAD_Switch_RAD#2 (>L:S_ASP_INTRAD)
FNX320_ACP1_MARKER_Volume_Knob_Dec#(L:A_ASP_MARKER_VOLUME) 0.05 - 0 max (>L:A_ASP_MARKER_VOLUME)
FNX320_ACP1_MARKER_Volume_Knob_Inc#(L:A_ASP_MARKER_VOLUME) 0.05 + 1 min (>L:A_ASP_MARKER_VOLUME)
FNX320_ACP1_MLS_Volume_Knob_Dec#(L:A_ASP_MLS_VOLUME) 0.05 - 0 max (>L:A_ASP_MLS_VOLUME)
FNX320_ACP1_MLS_Volume_Knob_Inc#(L:A_ASP_MLS_VOLUME) 0.05 + 1 min (>L:A_ASP_MLS_VOLUME)
FNX320_ACP1_PA_Volume_Knob_Dec#(L:A_ASP_PA_VOLUME) 0.05 - 0 max (>L:A_ASP_PA_VOLUME)
FNX320_ACP1_PA_Volume_Knob_Inc#(L:A_ASP_PA_VOLUME) 0.05 + 1 min (>L:A_ASP_PA_VOLUME)
FNX320_ACP1_VHF_1_Volume_Knob_Dec#(L:A_ASP_VHF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_1_VOLUME)
FNX320_ACP1_VHF_1_Volume_Knob_Inc#(L:A_ASP_VHF_1_VOLUME) 0.05 + 1 min (>L:A_ASP_VHF_1_VOLUME)
FNX320_ACP1_VHF_2_Volume_Knob_Dec#(L:A_ASP_VHF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_2_VOLUME)
FNX320_ACP1_VHF_2_Volume_Knob_Inc#(L:A_ASP_VHF_2_VOLUME) 0.05 + 1 min (>L:A_ASP_VHF_2_VOLUME)
FNX320_ACP1_VHF_3_Volume_Knob_Dec#(L:A_ASP_VHF_3_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_3_VOLUME)
FNX320_ACP1_VHF_3_Volume_Knob_Inc#(L:A_ASP_VHF_3_VOLUME) 0.05 + 1 min (>L:A_ASP_VHF_3_VOLUME)
FNX320_ACP1_VOR_1_Volume_Knob_Dec#(L:A_ASP_VOR_1_VOLUME) 0.05 - 0 max (>L:A_ASP_VOR_1_VOLUME)
FNX320_ACP1_VOR_1_Volume_Knob_Inc#(L:A_ASP_VOR_1_VOLUME) 0.05 + 1 min (>L:A_ASP_VOR_1_VOLUME)
FNX320_ACP1_VOR_2_Volume_Knob_Dec#(L:A_ASP_VOR_2_VOLUME) 0.05 - 0 max (>L:A_ASP_VOR_2_VOLUME)
FNX320_ACP1_VOR_2_Volume_Knob_Inc#(L:A_ASP_VOR_2_VOLUME) 0.05 + 1 min (>L:A_ASP_VOR_2_VOLUME)
FNX320_ACP2_ADF_1_Volume_Knob_Dec#(L:A_ASP_ADF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_ADF_1_VOLUME)
FNX320_ACP2_ADF_1_Volume_Knob_Inc#(L:A_ASP2_ADF_1_VOLUME) 0.05 + 1 min (>L:A_ASP2_ADF_1_VOLUME)
FNX320_ACP2_ADF_2_Volume_Knob_Dec#(L:A_ASP_ADF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_ADF_2_VOLUME)
FNX320_ACP2_ADF_2_Volume_Knob_Inc#(L:A_ASP2_ADF_2_VOLUME) 0.05 + 1 min (>L:A_ASP2_ADF_2_VOLUME)
FNX320_ACP2_CAB_Send_Button_Press#1 (>L:S_ASP2_CAB_SEND)
FNX320_ACP2_CAB_Send_Button_Release#0 (>L:S_ASP2_CAB_SEND)
FNX320_ACP2_CAB_Volume_Knob_Dec#(L:A_ASP_CAB_VOLUME) 0.05 - 0 max (>L:A_ASP_CAB_VOLUME)
FNX320_ACP2_CAB_Volume_Knob_Inc#(L:A_ASP2_CAB_VOLUME) 0.05 + 1 min (>L:A_ASP2_CAB_VOLUME)
FNX320_ACP2_HF_1_Send_Button_Press#1 (>L:S_ASP2_HF_1_SEND)
FNX320_ACP2_HF_1_Send_Button_Release#0 (>L:S_ASP2_HF_1_SEND)
FNX320_ACP2_HF_1_Volume_Knob_Dec#(L:A_ASP_HF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_HF_1_VOLUME)
FNX320_ACP2_HF_1_Volume_Knob_Inc#(L:A_ASP2_HF_1_VOLUME) 0.05 + 1 min (>L:A_ASP2_HF_1_VOLUME)
FNX320_ACP2_HF_2_Send_Button_Press#1 (>L:S_ASP2_HF_2_SEND)
FNX320_ACP2_HF_2_Send_Button_Release#0 (>L:S_ASP2_HF_2_SEND)
FNX320_ACP2_HF_2_Volume_Knob_Dec#(L:A_ASP_HF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_HF_2_VOLUME)
FNX320_ACP2_HF_2_Volume_Knob_Inc#(L:A_ASP2_HF_2_VOLUME) 0.05 + 1 min (>L:A_ASP2_HF_2_VOLUME)
FNX320_ACP2_ILS_Volume_Knob_Dec#(L:A_ASP_ILS_VOLUME) 0.05 - 0 max (>L:A_ASP_ILS_VOLUME)
FNX320_ACP2_ILS_Volume_Knob_Inc#(L:A_ASP2_ILS_VOLUME) 0.05 + 1 min (>L:A_ASP2_ILS_VOLUME)
FNX320_ACP2_INT_Send_Button_Press#1 (>L:S_ASP2_INT_SEND)
FNX320_ACP2_INT_Send_Button_Release#0 (>L:S_ASP2_INT_SEND)
FNX320_ACP2_INT_Volume_Knob_Dec#(L:A_ASP_INT_VOLUME) 0.05 - 0 max (>L:A_ASP_INT_VOLUME)
FNX320_ACP2_INT_Volume_Knob_Inc#(L:A_ASP2_INT_VOLUME) 0.05 + 1 min (>L:A_ASP2_INT_VOLUME)
FNX320_ACP2_INTRAD_Switch_INT#0 (>L:S_ASP2_INTRAD)
FNX320_ACP2_INTRAD_Switch_OFF#1 (>L:S_ASP2_INTRAD)
FNX320_ACP2_INTRAD_Switch_RAD#2 (>L:S_ASP2_INTRAD)
FNX320_ACP2_MARKER_Volume_Knob_Dec#(L:A_ASP_MARKER_VOLUME) 0.05 - 0 max (>L:A_ASP_MARKER_VOLUME)
FNX320_ACP2_MARKER_Volume_Knob_Inc#(L:A_ASP2_MARKER_VOLUME) 0.05 + 1 min (>L:A_ASP2_MARKER_VOLUME)
FNX320_ACP2_MLS_Volume_Knob_Dec#(L:A_ASP_MLS_VOLUME) 0.05 - 0 max (>L:A_ASP_MLS_VOLUME)
FNX320_ACP2_MLS_Volume_Knob_Inc#(L:A_ASP2_MLS_VOLUME) 0.05 + 1 min (>L:A_ASP2_MLS_VOLUME)
FNX320_ACP2_PA_SEND_Button_Press#1 (>L:S_ASP2_PA_SEND)
FNX320_ACP2_PA_SEND_Button_Release#0 (>L:S_ASP2_PA_SEND)
FNX320_ACP2_PA_Volume_Knob_Inc#(L:A_ASP2_PA_VOLUME) 0.05 + 1 min (>L:A_ASP2_PA_VOLUME)
FNX320_ACP2_PA_Volume_Knob_Release#(L:A_ASP_PA_VOLUME) 0.05 - 0 max (>L:A_ASP_PA_VOLUME)
FNX320_ACP2_RESET_Button_Press#1 (>L:S_ASP2_RESET)
FNX320_ACP2_RESET_Button_Release#0 (>L:S_ASP2_RESET)
FNX320_ACP2_VHF_1_Send_Button_Press#1 (>L:S_ASP2_VHF_1_SEND)
FNX320_ACP2_VHF_1_Send_Button_Release#0 (>L:S_ASP2_VHF_1_SEND)
FNX320_ACP2_VHF_1_Volume_Knob_Dec#(L:A_ASP_VHF_1_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_1_VOLUME)
FNX320_ACP2_VHF_1_Volume_Knob_Inc#(L:A_ASP2_VHF_1_VOLUME) 0.05 + 1 min (>L:A_ASP2_VHF_1_VOLUME)
FNX320_ACP2_VHF_2_Send_Button_Press#1 (>L:S_ASP2_VHF_2_SEND)
FNX320_ACP2_VHF_2_Send_Button_Release#0 (>L:S_ASP2_VHF_2_SEND)
FNX320_ACP2_VHF_2_Volume_Knob_Dec#(L:A_ASP_VHF_2_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_2_VOLUME)
FNX320_ACP2_VHF_2_Volume_Knob_Inc#(L:A_ASP2_VHF_2_VOLUME) 0.05 + 1 min (>L:A_ASP2_VHF_2_VOLUME)
FNX320_ACP2_VHF_3_Send_Button_Press#1 (>L:S_ASP2_VHF_3_SEND)
FNX320_ACP2_VHF_3_Send_Button_Release#0 (>L:S_ASP2_VHF_3_SEND)
FNX320_ACP2_VHF_3_Volume_Knob_Dec#(L:A_ASP_VHF_3_VOLUME) 0.05 - 0 max (>L:A_ASP_VHF_3_VOLUME)
FNX320_ACP2_VHF_3_Volume_Knob_Inc#(L:A_ASP2_VHF_3_VOLUME) 0.05 + 1 min (>L:A_ASP2_VHF_3_VOLUME)
FNX320_ACP2_VOICE_Button_Press#1 (>L:S_ASP2_VOICE)
FNX320_ACP2_VOICE_Button_Release#0 (>L:S_ASP2_VOICE)
FNX320_ACP2_VOR_1_Volume_Knob_Dec#(L:A_ASP_VOR_1_VOLUME) 0.05 - 0 max (>L:A_ASP_VOR_1_VOLUME)
FNX320_ACP2_VOR_1_Volume_Knob_Inc#(L:A_ASP2_VOR_1_VOLUME) 0.05 + 1 min (>L:A_ASP2_VOR_1_VOLUME)
FNX320_ACP2_VOR_2_Volume_Knob_Dec#(L:A_ASP_VOR_2_VOLUME) 0.05 - 0 max (>L:A_ASP_VOR_2_VOLUME)
FNX320_ACP2_VOR_2_Volume_Knob_Inc#(L:A_ASP2_VOR_2_VOLUME) 0.05 + 1 min (>L:A_ASP2_VOR_2_VOLUME)
FNX320_ACP3_ADF_1_Volume_Knob_Dec#(L:A_ASP3_ADF_1_VOLUME) 0.05 - 0 max (>L:A_ASP3_ADF_1_VOLUME)
FNX320_ACP3_ADF_1_Volume_Knob_Inc#(L:A_ASP3_ADF_1_VOLUME) 0.05 + 1 min (>L:A_ASP3_ADF_1_VOLUME)
FNX320_ACP3_ADF_2_Volume_Knob_Dec#(L:A_ASP3_ADF_2_VOLUME) 0.05 - 0 max (>L:A_ASP3_ADF_2_VOLUME)
FNX320_ACP3_ADF_2_Volume_Knob_Inc#(L:A_ASP3_ADF_2_VOLUME) 0.05 + 1 min (>L:A_ASP3_ADF_2_VOLUME)
FNX320_ACP3_CAB_Send_Button_Press#1 (>L:S_ASP3_CAB_SEND)
FNX320_ACP3_CAB_Send_Button_Release#0 (>L:S_ASP3_CAB_SEND)
FNX320_ACP3_CAB_Volume_Knob_Dec#(L:A_ASP3_CAB_VOLUME) 0.05 - 0 max (>L:A_ASP3_CAB_VOLUME)
FNX320_ACP3_CAB_Volume_Knob_Inc#(L:A_ASP3_CAB_VOLUME) 0.05 + 1 min (>L:A_ASP3_CAB_VOLUME)
FNX320_ACP3_HF_1_Send_Button_Press#1 (>L:S_ASP3_HF_1_SEND)
FNX320_ACP3_HF_1_Send_Button_Release#0 (>L:S_ASP3_HF_1_SEND)
FNX320_ACP3_HF_1_Volume_Knob_Dec#(L:A_ASP3_HF_1_VOLUME) 0.05 - 0 max (>L:A_ASP3_HF_1_VOLUME)
FNX320_ACP3_HF_1_Volume_Knob_Inc#(L:A_ASP3_HF_1_VOLUME) 0.05 + 1 min (>L:A_ASP3_HF_1_VOLUME)
FNX320_ACP3_HF_2_Send_Button_Press#1 (>L:S_ASP3_HF_2_SEND)
FNX320_ACP3_HF_2_Send_Button_Release#0 (>L:S_ASP3_HF_2_SEND)
FNX320_ACP3_HF_2_Volume_Knob_Dec#(L:A_ASP3_HF_2_VOLUME) 0.05 - 0 max (>L:A_ASP3_HF_2_VOLUME)
FNX320_ACP3_HF_2_Volume_Knob_Inc#(L:A_ASP3_HF_2_VOLUME) 0.05 + 1 min (>L:A_ASP3_HF_2_VOLUME)
FNX320_ACP3_ILS_Volume_Knob_Dec#(L:A_ASP3_ILS_VOLUME) 0.05 - 0 max (>L:A_ASP3_ILS_VOLUME)
FNX320_ACP3_ILS_Volume_Knob_Inc#(L:A_ASP3_ILS_VOLUME) 0.05 + 1 min (>L:A_ASP3_ILS_VOLUME)
FNX320_ACP3_INT_Send_Button_Press#1 (>L:S_ASP3_INT_SEND)
FNX320_ACP3_INT_Send_Button_Release#0 (>L:S_ASP3_INT_SEND)
FNX320_ACP3_INT_Volume_Knob_Dec#(L:A_ASP3_INT_VOLUME) 0.05 - 0 max (>L:A_ASP3_INT_VOLUME)
FNX320_ACP3_INT_Volume_Knob_Inc#(L:A_ASP3_INT_VOLUME) 0.05 + 1 min (>L:A_ASP3_INT_VOLUME)
FNX320_ACP3_INTRAD_Switch_INT#0 (>L:S_ASP3_INTRAD)
FNX320_ACP3_INTRAD_Switch_OFF#1 (>L:S_ASP3_INTRAD)
FNX320_ACP3_INTRAD_Switch_RAD#2 (>L:S_ASP3_INTRAD)
FNX320_ACP3_MARKER_Volume_Knob_Dec#(L:A_ASP3_MARKER_VOLUME) 0.05 - 0 max (>L:A_ASP3_MARKER_VOLUME)
FNX320_ACP3_MARKER_Volume_Knob_Inc#(L:A_ASP3_MARKER_VOLUME) 0.05 + 1 min (>L:A_ASP3_MARKER_VOLUME)
FNX320_ACP3_MLS_Volume_Knob_Dec#(L:A_ASP3_MLS_VOLUME) 0.05 - 0 max (>L:A_ASP3_MLS_VOLUME)
FNX320_ACP3_MLS_Volume_Knob_Inc#(L:A_ASP3_MLS_VOLUME) 0.05 + 1 min (>L:A_ASP3_MLS_VOLUME)
FNX320_ACP3_PA_SEND_Button_Press#1 (>L:S_ASP3_PA_SEND)
FNX320_ACP3_PA_SEND_Button_Release#0 (>L:S_ASP3_PA_SEND)
FNX320_ACP3_PA_Volume_Knob_Inc#(L:A_ASP3_PA_VOLUME) 0.05 + 1 min (>L:A_ASP3_PA_VOLUME)
FNX320_ACP3_PA_Volume_Knob_Release#(L:A_ASP3_PA_VOLUME) 0.05 - 0 max (>L:A_ASP3_PA_VOLUME)
FNX320_ACP3_RESET_Button_Press#1 (>L:S_ASP3_RESET)
FNX320_ACP3_RESET_Button_Release#0 (>L:S_ASP3_RESET)
FNX320_ACP3_VHF_1_Send_Button_Press#1 (>L:S_ASP3_VHF_1_SEND)
FNX320_ACP3_VHF_1_Send_Button_Release#0 (>L:S_ASP3_VHF_1_SEND)
FNX320_ACP3_VHF_1_Volume_Knob_Dec#(L:A_ASP3_VHF_1_VOLUME) 0.05 - 0 max (>L:A_ASP3_VHF_1_VOLUME)
FNX320_ACP3_VHF_1_Volume_Knob_Inc#(L:A_ASP3_VHF_1_VOLUME) 0.05 + 1 min (>L:A_ASP3_VHF_1_VOLUME)
FNX320_ACP3_VHF_2_Send_Button_Press#1 (>L:S_ASP3_VHF_2_SEND)
FNX320_ACP3_VHF_2_Send_Button_Release#0 (>L:S_ASP3_VHF_2_SEND)
FNX320_ACP3_VHF_2_Volume_Knob_Dec#(L:A_ASP3_VHF_2_VOLUME) 0.05 - 0 max (>L:A_ASP3_VHF_2_VOLUME)
FNX320_ACP3_VHF_2_Volume_Knob_Inc#(L:A_ASP3_VHF_2_VOLUME) 0.05 + 1 min (>L:A_ASP3_VHF_2_VOLUME)
FNX320_ACP3_VHF_3_Send_Button_Press#1 (>L:S_ASP3_VHF_3_SEND)
FNX320_ACP3_VHF_3_Send_Button_Release#0 (>L:S_ASP3_VHF_3_SEND)
FNX320_ACP3_VHF_3_Volume_Knob_Dec#(L:A_ASP3_VHF_3_VOLUME) 0.05 - 0 max (>L:A_ASP3_VHF_3_VOLUME)
FNX320_ACP3_VHF_3_Volume_Knob_Inc#(L:A_ASP3_VHF_3_VOLUME) 0.05 + 1 min (>L:A_ASP3_VHF_3_VOLUME)
FNX320_ACP3_VOICE_Button_Press#1 (>L:S_ASP3_VOICE)
FNX320_ACP3_VOICE_Button_Release#0 (>L:S_ASP3_VOICE)
FNX320_ACP3_VOR_1_Volume_Knob_Dec#(L:A_ASP3_VOR_1_VOLUME) 0.05 - 0 max (>L:A_ASP3_VOR_1_VOLUME)
FNX320_ACP3_VOR_1_Volume_Knob_Inc#(L:A_ASP3_VOR_1_VOLUME) 0.05 + 1 min (>L:A_ASP3_VOR_1_VOLUME)
FNX320_ACP3_VOR_2_Volume_Knob_Dec#(L:A_ASP3_VOR_2_VOLUME) 0.05 - 0 max (>L:A_ASP3_VOR_2_VOLUME)
FNX320_ACP3_VOR_2_Volume_Knob_Inc#(L:A_ASP3_VOR_2_VOLUME) 0.05 + 1 min (>L:A_ASP3_VOR_2_VOLUME)
FNX320_Glareshield_ATC_Captain_Button_Press#1 (>L:S_MIP_ATC_MSG_CAPT)
FNX320_Glareshield_ATC_Captain_Button_Release#0 (>L:S_MIP_ATC_MSG_CAPT)
FNX320_Glareshield_ATC_FO_Button_Press#1 (>L:S_MIP_ATC_MSG_FO)
FNX320_Glareshield_ATC_FO_Button_Release#0 (>L:S_MIP_ATC_MSG_FO)
FNX320_MainPanel_Loud_Speaker_Captain_Knob_Dec#(L:A_MIP_LOUDSPEAKER_CAPT) 0.1 - 0 max (>L:A_MIP_LOUDSPEAKER_CAPT)
FNX320_MainPanel_Loud_Speaker_Captain_Knob_Inc#(L:A_MIP_LOUDSPEAKER_CAPT) 0.1 + 1 min (>L:A_MIP_LOUDSPEAKER_CAPT)
FNX320_MainPanel_Loud_Speaker_Captain_Knob_Press#0.1 (>L:A_MIP_LOUDSPEAKER_CAPT)
FNX320_MainPanel_Loud_Speaker_FO_Knob_Dec#(L:A_MIP_LOUDSPEAKER_FO) 0.1 - 0 max (>L:A_MIP_LOUDSPEAKER_FO)
FNX320_MainPanel_Loud_Speaker_FO_Knob_Inc#(L:A_MIP_LOUDSPEAKER_FO) 0.1 + 1 min (>L:A_MIP_LOUDSPEAKER_FO)
FNX320_MainPanel_Loud_Speaker_FO_Knob_Press#0.1 (>L:A_MIP_LOUDSPEAKER_FO)
FNX320_Switching_AIR_DATA_Knob_CAPT#0 (>L:S_DISPLAY_AIR_DATA)
FNX320_Switching_AIR_DATA_Knob_FO#2 (>L:S_DISPLAY_AIR_DATA)
FNX320_Switching_AIR_DATA_Knob_Normal#1 (>L:S_DISPLAY_AIR_DATA)
FNX320_Switching_ATT_HDG_Knob_CAPT#0 (>L:S_DISPLAY_ATT_HDG)
FNX320_Switching_ATT_HDG_Knob_FO#2 (>L:S_DISPLAY_ATT_HDG)
FNX320_Switching_ATT_HDG_Knob_Normal#1 (>L:S_DISPLAY_ATT_HDG)
FNX320_Switching_ECAM_ND_XFR_Knob_CAPT#0 (>L:S_DISPLAY_ECAM_ND_XFR)
FNX320_Switching_ECAM_ND_XFR_Knob_FO#2 (>L:S_DISPLAY_ECAM_ND_XFR)
FNX320_Switching_ECAM_ND_XFR_Knob_Normal#1 (>L:S_DISPLAY_ECAM_ND_XFR)
FNX320_Switching_EIS_DMC_Knob__CAPT#0 (>L:S_DISPLAY_EIS_DMC)
FNX320_Switching_EIS_DMC_Knob__FO#2 (>L:S_DISPLAY_EIS_DMC)
FNX320_Switching_EIS_DMC_Knob__Normal#1 (>L:S_DISPLAY_EIS_DMC)
FNX320_Transponder_0_Button_Press#1 (>L:S_PED_ATC_0)
FNX320_Transponder_0_Button_Release#0 (>L:S_PED_ATC_0)
FNX320_Transponder_1_Button_Press#1 (>L:S_PED_ATC_1)
FNX320_Transponder_1_Button_Release#0 (>L:S_PED_ATC_1)
FNX320_Transponder_2_Button_Press#1 (>L:S_PED_ATC_2)
FNX320_Transponder_2_Button_Release#0 (>L:S_PED_ATC_2)
FNX320_Transponder_3_Button_Press#1 (>L:S_PED_ATC_3)
FNX320_Transponder_3_Button_Release#0 (>L:S_PED_ATC_3)
FNX320_Transponder_4_Button_Press#1 (>L:S_PED_ATC_4)
FNX320_Transponder_4_Button_Release#0 (>L:S_PED_ATC_4)
FNX320_Transponder_5_Button_Press#1 (>L:S_PED_ATC_5)
FNX320_Transponder_5_Button_Release#0 (>L:S_PED_ATC_5)
FNX320_Transponder_6_Button_Press#1 (>L:S_PED_ATC_6)
FNX320_Transponder_6_Button_Release#0 (>L:S_PED_ATC_6)
FNX320_Transponder_7_Button_Press#1 (>L:S_PED_ATC_7)
FNX320_Transponder_7_Button_Release#0 (>L:S_PED_ATC_7)
FNX320_Transponder_Clear_Button_Press#1 (>L:S_PED_ATC_CLR)
FNX320_Transponder_Clear_Button_Release#0 (>L:S_PED_ATC_CLR)
FNX320_Transponder_Ident_Button_Press#1 (>L:S_XPDR_IDENT)
FNX320_Transponder_Ident_Button_Release#0 (>L:S_XPDR_IDENT)
FNX320_Transponder_Mode_Knob_STBY#0 (>L:S_XPDR_MODE)
FNX320_Transponder_Mode_Knob_TA#1 (>L:S_XPDR_MODE)
FNX320_Transponder_Mode_Knob_TARA#2 (>L:S_XPDR_MODE)
FNX320_Transponder_Operation_Knob_AUTO#1 (>L:S_XPDR_OPERATION)
FNX320_Transponder_Operation_Knob_ON#2 (>L:S_XPDR_OPERATION)
FNX320_Transponder_Operation_Knob_STBY#0 (>L:S_XPDR_OPERATION)
FNX320_ACP1_CAB_Receive_Toggle#(L:S_ASP_CAB_REC_LATCH) ! (>L:S_ASP_CAB_REC_LATCH)
FNX320_ACP1_CAB_Send_Button_Press#1 (>L:S_ASP_CAB_SEND)
FNX320_ACP1_CAB_Send_Button_Release#0 (>L:S_ASP_CAB_SEND)
FNX320_ACP1_HF_1_Send_Button_Press#1 (>L:S_ASP_HF_1_SEND)
FNX320_ACP1_HF_1_Send_Button_Release#0 (>L:S_ASP_HF_1_SEND)
FNX320_ACP1_HF_2_Send_Button_Press#1 (>L:S_ASP_HF_2_SEND)
FNX320_ACP1_HF_2_Send_Button_Release#0 (>L:S_ASP_HF_2_SEND)
FNX320_ACP1_INT_Send_Button_Press#1 (>L:S_ASP_INT_SEND)
FNX320_ACP1_INT_Send_Button_Release#0 (>L:S_ASP_INT_SEND)
FNX320_ACP1_PA_SEND_Button_Press#1 (>L:S_ASP_PA_SEND)
FNX320_ACP1_PA_SEND_Button_Release#0 (>L:S_ASP_PA_SEND)
FNX320_ACP1_RESET_Button_Press#1 (>L:S_ASP_RESET)
FNX320_ACP1_RESET_Button_Release#0 (>L:S_ASP_RESET)
FNX320_ACP1_VHF_1_Receive_Toggle#(L:S_ASP_VHF_1_REC_LATCH) ! (>L:S_ASP_VHF_1_REC_LATCH)
FNX320_ACP1_VHF_1_Send_Button_Press#1 (>L:S_ASP_VHF_1_SEND)
FNX320_ACP1_VHF_1_Send_Button_Release#0 (>L:S_ASP_VHF_1_SEND)
FNX320_ACP1_VHF_2_Send_Button_Press#1 (>L:S_ASP_VHF_2_SEND)
FNX320_ACP1_VHF_2_Send_Button_Release#0 (>L:S_ASP_VHF_2_SEND)
FNX320_ACP1_VHF_3_Send_Button_Press#1 (>L:S_ASP_VHF_3_SEND)
FNX320_ACP1_VHF_3_Send_Button_Release#0 (>L:S_ASP_VHF_3_SEND)
FNX320_ACP1_VOICE_Button_Press#1 (>L:S_ASP_VOICE)
FNX320_ACP1_VOICE_Button_Release#0 (>L:S_ASP_VOICE)
FNX320_RMP1_POWER_SWITCH_TOGGLE#(L:S_PED_RMP1_POWER) ! (>L:S_PED_RMP1_POWER)
FNX320_RMP1_Power_Switch_OFF#0 (>L:S_PED_RMP1_POWER)
FNX320_RMP1_Power_Switch_ON#1 (>L:S_PED_RMP1_POWER)
FNX320_RMP2_POWER_SWITCH_OFF#0 (>L:S_PED_RMP2_POWER)
FNX320_RMP2_POWER_SWITCH_ON#1 (>L:S_PED_RMP2_POWER)
FNX320_RMP2_POWER_SWITCH_TOGGLE#(L:S_PED_RMP2_POWER) ! (>L:S_PED_RMP2_POWER)
FNX320_Transponder_ATC_Switch#(L:S_XPDR_ATC) ! (>L:S_XPDR_ATC)
FNX320_Transponder_Alt_Reporting_Off#0 (>L:S_XPDR_ALTREPORTING)
FNX320_Transponder_Alt_Reporting_On#1 (>L:S_XPDR_ALTREPORTING)
FNX320_Transponder_Alt_Reporting_Toggle#(L:S_XPDR_ALTREPORTING) ! (>L:S_XPDR_ALTREPORTING)
FNX320_Transponder_TCAS_Range_Knob_Dec#(L:S_TCAS_RANGE) 1 - 0 max (>L:S_TCAS_RANGE)
FNX320_Transponder_TCAS_Range_Knob_Inc#(L:S_TCAS_RANGE) 1 + 3 min (>L:S_TCAS_RANGE)
FNX320_Transponder_TCAS_Traffic_ABV_Mode#2 (>L:S_TCAS_RANGE)
FNX320_Transponder_TCAS_Traffic_ALL_Mode#1 (>L:S_TCAS_RANGE)
FNX320_Transponder_TCAS_Traffic_BLW_Mode#3 (>L:S_TCAS_RANGE)
FNX320_Transponder_TCAS_Traffic_THRT_Mode#0 (>L:S_TCAS_RANGE)
FNX320_RADIO_1_XFER_PUSH#(L:S_PED_RMP1_XFER) ++ (>L:S_PED_RMP1_XFER)
FNX320_RADIO_1_XFER_RELEASE#(L:S_PED_RMP1_XFER) ++ (>L:S_PED_RMP1_XFER)
FNX320_RADIO_2_XFER_PUSH#(L:S_PED_RMP2_XFER) ++ (>L:S_PED_RMP2_XFER)
FNX320_RADIO_2_XFER_RELEASE#(L:S_PED_RMP2_XFER) ++ (>L:S_PED_RMP2_XFER)
FNX320_RADIO_3_XFER_PUSH#(L:S_PED_RMP3_XFER) ++ (>L:S_PED_RMP3_XFER)
FNX320_RADIO_3_XFER_RELEASE#(L:S_PED_RMP3_XFER) ++ (>L:S_PED_RMP3_XFER)
FNX320_RMP1_KEY_ADF_Push#1 (>L:S_PED_RMP1_ADF) 
FNX320_RMP1_KEY_ADF_Release#0 (>L:S_PED_RMP1_ADF) 
FNX320_RMP1_KEY_AM_Push#1 (>L:S_PED_RMP1_AM) 
FNX320_RMP1_KEY_AM_Release#0 (>L:S_PED_RMP1_AM) 
FNX320_RMP1_KEY_BFO_PUSH#1 (>L:S_PED_RMP1_BFO) 
FNX320_RMP1_KEY_BFO_Release#0 (>L:S_PED_RMP1_BFO) 
FNX320_RMP1_KEY_GLS_PUSH#1 (>L:S_PED_RMP1_MLS) 
FNX320_RMP1_KEY_GLS_Release#0 (>L:S_PED_RMP1_MLS) 
FNX320_RMP1_KEY_HF1_Push#1 (>L:S_PED_RMP1_HF1) 
FNX320_RMP1_KEY_HF1_Release#0 (>L:S_PED_RMP1_HF1) 
FNX320_RMP1_KEY_HF2_Push#1 (>L:S_PED_RMP1_HF2) 
FNX320_RMP1_KEY_HF2_Release#0 (>L:S_PED_RMP1_HF2) 
FNX320_RMP1_KEY_LS_PUSH#(L:S_PED_RMP1_ILS) ++ (>L:S_PED_RMP1_ILS) 
FNX320_RMP1_KEY_LS_Release#(L:S_PED_RMP1_ILS) ++ (>L:S_PED_RMP1_ILS) 
FNX320_RMP1_KEY_NAV_PUSH#1 (>L:S_PED_RMP1_NAV) 
FNX320_RMP1_KEY_NAV_Release#0 (>L:S_PED_RMP1_NAV) 
FNX320_RMP1_KEY_VHF1_PUSH#1 (>L:S_PED_RMP1_VHF1) 
FNX320_RMP1_KEY_VHF1_Release#0 (>L:S_PED_RMP1_VHF1) 
FNX320_RMP1_KEY_VHF2_PUSH#1 (>L:S_PED_RMP1_VHF2) 
FNX320_RMP1_KEY_VHF2_Release#0 (>L:S_PED_RMP1_VHF2) 
FNX320_RMP1_KEY_VHF3_Push# 1 (>L:S_PED_RMP1_VHF3) 
FNX320_RMP1_KEY_VHF3_RELEASE#0 (>L:S_PED_RMP1_VHF3) 
FNX320_RMP1_KEY_VOR_Push#1 (>L:S_PED_RMP1_VOR) 
FNX320_RMP1_KEY_VOR_Release#0 (>L:S_PED_RMP1_VOR) 
FNX320_TRANSPONDER_KEY_0#(L:S_PED_ATC_0) 2 + (>L:S_PED_ATC_0)
FNX320_TRANSPONDER_KEY_1#(L:S_PED_ATC_1) 2 + (>L:S_PED_ATC_1)
FNX320_TRANSPONDER_KEY_2#(L:S_PED_ATC_2) 2 + (>L:S_PED_ATC_2)
FNX320_TRANSPONDER_KEY_3#(L:S_PED_ATC_3) 2 + (>L:S_PED_ATC_3)
FNX320_TRANSPONDER_KEY_4#(L:S_PED_ATC_4) 2 + (>L:S_PED_ATC_4)
FNX320_TRANSPONDER_KEY_5#(L:S_PED_ATC_5) 2 + (>L:S_PED_ATC_5)
FNX320_TRANSPONDER_KEY_6#(L:S_PED_ATC_6) 2 + (>L:S_PED_ATC_6)
FNX320_TRANSPONDER_KEY_7#(L:S_PED_ATC_7) 2 + (>L:S_PED_ATC_7)
FNX320_TRANSPONDER_KEY_CLR#(L:S_PED_ATC_CLR) 2 + (>L:S_PED_ATC_CLR)
FNX320_TRANSPONDER_KEY_IDENT#(L:S_XPDR_IDENT) 2 + (>L:S_XPDR_IDENT)
FNX320_TRANSPONDER_MODE_TOGGLE#(L:S_XPDR_MODE) ++ 3 % (>L:S_XPDR_MODE)
FNX320_TRANSPONDER_OPERATION_TOGGLE#(L:S_XPDR_OPERATION, Number) ++ 3 % (>L:S_XPDR_OPERATION, Number)
FNX32_RADIO_1_INNER_KNOB_DEC#(L:E_PED_RMP1_INNER) -- (>L:E_PED_RMP1_INNER)
FNX32_RADIO_1_INNER_KNOB_INC#(L:E_PED_RMP1_INNER) ++ (>L:E_PED_RMP1_INNER)
FNX32_RADIO_1_OUTER_KNOB_DEC#(L:E_PED_RMP1_OUTER) -- (>L:E_PED_RMP1_OUTER)
FNX32_RADIO_1_OUTER_KNOB_INC#(L:E_PED_RMP1_OUTER) ++ (>L:E_PED_RMP1_OUTER)
FNX32_RADIO_2_INNER_KNOB_DEC#(L:E_PED_RMP2_INNER) -- (>L:E_PED_RMP2_INNER)
FNX32_RADIO_2_INNER_KNOB_INC#(L:E_PED_RMP2_INNER) ++ (>L:E_PED_RMP2_INNER)
FNX32_RADIO_2_OUTER_KNOB_DEC#(L:E_PED_RMP2_OUTER) -- (>L:E_PED_RMP2_OUTER)
FNX32_RADIO_2_OUTER_KNOB_INC#(L:E_PED_RMP2_OUTER) ++ (>L:E_PED_RMP2_OUTER)
FNX32_RADIO_3_INNER_KNOB_DEC#(L:E_PED_RMP3_INNER) -- (>L:E_PED_RMP3_INNER)
FNX32_RADIO_3_INNER_KNOB_INC#(L:E_PED_RMP3_INNER) ++ (>L:E_PED_RMP3_INNER)
FNX32_RADIO_3_OUTER_KNOB_DEC#(L:E_PED_RMP3_OUTER) -- (>L:E_PED_RMP3_OUTER)
FNX32_RADIO_3_OUTER_KNOB_INC#(L:E_PED_RMP3_OUTER) ++ (>L:E_PED_RMP3_OUTER)
PA_CABIN_SPEAKER_SWITCH#(L:S_ASP_PA_REC_LATCH) ! (>L:S_ASP_PA_REC_LATCH)
//FenixSim/A320/Safety
FNX320_Fire_APU_Agent_Button_Press#1 (>L:S_OH_FIRE_APU_AGENT)
FNX320_Fire_APU_Agent_Button_Release#0 (>L:S_OH_FIRE_APU_AGENT)
FNX320_Fire_APU_Test_Button_Press#1 (>L:S_OH_FIRE_APU_TEST)
FNX320_Fire_APU_Test_Button_Release#0 (>L:S_OH_FIRE_APU_TEST)
FNX320_Overhead_ELT_Switch_Toggle#(L:S_OH_ELT) ! (>L:S_OH_ELT)
FNX320_Overhead_ELT_Test_Switch_Press#1 (>L:S_OH_ELT_TEST)
FNX320_Overhead_ELT_Test_Switch_Release#0 (>L:S_OH_ELT_TEST)
FNX320_Overhead_Oxygen_TMR_Reset_Button_Press#1 (>L:S_OH_OXYGEN_TMR_RESET)
FNX320_Overhead_Oxygen_TMR_Reset_Button_Release#0 (>L:S_OH_OXYGEN_TMR_RESET)
FNX320_Oxygen_Crew_Button_Release#0 (>L:S_OH_OXYGEN_CREW_OXYGEN)
FNX320_Oxygen_High_Alt_Landing_Button_Release#0 (>L:S_OH_OXYGEN_HIGH_ALT)
FNX320_Sign_Emergency_Exit_Switch_ARM#1 (>L:S_OH_INT_LT_EMER)
FNX320_Sign_Emergency_Exit_Switch_OFF#0 (>L:S_OH_INT_LT_EMER)
FNX320_Sign_Emergency_Exit_Switch_ON#2 (>L:S_OH_INT_LT_EMER)
FNX320_Evacuation_Capt_Purser_Toggle#(L:S_OH_EVAC_CAPT_PURSER) ! (>L:S_OH_EVAC_CAPT_PURSER)
FNX320_Evacuation_Command_Button_Press#(L:S_OH_EVAC_COMMAND) ! (>L:S_OH_EVAC_COMMAND) 
FNX320_Evacuation_Horn_Shutoff_Button_Press#(L:S_OH_EVAC_HORN_SHUTOFF) ++ (>L:S_OH_EVAC_HORN_SHUTOFF)
FNX320_Evacuation_Horn_Shutoff_Button_Release#(L:S_OH_EVAC_HORN_SHUTOFF) ++ (>L:S_OH_EVAC_HORN_SHUTOFF)
FNX320_Fire_APU_Button_Press#(L:S_OH_FIRE_APU_BUTTON) ! (>L:S_OH_FIRE_APU_BUTTON)
FNX320_Fire_Engine_1_Agent_1_Button_Press#(L:S_OH_FIRE_ENG1_AGENT1) ++ (>L:S_OH_FIRE_ENG1_AGENT1)
FNX320_Fire_Engine_1_Agent_1_Button_Release#(L:S_OH_FIRE_ENG1_AGENT1) ++ (>L:S_OH_FIRE_ENG1_AGENT1)
FNX320_Fire_Engine_1_Agent_2_Button_Press#(L:S_OH_FIRE_ENG1_AGENT2) ++ (>L:S_OH_FIRE_ENG1_AGENT2)
FNX320_Fire_Engine_1_Agent_2_Button_Release#(L:S_OH_FIRE_ENG1_AGENT2) ++ (>L:S_OH_FIRE_ENG1_AGENT2)
FNX320_Fire_Engine_1_Button_Press#(L:S_OH_FIRE_ENG1_BUTTON) ! (>L:S_OH_FIRE_ENG1_BUTTON) 
FNX320_Fire_Engine_1_Test_Button_Press#(L:S_OH_FIRE_ENG1_TEST) ++ (>L:S_OH_FIRE_ENG1_TEST)
FNX320_Fire_Engine_1_Test_Button_Release#(L:S_OH_FIRE_ENG1_TEST) ++ (>L:S_OH_FIRE_ENG1_TEST)
FNX320_Fire_Engine_2_Agent_1_Button_Press#(L:S_OH_FIRE_ENG2_AGENT1) ++ (>L:S_OH_FIRE_ENG2_AGENT1)
FNX320_Fire_Engine_2_Agent_1_Button_Release#(L:S_OH_FIRE_ENG2_AGENT1) ++ (>L:S_OH_FIRE_ENG2_AGENT1)
FNX320_Fire_Engine_2_Agent_2_Button_Press#(L:S_OH_FIRE_ENG2_AGENT2) ++ (>L:S_OH_FIRE_ENG2_AGENT2)
FNX320_Fire_Engine_2_Agent_2_Button_Release#(L:S_OH_FIRE_ENG2_AGENT2) ++ (>L:S_OH_FIRE_ENG2_AGENT2)
FNX320_Fire_Engine_2_Button_Press#(L:S_OH_FIRE_ENG2_BUTTON) ! (>L:S_OH_FIRE_ENG2_BUTTON) 
FNX320_Fire_Engine_2_Test_Button_Press#(L:S_OH_FIRE_ENG2_TEST) ++ (>L:S_OH_FIRE_ENG2_TEST)
FNX320_Fire_Engine_2_Test_Button_Release#(L:S_OH_FIRE_ENG2_TEST) ++ (>L:S_OH_FIRE_ENG2_TEST)
FNX320_OH_Cargo_Disc_1_Agent_1#2 (>L:S_OH_CARGO_DISC_1_OLD_LAYOUT)
FNX320_OH_Cargo_Disc_1_Agent_2#0 (>L:S_OH_CARGO_DISC_1_OLD_LAYOUT)
FNX320_OH_Cargo_Disc_2_Agent_1#2 (>L:S_OH_CARGO_DISC_2_OLD_LAYOUT)
FNX320_OH_Cargo_Disc_2_Agent_2#0 (>L:S_OH_CARGO_DISC_2_OLD_LAYOUT)
FNX320_OH_Cargo_Smoke_Test_Button_Press#(L:S_OH_CARGO_SMOKE_TEST) ++ (>L:S_OH_CARGO_SMOKE_TEST) 
FNX320_OH_Cargo_Smoke_Test_Button_Release#(L:S_OH_CARGO_SMOKE_TEST) s0 2 % 0 != if{ l0 ++ (>L:S_OH_CARGO_SMOKE_TEST) } 
FNX320_Oxygen_Crew_Button_Press#(L:S_OH_OXYGEN_CREW_OXYGEN) ! (>L:S_OH_OXYGEN_CREW_OXYGEN)
FNX320_Oxygen_High_Alt_Landing_Button_Press#(L:S_OH_OXYGEN_HIGH_ALT) ! (>L:S_OH_OXYGEN_HIGH_ALT)
FNX320_Oxygen_Mask_Manual_Button_Press#(L:S_OH_OXYGEN_MASK_MAN_ON) ++ (>L:S_OH_OXYGEN_MASK_MAN_ON)
FNX320_Oxygen_Mask_Manual_Button_Release#(L:S_OH_OXYGEN_MASK_MAN_ON) ++ (>L:S_OH_OXYGEN_MASK_MAN_ON)
FNX320_SAFETY_EMER_EXIT_LT_OFF_ARM_ON_TOGGLE#(L:S_OH_INT_LT_EMER, Number) ++ 3 % (>L:S_OH_INT_LT_EMER, Number)
FNX320_SAFETY_NO_SMOKING_AUTO#1 (>L:S_OH_SIGNS_SMOKING)
FNX320_SAFETY_NO_SMOKING_OFF#0 (>L:S_OH_SIGNS_SMOKING)
FNX320_SAFETY_NO_SMOKING_OFF_AUTO_ON_TOGGLE#(L:S_OH_SIGNS_SMOKING, Number) ++ 3 % (>L:S_OH_SIGNS_SMOKING, Number)
FNX320_SAFETY_NO_SMOKING_ON#2 (>L:S_OH_SIGNS_SMOKING)
FNX320_SAFETY_SEAT_BELTS_OFF#0 (>L:S_OH_SIGNS)
FNX320_SAFETY_SEAT_BELTS_ON#1 (>L:S_OH_SIGNS)
FNX320_SAFETY_SEAT_BELTS_TOG#(L:S_OH_SIGNS) ! (>L:S_OH_SIGNS)
//FenixSim/A320/Warning
FNX320_Glareshield_Master_Caution_Captain_Button_Press#1 (>L:S_MIP_MASTER_CAUTION_CAPT)
FNX320_Glareshield_Master_Caution_Captain_Button_Release#0 (>L:S_MIP_MASTER_CAUTION_CAPT)
FNX320_Glareshield_Master_Caution_FO_Button_Press#1 (>L:S_MIP_MASTER_CAUTION_FO)
FNX320_Glareshield_Master_Caution_FO_Button_Release#0 (>L:S_MIP_MASTER_CAUTION_FO)
FNX320_Glareshield_Master_Warning_Captain_Button_Press#1 (>L:S_MIP_MASTER_WARNING_CAPT)
FNX320_Glareshield_Master_Warning_Captain_Button_Release#0 (>L:S_MIP_MASTER_WARNING_CAPT)
FNX320_Glareshield_Master_Warning_FO_Button_Press#1 (>L:S_MIP_MASTER_WARNING_FO)
FNX320_Glareshield_Master_Warning_FO_Button_Release#0 (>L:S_MIP_MASTER_WARNING_FO)
FNX320_MainPanel_GPWS_GS_Captain_Button_Press#1 (>L:S_MIP_GPWS_VISUAL_ALERT_CAPT)
FNX320_MainPanel_GPWS_GS_Captain_Button_Release#0 (>L:S_MIP_GPWS_VISUAL_ALERT_CAPT)
FNX320_MainPanel_GPWS_GS_FO_Button_Press#1 (>L:S_MIP_GPWS_VISUAL_ALERT_FO)
FNX320_MainPanel_GPWS_GS_FO_Button_Release#0 (>L:S_MIP_GPWS_VISUAL_ALERT_FO)
FNX320_GPWS_Flap_Mode_Button_Press#(L:S_OH_GPWS_FLAP_MODE) ! (>L:S_OH_GPWS_FLAP_MODE) 
FNX320_GPWS_GS_Mode_Button_Press#(L:S_OH_GPWS_GS_MODE) ! (>L:S_OH_GPWS_GS_MODE) 
FNX320_GPWS_Landing_Flap_3_Button_Press#(L:S_OH_GPWS_LDG_FLAP3) ! (>L:S_OH_GPWS_LDG_FLAP3) 
FNX320_GPWS_System_Button_Press#(L:S_OH_GPWS_SYS) ! (>L:S_OH_GPWS_SYS) 
FNX320_GPWS_Terrain_Button_Press#(L:S_OH_GPWS_TERR) ! (>L:S_OH_GPWS_TERR) 
//Flight Sim Labs/A321ceo/Autopilot
Autopilot#Some code
//Flight Sim Labs/A321neo/ADIRS
ADIRS_IR_1_Knob_ATT#(>K:FSL.EVENT.ADIRS.ADIRU1.ATT)
ADIRS_IR_1_Knob_NAV#(>K:FSL.EVENT.ADIRS.ADIRU1.NAV)
ADIRS_IR_1_Knob_OFF#(>K:FSL.EVENT.ADIRS.ADIRU1.OFF)
ADIRS_IR_2_Knob_NAV#(>K:FSL.EVENT.ADIRS.ADIRU2.NAV)
ADIRS_IR_2_Knob_NAV#(>K:FSL.EVENT.ADIRS.ADIRU2.ATT)
ADIRS_IR_2_Knob_OFF#(>K:FSL.EVENT.ADIRS.ADIRU2.OFF)
ADIRS_IR_3_Knob_NAV#(>K:FSL.EVENT.ADIRS.ADIRU3.NAV)
ADIRS_IR_3_Knob_NAV#(>K:FSL.EVENT.ADIRS.ADIRU3.ATT)
ADIRS_IR_3_Knob_OFF#(>K:FSL.EVENT.ADIRS.ADIRU3.OFF)
//Flight Sim Labs/A321neo/APU
APU_Master_Switch_Toggle#(>K:FSL.EVENT.OVHD.APU.MASTER.PUSH)
APU_Start_button#(>K:FSL.EVENT.OVHD.APU.START.PUSH)
//Flight Sim Labs/A321neo/Autopilot
A_THR_Press#(>K:FSL.EVENT.FCU.ATHR.PRESS)
ALT_100#(>K:FSL.EVENT.FCU.ALT.100)
ALT_1000#(>K:FSL.EVENT.FCU.ALT.1000)
ALT_Decrease#(>K:FSL.EVENT.FCU.ALT.DEC)
ALT_Increase#(>K:FSL.EVENT.FCU.ALT.INC)
ALT_Pull#(>K:FSL.EVENT.FCU.ALT.PULL)
ALT_Push#(>K:FSL.EVENT.FCU.ALT.PUSH)
AP1_Press#(>K:FSL.EVENT.FCU.AP1.PRESS)
AP2_Press#(>K:FSL.EVENT.FCU.AP2.PRESS)
APPR_Press#(>K:FSL.EVENT.FCU.APPR.PRESS)
EXPED_Press#(>K:FSL.EVENT.FCU.EXPD.PRESS)
HDG_Decrease#(>K:FSL.EVENT.FCU.HDG.DEC)
HDG_Increase#(>K:FSL.EVENT.FCU.HDG.INC)
HDG_Pull#(>K:FSL.EVENT.FCU.HDG.PULL)
HDG_Push#(>K:FSL.EVENT.FCU.HDG.PUSH)
HDG_TRK_Toggle#(>K:FSL.EVENT.FCU.HDGVS.PRESS)
LOC_Press#(>K:FSL.EVENT.FCU.LOC.PRESS)
METRIC_ALT#(>K:FSL.EVENT.FCU.METRIC.PRESS)
SPD_Decrease#(>K:FSL.EVENT.FCU.SPD.DEC)
SPD_Increase#(>K:FSL.EVENT.FCU.SPD.INC)
SPD_MACH_Toggle#(>K:FSL.EVENT.FCU.SPDMACH.PRESS)
SPD_Pull#(>K:FSL.EVENT.FCU.SPD.PULL)
SPD_Push#(>K:FSL.EVENT.FCU.SPD.PUSH)
VS_Decrease#(>K:FSL.EVENT.FCU.VS.DEC)
VS_Increase#(>K:FSL.EVENT.FCU.VS.INC)
VS_Pull#(>K:FSL.EVENT.FCU.VS.PULL)
VS_Push#(>K:FSL.EVENT.FCU.VS.PUSH)
//Flight Sim Labs/A321neo/EFIS
Cpt_baro_INC#(>K:FSL.EVENT.EFIS.CPT.BARO.INC)
Cpt_baro_dec#(>K:FSL.EVENT.EFIS.CPT.BARO.DEC)
//Flight Sim Labs/A321neo/Lights (exterior)
Annunciator_Light_BRT#(>K:FSL.EVENT.OVHD.LIGHT.ANNTEST.BRT)
Annunciator_Light_DIM#(>K:FSL.EVENT.OVHD.LIGHT.ANNTEST.DIM)
Annunciator_Light_TEST#(>K:FSL.EVENT.OVHD.LIGHT.ANNTEST.TEST)
Beacon_OFF#(>K:FSL.EVENT.OVHD.LIGHT.BCN.OFF)
Beacon_ON#(>K:FSL.EVENT.OVHD.LIGHT.BCN.ON)
Dome_Light_BRT#(>K:FSL.EVENT.OVHD.LIGHT.DOME.BRT)
Dome_Light_DIM#(>K:FSL.EVENT.OVHD.LIGHT.DOME.DIM)
Dome_Light_OFF#(>K:FSL.EVENT.OVHD.LIGHT.DOME.OFF)
ICE_IND___STBY_COMPASS_OFF#(>K:FSL.EVENT.OVHD.LIGHT.COMPASS.OFF)
ICE_IND___STBY_COMPASS_ON#(>K:FSL.EVENT.OVHD.LIGHT.COMPASS.ON)
Landing_Lights_Left_OFF#(>K:FSL.EVENT.OVHD.LIGHT.LANDLEFT.OFF)
Landing_Lights_Left_ON#(>K:FSL.EVENT.OVHD.LIGHT.LANDLEFT.ON)
Landing_Lights_Left_RETRACT#(>K:FSL.EVENT.OVHD.LIGHT.LANDLEFT.RETRACT)
Landing_Lights_Right_OFF#(>K:FSL.EVENT.OVHD.LIGHT.LANDRIGHT.OFF)
Landing_Lights_Right_ON#(>K:FSL.EVENT.OVHD.LIGHT.LANDRIGHT.ON)
Landing_Lights_Right_RETRACT#(>K:FSL.EVENT.OVHD.LIGHT.LANDRIGHT.RETRACT)
NAV_Lights_OFF#(>K:FSL.EVENT.OVHD.LIGHT.NAV.OFF)
NAV_Lights_Position_1#(>K:FSL.EVENT.OVHD.LIGHT.NAV.SYS1)
NAV_Lights_Position_2#(>K:FSL.EVENT.OVHD.LIGHT.NAV.SYS2)
Nose_Lights_OFF#(>K:FSL.EVENT.OVHD.LIGHT.NOSE.OFF)
Nose_Lights_TAXI#(>K:FSL.EVENT.OVHD.LIGHT.NOSE.TAXI)
Nose_Lights_TO#(>K:FSL.EVENT.OVHD.LIGHT.NOSE.TO)
Overhead_Lights_Decrease__OFF_#(>K:FSL.EVENT.OVHD.LIGHT.INTG.DEC)
Overhead_Lights_Increase__BRT_#(>K:FSL.EVENT.OVHD.LIGHT.INTG.INC)
RWY_TURN_OFF_Lights_OFF#(>K:FSL.EVENT.OVHD.LIGHT.TURN.OFF)
RWY_TURN_OFF_Lights_ON#(>K:FSL.EVENT.OVHD.LIGHT.TURN.ON)
Strobe_AUTO#(>K:FSL.EVENT.OVHD.LIGHT.STROBE.AUTO)
Strobe_OFF#(>K:FSL.EVENT.OVHD.LIGHT.STROBE.OFF)
Strobe_ON#(>K:FSL.EVENT.OVHD.LIGHT.STROBE.ON)
Wing_Lights_OFF#(>K:FSL.EVENT.OVHD.LIGHT.WING.OFF)
Wing_Lights_ON#(>K:FSL.EVENT.OVHD.LIGHT.WING.ON)
//Flight Sim Labs/A321neo/Safety
Emergency_Exit_Light_ARM#(>K:FSL.EVENT.OVHD.SIGNS.EMERG.ARM)
Emergency_Exit_Light_OFF#(>K:FSL.EVENT.OVHD.SIGNS.EMERG.OFF)
Emergency_Exit_Light_ON#(>K:FSL.EVENT.OVHD.SIGNS.EMERG.ON)
Seat_Belts_Signs_OFF#(>K:FSL.EVENT.OVHD.SIGNS.PAX.OFF)
Seat_Belts_signs_ON#(>K:FSL.EVENT.OVHD.SIGNS.PAX.ON)
//FlightFX/Piaggio P180/Avionics
FMC_BTN_#(>H:CJ4_FMC_1_BTN_P)
FMC_BTN__Q#(>H:CJ4_FMC_1_BTN_Q)
FMC_BTN__#(>H:CJ4_FMC_1_BTN_/)
FMC_BTN_0#(>H:CJ4_FMC_1_BTN_0)
FMC_BTN_1#(>H:CJ4_FMC_1_BTN_1)
FMC_BTN_2#(>H:CJ4_FMC_1_BTN_2)
FMC_BTN_3#(>H:CJ4_FMC_1_BTN_3)
FMC_BTN_4#(>H:CJ4_FMC_1_BTN_4)
FMC_BTN_5#(>H:CJ4_FMC_1_BTN_5)
FMC_BTN_6#(>H:CJ4_FMC_1_BTN_6)
FMC_BTN_7#(>H:CJ4_FMC_1_BTN_7)
FMC_BTN_8#(>H:CJ4_FMC_1_BTN_8)
FMC_BTN_9#(>H:CJ4_FMC_1_BTN_9)
FMC_BTN_A#(>H:CJ4_FMC_1_BTN_A)
FMC_BTN_B#(>H:CJ4_FMC_1_BTN_B)
FMC_BTN_C#(>H:CJ4_FMC_1_BTN_C)
FMC_BTN_CLR#(>H:CJ4_FMC_1_BTN_CLR)
FMC_BTN_D#(>H:CJ4_FMC_1_BTN_D)
FMC_BTN_DEPARR#(>H:CJ4_FMC_1_BTN_DEPARR)
FMC_BTN_DIR#(>H:CJ4_FMC_1_BTN_DIR)
FMC_BTN_Dot#(>H:CJ4_FMC_2_BTN_DOT)
FMC_BTN_E#(>H:CJ4_FMC_1_BTN_E)
FMC_BTN_EXEC#(>H:CJ4_FMC_1_BTN_EXEC)
FMC_BTN_F#(>H:CJ4_FMC_1_BTN_F)
FMC_BTN_FPLN#(>H:CJ4_FMC_2_BTN_FPLN)
FMC_BTN_G#(>H:CJ4_FMC_1_BTN_G)
FMC_BTN_H#(>H:CJ4_FMC_1_BTN_H)
FMC_BTN_I#(>H:CJ4_FMC_1_BTN_I)
FMC_BTN_IDX#(>H:CJ4_FMC_1_BTN_IDX)
FMC_BTN_J#(>H:CJ4_FMC_1_BTN_J)
FMC_BTN_K#(>H:CJ4_FMC_1_BTN_K)
FMC_BTN_L#(>H:CJ4_FMC_1_BTN_L)
FMC_BTN_L1#(>H:CJ4_FMC_1_BTN_L1)
FMC_BTN_L2#(>H:CJ4_FMC_1_BTN_L2)
FMC_BTN_L3#(>H:CJ4_FMC_1_BTN_L3)
FMC_BTN_L4#(>H:CJ4_FMC_1_BTN_L4)
FMC_BTN_L5#(>H:CJ4_FMC_1_BTN_L5)
FMC_BTN_L6#(>H:CJ4_FMC_1_BTN_L6)
FMC_BTN_LEGS#(>H:CJ4_FMC_1_BTN_LEGS)
FMC_BTN_M#(>H:CJ4_FMC_1_BTN_M)
FMC_BTN_MFD_ADV#(>H:CJ4_FMC_2_BTN_MFD_ADV)
FMC_BTN_MFD_DATA#(>H:CJ4_FMC_2_BTN_MFD_DATA)
FMC_BTN_MFD_MEMU#(>H:CJ4_FMC_1_BTN_MFD_MENU)
FMC_BTN_MSG#(>H:CJ4_FMC_1_BTN_MSG)
FMC_BTN_N#(>H:CJ4_FMC_1_BTN_N)
FMC_BTN_NEXTPAGE#(>H:CJ4_FMC_1_BTN_NEXTPAGE)
FMC_BTN_O#(>H:CJ4_FMC_1_BTN_O)
FMC_BTN_P#(>H:CJ4_FMC_1_BTN_P)
FMC_BTN_PERF#(>H:CJ4_FMC_1_BTN_PERF)
FMC_BTN_PREV#(>H:CJ4_FMC_1_BTN_PREV)
FMC_BTN_PREVPAGE#(>H:CJ4_FMC_1_BTN_PREVPAGE)
FMC_BTN_Plusminus#(>H:CJ4_FMC_1_BTN_PLUSMINUS)
FMC_BTN_R#(>H:CJ4_FMC_1_BTN_R)
FMC_BTN_R1#(>H:CJ4_FMC_1_BTN_R1)
FMC_BTN_R2#(>H:CJ4_FMC_1_BTN_R2)
FMC_BTN_R3#(>H:CJ4_FMC_1_BTN_R3)
FMC_BTN_R4#(>H:CJ4_FMC_1_BTN_R4)
FMC_BTN_R5#(>H:CJ4_FMC_1_BTN_R5)
FMC_BTN_R6#(>H:CJ4_FMC_1_BTN_R6)
FMC_BTN_S#(>H:CJ4_FMC_1_BTN_S)
FMC_BTN_SP#(>H:CJ4_FMC_1_BTN_SP)
FMC_BTN_T#(>H:CJ4_FMC_1_BTN_T)
FMC_BTN_TUN#(>H:CJ4_FMC_1_BTN_TUN)
FMC_BTN_U#(>H:CJ4_FMC_1_BTN_U)
FMC_BTN_V#(>H:CJ4_FMC_1_BTN_V)
FMC_BTN_W#(>H:CJ4_FMC_1_BTN_W)
FMC_BTN_X#(>H:CJ4_FMC_1_BTN_X)
FMC_BTN_Y#(>H:CJ4_FMC_1_BTN_Y)
FMC_BTN_Z#(>H:CJ4_FMC_1_BTN_Z)
FMC_BTN_A#(>H:CJ4_FMC_1_BTN_A)
PL_21_REFS_Button#(>H:Generic_Upr_1_Push_REFS_MENU) 
PL_21_REFS_NAV_BRG_Buttom#(>H:Generic_Upr_1_Push_NAV)
PL21_REFS__BARO_DEC#1 (>K:KOHLSMAN_DEC)
PL21_REFS_BARO_INC#1 (>K:KOHLSMAN_INC)
PL21_REFS_Radar_Button#(>H:Generic_Upr_1_Push_TERR_WX)
//FlightFX/Visionjet SF50/Air Condition / Pressurization
SF50_AC_Fan_Control_Dec#(L:SF50_TempFan, number) 0.1 - 0 max 1 min (>L:SF50_TempFan, number)
SF50_AC_Fan_Control_Inc#(L:SF50_TempFan, number) 0.1 + 0 max 1 min (>L:SF50_TempFan, number)
SF50_Bleed_Air_Off#0 (>L:SF50_air_flow_switch, Bool)
SF50_Bleed_Air_On#1 (>L:SF50_air_flow_switch, Bool)
SF50_Bleed_Air_Switch_Toggle#(L:SF50_air_flow_switch, Bool) ! (>L:SF50_air_flow_switch, Bool)
SF50_ECS_Temp_Decrease#(L:SF50_TempControl, number) 0.1 - 0 max 1 min (>L:SF50_TempControl, number)
SF50_ECS_Temp_Increase#(L:SF50_TempControl, number) 0.1 + 0 max 1 min (>L:SF50_TempControl, number)
SF50_Fresh_Air_Max#1 (>L:SF50_air_flow_switch, Bool)
SF50_Fresh_Air_Off#0 (>L:SF50_air_flow_switch, Bool)
SF50_Master_Oxygen_Off#0 (>L:SF50_oxygen_switch, Bool)
SF50_Master_Oxygen_On#1 (>L:SF50_oxygen_switch, Bool)
//FlightFX/Visionjet SF50/Anti-Ice
SF50_Antiice_Engine_Off#(A:ENG ANTI ICE:1, Bool) if{ (>K:ANTI_ICE_TOGGLE_ENG1) }
SF50_Antiice_Engine_On#(A:ENG ANTI ICE:1, Bool) ! if{ (>K:ANTI_ICE_TOGGLE_ENG1) }
SF50_Antiice_Windshield_High#1 (>L:SF50_deice_high, Bool)
SF50_Antiice_Windshield_Max_Toggle#(L:SF50_deice_max, Bool) ! (>L:SF50_deice_max, Bool)
SF50_Antiice_Windshield_Norm#0 (>L:SF50_deice_high, Bool)
SF50_Antiice_Windshield_Off#0 (A:WINDSHIELD DEICE SWITCH, Bool) != if{ (>K:WINDSHIELD_DEICE_TOGGLE) }
SF50_Antiice_Windshield_On#1 (A:WINDSHIELD DEICE SWITCH, Bool) != if{ (>K:WINDSHIELD_DEICE_TOGGLE) }
SF50_Antiice_Wing_Stab_Off#0 s0 (A:STRUCTURAL DEICE SWITCH, Bool) != if{ (>K:TOGGLE_STRUCTURAL_DEICE) } l0 (>L:DEICE_Airframe_1) 0 (>L:XMLVAR_IsDeiceAirFrame)
SF50_Antiice_Wing_Stab_On#1 s0 (A:STRUCTURAL DEICE SWITCH, Bool) s1 != if{ (>K:TOGGLE_STRUCTURAL_DEICE) } l0 (>L:DEICE_Airframe_1) 1 (>L:XMLVAR_IsDeiceAirFrame)
SF50_Probe_Heat_Off#0 s0 1 l0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)
SF50_Probe_Heat_On#1 s0 1 l0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)
//FlightFX/Visionjet SF50/Autopilot
SF50_AP_ALT_SEL_DEC#(>K:2:AP_ALT_VAR_DEC)
SF50_AP_ALT_SEL_INC#(>K:2:AP_ALT_VAR_INC)
SF50_AP_ALT_SEL_PUSH_SYNC#(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH)
SF50_AP_ALT_Toggle#(>K:AP_ALT_HOLD)
SF50_AP_APR_Toggle#(A:AUTOPILOT APPROACH HOLD, Bool) (A:AUTOPILOT GLIDESLOPE HOLD, Bool) ! and if{ (>K:AP_APR_HOLD) } (>K:AP_APR_HOLD) 
SF50_AP_AT_Button_Press#(>K:AUTO_THROTTLE_ARM) 
SF50_AP_Button_Toggle#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER)  (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } } 
SF50_AP_FD_Toggle#1 (>K:TOGGLE_FLIGHT_DIRECTOR)
SF50_AP_FLC_Toggle#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET) 
SF50_AP_HDG_Knob_Dec#1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 - dnor (>K:2:HEADING_BUG_SET)
SF50_AP_HDG_Knob_Inc#1 (A:AUTOPILOT HEADING LOCK DIR:1, degrees) 1 + dnor (>K:2:HEADING_BUG_SET)
SF50_AP_HDG_Toggle#(>K:AP_PANEL_HEADING_HOLD)
SF50_AP_Heading_Sync#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
SF50_AP_LVL_Button_Toggle#(>K:AP_WING_LEVELER) (A:AUTOPILOT WING LEVELER, Bool) if{  (A:AUTOPILOT MASTER, Bool) s0 ! if{ (>K:AUTOPILOT_ON) }  (>K:AP_PITCH_LEVELER_ON) } els{ (>K:AP_PITCH_LEVELER_OFF) l0 if{ (>K:AUTOPILOT_ON) } els{ (>K:AUTOPILOT_OFF) } } 
SF50_AP_NAV_Toggle#(>K:AP_NAV1_HOLD)
SF50_AP_Speed_Ref_FMS_Press#0 (>L:XMLVAR_SpeedIsManuallySet,bool)
SF50_AP_Speed_Ref_Man_Press#1 (>L:XMLVAR_SpeedIsManuallySet,bool)
SF50_AP_Speed_Ref_Wheel_Dec#(L:XMLVAR_AirSpeedIsInMach) if{ (A:AUTOPILOT MACH HOLD VAR:0, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR:0, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } 
SF50_AP_Speed_Ref_Wheel_Inc#(L:XMLVAR_AirSpeedIsInMach) if{ (A:AUTOPILOT MACH HOLD VAR:0, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR:0, knots) 1 + (>K:2:AP_SPD_VAR_SET) } 
SF50_AP_VERTICAL_SPEED__WHEEL_UP#(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (L:XMLVAR_AirSpeedIsInMach) if{ (A:AUTOPILOT MACH HOLD VAR, number) 1 - 0 max (>K:AP_MACH_VAR_SET) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 - 0 max (>K:AP_SPD_VAR_SET) } } els{ (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{ 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 - (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT PITCH HOLD, Bool) if{ (A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 - 25 / 1 min -1 max 16384 * (>K:AP_PITCH_REF_SET) } } } 
SF50_AP_VERTICAL_SPEED_WHEEL_DOWN#(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (L:XMLVAR_AirSpeedIsInMach) if{ (A:AUTOPILOT MACH HOLD VAR, number) 1 + 0 max (>K:AP_MACH_VAR_SET) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 + 0 max (>K:AP_SPD_VAR_SET) } } els{ (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{ 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT PITCH HOLD, Bool) if{ (A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 + 25 / 1 min -1 max 16384 * (>K:AP_PITCH_REF_SET) } } } 
SF50_AP_VNAV_TOGGLE#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
SF50_AP_VS_DEC#1 (>B:AUTOPILOT_VerticalSpeed_Dec)
SF50_AP_VS_INC#1 (>B:AUTOPILOT_VerticalSpeed_Inc)
SF50_AP_VS_Toggle#(>K:AP_PANEL_VS_HOLD)
SF50_AT_FMS_Manual_Mode_Toggle#(L:XMLVAR_SpeedIsManuallySet,bool) ! (>L:XMLVAR_SpeedIsManuallySet,bool)
//FlightFX/Visionjet SF50/Avionics
GARMIN_Perspective_Touch__GTC_1_Softkey-1#(>H:AS3000_TSC_Horizontal_1_SoftKey_1)
GARMIN_Perspective_Touch_GTC_1_LowerKnob_DEC#(>H:AS3000_TSC_Horizontal_1_BottomKnob_Small_DEC)
GARMIN_Perspective_Touch_GTC_1_LowerKnob_INC#(>H:AS3000_TSC_Horizontal_1_BottomKnob_Small_INC)
GARMIN_Perspective_Touch_GTC_1_LowerKnob_PUSH#(>H:AS3000_TSC_Horizontal_1_BottomKnob_Push)
GARMIN_Perspective_Touch_GTC_1_Softkey-2#(>H:AS3000_TSC_Horizontal_1_SoftKey_2)
GARMIN_Perspective_Touch_GTC_1_Softkey-3#(>H:AS3000_TSC_Horizontal_1_SoftKey_3)
GARMIN_Perspective_Touch_GTC_1_TopKnob_Large_DEC#(>H:AS3000_TSC_Horizontal_1_TopKnob_Large_DEC)
GARMIN_Perspective_Touch_GTC_1_TopKnob_Large_INC#(>H:AS3000_TSC_Horizontal_1_TopKnob_Large_INC)
GARMIN_Perspective_Touch_GTC_1_TopKnob_PUSH#(>H:AS3000_TSC_Horizontal_1_TopKnob_Push)
GARMIN_Perspective_Touch_GTC_1_TopKnob_Small_DEC#(>H:AS3000_TSC_Horizontal_1_TopKnob_Small_DEC)
GARMIN_Perspective_Touch_GTC_1_TopKnob_Small_INC#(>H:AS3000_TSC_Horizontal_1_TopKnob_Small_INC)
GARMIN_Perspective_Touch_GTC_2_LowerKnob_DEC#(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_DEC)
GARMIN_Perspective_Touch_GTC_2_LowerKnob_INC#(>H:AS3000_TSC_Horizontal_2_BottomKnob_Small_INC)
GARMIN_Perspective_Touch_GTC_2_LowerKnob_PUSH#(>H:AS3000_TSC_Horizontal_2_BottomKnob_Push)
GARMIN_Perspective_Touch_GTC_2_Softkey-1#(>H:AS3000_TSC_Horizontal_2_SoftKey_1)
GARMIN_Perspective_Touch_GTC_2_Softkey-2#(>H:AS3000_TSC_Horizontal_2_SoftKey_2)
GARMIN_Perspective_Touch_GTC_2_Softkey-3#(>H:AS3000_TSC_Horizontal_2_SoftKey_3)
GARMIN_Perspective_Touch_GTC_2_TopKnob_Large_DEC#(>H:AS3000_TSC_Horizontal_2_TopKnob_Large_INC)
GARMIN_Perspective_Touch_GTC_2_TopKnob_Large_INC#(>H:AS3000_TSC_Horizontal_2_TopKnob_Large_DEC)
GARMIN_Perspective_Touch_GTC_2_TopKnob_PUSH#(>H:AS3000_TSC_Horizontal_2_TopKnob_Push)
GARMIN_Perspective_Touch_GTC_2_TopKnob_Small_DEC#(>H:AS3000_TSC_Horizontal_2_TopKnob_Small_DEC)
GARMIN_Perspective_Touch_GTC_2_TopKnob_Small_INC#(>H:AS3000_TSC_Horizontal_2_TopKnob_Small_INC)
GARMIN_Perspective_Touch_GTC_3_LowerKnob_DEC#(>H:AS3000_TSC_Horizontal_3_BottomKnob_Small_DEC)
GARMIN_Perspective_Touch_GTC_3_LowerKnob_INC#(>H:AS3000_TSC_Horizontal_3_BottomKnob_Small_INC)
GARMIN_Perspective_Touch_GTC_3_LowerKnob_PUSH#(>H:AS3000_TSC_Horizontal_3_BottomKnob_Push)
GARMIN_Perspective_Touch_GTC_3_Softkey-1#(>H:AS3000_TSC_Horizontal_3_SoftKey_1)
GARMIN_Perspective_Touch_GTC_3_Softkey-2#(>H:AS3000_TSC_Horizontal_3_SoftKey_2)
GARMIN_Perspective_Touch_GTC_3_Softkey-3#(>H:AS3000_TSC_Horizontal_3_SoftKey_3)
GARMIN_Perspective_Touch_GTC_3_TopKnob_Large_DEC#(>H:AS3000_TSC_Horizontal_3_TopKnob_Large_INC)
GARMIN_Perspective_Touch_GTC_3_TopKnob_Large_INC#(>H:AS3000_TSC_Horizontal_3_TopKnob_Large_DEC)
GARMIN_Perspective_Touch_GTC_3_TopKnob_PUSH#(>H:AS3000_TSC_Horizontal_3_TopKnob_Push)
GARMIN_Perspective_Touch_GTC_3_TopKnob_Small_DEC#(>H:AS3000_TSC_Horizontal_3_TopKnob_Small_DEC)
GARMIN_Perspective_Touch_GTC_3_TopKnob_Small_INC#(>H:AS3000_TSC_Horizontal_3_TopKnob_Small_INC)
//FlightFX/Visionjet SF50/Electrical
SF50_Elec_Battery_1_Off#0 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
SF50_Elec_Battery_1_On#1 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
SF50_Elec_Battery_1_Toggle#1 (>K:TOGGLE_MASTER_BATTERY)
SF50_Elec_Battery_2_Off#0 (A:ELECTRICAL MASTER BATTERY:2, Bool) != if{ 2 (>K:TOGGLE_MASTER_BATTERY) }
SF50_Elec_Battery_2_On#1 (A:ELECTRICAL MASTER BATTERY:2, Bool) != if{ 2 (>K:TOGGLE_MASTER_BATTERY) }
SF50_Elec_Battery_2_Toggle#2 (>K:TOGGLE_MASTER_BATTERY)
SF50_Elec_Gen_1_Off#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) if{ 1 0 (>K:2:ALTERNATOR_SET) }
SF50_Elec_Gen_1_On#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) ! if{ 1 1 (>K:2:ALTERNATOR_SET) }
SF50_Elec_Gen_2_Off#(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) if{ 2 0 (>K:2:ALTERNATOR_SET) }
SF50_Elec_Gen_2_On#(A:GENERAL ENG MASTER ALTERNATOR:2, Bool) ! if{ 2 1 (>K:2:ALTERNATOR_SET) }
//FlightFX/Visionjet SF50/Engine
SF50_Engine_Master_Off#0 (>L:SF50_knob_stop_run)
SF50_Engine_Master_On#1 (>L:SF50_knob_stop_run)
SF50_Engine_Start_Stop_Toggle#(L:SF50_knob_stop_run, Bool) if{ 1 (>K:STARTER1_SET) 1 (>K:SET_FUEL_VALVE_ENG1) } els{ 0 (>K:STARTER1_SET) 0 (>K:SET_FUEL_VALVE_ENG1) 0 (>K:ELECT_FUEL_PUMP1_SET) }
//FlightFX/Visionjet SF50/FMS
SF50_Autothrottle_Disengage_Button#(A:AUTOPILOT TAKEOFF POWER ACTIVE, Bool) ! if{ (>K:AUTO_THROTTLE_TO_GA) }
//FlightFX/Visionjet SF50/Fuel
SF50_Fuel_Pump_Knob_Off#(L:SF50_knob_stop_run, Bool) if{ 0 (L:SF50_knob_stop_run, Bool)  0 (>K:ELECT_FUEL_PUMP1_SET) }
SF50_Fuel_Pump_Knob_Run#1 (>L:SF50_knob_stop_run, Bool)
SF50_Fuel_Pump_Knob_Toggle#(L:SF50_knob_stop_run, Bool) d ! (>L:SF50_knob_stop_run) if{ 0 (>K:ELECT_FUEL_PUMP_SET) }
SF50_Fuel_Tank_Selector_Auto#1 (>L:SF50_fuel_selector_auto) (A:FUEL TANK LEFT MAIN QUANTITY, gallons) (A:FUEL TANK RIGHT MAIN QUANTITY, gallons) > if{  2 (>K:FUEL_SELECTOR_SET) } els{ 3 (>K:FUEL_SELECTOR_SET) } 0 (>L:SF50_fuel_selector_left) 0 (>L:SF50_fuel_selector_right) 
SF50_Fuel_Tank_Selector_Left#1 (>L:SF50_fuel_selector_left) 0 (>L:SF50_fuel_selector_right) 0 (>L:SF50_fuel_selector_auto) 
SF50_Fuel_Tank_Selector_Right#1 (>L:SF50_fuel_selector_right) 0 (>L:SF50_fuel_selector_left) 0 (>L:SF50_fuel_selector_auto) 
//FlightFX/Visionjet SF50/Gear
SF50_Emergency_Gear_Door_Toggle#(L:SF50_gear_alternate_ext, Bool) ! (>L:SF50_gear_alternate_ext, Bool)
SF50_Emergency_Gear_Handle_Toggle#(L:SF50_gear_alternate_ext_handle, Bool) ! (>L:SF50_gear_alternate_ext_handle) 
//FlightFX/Visionjet SF50/Lights
SF50_Lights_Landing_Off#0 s0 1 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_1)
SF50_Lights_Landing_On#1 s0 1 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_1)
SF50_Lights_Panel_1_Dec#(L:LIGHTING_PANEL_1) 5 - 0 max 100 min s0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT PANEL:1, Bool) s2 (L:LIGHTING_PANEL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }
SF50_Lights_Panel_1_Inc#(L:LIGHTING_PANEL_1) 5 + 0 max 100 min s0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT PANEL:1, Bool) s2 (L:LIGHTING_PANEL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }
SF50_Lights_Strobe_Off#0 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)
SF50_Lights_Strobe_On#1 s0 1 l0 (>K:2:STROBES_SET) l0 (>L:LIGHTING_STROBE_1)
SF50_Lights_Wing_Ice_Off#0 s0 1 l0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_1)
SF50_Lights_Wing_Ice_On#1 s0 1 l0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_1)
SF50_Ovhd_Cabin_1_Light_Knob_Dec#(L:LIGHTING_CABIN_1) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_1) l0 20 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) s2 (L:LIGHTING_CABIN_1) 0 > != if{ l2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) quit }
SF50_Ovhd_Cabin_1_Light_Knob_Inc#(L:LIGHTING_CABIN_1) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_1) l0 20 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) s2 (L:LIGHTING_CABIN_1) 0 > != if{ l2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) quit }
SF50_Ovhd_Cabin_2_Light_Knob_Dec#(L:LIGHTING_CABIN_2) 5 - 0 max 100 min s0 (>L:LIGHTING_CABIN_2) l0 21 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:2, Bool) s2 (L:LIGHTING_CABIN_2) 0 > != if{ l2 ! 2 l0 (>K:2:CABIN_LIGHTS_SET) quit }
SF50_Ovhd_Cabin_2_Light_Knob_Inc#(L:LIGHTING_CABIN_2) 5 + 0 max 100 min s0 (>L:LIGHTING_CABIN_2) l0 21 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:2, Bool) s2 (L:LIGHTING_CABIN_2) 0 > != if{ l2 ! 2 l0 (>K:2:CABIN_LIGHTS_SET) quit }
//FlightFX/Visionjet SF50/Miscellaneous
SF50_Checklists_Scroll_Down#(>H:checklist_scroll_down)
SF50_Checklists_Scroll_Select#(>H:checklist_checklist_select)
SF50_Checklists_Scroll_Up#(>H:checklist_scroll_up)
SF50_Cockpit_TV_Toggle#(L:SF50_cockpit_tv, Bool) ! (>L:SF50_cockpit_tv) 
SF50_Front_Door_Toggle#(L:SF50_front_door) ! (>L:SF50_front_door)
SF50_Luggage_Door_Toggle#(L:SF50_luggage_door) ! (>L:SF50_luggage_door) 
SF50_VAMS_Static_Chocks_Toggle#(L:sf50_vams_static_chocks) ! (>L:sf50_vams_static_chocks) 
SF50_VAMS_Static_Covers_Toggle#(L:SF50_vams_static_covers) ! (>L:SF50_vams_static_covers)
SF50_VAMS_Static_Headphones_ANR_Toggle#(L:SF50_vams_anr) ! (>L:SF50_vams_anr)
SF50_VAMS_Static_Headphones_Toggle#(L:SF50_vams_static_headphones) ! (>L:SF50_vams_static_headphones)
SF50_vams_static_storage_cover#(L:SF50_vams_static_storage_cover) ! (>L:SF50_vams_static_storage_cover)
//FlightFX/Visionjet SF50/Warning
SF50_ECS_Toggle#(L:SF50_ecs, Bool) ! (L:SF50_ecs)
//FlightSim Studio/E1XX/Efis
CPT_DCP_Minimums_Increase#(L:FSS_EXX_DCP_L_MIN_ROT) 0.028 + (>L:FSS_EXX_DCP_L_MIN_ROT)
//Fly By Wire/A320-Dev/Air Condition / Pressurization
AIRCOND_PACK_FLOW_KNOB_HI#2 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)
AIRCOND_PACK_FLOW_KNOB_LO#0 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)
AIRCOND_PACK_FLOW_KNOB_NORM#1 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)
AIRCOND_PACK1_TOGGLE#(L:A32NX_OVHD_COND_PACK_1_PB_IS_ON, bool) ! (>L:A32NX_OVHD_COND_PACK_1_PB_IS_ON, bool)
AIRCOND_PACK2_TOGGLE#(L:A32NX_OVHD_COND_PACK_2_PB_IS_ON, bool) ! (>L:A32NX_OVHD_COND_PACK_2_PB_IS_ON, bool)
AIRCOND_RAMAIR_LOCK_TOGGLE#(L:A32NX_AIRCOND_RAMAIR_TOGGLE_LOCK) ! (>L:A32NX_AIRCOND_RAMAIR_TOGGLE_LOCK)
AIRCOND_RAMAIR_TOGGLE#(L:A32NX_AIRCOND_RAMAIR_TOGGLE, bool) ! (>L:A32NX_AIRCOND_RAMAIR_TOGGLE, bool)
CABIN_PRESS_DITCHING_LOCK_TOGGLE#(L:A32NX_DITCHING_LOCK) ! (>L:A32NX_DITCHING_LOCK)
A32NX_AIRCOND_AFT_CABIN_KNOB_DEC#(L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB,percent) 5 - 0 max (>L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB)
A32NX_AIRCOND_AFT_CABIN_KNOB_INC#(L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB,percent) 5 + 300 min (>L:A32NX_OVHD_COND_AFT_SELECTOR_KNOB)
A32NX_AIRCOND_COCKPIT_KNOB_DEC#(L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB,percent) 5 - 0 max (>L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB)
A32NX_AIRCOND_COCKPIT_KNOB_INC#(L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB,percent) 5 + 300 min (>L:A32NX_OVHD_COND_CKPT_SELECTOR_KNOB)
A32NX_AIRCOND_FWD_CABIN_KNOB_DEC#(L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB,percent) 5 - 0 max (>L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB)
A32NX_AIRCOND_FWD_CABIN_KNOB_INC#(L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB,percent) 5 + 300 min (>L:A32NX_OVHD_COND_FWD_SELECTOR_KNOB)
A32NX_AIRCOND_HOT_AIR_TOGGLE_OFF#0 (>L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON)
A32NX_AIRCOND_HOT_AIR_TOGGLE_ON#1 (>L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON)
A32NX_OVHD_AIRCOND_APU_BLEED_TOGGLE#(L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, bool) ! (>L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, bool)
A32NX_OVHD_AIRCOND_ENG1_BLEED_TOGGLE#(L:A32NX_OVHD_PNEU_ENG_1_BLEED_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_PNEU_ENG_1_BLEED_PB_IS_AUTO, bool)
A32NX_OVHD_AIRCOND_ENG2_BLEED_TOGGLE#(L:A32NX_OVHD_PNEU_ENG_2_BLEED_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_PNEU_ENG_2_BLEED_PB_IS_AUTO, bool)
A32NX_OVHD_CABIN_PRESS_MAN_VS_CTL_DN#2 (>L:A32NX_OVHD_PRESS_MAN_VS_CTL_SWITCH)
A32NX_OVHD_CABIN_PRESS_MAN_VS_CTL_MID#1 (>L:A32NX_OVHD_PRESS_MAN_VS_CTL_SWITCH)
A32NX_OVHD_CABIN_PRESS_MAN_VS_CTL_UP#0 (>L:A32NX_OVHD_PRESS_MAN_VS_CTL_SWITCH)
A32NX_OVHD_CABIN_PRESS_MODE_SEL_MAN#(L:A32NX_OVHD_PRESS_MODE_SEL_PB_IS_AUTO) ! (>L:A32NX_OVHD_PRESS_MODE_SEL_PB_IS_AUTO)
AIRCOND_HOT_AIR_TOGGLE#(L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON) ! (>L:A32NX_OVHD_COND_HOT_AIR_PB_IS_ON)
CABIN_PRESS_DITCHING_TOGGLE#(L:A32NX_DITCHING) ! (>L:A32NX_DITCHING)
CABIN_PRESS_LDGELEV_AUTO_DEC#(L:XMLVAR_KNOB_OVHD_CABINPRESS_LDGELEV, Percent) 4 - 0 max (>L:XMLVAR_KNOB_OVHD_CABINPRESS_LDGELEV, percent)
CABIN_PRESS_LDGELEV_AUTO_INC#(L:XMLVAR_KNOB_OVHD_CABINPRESS_LDGELEV, Percent) 4 + 100 min (>L:XMLVAR_KNOB_OVHD_CABINPRESS_LDGELEV, percent)
//Fly By Wire/A320-Dev/Anti-Ice
ANTIICE_ENG1_TOGGLE#(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) (>K:ANTI_ICE_TOGGLE_ENG1)
ANTIICE_ENG2_TOGGLE#(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) (>K:ANTI_ICE_TOGGLE_ENG2)
ANTIICE_PROBE_WINDOW_TOGGLE#(L:A32NX_MAN_PITOT_HEAT) ! (>L:A32NX_MAN_PITOT_HEAT) (L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed)
ANTIICE_WING_TOGGLE#(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) (>K:TOGGLE_STRUCTURAL_DEICE)
A32NX_OVHD_ANTI_ICE_ENG_1_OFF#(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) if{ 0 (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)  (>K:ANTI_ICE_TOGGLE_ENG1) }
A32NX_OVHD_ANTI_ICE_ENG_1_ON#(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! if{ 1 (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)  (>K:ANTI_ICE_TOGGLE_ENG1) }
A32NX_OVHD_ANTI_ICE_ENG_2_OFF#(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) if{ 0 (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)  (>K:ANTI_ICE_TOGGLE_ENG2) }
A32NX_OVHD_ANTI_ICE_ENG_2_ON#(L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! if{ 1 (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)  (>K:ANTI_ICE_TOGGLE_ENG2) }
ANTIICE_ENG1_TOGGLE#(L:A32NX_BUTTON_OVHD_ANTI_ICE_ENG_1_POSITION, Bool) ! (>L:A32NX_BUTTON_OVHD_ANTI_ICE_ENG_1_POSITION, Bool) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)
ANTIICE_ENG2_TOGGLE#(L:A32NX_BUTTON_OVHD_ANTI_ICE_ENG_2_POSITION, Bool) ! (>L:A32NX_BUTTON_OVHD_ANTI_ICE_ENG_2_POSITION, Bool) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)
ANTIICE_WING_TOGGLE#(L:A32NX_BUTTON_OVHD_ANTI_ICE_WING_POSITION, Bool) ! (>L:A32NX_BUTTON_OVHD_ANTI_ICE_WING_POSITION, Bool) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed)
//Fly By Wire/A320-Dev/Autopilot
A32NX_FCU_VS_INC#(>K:A32NX.FCU_VS_INC)
A320_Neo_FCU_DEC_Heading#(>H:A320_Neo_FCU_HDG_DEC_Heading)
A320_Neo_FCU_INC_Heading#(>H:A320_Neo_FCU_HDG_INC_Heading)
A32NX_Autopilot_AP_1_Push#(>K:A32NX.FCU_AP_1_PUSH)
A32NX_Autopilot_AP_2_Push#(>K:A32NX.FCU_AP_2_PUSH)
A32NX_Autopilot_ATHR_Push#(>K:A32NX.FCU_ATHR_PUSH)
A32NX_FCU_ALT_DEC#(>K:A32NX.FCU_ALT_DEC)
A32NX_FCU_ALT_INC#(>K:A32NX.FCU_ALT_INC)
A32NX_FCU_ALT_Increment_Toggle#(L:A32NX_FCU_ALT_INCREMENT_1000) ! (>L:A32NX_FCU_ALT_INCREMENT_1000)
A32NX_FCU_ALT_PULL#(>K:A32NX.FCU_ALT_PULL)
A32NX_FCU_ALT_PUSH#(>K:A32NX.FCU_ALT_PUSH)
A32NX_FCU_ALT_SET#(>K:A32NX.FCU_ALT_SET)
A32NX_FCU_ALT_Selector_Knob_100#0 (>L:A32NX_FCU_ALT_INCREMENT_1000)
A32NX_FCU_ALT_Selector_Knob_1000#1 (>L:A32NX_FCU_ALT_INCREMENT_1000)
A32NX_FCU_APPR_PUSH#(>K:A32NX.FCU_APPR_PUSH)
A32NX_FCU_EXPED_BUTTON_PUSH#(>K:A32NX.FCU_EXPED_PUSH)
A32NX_FCU_METRIC_ALT_Button_Push#(>K:A32NX.FCU_METRIC_ALT_TOGGLE_PUSH)
A32NX_FCU_SPD_Knob_Dec#(>K:A32NX.FCU_SPD_DEC)
A32NX_FCU_SPD_Knob_Inc#(>K:A32NX.FCU_SPD_INC)
A32NX_FCU_SPD_Knob_Pull#(>K:A32NX.FCU_SPD_PULL)
A32NX_FCU_SPD_Knob_Push#(>K:A32NX.FCU_SPD_PUSH)
A32NX_FCU_SPD_MACH_Toggle_Push#(>K:A32NX.FCU_SPD_MACH_TOGGLE_PUSH)
A32NX_FCU_TRK_FPA_Button_Push#(>K:A32NX.FCU_TRK_FPA_TOGGLE_PUSH)
A32NX_FCU_VS_DEC#(>K:A32NX.FCU_VS_DEC)
A32NX_FCU_VS_DEC#(>K:A32NX.FCU_VS_DEC)
A32NX_FCU_VS_INC#(>K:A32NX.FCU_VS_INC)
A32NX_FCU_VS_PULL#(>K:A32NX.FCU_VS_PULL)
A32NX_FCU_VS_PUSH#(>K:A32NX.FCU_VS_PUSH)
A32NX_FCU_VS_SET#(>K:A32NX.FCU_VS_SET)
A32NX_FCU_HDG_PULL#(>K:A32NX.FCU_HDG_PULL)
A32NX_FCU_HDG_PUSH#(>K:A32NX.FCU_HDG_PUSH)
A32NX_FCU_LOC_PUSH#(>K:A32NX.FCU_LOC_PUSH)
//Fly By Wire/A320-Dev/Brakes
A32NX_PED_PARK_BRAKE_OFF#0 (>L:A32NX_PARK_BRAKE_LEVER_POS)
A32NX_PED_PARK_BRAKE_ON#1 (>L:A32NX_PARK_BRAKE_LEVER_POS)
//Fly By Wire/A320-Dev/Controls
A32NX_Overhead_ELAC1_Toggle#(L:A32NX_ELAC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_ELAC_1_PUSHBUTTON_PRESSED, Bool)
A32NX_Overhead_ELAC2_Toggle#(L:A32NX_ELAC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_ELAC_2_PUSHBUTTON_PRESSED, Bool)
A32NX_Overhead_FAC1_Press#(L:A32NX_FAC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_FAC_1_PUSHBUTTON_PRESSED, Bool) 
A32NX_Overhead_FAC2_Press#(L:A32NX_FAC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_FAC_2_PUSHBUTTON_PRESSED, Bool) 
A32NX_Overhead_SEC1_Press#(L:A32NX_SEC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_1_PUSHBUTTON_PRESSED, Bool) 
A32NX_Overhead_SEC2_Press#(L:A32NX_SEC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_2_PUSHBUTTON_PRESSED, Bool) 
A32NX_Overhead_SEC3_Press#(L:A32NX_SEC_3_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_3_PUSHBUTTON_PRESSED, Bool) 
//Fly By Wire/A320-Dev/ECAM
A32NX_ECAM_ALL_Button_Press#(>H:A32NX_ECP_ALL_PRESSED)
A32NX_ECAM_ALL_Button_Release#(>H:A32NX_ECP_ALL_RELEASED)
A32NX_ECAM_APU_Button_Press#(>H:A32NX_ECP_APU_PRESSED)
A32NX_ECAM_APU_Button_Release#(>H:A32NX_ECP_APU_RELEASED)
A32NX_ECAM_BLEED_Button_Press#(>H:A32NX_ECP_BLEED_PRESSED)
A32NX_ECAM_BLEED_Button_Release#(>H:A32NX_ECP_BLEED_RELEASED)
A32NX_ECAM_BRAKES_Button_Press#(>H:A32NX_ECP_BRAKES_PRESSED)
A32NX_ECAM_BRAKES_Button_Release#(>H:A32NX_ECP_BRAKES_RELEASED)
A32NX_ECAM_CLR_Button_1_Press#(>H:A32NX_ECP_CLR_1_PRESSED)
A32NX_ECAM_CLR_Button_1_Release#(>H:A32NX_ECP_CLR_1_RELEASED)
A32NX_ECAM_CLR_Button_2_Press#(>H:A32NX_ECP_CLR_2_PRESSED)
A32NX_ECAM_CLR_Button_2_Release#(>H:A32NX_ECP_CLR_2_RELEASED)
A32NX_ECAM_COND_Button_Press#(>H:A32NX_ECP_COND_PRESSED)
A32NX_ECAM_COND_Button_Release#(>H:A32NX_ECP_COND_RELEASED)
A32NX_ECAM_DOOR_Button_Press#(>H:A32NX_ECP_DOOR_PRESSED)
A32NX_ECAM_DOOR_Button_Release#(>H:A32NX_ECP_DOOR_RELEASED)
A32NX_ECAM_ELEC_Button_Press#(>H:A32NX_ECP_ELEC_PRESSED)
A32NX_ECAM_ELEC_Button_Release#(>H:A32NX_ECP_ELEC_RELEASED)
A32NX_ECAM_EMER_CANC_Button_Press#(>H:A32NX_ECP_EMER_CANCEL_PRESSED)
A32NX_ECAM_EMER_CANC_Button_Release#(>H:A32NX_ECP_EMER_CANCEL_RELEASED)
A32NX_ECAM_ENG_Button_Press#(>H:A32NX_ECP_ENG_PRESSED)
A32NX_ECAM_ENG_Button_Release#(>H:A32NX_ECP_ENG_RELEASED)
A32NX_ECAM_FLT_CTL_Button_Press#(>H:A32NX_ECP_FLT_CTL_PRESSED)
A32NX_ECAM_FLT_CTL_Button_Release#(>H:A32NX_ECP_FLT_CTL_RELEASED)
A32NX_ECAM_FUEL_Button_Press#(>H:A32NX_ECP_FUEL_PRESSED)
A32NX_ECAM_FUEL_Button_Release#(>H:A32NX_ECP_FUEL_RELEASED)
A32NX_ECAM_HYD_Button_Press#(>H:A32NX_ECP_HYD_PRESSED)
A32NX_ECAM_HYD_Button_Release#(>H:A32NX_ECP_HYD_RELEASED)
A32NX_ECAM_PRESS_Button_Press#(>H:A32NX_ECP_PRESS_PRESSED)
A32NX_ECAM_PRESS_Button_Release#(>H:A32NX_ECP_PRESS_RELEASED)
A32NX_ECAM_RCL_Button_Press#(>H:A32NX_ECP_RCL_PRESSED)
A32NX_ECAM_RCL_Button_Release#(>H:A32NX_ECP_RCL_RELEASED)
A32NX_ECAM_STS_Button_Press#(>H:A32NX_ECP_STS_PRESSED)
A32NX_ECAM_STS_Button_Release#(>H:A32NX_ECP_STS_RELEASED)
A32NX_ECAM_TO_CONF_Button_Press#(>H:A32NX_ECP_TO_CONF_TEST_PRESSED)
A32NX_ECAM_TO_CONF_Button_Release#(>H:A32NX_ECP_TO_CONF_TEST_RELEASED)
A32NX_ECAM_KNOB_LOWER_INC#(A:LIGHT POTENTIOMETER:93,percent) 5 + 100 min 93 (>K:2:LIGHT_POTENTIOMETER_SET)
//Fly By Wire/A320-Dev/EFIS (left)
BARO_PULL#(A:A32NX.FCU_EFIS_L_BARO_PULL, Number) 2 == if{ (>K:A32NX.FCU_EFIS_L_BARO_PULL) } els{ (>K:A32NX.FCU_EFIS_L_BARO_PULL) } 
BARO_PUSH#(A:A32NX.FCU_EFIS_L_BARO_PUSH, Number) 1 == if{ (>K:A32NX.FCU_EFIS_L_BARO_PUSH) } els{ (>K:A32NX.FCU_EFIS_L_BARO_PUSH) } 
//Fly By Wire/A320-Dev/EFIS
A32NX_EFIS_L_ARPT_PUSH#(>K:A32NX.FCU_EFIS_L_ARPT_PUSH)
A32NX_EFIS_L_BARO_KNOB_DEC#(>K:A32NX.FCU_EFIS_L_BARO_DEC)
A32NX_EFIS_L_BARO_KNOB_INC#(>K:A32NX.FCU_EFIS_L_BARO_INC)
A32NX_EFIS_L_BARO_KNOB_PULL#(>K:A32NX.FCU_EFIS_L_BARO_PULL)
A32NX_EFIS_L_BARO_KNOB_PUSH#(>K:A32NX.FCU_EFIS_L_BARO_PUSH)
A32NX_EFIS_L_CHRONO_PUSH#0 (>H:A32NX_EFIS_L_CHRONO_PUSHED)
A32NX_EFIS_L_CSTR_PUSH#(>K:A32NX.FCU_EFIS_L_CSTR_PUSH)
A32NX_EFIS_L_INHG_HPA_Toggle#(L:A32NX_FCU_EFIS_L_BARO_IS_INHG) ! (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG) (L:A32NX_FO_SYNC_EFIS_ENABLED) if{ (L:A32NX_FCU_EFIS_L_BARO_IS_INHG) (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG) }
A32NX_EFIS_L_NAVAID_1_MODE_ADF#1 (>L:A32NX_FCU_EFIS_L_NAVAID_1_MODE)
A32NX_EFIS_L_NAVAID_1_MODE_OFF#0 (>L:A32NX_FCU_EFIS_L_NAVAID_1_MODE)
A32NX_EFIS_L_NAVAID_1_MODE_VOR#2 (>L:A32NX_FCU_EFIS_L_NAVAID_1_MODE)
A32NX_EFIS_L_NAVAID_2_MODE_ADF#1 (>L:A32NX_FCU_EFIS_L_NAVAID_2_MODE)
A32NX_EFIS_L_NAVAID_2_MODE_OFF#0 (>L:A32NX_FCU_EFIS_L_NAVAID_2_MODE)
A32NX_EFIS_L_NAVAID_2_MODE_VOR#2 (>L:A32NX_FCU_EFIS_L_NAVAID_2_MODE)
A32NX_EFIS_L_ND_BRIGHT_DEC#(A:LIGHT POTENTIOMETER:89,percent) 5 - 0 max 89 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_L_ND_BRIGHT_INC#(A:LIGHT POTENTIOMETER:89,percent) 5 + 100 min 89 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_L_ND_MODE_ARC#3 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A32NX_EFIS_L_ND_MODE_DEC#(L:A32NX_FCU_EFIS_L_EFIS_MODE) -- 0 max (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A32NX_EFIS_L_ND_MODE_INC#(L:A32NX_FCU_EFIS_L_EFIS_MODE) ++ 4 min (>L:A32NX_FCU_EFIS_L_EFIS_MODE) 
A32NX_EFIS_L_ND_MODE_LS#0 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A32NX_EFIS_L_ND_MODE_NAV#2 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A32NX_EFIS_L_ND_MODE_PLAN#4 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A32NX_EFIS_L_ND_MODE_VOR#1 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A32NX_EFIS_L_ND_RANGE_10#0 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A32NX_EFIS_L_ND_RANGE_160#4 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A32NX_EFIS_L_ND_RANGE_20#1 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A32NX_EFIS_L_ND_RANGE_320#5 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A32NX_EFIS_L_ND_RANGE_40#2 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A32NX_EFIS_L_ND_RANGE_80#3 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A32NX_EFIS_L_ND_RANGE_DEC#(L:A32NX_FCU_EFIS_L_EFIS_RANGE) -- 0 max (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A32NX_EFIS_L_ND_RANGE_INC#(L:A32NX_FCU_EFIS_L_EFIS_RANGE) ++ 5 min (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A32NX_EFIS_L_NDB_PUSH#(>K:A32NX.FCU_EFIS_L_NDB_PUSH)
A32NX_EFIS_L_PFD_BRIGHT_DEC#(A:LIGHT POTENTIOMETER:88,percent) 5 - 0 max 88 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_L_PFD_BRIGHT_INC#(A:LIGHT POTENTIOMETER:88,percent) 5 + 100 min 88 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_L_PFD_LS_BUTTON_PUSH#(>K:A32NX.FCU_EFIS_L_LS_PUSH)
A32NX_EFIS_L_SELECT_HPA#0 (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG) 0 (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG)
A32NX_EFIS_L_SELECT_INHG#1 (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG) 1 (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG)
A32NX_EFIS_L_TERR_ON_ND_TOGGLE#(L:A32NX_EFIS_TERR_L_ACTIVE,bool) ! (>L:A32NX_EFIS_TERR_L_ACTIVE)
A32NX_EFIS_L_VORD_PUSH#(>K:A32NX.FCU_EFIS_L_VORD_PUSH)
A32NX_EFIS_L_WPT_PUSH#(>K:A32NX.FCU_EFIS_L_WPT_PUSH)
A32NX_EFIS_R_ARPT_PUSH#(>K:A32NX.FCU_EFIS_R_ARPT_PUSH)
A32NX_EFIS_R_CHRONO_PUSH#0 (>H:A32NX_EFIS_R_CHRONO_PUSHED)
A32NX_EFIS_R_CSTR_PUSH#(>K:A32NX.FCU_EFIS_R_CSTR_PUSH)
A32NX_EFIS_R_INHG_HPA_Toggle#(L:A32NX_FCU_EFIS_R_BARO_IS_INHG) ! (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG) (L:A32NX_FO_SYNC_EFIS_ENABLED) if{ (L:A32NX_FCU_EFIS_R_BARO_IS_INHG) (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG) }
A32NX_EFIS_R_NAVAID_1_MODE_ADF#1 (>L:A32NX_FCU_EFIS_R_NAVAID_1_MODE)
A32NX_EFIS_R_NAVAID_1_MODE_OFF#0 (>L:A32NX_FCU_EFIS_R_NAVAID_1_MODE)
A32NX_EFIS_R_NAVAID_1_MODE_VOR#2 (>L:A32NX_FCU_EFIS_R_NAVAID_1_MODE)
A32NX_EFIS_R_NAVAID_2_MODE_ADF#1 (>L:A32NX_FCU_EFIS_R_NAVAID_2_MODE)
A32NX_EFIS_R_NAVAID_2_MODE_OFF#0 (>L:A32NX_FCU_EFIS_R_NAVAID_2_MODE)
A32NX_EFIS_R_NAVAID_2_MODE_VOR#2 (>L:A32NX_FCU_EFIS_R_NAVAID_2_MODE)
A32NX_EFIS_R_ND_BRIGHT_DEC#(A:LIGHT POTENTIOMETER:91,percent) 5 - 0 max 91 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_R_ND_BRIGHT_INC#(A:LIGHT POTENTIOMETER:91,percent) 5 + 100 min 91 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_R_ND_MODE_ARC#3 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A32NX_EFIS_R_ND_MODE_DEC#(L:A32NX_EFIS_R_EFIS_MODE) -- 0 max (>L:A32NX_EFIS_R_EFIS_MODE)
A32NX_EFIS_R_ND_MODE_INC#(L:A32NX_FCU_EFIS_R_EFIS_MODE) ++ 4 min (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A32NX_EFIS_R_ND_MODE_LS#0 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A32NX_EFIS_R_ND_MODE_NAV#2 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A32NX_EFIS_R_ND_MODE_PLAN#4 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A32NX_EFIS_R_ND_MODE_VOR#1 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A32NX_EFIS_R_ND_RANGE_10#0 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_10#0 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_160#4 (>L:A32NX_FCU_EFIS_R_ND_RANGE)
A32NX_EFIS_R_ND_RANGE_160#4 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_20#1 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_320#5 (>L:A32NX_FCU_EFIS_R_ND_RANGE)
A32NX_EFIS_R_ND_RANGE_320#5 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_40#2 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_40#2 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_80#3 (>L:A32NX_FCU_EFIS_R_ND_RANGE)
A32NX_EFIS_R_ND_RANGE_80#3 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_DEC#(L:A32NX_FCU_EFIS_R_EFIS_RANGE) -- 0 max (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_ND_RANGE_INC#(L:A32NX_FCU_EFIS_R_ND_RANGE) ++ 5 min (>L:A32NX_FCU_EFIS_R_ND_RANGE)
A32NX_EFIS_R_ND_RANGE_INC#(L:A32NX_FCU_EFIS_R_EFIS_RANGE) ++ 5 min (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A32NX_EFIS_R_NDB_PUSH#(>K:A32NX.FCU_EFIS_L_NDB_PUSH)
A32NX_EFIS_R_PFD_BRIGHT_INC#(A:LIGHT POTENTIOMETER:90,percent) 5 + 100 min 90 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_R_PFD_BRIGHTDEC#(A:LIGHT POTENTIOMETER:90,percent) 5 - 0 max 90 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_R_PFD_LS_BUTTON_PUSH#(>K:A32NX.FCU_EFIS_R_LS_PUSH)
A32NX_EFIS_R_SELECT_HPA#0 (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG) 0 (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG)
A32NX_EFIS_R_SELECT_INHG#1 (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG) 1 (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG)
A32NX_EFIS_R_TERR_ON_ND_TOGGLE#(L:A32NX_EFIS_TERR_R_ACTIVE,bool) ! (>L:A32NX_EFIS_TERR_R_ACTIVE)
A32NX_EFIS_R_VORD_PUSH#(>K:A32NX.FCU_EFIS_R_VORD_PUSH)
A32NX_EFIS_R_WPT_PUSH#(>K:A32NX.FCU_EFIS_R_WPT_PUSH)
//Fly By Wire/A320-Dev/Electrical
A32NX_OVHD_APU_Master_SW_Press#(L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON) 
A32NX_OVHD_APU_Master_Switch_OFF#0 (>L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON) 
A32NX_OVHD_APU_Master_Switch_ON#1 (>L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON) 
A32NX_OVHD_APU_START_Button_Press#(L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Bool) if{ 1 (>L:A32NX_OVHD_APU_START_PB_IS_ON) }
A32NX_OVHD_ELEC_BATTERTY_1_AUTO#1 (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) 
A32NX_OVHD_ELEC_BATTERTY_1_OFF#0 (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) 
A32NX_OVHD_ELEC_BATTERTY_2_AUTO#1 (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) 
A32NX_OVHD_ELEC_BATTERTY_2_OFF#0 (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) 
A32NX_OVHD_ELEC_BATTERY_1_TOGGLE#(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) 
A32NX_OVHD_ELEC_BATTERY_2_TOGGLE#(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) 
A32NX_OVHD_EMER_ELEC_GEN_1_FAULT_ANNUN#(L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_HAS_FAULT)
A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PRESS#(L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_IS_ON) ! (>L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_IS_ON)
A32NX_OVHD_EMER_ELEC_GEN_1_OFF_ANNUN#(L:A32NX_OVHD_EMER_ELEC_GEN_1_LINE_PB_IS_ON) !
OVHD_ELEC_EXT_PWR_TOGGLE#(L:A32NX_EXT_PWR_AVAIL:1,bool) if{ (L:A32NX_OVHD_ELEC_EXT_PWR_PB_IS_ON,Bool) ! (>L:A32NX_OVHD_ELEC_EXT_PWR_PB_IS_ON,Bool) }
OVHD_ELEC_GEN1_TOGGLE#(>K:TOGGLE_ALTERNATOR1)
OVHD_ELEC_GEN2_TOGGLE#(>K:TOGGLE_ALTERNATOR2)
OVHD_ELEC_AC_ESS_FEED_TOGGLE#(L:A32NX_OVHD_ELEC_AC_ESS_FEED_PB_IS_NORMAL, bool) ! (>L:A32NX_OVHD_ELEC_AC_ESS_FEED_PB_IS_NORMAL, bool)
OVHD_ELEC_APU_GEN_TOGGLE#1 (>K:APU_GENERATOR_SWITCH_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_ELEC_APUGEN_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ELEC_APUGEN_Pressed)
OVHD_ELEC_COMMERCIAL_TOGGLE#(L:A32NX_OVHD_ELEC_COMMERCIAL_PB_IS_ON, bool) ! (>L:A32NX_OVHD_ELEC_COMMERCIAL_PB_IS_ON)
OVHD_ELEC_GALY_AND_CAB_TOGGLE#(L:A32NX_OVHD_ELEC_GALY_AND_CAB_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_ELEC_GALY_AND_CAB_PB_IS_AUTO, bool)
Overhead_Elec_Bus_Tie_Auto_Toggle#(L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO)
//Fly By Wire/A320-Dev/Engine
A32NX_ENG1_MASTER_SWITCH_OFF#1 (>K:FUELSYSTEM_VALVE_CLOSE)
A32NX_ENG1_MASTER_SWITCH_ON#1 (>K:FUELSYSTEM_VALVE_OPEN)
A32NX_ENG2_MASTER_SWITCH_OFF#2 (>K:FUELSYSTEM_VALVE_CLOSE)
A32NX_ENG2_MASTER_SWITCH_ON#2 (>K:FUELSYSTEM_VALVE_OPEN)
A32NX_Ped_Eng_Mode_Select_Knob_Crank#0 (>L:XMLVAR_ENG_MODE_SEL) 0 (>K:TURBINE_IGNITION_SWITCH_SET)
A32NX_Ped_Eng_Mode_Select_Knob_Ign_Start#2 (>L:XMLVAR_ENG_MODE_SEL) 2 (>K:TURBINE_IGNITION_SWITCH_SET1) 2 (>K:TURBINE_IGNITION_SWITCH_SET2) (>H:A320_Neo_EICAS_2_Ignition_Start) 
A32NX_Ped_Eng_Mode_Select_Knob_Norm#1 (>L:XMLVAR_ENG_MODE_SEL) 1 (>K:TURBINE_IGNITION_SWITCH_SET1) 1 (K:TURBINE_IGNITION_SWITCH_SET2)
//Fly By Wire/A320-Dev/Engines
A32NX_PED_ENG_1_START_LEVER_DOWN#1 (>K:FUELSYSTEM_VALVE_CLOSE) (A:GENERAL ENG STARTER:1, Bool) if{ (>K:TOGGLE_STARTER1) }
A32NX_PED_ENG_1_START_LEVER_UP#1 (>K:FUELSYSTEM_VALVE_OPEN) (A:GENERAL ENG STARTER:1, Bool) ! if{ (>K:TOGGLE_STARTER1) }
A32NX_PED_ENG_2_START_LEVER_DOWN#2 (>K:FUELSYSTEM_VALVE_CLOSE) (A:GENERAL ENG STARTER:2, Bool) if{ (>K:TOGGLE_STARTER2) }
A32NX_PED_ENG_2_START_LEVER_UP#2 (>K:FUELSYSTEM_VALVE_OPEN) (A:GENERAL ENG STARTER:2, Bool) ! if{ (>K:TOGGLE_STARTER2) }
//Fly By Wire/A320-Dev/Fire
FIRE_APU_AGENT1_DISCHARGE#(L:A32NX_FIRE_BUTTON_APU) if{ 1 (>L:A32NX_FIRE_APU_AGENT1_Discharge) }
FIRE_ENG2_AGENT2_DISCHARGE#(L:A32NX_FIRE_BUTTON_ENG2) if{ 1 (>L:A32NX_FIRE_ENG2_AGENT2_Discharge) }
FIRE_GUARD_APU_TOGGLE#(L:A32NX_FIRE_BUTTON_APU) ! if{ (L:A32NX_FIRE_GUARD_APU) ! (>L:A32NX_FIRE_GUARD_APU) }
A32NX_FIRE_BUTTON_ENG1_ON#(L:A32NX_FIRE_GUARD_ENG1) if{ (L:A32NX_FIRE_BUTTON_ENG1) ! (>L:A32NX_FIRE_BUTTON_ENG1) }
A32NX_FIRE_BUTTON_ENG2_ON#(L:A32NX_FIRE_GUARD_ENG2) if{ (L:A32NX_FIRE_BUTTON_ENG2) ! (>L:A32NX_FIRE_BUTTON_ENG2) }
A32NX_FIRE_ENG1_AGENT1_DISCHARGE#(L:A32NX_FIRE_BUTTON_ENG1) if{ 1 (>L:A32NX_FIRE_ENG1_AGENT1_Discharge) }
A32NX_FIRE_ENG1_AGENT2_DISCHARGE#(L:A32NX_FIRE_BUTTON_ENG1) if{ 1 (>L:A32NX_FIRE_ENG1_AGENT2_Discharge) }
A32NX_FIRE_ENG2_AGENT1_DISCHARGE#(L:A32NX_FIRE_BUTTON_ENG2) if{ 1 (>L:A32NX_FIRE_ENG2_AGENT1_Discharge) }
A32NX_FIRE_GUARD_ENG1_TOGGLE#(L:A32NX_FIRE_BUTTON_ENG1) ! if{ (L:A32NX_FIRE_GUARD_ENG1) ! (>L:A32NX_FIRE_GUARD_ENG1) }
A32NX_FIRE_GUARD_ENG2_TOGGLE#(L:A32NX_FIRE_BUTTON_ENG2) ! if{ (L:A32NX_FIRE_GUARD_ENG2) ! (>L:A32NX_FIRE_GUARD_ENG2) }
A32NX_FIRE_TEST_APU_OFF#0 (>L:A32NX_FIRE_TEST_APU)
A32NX_FIRE_TEST_APU_ON#1 (>L:A32NX_FIRE_TEST_APU) 
A32NX_FIRE_TEST_CARGO_OFF#0 (>L:A32NX_FIRE_TEST_CARGO)
A32NX_FIRE_TEST_CARGO_ON#1 (>L:A32NX_FIRE_TEST_CARGO)
A32NX_FIRE_TEST_ENG1_OFF#0 (>L:A32NX_FIRE_TEST_ENG1)
A32NX_FIRE_TEST_ENG1_ON#1 (>L:A32NX_FIRE_TEST_ENG1) 
A32NX_FIRE_TEST_ENG2_OFF#0 (>L:A32NX_FIRE_TEST_ENG2)
A32NX_FIRE_TEST_ENG2_ON#1 (>L:A32NX_FIRE_TEST_ENG2) 
FIRE_BUTTON_APU_ON#(L:A32NX_FIRE_GUARD_APU) if{ (>L:A32NX_FIRE_BUTTON_APU) ! (>L:A32NX_FIRE_BUTTON_APU) }
//Fly By Wire/A320-Dev/Fuel
A32NX_OVHD_FUEL_CTK_L_XFR_Button_Press#9 (>K:FUELSYSTEM_VALVE_TOGGLE)
A32NX_OVHD_FUEL_CTK_R_XFR_Button_Press#10 (>K:FUELSYSTEM_VALVE_TOGGLE)
A32NX_OVHD_FUEL_LTK_PUMP1_PRESS#2 (>K:FUELSYSTEM_PUMP_TOGGLE)
A32NX_OVHD_FUEL_LTK_PUMP2_PRESS#5 (>K:FUELSYSTEM_PUMP_TOGGLE)
A32NX_OVHD_FUEL_MODE_SEL_PRESS#(L:A32NX_OVHD_FUEL_MODESEL_MANUAL) ! s0 (>L:A32NX_OVHD_FUEL_MODESEL_MANUAL) 1 l0 + sp0 l0 4 (>K:2:FUELSYSTEM_JUNCTION_SET) l0 5 (>K:2:FUELSYSTEM_JUNCTION_SET) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_MODESEL_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_MODESEL_Pressed)
A32NX_OVHD_FUEL_RTK_PUMP1_PRESS#3 (>K:FUELSYSTEM_PUMP_TOGGLE)
A32NX_OVHD_FUEL_RTK_PUMP2_PRESS#6 (>K:FUELSYSTEM_PUMP_TOGGLE)
A32NX_OVHD_FUEL_XFEED_PRESS#3 (>K:FUELSYSTEM_VALVE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) 
A32NX_OVHD_HYD_RAT_MAN_ON_BUTTON_PRESS#1 (>L:A32NX_OVHD_HYD_RAT_MAN_ON_IS_PRESSED)
A32NX_OVHD_HYD_RAT_MAN_ON_BUTTON_RELEASE#0 (>L:A32NX_OVHD_HYD_RAT_MAN_ON_IS_PRESSED)
//Fly By Wire/A320-Dev/GPWS
A32NX_GPWS_SYS_OFF_TOGGLE#(L:A32NX_GPWS_SYS_OFF,bool) ! (>L:A32NX_GPWS_SYS_OFF,bool)
A32NX_GPWS_TERR_TOGGLE#(L:A32NX_GPWS_TERR_OFF,bool) ! (>L:A32NX_GPWS_TERR_OFF,bool)
//Fly By Wire/A320-Dev/Gear
ANTISKID_OFF#(A:ANTISKID BRAKES ACTIVE,Bool) if{ (>K:ANTISKID_BRAKES_TOGGLE) }
ANTISKID_ON#(A:ANTISKID BRAKES ACTIVE,Bool) ! if{ (>K:ANTISKID_BRAKES_TOGGLE) }
A32NX_Autobrake_Lo_Button_Press#1 (>L:A32NX_OVHD_AUTOBRK_LOW_ON_IS_PRESSED, bool)
A32NX_Autobrake_Lo_Button_Release#0 (>L:A32NX_OVHD_AUTOBRK_LOW_ON_IS_PRESSED, bool)
A32NX_Autobrake_Max_Button_Press#1 (>L:A32NX_OVHD_AUTOBRK_MAX_ON_IS_PRESSED, bool)
A32NX_Autobrake_Max_Button_Release#0 (>L:A32NX_OVHD_AUTOBRK_MAX_ON_IS_PRESSED, bool)
A32NX_Autobrake_Med_Button_Press#1 (>L:A32NX_OVHD_AUTOBRK_MED_ON_IS_PRESSED, bool)
A32NX_Autobrake_Med_Button_Release#0 (>L:A32NX_OVHD_AUTOBRK_MED_ON_IS_PRESSED, bool)
A32NX_Park_Brake_LEVER_TOGGLE#(L:A32NX_PARK_BRAKE_LEVER_POS) ! (>L:A32NX_PARK_BRAKE_LEVER_POS)
A32NX_REALISTIC_TILLER_ENABLED_#(L:A32NX_REALISTIC_TILLER_ENABLED) ! (>L:A32NX_REALISTIC_TILLER_ENABLED)
AUTOBRAKE_LOW_HARD-TOGGLE#(L:A32NX_AUTOBRAKES_ARMED_MODE) 1 == if{ 0 } els{ 1 } (>L:A32NX_AUTOBRAKES_ARMED_MODE)
AUTOBRAKE_MAX_HARD-TOGGLE#(L:A32NX_AUTOBRAKES_ARMED_MODE) 3 == if{ 0 } els{ 3 } (>L:A32NX_AUTOBRAKES_ARMED_MODE)
AUTOBRAKE_MED_HARD-TOGGLE#(L:A32NX_AUTOBRAKES_ARMED_MODE) 2 == if{ 0 } els{ 2 } (>L:A32NX_AUTOBRAKES_ARMED_MODE)
//Fly By Wire/A320-Dev/Hydraulic
A32NX_OVHD_HYD_ENG1_PUMP_TOGGLE#(L:A32NX_OVHD_HYD_ENG_1_PUMP_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_ENG_1_PUMP_PB_IS_AUTO, bool)
A32NX_OVHD_HYD_ENG2_PUMP_TOGGLE#(L:A32NX_OVHD_HYD_ENG_2_PUMP_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_ENG_2_PUMP_PB_IS_AUTO, bool)
A32NX_OVHD_HYD_EPUMP_BLUE_AUTO_BUTTON_PRESS#(L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO, bool)
A32NX_OVHD_HYD_EPUMP_BLUE_LOCK_TOGGLE#(L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO_LOCK) ! (>L:A32NX_OVHD_HYD_EPUMPB_PB_IS_AUTO_LOCK)
A32NX_OVHD_HYD_EPUMP_YELLOW_AUTO_BUTTON_PRESS#(L:A32NX_OVHD_HYD_EPUMPY_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_EPUMPY_PB_IS_AUTO, bool)
A32NX_OVHD_HYD_PTU_AUTO_BUTTON_PRESS#(L:A32NX_OVHD_HYD_PTU_PB_IS_AUTO, bool) ! (>L:A32NX_OVHD_HYD_PTU_PB_IS_AUTO, bool)
//Fly By Wire/A320-Dev/Lights
A32NX_OH_INTEG_LIGHT_DEC#(A:LIGHT POTENTIOMETER:86,percent) 5 - 0 max 86 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_OH_INTEG_LIGHT_INC#(A:LIGHT POTENTIOMETER:86,percent) 5 + 100 min 86 (>K:2:LIGHT_POTENTIOMETER_SET)
_CPT_TABLE_LT_INC#(A:LIGHT POTENTIOMETER:10, percent) 5 - 0 max 10 (>K:2:LIGHT_POTENTIOMETER_SET)
_F_O_TABLE_LT_DEC# (A:LIGHT POTENTIOMETER:11, percent) 5 + 100 min 11 (>K:2:LIGHT_POTENTIOMETER_SET)
_F_O_TABLE_LT_INC#(A:LIGHT POTENTIOMETER:11, percent) 5 - 0 max 11 (>K:2:LIGHT_POTENTIOMETER_SET)
_PEDESTAL_FLOOD_LT_INC#(A:LIGHT POTENTIOMETER:76, percent) 5 - 0 max 76 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_EFIS_Cpt_Console_Floor_Switch_BRT#100 (>K:LIGHT_POTENTIOMETER_8_SET)
A32NX_EFIS_Cpt_Console_Floor_Switch_DIM#50 (>K:LIGHT_POTENTIOMETER_8_SET)
A32NX_EFIS_Cpt_Console_Floor_Switch_OFF#0 (>K:LIGHT_POTENTIOMETER_8_SET)
A32NX_EFIS_FO_Console_Floor_Switch_BRT#100 (>K:LIGHT_POTENTIOMETER_9_SET)
A32NX_EFIS_FO_Console_Floor_Switch_DIM#50 (>K:LIGHT_POTENTIOMETER_9_SET)
A32NX_EFIS_FO_Console_Floor_Switch_OFF#0 (>K:LIGHT_POTENTIOMETER_9_SET)
A32NX_LIGHTS_GLARESHIELD2_DEC#(A:LIGHT POTENTIOMETER:84, percent) 5 - 0 max 84 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_LIGHTS_GLARESHIELD2_INC#(A:LIGHT POTENTIOMETER:84, percent) 5 + 100 min 84 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_OH_DOME_LIGHT_Adjust#@ 10.23 / 7 (>K:2:LIGHT_POTENTIOMETER_SET) 
A32NX_OH_DOME_LIGHT_BRT#1 (>K:2:CABIN_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_7_SET)
A32NX_OH_DOME_LIGHT_OFF#0 (>K:2:CABIN_LIGHTS_SET) 0 (>K:LIGHT_POTENTIOMETER_7_SET)
A32NX_OH_NOSE_LIGHTS_OFF#2 (>L:LIGHTING_LANDING_1) 0 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET)
A32NX_OH_NOSE_LIGHTS_TAXI#1 (>L:LIGHTING_LANDING_1) 0 1 r (>K:2:LANDING_LIGHTS_SET) 1 1 r (>K:2:TAXI_LIGHTS_SET) 
A32NX_OH_NOSE_LIGHTS_TO#0 (>L:LIGHTING_LANDING_1) 1 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET)
A32NX_OH_NOSE_LIGHTS_TOGGLE#(L:LIGHTING_LANDING_1, Number) ++ 3 % s0 (>L:LIGHTING_LANDING_1) l0 0 == if{ 1 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET) quit } l0 1 == if{ 0 1 r (>K:2:LANDING_LIGHTS_SET) 1 1 r (>K:2:TAXI_LIGHTS_SET) quit } 0 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET) 
A32NX_OVHD_BEACON_LIGHTS_OFF#0 (>K:BEACON_LIGHTS_SET)
A32NX_OVHD_BEACON_LIGHTS_ON#1 (>K:BEACON_LIGHTS_SET)
A32NX_OVHD_BEACON_LIGHTS_TOGGLE#(A:LIGHT BEACON, bool) ! (>K:BEACON_LIGHTS_SET)
A32NX_OVHD_NAV_LOGO_LIGHTS_OFF#0 0 (>K:2:NAV_LIGHTS_SET) 0 0 (>K:2:LOGO_LIGHTS_SET)
A32NX_OVHD_NAV_LOGO_LIGHTS_ON#0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET)
A32NX_OVHD_NAV_LOGO_LIGHTS_TOGGLE#(L:LIGHTING_NAV_0) ! s0 (>L:LIGHTING_NAV_0) 0 l0 (>K:2:NAV_LIGHTS_SET) 0 l0 (>K:2:LOGO_LIGHTS_SET)
A32NX_OVHD_RUNWAY_TURNOFF_LIGHTS_OFF#0 sp0 2 l0 (>K:2:TAXI_LIGHTS_SET) 3 l0 (>K:2:TAXI_LIGHTS_SET)
A32NX_OVHD_RUNWAY_TURNOFF_LIGHTS_ON#1 sp0 2 l0 (>K:2:TAXI_LIGHTS_SET) 3 l0 (>K:2:TAXI_LIGHTS_SET)
A32NX_OVHD_RUNWAY_TURNOFF_LIGHTS_TOGGLE#(A:LIGHT TAXI:2, Bool) ! sp0 2 l0 (>K:2:TAXI_LIGHTS_SET) 3 l0 (>K:2:TAXI_LIGHTS_SET)
A32NX_OVHD_STROBE_LIGHTS_AUTO#1 (>L:LIGHTING_STROBE_0) 1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)
A32NX_OVHD_STROBE_LIGHTS_OFF#2 (>L:LIGHTING_STROBE_0) 0 (>L:STROBE_0_Auto) 0 0 r (>K:2:STROBES_SET)
A32NX_OVHD_STROBE_LIGHTS_ON#0 (>L:LIGHTING_STROBE_0) 0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)
A32NX_OVHD_STROBE_LIGHTS_TOGGLE#(L:LIGHTING_STROBE_0, Number) ++ 3 % s0 (>L:LIGHTING_STROBE_0, Number) l0 0 == if{ 0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET) quit } l0 1 == if{ 1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET) quit } 0 (>L:STROBE_0_Auto) 0 0 r (>K:2:STROBES_SET)
A32NX_OVHD_WING_LIGHTS_OFF#0 0 (>K:2:WING_LIGHTS_SET) 1 0 (>K:2:WING_LIGHTS_SET) 
A32NX_OVHD_WING_LIGHTS_ON#0 1 (>K:2:WING_LIGHTS_SET) 1 1 (>K:2:WING_LIGHTS_SET) 
A32NX_OVHD_WING_LIGHTS_TOGGLE#(A:LIGHT WING:0,Bool) ! s0 0 l0 (>K:2:WING_LIGHTS_SET) 1 l0 (>K:2:WING_LIGHTS_SET) 
A32NX_PEDEST_Knob_Flood_CPT_DEC#(A:LIGHT POTENTIOMETER:83,percent) 5 - 0 max 83 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_PEDEST_Knob_Flood_CPT_INC#(A:LIGHT POTENTIOMETER:83,percent) 5 + 100 min 83 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_LIGHTS_GLARESHIELD3_DEC#(A:LIGHT POTENTIOMETER:87, percent) 5 - 0 max 87 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_LIGHTS_GLARESHIELD3_INC#(A:LIGHT POTENTIOMETER:87, percent) 5 + 100 min 87 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_PEDEST_KNOB_FLOOD_FO_DEC#(A:LIGHT POTENTIOMETER:76,percent) 5 - 0 max 76 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_PEDEST_KNOB_FLOOD_FO_INC#(A:LIGHT POTENTIOMETER:76,percent) 5 + 100 min 76 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_PEDEST_KNOB_INTEG_DEC#(A:LIGHT POTENTIOMETER:85,percent) 5 - 0 max 85 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_PEDEST_KNOB_INTEG_INC#(A:LIGHT POTENTIOMETER:85,percent) 5 + 100 min 85 (>K:2:LIGHT_POTENTIOMETER_SET)
Adjust_GLARESHIELD_INTEGRAL_Brightness#@ 10.23 / 0 max 100 min 84 (>K:2:LIGHT_POTENTIOMETER_SET)
Adjust_GLARESHIELD_LCD_Brightness#@ 10.23 / 0 max 100 min 87 (>K:2:LIGHT_POTENTIOMETER_SET) 
All_Exterior_Lights_-_In_Flight#0 (>L:LIGHTING_STROBE_0) 0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET) 0 1 (>K:2:BEACON_LIGHTS_SET) 0 0 s0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0) 0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET) 0 s0 (>L:LIGHTING_TAXI_2) 2 l0 (>K:2:TAXI_LIGHTS_SET) 3 l0 (>K:2:TAXI_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_1) 0 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET)
All_Exterior_Lights_-_Park_Parking#1 (>L:LIGHTING_STROBE_0) 1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET) 0 1 (>K:2:BEACON_LIGHTS_SET) 0 0 s0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0) 0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET) 0 s0 (>L:LIGHTING_TAXI_2) 2 l0 (>K:2:TAXI_LIGHTS_SET) 3 l0 (>K:2:TAXI_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_1) 0 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET)
All_Exterior_Lights_-_Take_Off#0 (>L:LIGHTING_STROBE_0) 0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET) 0 1 (>K:2:BEACON_LIGHTS_SET) 0 0 s0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0) 0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET) 0 s0 (>L:LIGHTING_TAXI_2) 2 l0 (>K:2:TAXI_LIGHTS_SET) 3 l0 (>K:2:TAXI_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_1) 1 1 r (>K:2:LANDING_LIGHTS_SET) 0 1 r (>K:2:TAXI_LIGHTS_SET)
All_Exterior_Lights_-_Taxi#1 (>L:LIGHTING_STROBE_0) 1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET) 0 1 (>K:2:BEACON_LIGHTS_SET) 0 0 s0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0) 0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET) 1 s0 (>L:LIGHTING_TAXI_2) 2 l0 (>K:2:TAXI_LIGHTS_SET) 3 l0 (>K:2:TAXI_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET) 1 (>L:LIGHTING_LANDING_1) 0 1 r (>K:2:LANDING_LIGHTS_SET) 1 1 r (>K:2:TAXI_LIGHTS_SET)  
CPT_TABLE_LT_DEC#(A:LIGHT POTENTIOMETER:10, percent) 5 + 100 min 10 (>K:2:LIGHT_POTENTIOMETER_SET)
LANDING_LIGHTS_L_TOGGLE#(L:LIGHTING_LANDING_2, Number) 0 == if{ 2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET) } els{ (L:LIGHTING_LANDING_2, Number) 1 == if{ 0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)  } els{ 1 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)  } }
LANDING_LIGHTS_L_R_TOGGLE#(L:LIGHTING_LANDING_2, Number) 0 == if{ 2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)  2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET) } els{ (L:LIGHTING_LANDING_2, Number) 1 == if{ 0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)  0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)  } els{ 1 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)  1 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)  } }
LANDING_LIGHTS_R_TOGGLE#(L:LIGHTING_LANDING_3, Number) 0 == if{ 2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET) } els{ (L:LIGHTING_LANDING_3, Number) 1 == if{ 0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)  } els{ 1 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)  } }
PEDESTAL_FLOOD_LT_DEC#(A:LIGHT POTENTIOMETER:76, percent) 5 + 100 min 76 (>K:2:LIGHT_POTENTIOMETER_SET) 
LANDING_LIGHTS_L_OFF#1 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)
LANDING_LIGHTS_L_ON#0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)
LANDING_LIGHTS_L_RETRACT#2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET)
LANDING_LIGHTS_R_OFF#1 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)
LANDING_LIGHTS_R_ON#0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)
LANDING_LIGHTS_R_RETRACT#2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)
//Fly By Wire/A320-Dev/MCDU
A32NX_CDU_1_BTN_0#1 (>L:A32NX_MCDU_PUSH_ANIM_1_0) (>H:A320_Neo_CDU_1_BTN_0)
A32NX_CDU_1_BTN_1#1 (>L:A32NX_MCDU_PUSH_ANIM_1_1) (>H:A320_Neo_CDU_1_BTN_1)
A32NX_CDU_1_BTN_2#1 (>L:A32NX_MCDU_PUSH_ANIM_1_2) (>H:A320_Neo_CDU_1_BTN_2)
A32NX_CDU_1_BTN_3#1 (>L:A32NX_MCDU_PUSH_ANIM_1_3) (>H:A320_Neo_CDU_1_BTN_3)
A32NX_CDU_1_BTN_4#1 (>L:A32NX_MCDU_PUSH_ANIM_1_4) (>H:A320_Neo_CDU_1_BTN_4)
A32NX_CDU_1_BTN_5#1 (>L:A32NX_MCDU_PUSH_ANIM_1_5) (>H:A320_Neo_CDU_1_BTN_5)
A32NX_CDU_1_BTN_6#1 (>L:A32NX_MCDU_PUSH_ANIM_1_6) (>H:A320_Neo_CDU_1_BTN_6)
A32NX_CDU_1_BTN_7#1 (>L:A32NX_MCDU_PUSH_ANIM_1_7) (>H:A320_Neo_CDU_1_BTN_7)
A32NX_CDU_1_BTN_8#1 (>L:A32NX_MCDU_PUSH_ANIM_1_8) (>H:A320_Neo_CDU_1_BTN_8)
A32NX_CDU_1_BTN_9#1 (>L:A32NX_MCDU_PUSH_ANIM_1_9) (>H:A320_Neo_CDU_1_BTN_9)
A32NX_CDU_1_BTN_A#1 (>L:A32NX_MCDU_PUSH_ANIM_1_A) (>H:A320_Neo_CDU_1_BTN_A)
A32NX_CDU_1_BTN_AIRPORT#1 (>L:A32NX_MCDU_PUSH_ANIM_1_AIRPORT) (>H:A320_Neo_CDU_1_BTN_AIRPORT)
A32NX_CDU_1_BTN_ATC#1 (>L:A32NX_MCDU_PUSH_ANIM_1_ATC) (>H:A320_Neo_CDU_1_BTN_ATC)
A32NX_CDU_1_BTN_B#1 (>L:A32NX_MCDU_PUSH_ANIM_1_B) (>H:A320_Neo_CDU_1_BTN_B)
A32NX_CDU_1_BTN_C#1 (>L:A32NX_MCDU_PUSH_ANIM_1_C) (>H:A320_Neo_CDU_1_BTN_C)
A32NX_CDU_1_BTN_CLR_Release#0 (>L:A32NX_MCDU_CLR_Pressed)
A32NX_CDU_1_BTN_D#1 (>L:A32NX_MCDU_PUSH_ANIM_1_D) (>H:A320_Neo_CDU_1_BTN_D)
A32NX_CDU_1_BTN_DATA#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DATA) (>H:A320_Neo_CDU_1_BTN_DATA)
A32NX_CDU_1_BTN_DIR#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DIR) (>H:A320_Neo_CDU_1_BTN_DIR)
A32NX_CDU_1_BTN_DIV#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DIV) (>H:A320_Neo_CDU_1_BTN_DIV)
A32NX_CDU_1_BTN_DOT#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DOT) (>H:A320_Neo_CDU_1_BTN_DOT)
A32NX_CDU_1_BTN_DOWN#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DOWN) (>H:A320_Neo_CDU_1_BTN_DOWN)
A32NX_CDU_1_BTN_E#1 (>L:A32NX_MCDU_PUSH_ANIM_1_E) (>H:A320_Neo_CDU_1_BTN_E)
A32NX_CDU_1_BTN_F#1 (>L:A32NX_MCDU_PUSH_ANIM_1_F) (>H:A320_Neo_CDU_1_BTN_F)
A32NX_CDU_1_BTN_FPLN#1 (>L:A32NX_MCDU_PUSH_ANIM_1_FPLN) (>H:A320_Neo_CDU_1_BTN_FPLN)
A32NX_CDU_1_BTN_FUEL#1 (>L:A32NX_MCDU_PUSH_ANIM_1_FUEL) (>H:A320_Neo_CDU_1_BTN_FUEL)
A32NX_CDU_1_BTN_G#1 (>L:A32NX_MCDU_PUSH_ANIM_1_G) (>H:A320_Neo_CDU_1_BTN_G)
A32NX_CDU_1_BTN_H#1 (>L:A32NX_MCDU_PUSH_ANIM_1_H) (>H:A320_Neo_CDU_1_BTN_H)
A32NX_CDU_1_BTN_I#1 (>L:A32NX_MCDU_PUSH_ANIM_1_I) (>H:A320_Neo_CDU_1_BTN_I)
A32NX_CDU_1_BTN_INIT#1 (>L:A32NX_MCDU_PUSH_ANIM_1_INIT) (>H:A320_Neo_CDU_1_BTN_INIT)
A32NX_CDU_1_BTN_J#1 (>L:A32NX_MCDU_PUSH_ANIM_1_J) (>H:A320_Neo_CDU_1_BTN_J)
A32NX_CDU_1_BTN_K#1 (>L:A32NX_MCDU_PUSH_ANIM_1_K) (>H:A320_Neo_CDU_1_BTN_K)
A32NX_CDU_1_BTN_L#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L) (>H:A320_Neo_CDU_1_BTN_L)
A32NX_CDU_1_BTN_L1#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L1) (>H:A320_Neo_CDU_1_BTN_L1)
A32NX_CDU_1_BTN_L2#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L2) (>H:A320_Neo_CDU_1_BTN_L2)
A32NX_CDU_1_BTN_L3#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L3) (>H:A320_Neo_CDU_1_BTN_L3)
A32NX_CDU_1_BTN_L4#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L4) (>H:A320_Neo_CDU_1_BTN_L4)
A32NX_CDU_1_BTN_L5#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L5) (>H:A320_Neo_CDU_1_BTN_L5)
A32NX_CDU_1_BTN_L6#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L6) (>H:A320_Neo_CDU_1_BTN_L6)
A32NX_CDU_1_BTN_M#1 (>L:A32NX_MCDU_PUSH_ANIM_1_M) (>H:A320_Neo_CDU_1_BTN_M)
A32NX_CDU_1_BTN_MENU#1 (>L:A32NX_MCDU_PUSH_ANIM_1_MENU) (>H:A320_Neo_CDU_1_BTN_MENU)
A32NX_CDU_1_BTN_N#1 (>L:A32NX_MCDU_PUSH_ANIM_1_N) (>H:A320_Neo_CDU_1_BTN_N)
A32NX_CDU_1_BTN_NEXTPAGE#1 (>L:A32NX_MCDU_PUSH_ANIM_1_NEXTPAGE) (>H:A320_Neo_CDU_1_BTN_NEXTPAGE)
A32NX_CDU_1_BTN_O#1 (>L:A32NX_MCDU_PUSH_ANIM_1_O) (>H:A320_Neo_CDU_1_BTN_O)
A32NX_CDU_1_BTN_OVFY#1 (>L:A32NX_MCDU_PUSH_ANIM_1_OVFY) (>H:A320_Neo_CDU_1_BTN_OVFY)
A32NX_CDU_1_BTN_P#1 (>L:A32NX_MCDU_PUSH_ANIM_1_P) (>H:A320_Neo_CDU_1_BTN_P)
A32NX_CDU_1_BTN_PERF#1 (>L:A32NX_MCDU_PUSH_ANIM_1_PERF) (>H:A320_Neo_CDU_1_BTN_PERF)
A32NX_CDU_1_BTN_PLUSMINUS#1 (>L:A32NX_MCDU_PUSH_ANIM_1_PLUSMINUS) (>H:A320_Neo_CDU_1_BTN_PLUSMINUS)
A32NX_CDU_1_BTN_PREVPAGE#1 (>L:A32NX_MCDU_PUSH_ANIM_1_PREVPAGE) (>H:A320_Neo_CDU_1_BTN_PREVPAGE)
A32NX_CDU_1_BTN_PROG#1 (>L:A32NX_MCDU_PUSH_ANIM_1_PROG) (>H:A320_Neo_CDU_1_BTN_PROG)
A32NX_CDU_1_BTN_Q#1 (>L:A32NX_MCDU_PUSH_ANIM_1_Q) (>H:A320_Neo_CDU_1_BTN_Q)
A32NX_CDU_1_BTN_R#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R) (>H:A320_Neo_CDU_1_BTN_R)
A32NX_CDU_1_BTN_R1#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R1) (>H:A320_Neo_CDU_1_BTN_R1)
A32NX_CDU_1_BTN_R2#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R2) (>H:A320_Neo_CDU_1_BTN_R2)
A32NX_CDU_1_BTN_R3#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R3) (>H:A320_Neo_CDU_1_BTN_R3)
A32NX_CDU_1_BTN_R4#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R4) (>H:A320_Neo_CDU_1_BTN_R4)
A32NX_CDU_1_BTN_R5#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R5) (>H:A320_Neo_CDU_1_BTN_R5)
A32NX_CDU_1_BTN_R6#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R6) (>H:A320_Neo_CDU_1_BTN_R6)
A32NX_CDU_1_BTN_RAD#1 (>L:A32NX_MCDU_PUSH_ANIM_1_RAD) (>H:A320_Neo_CDU_1_BTN_RAD)
A32NX_CDU_1_BTN_S#1 (>L:A32NX_MCDU_PUSH_ANIM_1_S) (>H:A320_Neo_CDU_1_BTN_S)
A32NX_CDU_1_BTN_SEC#1 (>L:A32NX_MCDU_PUSH_ANIM_1_SEC) (>H:A320_Neo_CDU_1_BTN_SEC)
A32NX_CDU_1_BTN_SP#1 (>L:A32NX_MCDU_PUSH_ANIM_1_SP) (>H:A320_Neo_CDU_1_BTN_SP)
A32NX_CDU_1_BTN_T#1 (>L:A32NX_MCDU_PUSH_ANIM_1_T) (>H:A320_Neo_CDU_1_BTN_T)
A32NX_CDU_1_BTN_U#1 (>L:A32NX_MCDU_PUSH_ANIM_1_U) (>H:A320_Neo_CDU_1_BTN_U)
A32NX_CDU_1_BTN_UP#1 (>L:A32NX_MCDU_PUSH_ANIM_1_UP) (>H:A320_Neo_CDU_1_BTN_UP)
A32NX_CDU_1_BTN_V#1 (>L:A32NX_MCDU_PUSH_ANIM_1_V) (>H:A320_Neo_CDU_1_BTN_V)
A32NX_CDU_1_BTN_W#1 (>L:A32NX_MCDU_PUSH_ANIM_1_W) (>H:A320_Neo_CDU_1_BTN_W)
A32NX_CDU_1_BTN_X#1 (>L:A32NX_MCDU_PUSH_ANIM_1_X) (>H:A320_Neo_CDU_1_BTN_X)
A32NX_CDU_1_BTN_Y#1 (>L:A32NX_MCDU_PUSH_ANIM_1_Y) (>H:A320_Neo_CDU_1_BTN_Y)
A32NX_CDU_1_BTN_Z#1 (>L:A32NX_MCDU_PUSH_ANIM_1_Z) (>H:A320_Neo_CDU_1_BTN_Z)
A32NX_CDU_2_BTN_0#1 (>L:A32NX_MCDU_PUSH_ANIM_2_0) (>H:A320_Neo_CDU_2_BTN_0)
A32NX_CDU_2_BTN_1#1 (>L:A32NX_MCDU_PUSH_ANIM_2_1) (>H:A320_Neo_CDU_2_BTN_1)
A32NX_CDU_2_BTN_2#1 (>L:A32NX_MCDU_PUSH_ANIM_2_2) (>H:A320_Neo_CDU_2_BTN_2)
A32NX_CDU_2_BTN_3#1 (>L:A32NX_MCDU_PUSH_ANIM_2_3) (>H:A320_Neo_CDU_2_BTN_3)
A32NX_CDU_2_BTN_4#1 (>L:A32NX_MCDU_PUSH_ANIM_2_4) (>H:A320_Neo_CDU_2_BTN_4)
A32NX_CDU_2_BTN_5#1 (>L:A32NX_MCDU_PUSH_ANIM_2_5) (>H:A320_Neo_CDU_2_BTN_5)
A32NX_CDU_2_BTN_6#1 (>L:A32NX_MCDU_PUSH_ANIM_2_6) (>H:A320_Neo_CDU_2_BTN_6)
A32NX_CDU_2_BTN_7#1 (>L:A32NX_MCDU_PUSH_ANIM_2_7) (>H:A320_Neo_CDU_2_BTN_7)
A32NX_CDU_2_BTN_8#1 (>L:A32NX_MCDU_PUSH_ANIM_2_8) (>H:A320_Neo_CDU_2_BTN_8)
A32NX_CDU_2_BTN_9#1 (>L:A32NX_MCDU_PUSH_ANIM_2_9) (>H:A320_Neo_CDU_2_BTN_9)
A32NX_CDU_2_BTN_A#1 (>L:A32NX_MCDU_PUSH_ANIM_2_A) (>H:A320_Neo_CDU_2_BTN_A)
A32NX_CDU_2_BTN_AIRPORT#1 (>L:A32NX_MCDU_PUSH_ANIM_2_AIRPORT) (>H:A320_Neo_CDU_2_BTN_AIRPORT)
A32NX_CDU_2_BTN_ATC#1 (>L:A32NX_MCDU_PUSH_ANIM_2_ATC) (>H:A320_Neo_CDU_2_BTN_ATC)
A32NX_CDU_2_BTN_B#1 (>L:A32NX_MCDU_PUSH_ANIM_2_B) (>H:A320_Neo_CDU_2_BTN_B)
A32NX_CDU_2_BTN_C#1 (>L:A32NX_MCDU_PUSH_ANIM_2_C) (>H:A320_Neo_CDU_2_BTN_C)
A32NX_CDU_2_BTN_CLR_Release#0 (>L:A32NX_MCDU_CLR_Pressed)
A32NX_CDU_2_BTN_D#1 (>L:A32NX_MCDU_PUSH_ANIM_2_D) (>H:A320_Neo_CDU_2_BTN_D)
A32NX_CDU_2_BTN_DATA#1 (>L:A32NX_MCDU_PUSH_ANIM_2_DATA) (>H:A320_Neo_CDU_2_BTN_DATA)
A32NX_CDU_2_BTN_DIR#1 (>L:A32NX_MCDU_PUSH_ANIM_2_DIR) (>H:A320_Neo_CDU_2_BTN_DIR)
A32NX_CDU_2_BTN_DOT#1 (>L:A32NX_MCDU_PUSH_ANIM_2_DOT) (>H:A320_Neo_CDU_2_BTN_DOT)
A32NX_CDU_2_BTN_DOWN#1 (>L:A32NX_MCDU_PUSH_ANIM_2_DOWN) (>H:A320_Neo_CDU_2_BTN_DOWN)
A32NX_CDU_2_BTN_E#1 (>L:A32NX_MCDU_PUSH_ANIM_2_E) (>H:A320_Neo_CDU_2_BTN_E)
A32NX_CDU_2_BTN_F#1 (>L:A32NX_MCDU_PUSH_ANIM_2_F) (>H:A320_Neo_CDU_2_BTN_F)
A32NX_CDU_2_BTN_FPLN#1 (>L:A32NX_MCDU_PUSH_ANIM_2_FPLN) (>H:A320_Neo_CDU_2_BTN_FPLN)
A32NX_CDU_2_BTN_FUEL#1 (>L:A32NX_MCDU_PUSH_ANIM_2_FUEL) (>H:A320_Neo_CDU_2_BTN_FUEL)
A32NX_CDU_2_BTN_G#1 (>L:A32NX_MCDU_PUSH_ANIM_2_G) (>H:A320_Neo_CDU_2_BTN_G)
A32NX_CDU_2_BTN_H#1 (>L:A32NX_MCDU_PUSH_ANIM_2_H) (>H:A320_Neo_CDU_2_BTN_H)
A32NX_CDU_2_BTN_I#1 (>L:A32NX_MCDU_PUSH_ANIM_2_I) (>H:A320_Neo_CDU_2_BTN_I)
A32NX_CDU_2_BTN_INIT#1 (>L:A32NX_MCDU_PUSH_ANIM_2_INIT) (>H:A320_Neo_CDU_2_BTN_INIT)
A32NX_CDU_2_BTN_J#1 (>L:A32NX_MCDU_PUSH_ANIM_2_J) (>H:A320_Neo_CDU_2_BTN_J)
A32NX_CDU_2_BTN_K#1 (>L:A32NX_MCDU_PUSH_ANIM_2_K) (>H:A320_Neo_CDU_2_BTN_K)
A32NX_CDU_2_BTN_L#1 (>L:A32NX_MCDU_PUSH_ANIM_2_L) (>H:A320_Neo_CDU_2_BTN_L)
A32NX_CDU_2_BTN_L1#1 (>L:A32NX_MCDU_PUSH_ANIM_2_L1) (>H:A320_Neo_CDU_2_BTN_L1)
A32NX_CDU_2_BTN_L2#1 (>L:A32NX_MCDU_PUSH_ANIM_2_L2) (>H:A320_Neo_CDU_2_BTN_L2)
A32NX_CDU_2_BTN_L3#1 (>L:A32NX_MCDU_PUSH_ANIM_2_L3) (>H:A320_Neo_CDU_2_BTN_L3)
A32NX_CDU_2_BTN_L4#1 (>L:A32NX_MCDU_PUSH_ANIM_2_L4) (>H:A320_Neo_CDU_2_BTN_L4)
A32NX_CDU_2_BTN_L5#1 (>L:A32NX_MCDU_PUSH_ANIM_2_L5) (>H:A320_Neo_CDU_2_BTN_L5)
A32NX_CDU_2_BTN_L6#1 (>L:A32NX_MCDU_PUSH_ANIM_2_L6) (>H:A320_Neo_CDU_2_BTN_L6)
A32NX_CDU_2_BTN_M#1 (>L:A32NX_MCDU_PUSH_ANIM_2_M) (>H:A320_Neo_CDU_2_BTN_M)
A32NX_CDU_2_BTN_MENU#1 (>L:A32NX_MCDU_PUSH_ANIM_2_MENU) (>H:A320_Neo_CDU_2_BTN_MENU)
A32NX_CDU_2_BTN_N#1 (>L:A32NX_MCDU_PUSH_ANIM_2_N) (>H:A320_Neo_CDU_2_BTN_N)
A32NX_CDU_2_BTN_NEXTPAGE#1 (>L:A32NX_MCDU_PUSH_ANIM_2_NEXTPAGE) (>H:A320_Neo_CDU_2_BTN_NEXTPAGE)
A32NX_CDU_2_BTN_O#1 (>L:A32NX_MCDU_PUSH_ANIM_2_O) (>H:A320_Neo_CDU_2_BTN_O)
A32NX_CDU_2_BTN_OVFY#1 (>L:A32NX_MCDU_PUSH_ANIM_2_OVFY) (>H:A320_Neo_CDU_2_BTN_OVFY)
A32NX_CDU_2_BTN_P#1 (>L:A32NX_MCDU_PUSH_ANIM_2_P) (>H:A320_Neo_CDU_2_BTN_P)
A32NX_CDU_2_BTN_PERF#1 (>L:A32NX_MCDU_PUSH_ANIM_2_PERF) (>H:A320_Neo_CDU_2_BTN_PERF)
A32NX_CDU_2_BTN_PLUSMINUS#1 (>L:A32NX_MCDU_PUSH_ANIM_2_PLUSMINUS) (>H:A320_Neo_CDU_2_BTN_PLUSMINUS)
A32NX_CDU_2_BTN_PREVPAGE#1 (>L:A32NX_MCDU_PUSH_ANIM_2_PREVPAGE) (>H:A320_Neo_CDU_2_BTN_PREVPAGE)
A32NX_CDU_2_BTN_PROG#1 (>L:A32NX_MCDU_PUSH_ANIM_2_PROG) (>H:A320_Neo_CDU_2_BTN_PROG)
A32NX_CDU_2_BTN_Q#1 (>L:A32NX_MCDU_PUSH_ANIM_2_Q) (>H:A320_Neo_CDU_2_BTN_Q)
A32NX_CDU_2_BTN_R#1 (>L:A32NX_MCDU_PUSH_ANIM_2_R) (>H:A320_Neo_CDU_2_BTN_R)
A32NX_CDU_2_BTN_R1#1 (>L:A32NX_MCDU_PUSH_ANIM_2_R1) (>H:A320_Neo_CDU_2_BTN_R1)
A32NX_CDU_2_BTN_R2#1 (>L:A32NX_MCDU_PUSH_ANIM_2_R2) (>H:A320_Neo_CDU_2_BTN_R2)
A32NX_CDU_2_BTN_R3#1 (>L:A32NX_MCDU_PUSH_ANIM_2_R3) (>H:A320_Neo_CDU_2_BTN_R3)
A32NX_CDU_2_BTN_R4#1 (>L:A32NX_MCDU_PUSH_ANIM_2_R4) (>H:A320_Neo_CDU_2_BTN_R4)
A32NX_CDU_2_BTN_R5#1 (>L:A32NX_MCDU_PUSH_ANIM_2_R5) (>H:A320_Neo_CDU_2_BTN_R5)
A32NX_CDU_2_BTN_R6#1 (>L:A32NX_MCDU_PUSH_ANIM_2_R6) (>H:A320_Neo_CDU_2_BTN_R6)
A32NX_CDU_2_BTN_RAD#1 (>L:A32NX_MCDU_PUSH_ANIM_2_RAD) (>H:A320_Neo_CDU_2_BTN_RAD)
A32NX_CDU_2_BTN_S#1 (>L:A32NX_MCDU_PUSH_ANIM_2_S) (>H:A320_Neo_CDU_2_BTN_S)
A32NX_CDU_2_BTN_SEC#1 (>L:A32NX_MCDU_PUSH_ANIM_2_SEC) (>H:A320_Neo_CDU_2_BTN_SEC)
A32NX_CDU_2_BTN_SP#1 (>L:A32NX_MCDU_PUSH_ANIM_2_SP) (>H:A320_Neo_CDU_2_BTN_SP)
A32NX_CDU_2_BTN_T#1 (>L:A32NX_MCDU_PUSH_ANIM_2_T) (>H:A320_Neo_CDU_2_BTN_T)
A32NX_CDU_2_BTN_U#1 (>L:A32NX_MCDU_PUSH_ANIM_2_U) (>H:A320_Neo_CDU_2_BTN_U)
A32NX_CDU_2_BTN_UP#1 (>L:A32NX_MCDU_PUSH_ANIM_2_UP) (>H:A320_Neo_CDU_2_BTN_UP)
A32NX_CDU_2_BTN_V#1 (>L:A32NX_MCDU_PUSH_ANIM_2_V) (>H:A320_Neo_CDU_2_BTN_V)
A32NX_CDU_2_BTN_W#1 (>L:A32NX_MCDU_PUSH_ANIM_2_W) (>H:A320_Neo_CDU_2_BTN_W)
A32NX_CDU_2_BTN_X#1 (>L:A32NX_MCDU_PUSH_ANIM_2_X) (>H:A320_Neo_CDU_2_BTN_X)
A32NX_CDU_2_BTN_Y#1 (>L:A32NX_MCDU_PUSH_ANIM_2_Y) (>H:A320_Neo_CDU_2_BTN_Y)
A32NX_CDU_2_BTN_Z#1 (>L:A32NX_MCDU_PUSH_ANIM_2_Z) (>H:A320_Neo_CDU_2_BTN_Z)
A32NX_CDU_1_BTN_CLR_Press#1 (>L:A32NX_MCDU_PUSH_ANIM_1_CLR) (E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime) 1 (>L:A32NX_MCDU_CLR_Pressed) (>H:A320_Neo_CDU_1_BTN_CLR) 
A32NX_CDU_1_BTN_DARROW#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DARROW) (>H:A320_Neo_CDU_1_BTN_DARROW)
A32NX_CDU_1_BTN_LARROW#1 (>L:A32NX_MCDU_PUSH_ANIM_1_LARROW) (>H:A320_Neo_CDU_1_BTN_LARROW)
A32NX_CDU_1_BTN_RARROW#1 (>L:A32NX_MCDU_PUSH_ANIM_1_RARROW) (>H:A320_Neo_CDU_1_BTN_RARROW)
A32NX_CDU_1_BTN_UARROW#1 (>L:A32NX_MCDU_PUSH_ANIM_1_UARROW) (>H:A320_Neo_CDU_1_BTN_UARROW)
A32NX_CDU_2_BTN_CLR_Press#1 (>L:A32NX_MCDU_PUSH_ANIM_2_CLR) (E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime) 1 (>L:A32NX_MCDU_CLR_Pressed) (>H:A320_Neo_CDU_2_BTN_CLR)
A32NX_CDU_2_BTN_DIV#1 (>L:A32NX_MCDU_PUSH_ANIM_2_DIV) (>H:A320_Neo_CDU_2_BTN_DIV)
A32NX_MCDU_L_BRT_Button_Press#(L:A32NX_MCDU_L_BRIGHTNESS) 0.5 + 8 min (>L:A32NX_MCDU_L_BRIGHTNESS)
A32NX_MCDU_L_DIM_Button_Press#(L:A32NX_MCDU_L_BRIGHTNESS) 0.5 - 0.5 max (>L:A32NX_MCDU_L_BRIGHTNESS)
//Fly By Wire/A320-Dev/Miscellaneous
A32NX_OVHD_RCDR_GND_CTL_TOGGLE#(L:A32NX_RCDR_GROUND_CONTROL_ON,bool) ! if{ (A:GENERAL ENG OIL PRESSURE:1, psi) 18 < sp1  (A:GENERAL ENG OIL PRESSURE:2, psi) 18 < sp2  (L:A32NX_ELEC_DC_ESS_SHED_BUS_IS_POWERED,bool) l1 and l2 and  if{ 1 (>L:A32NX_RCDR_GROUND_CONTROL_ON,bool) } } els{ 0 (>L:A32NX_RCDR_GROUND_CONTROL_ON,bool) }
A32NX_OVHD_WIPER_L_FAST#(A:CIRCUIT SWITCH ON:77,bool) ! if{ 77 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 100 77 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)
A32NX_OVHD_WIPER_L_OFF#(A:CIRCUIT SWITCH ON:77,bool) if{ 77 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
A32NX_OVHD_WIPER_L_SLOW#(A:CIRCUIT SWITCH ON:77,bool) ! if{ 77 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 75 77 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)
A32NX_OVHD_WIPER_R_FAST#(A:CIRCUIT SWITCH ON:80,bool) ! if{ 80 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 100 80 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)
A32NX_OVHD_WIPER_R_OFF#(A:CIRCUIT SWITCH ON:80,bool) if{ 80 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
A32NX_OVHD_WIPER_R_SLOW#(A:CIRCUIT SWITCH ON:80,bool) ! if{ 80 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 75 80 (>K:2:ELECTRICAL_CIRCUIT_POWER_SETTING_SET)
COCKPIT_DOOR_LOCK#1 (>L:A32NX_COCKPIT_DOOR_LOCKED)
COCKPIT_DOOR_UNLOCK#0 (>L:A32NX_COCKPIT_DOOR_LOCKED)
A32NX_CHRONO_ET_KNOB_RST#2 (>L:A32NX_CHRONO_ET_SWITCH_POS, number)
A32NX_CHRONO_ET_KNOB_RUN#0 (>L:A32NX_CHRONO_ET_SWITCH_POS, number)
A32NX_CHRONO_ET_KNOB_STP#1 (>L:A32NX_CHRONO_ET_SWITCH_POS, number)
A32NX_CHRONO_RST#(>H:A32NX_CHRONO_RST)
A32NX_CHRONO_TOGGLE#(>H:A32NX_CHRONO_TOGGLE)
A32NX_Chrono_Date_Display#(>H:A32NX_CHRONO_DATE)
A32NX_Chrono_ET_Knob_Dec#(L:A32NX_CHRONO_ET_SWITCH_POS, number) 1 - 0 max (>L:A32NX_CHRONO_ET_SWITCH_POS, number) (>H:A32NX_CHRONO_ET_POS_CHANGED) 
A32NX_Chrono_ET_Knob_Inc#(L:A32NX_CHRONO_ET_SWITCH_POS, number) 1 + 2 min (>L:A32NX_CHRONO_ET_SWITCH_POS, number) (>H:A32NX_CHRONO_ET_POS_CHANGED)
A32NX_RCDR_CVR_TEST_PRESS#1 (>L:A32NX_RCDR_TEST)
A32NX_RCDR_CVR_TEST_RELEASE#0 (>L:A32NX_RCDR_TEST)
PUSH_DOORPANEL_VIDEO_TOGGLE#(L:PUSH_DOORPANEL_VIDEO, bool) ! (>L:PUSH_DOORPANEL_VIDEO, bool)
//Fly By Wire/A320-Dev/Navigation
A32NX_OVHD_ADIRS_KNOB1_MODES_TOGGLE#(L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, number) ++ 3 % (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB, number)
A32NX_OVHD_ADIRS_KNOB2_MODES_TOGGLE#(L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB) ++ 3 % (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)
A32NX_OVHD_ADIRS_KNOB3_MODES_TOGGLE#(L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB) ++ 3 % (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)
A32NX_TCAS_TRAFFIC_POSITION_ABV#2 (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, enum)
A32NX_TCAS_TRAFFIC_POSITION_ALL#1 (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, enum)
A32NX_TCAS_TRAFFIC_POSITION_BLW#3 (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, enum)
A32NX_TCAS_TRAFFIC_POSITION_THRT#0 (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, enum)
ATC_Custom_Btn_0#(L:XPNDR_clr) 0 > if{ 0 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_0) }
ATC_Custom_Btn_1#(L:XPNDR_clr) 0 > if{ 1 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_1) }
ATC_Custom_Btn_2#(L:XPNDR_clr) 0 > if{ 2 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_2) }
ATC_Custom_Btn_3#(L:XPNDR_clr) 0 > if{ 3 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_3) }
ATC_Custom_Btn_4#(L:XPNDR_clr) 0 > if{ 4 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_4) }
ATC_Custom_Btn_5#(L:XPNDR_clr) 0 > if{ 5 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_5) }
ATC_Custom_Btn_6#(L:XPNDR_clr) 0 > if{ 6 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_6) }
ATC_Custom_Btn_7#(L:XPNDR_clr) 0 > if{ 7 (>L:XPNDR_key) 1 (>L:XPNDR_act,bool) (>H:A320_Neo_ATC_BTN_7) }
ATC_Custom_Btn_CLR#(L:XPNDR_clr) s1 2 < if{ (L:XPNDR_pos) -- s0 0 < if{ 3 } els{ l0 } (>L:XPNDR_pos) l1 0 == if{ (A:TRANSPONDER CODE:1,number) } els{ (L:XPNDR_temp) } 10 div (>L:XPNDR_temp) 2 (>L:XPNDR_clr) } els{ 0 (>L:XPNDR_temp) 0 (>L:XPNDR_pos) } (>H:A320_Neo_ATC_BTN_CLR) (E:SIMULATION TIME,second) 7 + (>L:XPNDR_timeout)
A32NX_ATC_Alt_Rptg_Select_OFF#0 (>L:A32NX_SWITCH_ATC_ALT,number)
A32NX_ATC_Alt_Rptg_Select_ON#1 (>L:A32NX_SWITCH_ATC_ALT,number)
A32NX_XPNDR_MODE_AUTO#1 (>L:A32NX_TRANSPONDER_MODE, enum)
A32NX_XPNDR_MODE_ON#2 (>L:A32NX_TRANSPONDER_MODE, enum)
A32NX_XPNDR_MODE_STBY#0 (>L:A32NX_TRANSPONDER_MODE, enum)
TCAS_MODE#(L:A32NX_SWITCH_TCAS_POSITION, Number) ++ 3 % (>L:A32NX_SWITCH_TCAS_POSITION, Number)
TCAS_MODE_STANDBY#0 (>L:A32NX_SWITCH_TCAS_POSITION)
TCAS_MODE_TA#1 (>L:A32NX_SWITCH_TCAS_POSITION)
TCAS_MODE_TARA#2 (>L:A32NX_SWITCH_TCAS_POSITION)
TCAS_TRAFFIC_POSITION_#(L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number) ++ 4 % (>L:A32NX_SWITCH_TCAS_TRAFFIC_POSITION, Number)
TRANSPONDER_MODE#(L:A32NX_TRANSPONDER_MODE, Number) ++ 3 % (>L:A32NX_TRANSPONDER_MODE, Number)
TRANSPONDER_MODE_AUTO#1 (>L:A32NX_TRANSPONDER_MODE)
TRANSPONDER_MODE_ON#2 (>L:A32NX_TRANSPONDER_MODE)
TRANSPONDER_MODE_STBY#0 (>L:A32NX_TRANSPONDER_MODE)
OVHD_ADIRS_ADR_1_TOGGLE#(L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON)
OVHD_ADIRS_ADR_2_TOGGLE#(L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON)
OVHD_ADIRS_ADR_3_TOGGLE#(L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON)
OVHD_ADIRS_IR_1_TOGGLE#(L:A32NX_OVHD_ADIRS_IR_1_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_IR_1_PB_IS_ON)
OVHD_ADIRS_IR_2_TOGGLE#(L:A32NX_OVHD_ADIRS_IR_2_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_IR_2_PB_IS_ON)
OVHD_ADIRS_IR_3_TOGGLE#(L:A32NX_OVHD_ADIRS_IR_3_PB_IS_ON) ! (>L:A32NX_OVHD_ADIRS_IR_3_PB_IS_ON)
OVHD_ADIRS_KNOB1_ATT#2 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)
OVHD_ADIRS_KNOB1_NAV#1 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)
OVHD_ADIRS_KNOB1_OFF#0 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)
OVHD_ADIRS_KNOB2_ATT#2 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)
OVHD_ADIRS_KNOB2_NAV#1 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)
OVHD_ADIRS_KNOB2_OFF#0 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)
OVHD_ADIRS_KNOB3_ATT#2 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)
OVHD_ADIRS_KNOB3_NAV#1 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)
OVHD_ADIRS_KNOB3_OFF#0 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)
//Fly By Wire/A320-Dev/Passengers/Crew
CABIN_EMERGENCY_LIGHT_ARM#1 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
CABIN_EMERGENCY_LIGHT_OFF#2 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
CABIN_EMERGENCY_LIGHT_ON#0 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
CABIN_NO_SMOKING_AUTO#1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, number)
CABIN_NO_SMOKING_OFF#2 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, number)
CABIN_NO_SMOKING_ON#0 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position, number)
CABIN_SEATBELTS_ALERT_TOGGLE#(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)
CABIN_EMERGENCY_LIGHT_TOGGLE#(L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position) ++ 3 % (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
CABIN_NO_SMOKING_TOGGLE#(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 2 + 3 % (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position)
//Fly By Wire/A320-Dev/Radar
RADAR_PWS_AUTO#1 (>L:A32NX_SWITCH_RADAR_PWS_POSITION)
RADAR_PWS_OFF#0 (>L:A32NX_SWITCH_RADAR_PWS_POSITION)
RADAR_PWS_TOGGLE#(L:A32NX_SWITCH_RADAR_PWS_POSITION) ! (>L:A32NX_SWITCH_RADAR_PWS_POSITION)
WEATHER_MODE_MAP#3 (>L:XMLVAR_A320_WEATHERRADAR_MODE)
WEATHER_MODE_TOGGLE#(L:XMLVAR_A320_WEATHERRADAR_MODE, Number) ++ 4 % (>L:XMLVAR_A320_WEATHERRADAR_MODE, Number)
WEATHER_MODE_TURB#2 (>L:XMLVAR_A320_WEATHERRADAR_MODE)
WEATHER_MODE_WX#0 (>L:XMLVAR_A320_WEATHERRADAR_MODE)
WEATHER_MODE_WX_T#1 (>L:XMLVAR_A320_WEATHERRADAR_MODE)
WEATHER_SYSTEM_1#0 (>L:XMLVAR_A320_WEATHERRADAR_SYS)
WEATHER_SYSTEM_1_TOGGLE#(L:XMLVAR_A320_WEATHERRADAR_SYS) ! (>L:XMLVAR_A320_WEATHERRADAR_SYS)
WEATHER_SYSTEM_2#2 (>L:XMLVAR_A320_WEATHERRADAR_SYS)
WEATHER_SYSTEM_2_TOGGLE#(L:XMLVAR_A320_WEATHERRADAR_SYS) 1 == if{ 2 (>L:XMLVAR_A320_WEATHERRADAR_SYS) } els{ 1 (>L:XMLVAR_A320_WEATHERRADAR_SYS) }
WEATHER_SYSTEM_OFF#0 (>L:XMLVAR_A320_WEATHERRADAR_SYS)
//Fly By Wire/A320-Dev/Radio
A32NX_AIR_DATA_SWITCHING_CAPT#0 (>L:A32NX_AIR_DATA_SWITCHING_KNOB)
A32NX_AIR_DATA_SWITCHING_F_O#2 (>L:A32NX_AIR_DATA_SWITCHING_KNOB)
A32NX_AIR_DATA_SWITCHING_NORM#1 (>L:A32NX_AIR_DATA_SWITCHING_KNOB)
A32NX_ATT_HDG_SWITCHING_CAPT#0 (>L:A32NX_ATT_HDG_SWITCHING_KNOB)
A32NX_ATT_HDG_SWITCHING_F_O#2 (>L:A32NX_ATT_HDG_SWITCHING_KNOB)
A32NX_ATT_HDG_SWITCHING_NORM#1 (>L:A32NX_ATT_HDG_SWITCHING_KNOB)
A32NX_ECAM_ND_XFR_SWITCHING_CAPT#0 (>L:A32NX_ECAM_ND_XFR_SWITCHING_KNOB)
A32NX_ECAM_ND_XFR_SWITCHING_F_O#2 (>L:A32NX_ECAM_ND_XFR_SWITCHING_KNOB)
A32NX_ECAM_ND_XFR_SWITCHING_NORM#1 (>L:A32NX_ECAM_ND_XFR_SWITCHING_KNOB)
A32NX_EIS_DMC_SWITCHING_CAPT#0 (>L:A32NX_EIS_DMC_SWITCHING_KNOB)
A32NX_EIS_DMC_SWITCHING_F_O#2 (>L:A32NX_EIS_DMC_SWITCHING_KNOB) 
A32NX_EIS_DMC_SWITCHING_NORM#1 (>L:A32NX_EIS_DMC_SWITCHING_KNOB)
A32NX_RMP_L_VHF2_BUTTON_PRESSED#(>H:A32NX_RMP_L_VHF2_BUTTON_PRESSED)
A32NX_RMP_L_ADF_Button_Press#(>H:A32NX_RMP_L_ADF_BUTTON_PRESSED)
A32NX_RMP_L_AM_Button_Press#(>H:A32NX_RMP_L_AM_BUTTON_PRESSED)
A32NX_RMP_L_BFO_Button_Press#(>H:A32NX_RMP_L_BFO_BUTTON_PRESSED)
A32NX_RMP_L_GLS_BUTTON_PRESS#(>H:A32NX_RMP_L_GLS_BUTTON_PRESSED)
A32NX_RMP_L_HF1_Button_Press#(>H:A32NX_RMP_L_HF1_BUTTON_PRESSED)
A32NX_RMP_L_HF2_Button_Press#(>H:A32NX_RMP_L_HF12_BUTTON_PRESSED)
A32NX_RMP_L_ILS_Button_Press#(>H:A32NX_RMP_L_ILS_BUTTON_PRESSED)
A32NX_RMP_L_MLS_Button_Press#(>H:A32NX_RMP_L_MLS_BUTTON_PRESSED)
A32NX_RMP_L_NAV_Button_Press#(>H:A32NX_RMP_L_NAV_BUTTON_PRESSED)
A32NX_RMP_L_VHF1_Button_Press#(>H:A32NX_RMP_L_VHF1_BUTTON_PRESSED)
A32NX_RMP_L_VHF3_Button_Press#(>H:A32NX_RMP_L_VHF3_BUTTON_PRESSED)
A32NX_RMP_L_VOR_Button_Press#(>H:A32NX_RMP_L_VOR_BUTTON_PRESSED)
A32NX_RMP_R_ADF_Button_Press#(>H:A32NX_RMP_R_ADF_BUTTON_PRESSED)
A32NX_RMP_R_AM_Button_Press#(>H:A32NX_RMP_R_AM_BUTTON_PRESSED)
A32NX_RMP_R_BFO_Button_Press#(>H:A32NX_RMP_R_BFO_BUTTON_PRESSED)
A32NX_RMP_R_HF1_Button_Press#(>H:A32NX_RMP_R_HF1_BUTTON_PRESSED)
A32NX_RMP_R_HF2_Button_Press#(>H:A32NX_RMP_R_HF2_BUTTON_PRESSED)
A32NX_RMP_R_ILS_Button_Press#(>H:A32NX_RMP_R_ILS_BUTTON_PRESSED)
A32NX_RMP_R_MLS_Button_Press#(>H:A32NX_RMP_R_MLS_BUTTON_PRESSED)
A32NX_RMP_R_NAV_Button_Press#(>H:A32NX_RMP_R_NAV_BUTTON_PRESSED)
A32NX_RMP_R_VHF1_Button_Press#(>H:A32NX_RMP_R_VHF1_BUTTON_PRESSED)
A32NX_RMP_R_VHF2_Button_Press#(>H:A32NX_RMP_R_VHF2_BUTTON_PRESSED)
A32NX_RMP_R_VHF3_Button_Press#(>H:A32NX_RMP_R_VHF3_BUTTON_PRESSED)
A32NX_RMP_R_VOR_Button_Press#(>H:A32NX_RMP_R_VOR_BUTTON_PRESSED)
RMP_Left_CALL_None#4 (>K:PILOT_TRANSMITTER_SET)
RMP_Left_CALL_VHF1#0 (>K:PILOT_TRANSMITTER_SET)
RMP_Left_CALL_VHF2#1 (>K:PILOT_TRANSMITTER_SET)
RMP_Left_CALL_VHF3#3 (>K:PILOT_TRANSMITTER_SET)
RMP_Left_VHF1_Volume_Toggle#(L:XMLVAR_COM_1_VHF_L_Switch_Down) ! (>L:XMLVAR_COM_1_VHF_L_Switch_Down)
RMP_Left_VHF2_Volume_Toggle#(L:XMLVAR_COM_1_VHF_C_Switch_Down) ! (>L:XMLVAR_COM_1_VHF_C_Switch_Down)
RMP_Left_VHF3_Volume_Toggle#(L:XMLVAR_COM_1_VHF_R_Switch_Down) ! (>L:XMLVAR_COM_1_VHF_R_Switch_Down)
RMP_Right_CALL_None#4 (>K:COPILOT_TRANSMITTER_SET)
RMP_Right_CALL_VHF1#0 (>K:COPILOT_TRANSMITTER_SET)
RMP_Right_CALL_VHF2#2 (>K:COPILOT_TRANSMITTER_SET)
RMP_Right_CALL_VHF2#2 (>K:COPILOT_TRANSMITTER_SET)
RMP_Right_CALL_VHF3#3 (>K:COPILOT_TRANSMITTER_SET)
RMP_Right_VHF1_Volume_Toggle#(L:XMLVAR_COM_2_VHF_L_Switch_Down) ! (>L:XMLVAR_COM_2_VHF_L_Switch_Down)
RMP_Right_VHF2_Volume_Toggle#(L:XMLVAR_COM_2_VHF_C_Switch_Down) ! (>L:XMLVAR_COM_2_VHF_C_Switch_Down)
RMP_Right_VHF3_Volume_Toggle#(L:XMLVAR_COM_2_VHF_R_Switch_Down) ! (>L:XMLVAR_COM_2_VHF_R_Switch_Down)
//Fly By Wire/A320-Dev/Safety
A32NX_CABIN_SEATBELTS_ALERT_OFF#(A:CABIN SEATBELTS ALERT SWITCH, bool) if{ (>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE) }
A32NX_CABIN_SEATBELTS_ALERT_ON#(A:CABIN SEATBELTS ALERT SWITCH, bool) ! if{ (>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE) }
A32NX_CABIN_SEATBELTS_ALERT_TOGGLE#(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)
//Fly By Wire/A320-Dev/Warning System
GPWS_Flap_Mode_Off_Toggle#(L:A32NX_GPWS_FLAP_OFF,bool) ! (>L:A32NX_GPWS_FLAP_OFF)
GPWS_GS_Mode_Off_Toggle#(L:A32NX_GPWS_GS_OFF,bool) ! (>L:A32NX_GPWS_GS_OFF)
GPWS_Ldg_Flap3_Toggle#(L:A32NX_GPWS_FLAPS3,bool) ! (>L:A32NX_GPWS_FLAPS3)
GPWS_Sys_Off_Toggle#(L:A32NX_GPWS_SYS_OFF,bool) ! (>L:A32NX_GPWS_SYS_OFF)
A32NX_EFIS_GPWS_Test_Button_Press#1 (>L:A32NX_GPWS_TEST)
A32NX_EFIS_GPWS_Test_Button_Release#0 (>L:A32NX_GPWS_TEST)
GPWS_Terr_Off_Toggle#(L:A32NX_GPWS_TERR_OFF,bool) ! (>L:A32NX_GPWS_TERR_OFF)
//Fly By Wire/A320-SDK/MCDU (left)
A32NX_MCDU_L_ANNUNC_BLANK#(L:A32NX_MCDU_L_ANNUNC_BLANK)
A32NX_MCDU_R_ANNUNC_BLANK#(L:A32NX_MCDU_R_ANNUNC_BLANK)
//Fly By Wire/A320/ISIS
ISIS_PUSH_BUGS#(>H: A32NX_ISIS_BUGS_PRESSED) (L:A32NX_ISIS_BUGS_ACTIVE) ! (>L:A32NX_ISIS_BUGS_ACTIVE)
ISIS_PUSH_LS#(>H:A32NX_ISIS_LS_PRESSED) (L:A32NX_ISIS_LS_ACTIVE) ! (>L:A32NX_ISIS_LS_ACTIVE)
ISIS_PUSH_RST#0 (>H:A32NX_ISIS_RST_PRESSED)
A32NX_ISIS_MINUS_PRESS#(>H:A32NX_ISIS_MINUS_PRESSED)
A32NX_ISIS_MINUS_RELEASE#(>H:A32NX_ISIS_MINUS_RELEASED)
A32NX_ISIS_PLUS_PRESS#(>H:A32NX_ISIS_PLUS_PRESSED)
A32NX_ISIS_PLUS_RELEASE#(>H:A32NX_ISIS_PLUS_RELEASED)
ISIS_KNOB_ANTICLOCKWISE#(L:A32NX_ISIS_BUGS_ACTIVE, enum) 1 == if{ 0 (>H:A32NX_ISIS_KNOB_ANTI_CLOCKWISE) } els{ 2 (>K:KOHLSMAN_DEC) }
ISIS_KNOB_CLOCKWISE#(L:A32NX_ISIS_BUGS_ACTIVE, enum) 1 == if{ 0 (>H:A32NX_ISIS_KNOB_CLOCKWISE) } els{ 2 (>K:KOHLSMAN_INC) }
ISIS_KNOB_PRESSED#(L:A32NX_ISIS_BUGS_ACTIVE, bool) if{  0 (>H:A32NX_ISIS_KNOB_PRESSED, number) } els{  (L:A32NX_ISIS_BARO_MODE, enum) 0 == if{  1 (>L:A32NX_ISIS_BARO_MODE, enum) (A:KOHLSMAN SETTING MB:2, bars) 16000 * (>0:A32NX_ISIS_BARO_SAVED, number) 2 16211 (>K:2:KOHLSMAN_SET) } els{  0 (>L:A32NX_ISIS_BARO_MODE, enum) 2 (0:A32NX_ISIS_BARO_SAVED, number) (>K:2:KOHLSMAN_SET) } }
//Fly By Wire/A320/Air Condition / Pressurization
A320_Neo_AIRCOND_LVL_1_100#100 (>L:A320_Neo_AIRCOND_LVL_1)
A320_Neo_AIRCOND_LVL_1_25#25 (>L:A320_Neo_AIRCOND_LVL_1)
A320_Neo_AIRCOND_LVL_1_50#50 (>L:A320_Neo_AIRCOND_LVL_1)
A320_Neo_AIRCOND_LVL_1_75#75 (>L:A320_Neo_AIRCOND_LVL_1)
A320_Neo_AIRCOND_LVL_1_OFF#0 (>L:A320_Neo_AIRCOND_LVL_1)
A320_Neo_AIRCOND_LVL_2_100#100 (>L:A320_Neo_AIRCOND_LVL_2)
A320_Neo_AIRCOND_LVL_2_25#25 (>L:A320_Neo_AIRCOND_LVL_2)
A320_Neo_AIRCOND_LVL_2_50#50 (>L:A320_Neo_AIRCOND_LVL_2)
A320_Neo_AIRCOND_LVL_2_75#75 (>L:A320_Neo_AIRCOND_LVL_2)
A320_Neo_AIRCOND_LVL_2_OFF#0 (>L:A320_Neo_AIRCOND_LVL_2)
A320_Neo_AIRCOND_LVL_3_100#100 (>L:A320_Neo_AIRCOND_LVL_3)
A320_Neo_AIRCOND_LVL_3_25#25 (>L:A320_Neo_AIRCOND_LVL_3)
A320_Neo_AIRCOND_LVL_3_50#50 (>L:A320_Neo_AIRCOND_LVL_3)
A320_Neo_AIRCOND_LVL_3_75#75 (>L:A320_Neo_AIRCOND_LVL_3)
A320_Neo_AIRCOND_LVL_3_OFF#0 (>L:A320_Neo_AIRCOND_LVL_3)
A32NX_AIRCOND_PACK1_TOGGLE_OFF#0 (>L:A32NX_AIRCOND_PACK1_TOGGLE)
A32NX_AIRCOND_PACK1_TOGGLE_ON#1 (>L:A32NX_AIRCOND_PACK1_TOGGLE)
A32NX_AIRCOND_PACK2_TOGGLE_OFF#0 (>L:A32NX_AIRCOND_PACK2_TOGGLE)
A32NX_AIRCOND_PACK2_TOGGLE_ON#1 (>L:A32NX_AIRCOND_PACK2_TOGGLE)
A32NX_AIRCOND_RAMAIR_TOGGLE_OFF#0 (>L:A32NX_AIRCOND_RAMAIR_TOGGLE)
A32NX_AIRCOND_RAMAIR_TOGGLE_ON#1 (>L:A32NX_AIRCOND_RAMAIR_TOGGLE)
A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position_HIGH#2 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)
A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position_LOW#0 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)
A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position_MED#1 (>L:A32NX_KNOB_OVHD_AIRCOND_PACKFLOW_Position)
A32NX_OH_AIRCOND_ENG1_BLEED_TOGGLE#1 (>K:ENGINE_BLEED_AIR_SOURCE_TOGGLE) 
A32NX_OVHD_AIRCOND_APU_BLEED_TOGGLE#(L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON, Bool)
A32NX_OVHD_AIRCOND_XBLEED_KNOB_Position_AUTO#1 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)
A32NX_OVHD_AIRCOND_XBLEED_KNOB_Position_OPEN#2 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)
A32NX_OVHD_AIRCOND_XBLEED_KNOB_Position_SHUT#0 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)
PUSH_OVHD_OXYGEN_CREW_TOGGLE#(L:PUSH_OVHD_OXYGEN_CREW, Bool) ! (>L:PUSH_OVHD_OXYGEN_CREW)
PUSH_OVHD_OXYGEN_CREW_OFF#0 (>L:PUSH_OVHD_OXYGEN_CREW)
PUSH_OVHD_OXYGEN_CREW_ON#1 (>L:PUSH_OVHD_OXYGEN_CREW)
//Fly By Wire/A320/Anti-Ice
A32NX_MAN_PITOT_HEAT_ON#1 (>L:A32NX_MAN_PITOT_HEAT)
A32NX_OH_ANTIICE_ENG1_TOG#(>K:ANTI_ICE_TOGGLE_ENG1) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)
A32NX_OVHD_ANTIICE_WING_TOGGLE#(>K:TOGGLE_STRUCTURAL_DEICE) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) 
A32NX_OVHD_PROBE_WINDOW_HEAT_TOGGLE#(L:A32NX_MAN_PITOT_HEAT,Bool) ! (>L:A32NX_MAN_PITOT_HEAT) (L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) 
A32NX_MAN_PITOT_HEAT_OFF#0 (>L:A32NX_MAN_PITOT_HEAT)
A32NX_OH_ANTIICE_ENG2_TOG#(>K:ANTI_ICE_TOGGLE_ENG2) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)
//Fly By Wire/A320/Autopilot
A320NX_APPR#(L:A32NX_AUTOPILOT_APPR_MODE, bool) if{ 0 (>L:A32NX_AUTOPILOT_APPR_MODE) (>K:AP_LOC_HOLD_ON) (>K:AP_LOC_HOLD_OFF) } els{ 1 (>L:A32NX_AUTOPILOT_APPR_MODE) 0 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_APR_HOLD_ON) }
A320_Neo_CDU_MODE_MANAGED_SPEED#(>H:A320_Neo_CDU_MODE_MANAGED_SPEED)
A320_Neo_CDU_MODE_SELECTED_SPEED#(>H:A320_Neo_CDU_MODE_SELECTED_SPEED)
A320_Neo_EXPEDITE_MODE#(>H:A320_Neo_EXPEDITE_MODE)
A320_Neo_FCU_ALT_PULL#(>H:A320_Neo_FCU_ALT_PULL) (>H:A320_Neo_CDU_MODE_SELECTED_ALTITUDE)
A320_Neo_FCU_MODE_MANAGED_SPEED#(>H:A320_Neo_FCU_MODE_MANAGED_SPEED)
A320_Neo_FCU_SPEED_DEC#(L:XMLVAR_AirSpeedIsInMach) if{ 1 (>K:AP_MACH_VAR_DEC) } els{ 1 (>K:AP_SPD_VAR_DEC) } (>H:A320_Neo_CDU_AP_DEC_SPEED)
A320_Neo_FCU_SPEED_INC#(L:XMLVAR_AirSpeedIsInMach) if{ 1 (>K:AP_MACH_VAR_INC) } els{ 1 (>K:AP_SPD_VAR_INC) } (>H:A320_Neo_CDU_AP_INC_SPEED)
A320_Neo_FCU_SPEED_PULL#(>H:A320_Neo_FCU_SPEED_PULL)
A320_Neo_FCU_VS_DEC# (L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ (>H:A320_Neo_FCU_AP_DEC_FPA) } els{ 3 (>K:AP_VS_VAR_DEC) (>H:A320_Neo_FCU_VS_DEC) }
A320_Neo_FCU_VS_INC# (L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{ (>H:A320_Neo_FCU_AP_INC_FPA) } els{ 3 (>K:AP_VS_VAR_INC) (>H:A320_Neo_FCU_VS_INC) }
A320_Neo_FCU_VS_PULL#(>H:A320_Neo_FCU_VS_PULL) (>H:A320_Neo_CDU_VS)
A320_Neo_FCU_VS_PUSH#(>H:A320_Neo_FCU_VS_PUSH) (>H:A320_Neo_CDU_VS)
A32NX_FCU_ALT_DEC#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) - (L:XMLVAR_Autopilot_Altitude_Increment) (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - (L:XMLVAR_Autopilot_Altitude_Increment) % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)
A32NX_FCU_ALT_DEC100#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 - 100 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 % - 100 % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)
A32NX_FCU_ALT_DEC1000#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 - 1000 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 % - 1000 % + 1000 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT)
A32NX_FCU_ALT_INC#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)
A32NX_FCU_ALT_INC100#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 100 % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)
A32NX_FCU_ALT_INC1000#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) 1000 % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)
ATHR_Disconnect_Push#(>K:A32NX.FCU_ATHR_DISCONNECT_PUSH)
ATHR_Push#(>K:A32NX.FCU_ATHR_PUSH)
Autopilot_2_Push#(>K:A32NX.FCU_AP_2_PUSH)
Autopilot_Disconnect_Push#(>K:A32NX.FCU_AP_DISCONNECT_PUSH)
Autopilot_Altitude_Increment_TOGGLE#(L:XMLVAR_Autopilot_Altitude_Increment) 100 == if{ 1000 } els{ 100 } (>L:XMLVAR_Autopilot_Altitude_Increment)
HDG_Decrease#(>K:A32NX.FCU_HDG_DEC)
HDG_Increase#(>K:A32NX.FCU_HDG_INC)
HDG_Pull#(>K:A32NX.FCU_HDG_PULL)
HDG_Push#(>K:A32NX.FCU_HDG_PUSH)
HDG_Set#(>K:A32NX.FCU_HDG_SET)
_A32NX_FCU_AP_1_PUSH#(>K:A32NX.FCU_AP_1_PUSH)
A320NX_FCU_METRIC_ALT_TOGGLE#(L:A32NX_METRIC_ALT_TOGGLE, bool) ! (>L:A32NX_METRIC_ALT_TOGGLE)
A320NX_APPR_PUSH#(>H:A320_Neo_FCU_APPR_PUSH)
A320NX_LOC#(L:A32NX_AUTOPILOT_LOC_MODE, bool) if{ 0 (>L:A32NX_AUTOPILOT_APPR_MODE) 0 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_LOC_HOLD) } els{ 0 (>L:A32NX_AUTOPILOT_APPR_MODE) 1 (>L:A32NX_AUTOPILOT_LOC_MODE) (>K:AP_LOC_HOLD) }
A320_Neo_FCU_ALT_PUSH#(>H:A320_Neo_FCU_ALT_PUSH) (>H:A320_Neo_CDU_MODE_MANAGED_ALTITUDE)
A320_Neo_FCU_SPEED_PUSH#(>H:A320_Neo_FCU_SPEED_PUSH)
A32NX_FCU_ALT_PUSH_PULL_TOGGLE#(A:AUTOPILOT ALTITUDE SLOT INDEX, Number) 1 == if{ (>K:A32NX.FCU_ALT_PUSH) } els{ (>K:A32NX.FCU_ALT_PULL) } 
A32NX_FCU_HDG_Push_Pull_Toggle#(A:AUTOPILOT HEADING SLOT INDEX, Number) 1 == if{ (>K:A32NX.FCU_HDG_PUSH) } els{ (>K:A32NX.FCU_HDG_PULL) }
A32NX_FCU_MANAGED_SPEED_IN_MACH_TOGGLE#(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE)
A32NX_FCU_SPD_MACH_Toggle#(>K:A32NX.FCU_SPD_MACH_TOGGLE_PUSH)
A32NX_FCU_SPEED_PUSH_PULL_TOGGLE#(A:AUTOPILOT SPEED SLOT INDEX, Number) 1 == if{ (>K:A32NX.FCU_SPD_PUSH) } els{ (>K:A32NX.FCU_SPD_PULL) }
A32NX_FCU_TRK_FPA_Mode_Toggle#(>K:A32NX.FCU_TRK_FPA_TOGGLE_PUSH)
A32NX_FCU_VS_PUSH_PULL_TOGGLE#(A:AUTOPILOT VS SLOT INDEX, Number) 1 == if{ (>K:A32NX.FCU_VS_PUSH) } els{ (>K:A32NX.FCU_VS_PULL) }
APPR_Push#(>K:A32NX.FCU_APPR_PUSH)
EXPED_Push#(>K:A32NX.FCU_EXPED_PUSH)
LOC_Push#(>K:A32NX.FCU_LOC_PUSH)
SPD_Decrease#(>K:A32NX.FCU_SPD_DEC)
SPD_Increase#(>K:A32NX.FCU_SPD_INC)
SPD_Pull#(>K:A32NX.FCU_SPD_PULL)
SPD_Push#(>K:A32NX.FCU_SPD_PUSH)
SPD_Set#(>K:A32NX.FCU_SPD_SET)
XMLVAR_Autopilot_Altitude_Increment_1000Feet#1000 (>L:XMLVAR_Autopilot_Altitude_Increment)
XMLVAR_Autopilot_Altitude_Increment_100Feet#100 (>L:XMLVAR_Autopilot_Altitude_Increment)
//Fly By Wire/A320/Avionics
PUSH_AUTOPILOT_CHRONO_L#(L:PUSH_AUTOPILOT_CHRONO_L) ! (>L:PUSH_AUTOPILOT_CHRONO_L)
//Fly By Wire/A320/CPDLC
ATC_MSG_Button_Press#1 (>L:A32NX_DCDU_ATC_MSG_ACK)
Co-Pilot_DCDU_L1#(>H:A32NX_DCDU_BTN_MPR_L1)
Co-Pilot_DCDU_L2#(>H:A32NX_DCDU_BTN_MPR_L2)
Co-Pilot_DCDU_MSG_#(>H:A32NX_DCDU_BTN_MPR_MS0PLUS)
Co-Pilot_DCDU_MSG-#(>H:A32NX_DCDU_BTN_MPR_MS0MINUS)
Co-Pilot_DCDU_PGE-#(>H:A32NX_DCDU_BTN_MPR_POEMINUS)
Co-Pilot_DCDU_PGE-#(>H:A32NX_DCDU_BTN_MPR_POEPLUS)
Co-Pilot_DCDU_Print#(>H:A32NX_DCDU_BTN_MPR_PRINT)
Co-Pilot_DCDU_R1#(>H:A32NX_DCDU_BTN_MPR_R1)
Co-Pilot_DCDU_R2#(>H:A32NX_DCDU_BTN_MPR_R2)
Pilot_DCDU_L1#(>H:A32NX_DCDU_BTN_MPL_L1)
Pilot_DCDU_L2#(>H:A32NX_DCDU_BTN_MPL_L2)
Pilot_DCDU_MSG_#(>H:A32NX_DCDU_BTN_MPL_MS0PLUS)
Pilot_DCDU_MSG-#(>H:A32NX_DCDU_BTN_MPL_MS0MINUS)
Pilot_DCDU_PGE_#(>H:A32NX_DCDU_BTN_MPL_POEPLUS)
Pilot_DCDU_PGE-#(>H:A32NX_DCDU_BTN_MPL_POEMINUS)
Pilot_DCDU_Print#(>H:A32NX_DCDU_BTN_MPL_PRINT)
Pilot_DCDU_R1#(>H:A32NX_DCDU_BTN_MPL_R1)
Pilot_DCDU_R2#(>H:A32NX_DCDU_BTN_MPL_R2)
//Fly By Wire/A320/Controls
A32NX_OVHD_FLTCTL_FAC_1_TOGGLE#(L:A32NX_FAC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_FAC_1_PUSHBUTTON_PRESSED) 
//Fly By Wire/A320/ECAM
A32NX_ECAM_KNOB_LOWER_DEC#(A:LIGHT POTENTIOMETER:93,percent) 5 - 0 max 93 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_ECAM_KNOB_UPPER_INC#(A:LIGHT POTENTIOMETER:92,percent) 5 + 100 min 92 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_ECAM_ALL_Button_Press#1 (>L:A32NX_ECAM_ALL_Push_IsDown)
A32NX_ECAM_ALL_Button_Release#0 (>L:A32NX_ECAM_ALL_Push_IsDown)
A32NX_ECAM_APU_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 6 != if{ 6 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_BLEED_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 1 != if{ 1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_CLR_Button_Press#1 (>L:A32NX_BTN_CLR)
A32NX_ECAM_CLR2_Button_Press#1 (>L:A32NX_BTN_CLR2)
A32NX_ECAM_COND_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 7 != if{ 7 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_DOOR_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 8 != if{ 8 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_ELEC_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 3 != if{ 3 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_EMERCANC_Button_Press#1 (>L:A32NX_BTN_EMERCANC)
A32NX_ECAM_ENG_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 0 != if{ 0 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_FCTL_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 10 != if{ 10 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_FUEL_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 5 != if{ 5 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_HYD_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 4 != if{ 4 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_PRESS_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 2 != if{ 2 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_RCL_Button_Press#1 (>L:A32NX_BTN_RCL)
A32NX_ECAM_STS_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 11 != if{ 11 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_TOCONFIG_Button_Press#(>H:A32NX_ECP_TO_CONFIG_TEST_PRESSED)
A32NX_ECAM_TOCONFIG_Button_Release#(>H:A32NX_ECP_TO_CONFIG_TEST_RELEASED)
A32NX_ECAM_WHEEL_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 9 != if{ 9 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A32NX_ECAM_KNOB_UPPER_DEC#(A:LIGHT POTENTIOMETER:92,percent) 5 - 0 max 92 (>K:2:LIGHT_POTENTIOMETER_SET)
//Fly By Wire/A320/EFIS (left)
A32NX_FCU_EFIS_L_LS_PUSH#(>K:A32NX.FCU_EFIS_L_LS_PUSH)
Left_EFIS_Rose_VOR#1 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
//Fly By Wire/A320/EFIS
A320_Neo_MFD_BTN_ARPT_2#(>H:A320_Neo_MFD_BTN_ARPT_2)
A320_Neo_MFD_BTN_CSTR_1#(>H:A320_Neo_MFD_BTN_CSTR_1)
A320_Neo_MFD_BTN_CSTR_2#(>H:A320_Neo_MFD_BTN_CSTR_2)
A320_Neo_MFD_BTN_NDB_1#(>H:A320_Neo_MFD_BTN_NDB_1)
A320_Neo_MFD_BTN_NDB_2#(>H:A320_Neo_MFD_BTN_NDB_2)
A320_Neo_MFD_BTN_VORD_1#(>H:A320_Neo_MFD_BTN_VORD_1)
A320_Neo_MFD_BTN_VORD_2#(>H:A320_Neo_MFD_BTN_VORD_2)
A320_Neo_MFD_BTN_WPT_1#(>H:A320_Neo_MFD_BTN_WPT_1)
A320_Neo_MFD_BTN_WPT_2#(>H:A320_Neo_MFD_BTN_WPT_2)
A320_Neo_MFD_NAV_MODE_1_ARC#3 (>L:A320_Neo_MFD_NAV_MODE_1)
A320_Neo_MFD_NAV_MODE_1_DEC#(L:A320_Neo_MFD_NAV_MODE_1) 0 > if{ (L:A320_Neo_MFD_NAV_MODE_1) 1 - (>L:A320_Neo_MFD_NAV_MODE_1) }
A320_Neo_MFD_NAV_MODE_1_INC#(L:A320_Neo_MFD_NAV_MODE_1) 4 < if{ (L:A320_Neo_MFD_NAV_MODE_1) 1 + (>L:A320_Neo_MFD_NAV_MODE_1) }
A320_Neo_MFD_NAV_MODE_1_LS#0 (>L:A320_Neo_MFD_NAV_MODE_1)
A320_Neo_MFD_NAV_MODE_1_NAV#2 (>L:A320_Neo_MFD_NAV_MODE_1)
A320_Neo_MFD_NAV_MODE_1_PLAN#4 (>L:A320_Neo_MFD_NAV_MODE_1)
A320_Neo_MFD_NAV_MODE_1_VOR#1 (>L:A320_Neo_MFD_NAV_MODE_1)
A320_Neo_MFD_NAV_MODE_2_ARC#3 (>L:A320_Neo_MFD_NAV_MODE_2)
A320_Neo_MFD_NAV_MODE_2_DEC#(L:A320_Neo_MFD_NAV_MODE_2) 0 > if{ 1 if{ (L:A320_Neo_MFD_NAV_MODE_2) 1 - (>L:A320_Neo_MFD_NAV_MODE_2) } }
A320_Neo_MFD_NAV_MODE_2_INC#(L:A320_Neo_MFD_NAV_MODE_2) 4 < if{ 1 if{ (L:A320_Neo_MFD_NAV_MODE_2) 1 + (>L:A320_Neo_MFD_NAV_MODE_2) } }
A320_Neo_MFD_NAV_MODE_2_LS#0 (>L:A320_Neo_MFD_NAV_MODE_2)
A320_Neo_MFD_NAV_MODE_2_NAV#2 (>L:A320_Neo_MFD_NAV_MODE_2)
A320_Neo_MFD_NAV_MODE_2_PLAN#4 (>L:A320_Neo_MFD_NAV_MODE_2)
A320_Neo_MFD_NAV_MODE_2_VOR#1 (>L:A320_Neo_MFD_NAV_MODE_2)
A320_Neo_MFD_Range_1_10#0 (>L:A320_Neo_MFD_Range_1)
A320_Neo_MFD_Range_1_160#4 (>L:A320_Neo_MFD_Range_1)
A320_Neo_MFD_Range_1_20#1 (>L:A320_Neo_MFD_Range_1)
A320_Neo_MFD_Range_1_320#5 (>L:A320_Neo_MFD_Range_1)
A320_Neo_MFD_Range_1_40#2 (>L:A320_Neo_MFD_Range_1)
A320_Neo_MFD_Range_1_80#3 (>L:A320_Neo_MFD_Range_1)
A320_Neo_MFD_Range_1_DEC#(L:A320_Neo_MFD_Range_1) 0 > if{ (L:A320_Neo_MFD_Range_1) 1 - (>L:A320_Neo_MFD_Range_1) }
A320_Neo_MFD_Range_1_INC#(L:A320_Neo_MFD_Range_1) 5 < if{ (L:A320_Neo_MFD_Range_1) 1 + (>L:A320_Neo_MFD_Range_1) }
A320_Neo_MFD_Range_2_10#0 (>L:A320_Neo_MFD_Range_2)
A320_Neo_MFD_Range_2_160#4 (>L:A320_Neo_MFD_Range_2)
A320_Neo_MFD_Range_2_20#1 (>L:A320_Neo_MFD_Range_2)
A320_Neo_MFD_Range_2_320#5 (>L:A320_Neo_MFD_Range_2)
A320_Neo_MFD_Range_2_40#2 (>L:A320_Neo_MFD_Range_2)
A320_Neo_MFD_Range_2_80#3 (>L:A320_Neo_MFD_Range_2)
A320_Neo_MFD_Range_2_DEC#(L:A320_Neo_MFD_Range_2) 0 > if{ 1 if{ (L:A320_Neo_MFD_Range_2) 1 - (>L:A320_Neo_MFD_Range_2) } }
A320_Neo_MFD_Range_2_INC#(L:A320_Neo_MFD_Range_2) 5 < if{ 1 if{ (L:A320_Neo_MFD_Range_2) 1 + (>L:A320_Neo_MFD_Range_2) } }
A32NX_BARO_MODE_TOG3#(L:XMLVAR_Baro1_Mode) ++ 3 % (>L:XMLVAR_Baro1_Mode)
A32NX_BARO_SELECT_HPA#1 (>L:XMLVAR_Baro_Selector_HPA_1)
A32NX_BARO_SELECT_INHG#0 (>L:XMLVAR_Baro_Selector_HPA_1)
A32NX_EFIS_FD2_PUSH#2 (>K:TOGGLE_FLIGHT_DIRECTOR)
A32NX_EFIS_FD_PUSH#1 (>K:TOGGLE_FLIGHT_DIRECTOR)
A320_Neo_MFD_BTN_ARPT_1#(>H:A320_Neo_MFD_BTN_ARPT_1)
A32NX_EFIS_L_PFD_LS_BUTTON_PUSH#1 (>H:A320_Neo_PFD_BTN_LS_1, boolean)
A32NX_EFIS_R_PFD_LS_BUTTON_PUSH#1 (>H:A320_Neo_PFD_BTN_LS_2)
A32NX_BARO_SELECT_TOG#(L:XMLVAR_Baro_Selector_HPA_1) ! (>L:XMLVAR_Baro_Selector_HPA_1)
A32NX_EFIS_L_ND_MODE_-_Decrease#(L:A32NX_EFIS_L_ND_MODE) -- 0 max (>L:A32NX_EFIS_L_ND_MODE)
A32NX_EFIS_L_ND_MODE_-_Increase#(L:A32NX_EFIS_L_ND_MODE) ++ 4 min (>L:A32NX_EFIS_L_ND_MODE)
A32NX_EFIS_L_ND_RANGE_-_Decrease#(L:A32NX_EFIS_L_ND_RANGE) -- 0 max (>L:A32NX_EFIS_L_ND_RANGE)
A32NX_EFIS_L_ND_RANGE_-_Increase#(L:A32NX_EFIS_L_ND_RANGE) ++ 5 min (>L:A32NX_EFIS_L_ND_RANGE)
A32NX_EFIS_L_ND_RANGE_DEC#(L:A32NX_EFIS_L_ND_RANGE) -- 0 max (>L:A32NX_EFIS_L_ND_RANGE)
A32NX_EFIS_L_ND_RANGE_INC#(L:A32NX_EFIS_L_ND_RANGE) ++ 5 min (>L:A32NX_EFIS_L_ND_RANGE)
A32NX_EFIS_R_ND_RANGE_DEC#(L:A32NX_EFIS_R_ND_RANGE) -- 0 max (>L:A32NX_EFIS_R_ND_RANGE)
A32NX_EFIS_R_ND_RANGE_INC#(L:A32NX_EFIS_R_ND_RANGE) ++ 5 min (>L:A32NX_EFIS_R_ND_RANGE)
Baro_decrease#(>K:KOHLSMAN_DEC)
Baro_increase#(>K:KOHLSMAN_INC)
Left_EFIS_Range_10#0 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
Left_EFIS_Range_160#4 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
Left_EFIS_Range_20#1 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
Left_EFIS_Range_320#5 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
Left_EFIS_Range_40#2 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
Left_EFIS_Range_80#3 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
Left_EFIS_Rose_ARC#3 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
Left_EFIS_Rose_LS#0 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
Left_EFIS_Rose_NAV#1 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
Left_EFIS_Rose_PLAN#4 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
Left_EFIS_Rose_VOR#1 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
Pull_Left_Baro__Std_#1 (>K:A32NX.FCU_EFIS_L_BARO_PULL)
Pull_Right_Baro__Std_#1 (>K:A32NX.FCU_EFIS_R_BARO_PULL)
Push_Left_Baro__QNH_#1 (>K:A32NX.FCU_EFIS_L_BARO_PUSH)
Push_Right_Baro__QNH_#1 (>K:A32NX.FCU_EFIS_R_BARO_PUSH)
Right_EFIS_Range_10#0 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
Right_EFIS_Range_160#4 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
Right_EFIS_Range_20#1 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
Right_EFIS_Range_320#5 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
Right_EFIS_Range_40#2 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
Right_EFIS_Range_80#3 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
Right_EFIS_Rose_ARC#3 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
Right_EFIS_Rose_LS#0 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
Right_EFIS_Rose_NAV#2 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
Right_EFIS_Rose_PLAN#4 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
Right_EFIS_Rose_VOR#1 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
Set_Left_Baro_to_hPa#0 (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG)
Set_Left_Baro_to_inHg#1 (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG)
Set_Right_Baro_to_hPa#0 (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG)
Set_Right_Baro_to_inHg#1 (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG)
Toggle_Flight_Director#(>K:TOGGLE_FLIGHT_DIRECTOR)
Toggle_Left_ARPT#1 (>K:A32NX.FCU_EFIS_L_ARPT_PUSH)
Toggle_Left_CSTR#1 (>K:A32NX.FCU_EFIS_L_CSTR_PUSH)
Toggle_Left_Flight_Director#1 (>K:A32NX.FCU_EFIS_L_FD_PUSH)
Toggle_Left_LS#1 (>K:A32NX.FCU_EFIS_L_LS_PUSH)
Toggle_Left_NDB#1 (>K:A32NX.FCU_EFIS_L_NDB_PUSH)
Toggle_Left_VOR_D#1 (>K:A32NX.FCU_EFIS_L_VORD_PUSH)
Toggle_Left_WPT#1 (>K:A32NX.FCU_EFIS_L_WPT_PUSH)
Toggle_Right_ARPT#1 (>K:A32NX.FCU_EFIS_R_ARPT_PUSH)
Toggle_Right_CSTR#1 (>K:A32NX.FCU_EFIS_R_CSTR_PUSH)
Toggle_Right_Flight_Director#1 (>K:A32NX.FCU_EFIS_R_FD_PUSH)
Toggle_Right_LS#1 (>K:A32NX.FCU_EFIS_R_LS_PUSH)
Toggle_Right_NDB#1 (>K:A32NX.FCU_EFIS_R_NDB_PUSH)
Toggle_Right_VOR_D#1 (>K:A32NX.FCU_EFIS_R_VORD_PUSH)
Toggle_Right_WPT#1 (>K:A32NX.FCU_EFIS_R_WPT_PUSH)
XMLVAR_Baro1_Mode_QNH#1 (>L:XMLVAR_Baro1_Mode)
XMLVAR_Baro1_Mode_STD#3 (>L:XMLVAR_Baro1_Mode)
XMLVAR_Baro2_Mode_QNH#1 (>L:XMLVAR_Baro2_Mode)
XMLVAR_NAV_AID_SWITCH_L1_State_ADF#1 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
XMLVAR_NAV_AID_SWITCH_L1_State_Off#0 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
XMLVAR_NAV_AID_SWITCH_L1_State_VOR#2 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
XMLVAR_NAV_AID_SWITCH_L2_State_ADF#1 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
XMLVAR_NAV_AID_SWITCH_L2_State_Off#0 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
XMLVAR_NAV_AID_SWITCH_L2_State_VOR#2 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
XMLVAR_NAV_AID_SWITCH_R1_State_ADF#1 (>L:XMLVAR_NAV_AID_SWITCH_R1_State)
XMLVAR_NAV_AID_SWITCH_R1_State_Off#0 (>L:XMLVAR_NAV_AID_SWITCH_R1_State)
XMLVAR_NAV_AID_SWITCH_R1_State_VOR#2 (>L:XMLVAR_NAV_AID_SWITCH_R1_State)
XMLVAR_NAV_AID_SWITCH_R2_State_ADF#1 (>L:XMLVAR_NAV_AID_SWITCH_R2_State)
XMLVAR_NAV_AID_SWITCH_R2_State_Off#0 (>L:XMLVAR_NAV_AID_SWITCH_R2_State)
XMLVAR_NAV_AID_SWITCH_R2_State_VOR#2 (>L:XMLVAR_NAV_AID_SWITCH_R2_State)
//Fly By Wire/A320/Electrical
A32NX_ELEC_ACESSFEED_TOGGLE_ALTN#0 (>L:A32NX_ELEC_ACESSFEED_TOGGLE)
A32NX_ELEC_ACESSFEED_TOGGLE_ON#1 (>L:A32NX_ELEC_ACESSFEED_TOGGLE)
A32NX_ELEC_COMMERCIAL_TOGGLE_OFF#0 (>L:A32NX_ELEC_COMMERCIAL_TOGGLE)
A32NX_ELEC_COMMERCIAL_TOGGLE_ON#1 (>L:A32NX_ELEC_COMMERCIAL_TOGGLE)
A32NX_ELEC_GALYCAB_TOGGLE_AUTO#1 (>L:A32NX_ELEC_GALYCAB_TOGGLE)
A32NX_ELEC_GALYCAB_TOGGLE_OFF#0 (>L:A32NX_ELEC_GALYCAB_TOGGLE)
A32NX_ELEC_IDG1_FAULT_PRESSED#1 (>L:A32NX_ELEC_IDG1_FAULT)
A32NX_ELEC_IDG1_FAULT_RELEASED#0 (>L:A32NX_ELEC_IDG1_FAULT)
A32NX_ELEC_IDG2_FAULT_PRESSED#1 (>L:A32NX_ELEC_IDG2_FAULT)
A32NX_ELEC_IDG2_FAULT_RELEASED#0 (>L:A32NX_ELEC_IDG2_FAULT)
A32NX_EMERELECPWR_EMERTESTLOCK_TOGGLE_OFF#0 (>L:A32NX_EMERELECPWR_EMERTESTLOCK_TOGGLE)
A32NX_EMERELECPWR_EMERTESTLOCK_TOGGLE_ON#1 (>L:A32NX_EMERELECPWR_EMERTESTLOCK_TOGGLE)
A32NX_EMERELECPWR_GEN1_TOGGLE_OFF#0 (>L:A32NX_EMERELECPWR_GEN1_TOGGLE)
A32NX_EMERELECPWR_GEN1_TOGGLE_ON#1 (>L:A32NX_EMERELECPWR_GEN1_TOGGLE)
A32NX_EMERELECPWR_MANONLOCK_TOGGLE_AUTO#0 (>L:A32NX_EMERELECPWR_MANONLOCK_TOGGLE)
A32NX_EMERELECPWR_MANONLOCK_TOGGLE_MAN#1 (>L:A32NX_EMERELECPWR_MANONLOCK_TOGGLE)
A32NX_OH_ELEC_EXTPWR_TOG#(A:EXTERNAL POWER AVAILABLE:1, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:1, Bool) if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } }
ACPowerAvailable_PRESSED#1 (>L:ACPowerAvailable)
ACPowerAvailable_RELEASED#0 (>L:ACPowerAvailable)
A32NX_OVHD_APU_MASTER_SW_Toggle#(L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_APU_MASTER_SW_PB_IS_ON) 
A32NX_OVHD_ELEC_GEN1_TOGGLE#(>K:TOGGLE_ALTERNATOR1) 
A32NX_OVHD_ELEC_GEN2_TOGGLE#(>K:TOGGLE_ALTERNATOR2) 
A32NX_OH_ELEC_APUGEN_TOG#1 (>K:APU_GENERATOR_SWITCH_TOGGLE) 
A32NX_OH_ELEC_BAT1_TOG#(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO)
A32NX_OH_ELEC_BAT2_TOG#(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO)
A32NX_OVHD_ELEC_BUSTIE_BUTTON_AUTO#1 (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO)
A32NX_OVHD_ELEC_BUSTIE_BUTTON_OFF#0 (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO)
//Fly By Wire/A320/Engines
A32NX_THROTTLE_FULL_REVERSE_BUTTON#(A:GENERAL ENG THROTTLE LEVER POSITION:1,percent) -0.1 < if{ -9830 } els{ -16383 } (>K:THROTTLE_SET)
A32NX_ENG_MODE_CRANK#0 (>K:TURBINE_IGNITION_SWITCH_SET)
A32NX_ENG_MODE_NORMAL#1 (>K:TURBINE_IGNITION_SWITCH_SET1) 1 (>K:TURBINE_IGNITION_SWITCH_SET2)
A32NX_PED_ENG_1_START_LEVER_TOG#(A:FUELSYSTEM VALVE SWITCH:1, Bool) if{ 1 (>K:FUELSYSTEM_VALVE_CLOSE) (A:GENERAL ENG STARTER:1, Bool) if{ (>K:TOGGLE_STARTER1) } } els{ 1 (>K:FUELSYSTEM_VALVE_OPEN) (A:GENERAL ENG STARTER:1, Bool) ! if{ (>K:TOGGLE_STARTER1) } }
A32NX_PED_ENG_2_START_LEVER_TOG#(A:FUELSYSTEM VALVE SWITCH:2, Bool) if{ 2 (>K:FUELSYSTEM_VALVE_CLOSE) (A:GENERAL ENG STARTER:2, Bool) if{ (>K:TOGGLE_STARTER2) } } els{ 2 (>K:FUELSYSTEM_VALVE_OPEN) (A:GENERAL ENG STARTER:2, Bool) ! if{ (>K:TOGGLE_STARTER2) } }
A32NX_PED_ENG_MODE_KNOB_IGNSTART#2 (>K:TURBINE_IGNITION_SWITCH_SET1) 2 (>K:TURBINE_IGNITION_SWITCH_SET2) (>H:A320_Neo_EICAS_2_Ignition_Start)
//Fly By Wire/A320/Flight Controls
A32NX_OVHD_FLTCTL_ELAC_1_TOGGLE#(L:A32NX_ELAC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_ELAC_1_PUSHBUTTON_PRESSED)
A32NX_OVHD_FLTCTL_ELAC_2_TOGGLE#(L:A32NX_ELAC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_ELAC_2_PUSHBUTTON_PRESSED) 
A32NX_OVHD_FLTCTL_FAC_2_TOGGLE#(L:A32NX_FAC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_FAC_2_PUSHBUTTON_PRESSED) 
A32NX_OVHD_FLTCTL_SEC_1_TOGGLE#(L:A32NX_SEC_1_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_1_PUSHBUTTON_PRESSED) 
A32NX_OVHD_FLTCTL_SEC_2_TOGGLE#(L:A32NX_SEC_2_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_2_PUSHBUTTON_PRESSED) 
A32NX_OVHD_FLTCTL_SEC_3_TOGGLE#(L:A32NX_SEC_3_PUSHBUTTON_PRESSED, Bool) ! (>L:A32NX_SEC_3_PUSHBUTTON_PRESSED) 
//Fly By Wire/A320/Fuel
A32NX_OVHD_FUEL_CTK_L_XFR_Toggle#9 (>K:FUELSYSTEM_VALVE_TOGGLE) 
A32NX_OVHD_FUEL_CTK_R_XFR_Button_Toggle#10 (>K:FUELSYSTEM_VALVE_TOGGLE) 
A32NX_OVHD_FUELSYSTEM_LTKPUMP1_TOGGLE#2 (>K:FUELSYSTEM_PUMP_TOGGLE) 
A32NX_OVHD_FUELSYSTEM_LTKPUMP2_TOGGLE#5 (>K:FUELSYSTEM_PUMP_TOGGLE) 
A32NX_OVHD_FUELSYSTEM_RTKPUMP1_TOGGLE#3 (>K:FUELSYSTEM_PUMP_TOGGLE) 
A32NX_OVHD_FUELSYSTEM_RTKPUMP2_TOGGLE#6 (>K:FUELSYSTEM_PUMP_TOGGLE) 
//Fly By Wire/A320/Gear
A32NX_BRAKE_FAN_BTN_PRESSED#(L:A32NX_BRAKE_FAN_BTN_PRESSED) ! (>L:A32NX_BRAKE_FAN_BTN_PRESSED)
Autobrake_Med_On#1 (>L:A32NX_OVHD_AUTOBRK_MED_ON_IS_PRESSED, bool)
Autobrake_Low_On#1 (>L:A32NX_OVHD_AUTOBRK_LOW_ON_IS_PRESSED, bool)
Autobrake_Max_On#1 (>L:A32NX_OVHD_AUTOBRK_MAX_ON_IS_PRESSED, bool)
//Fly By Wire/A320/Lights
A32NX_NAV_LIGHT_TOG#(L:LIGHTING_NAV_0)  if{ 0 0 (>K:2:NAV_LIGHTS_SET) 0 0 (>K:2:LOGO_LIGHTS_SET) } els{ 0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET) }
A32NX_OH_EXTLT_RWY_OFF#(A:LIGHT TAXI:2, Bool) if{ 2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS) }
A32NX_OH_EXTLT_RWY_ON#(A:LIGHT TAXI:2, Bool) ! if{ 2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS) }
A32NX_OH_EXTLT_RWY_TOG#2 (>K:TOGGLE_TAXI_LIGHTS) 3 (>K:TOGGLE_TAXI_LIGHTS)
A32NX_OH_LANDING_LIGHTS_OFF#(A:LIGHT LANDING, Bool) if{ (>K:LANDING_LIGHTS_TOGGLE) }
A32NX_OH_LANDING_LIGHTS_ON#(A:LIGHT LANDING, Bool) ! if{ (>K:LANDING_LIGHTS_TOGGLE) }
A32NX_OH_LANDING_LIGHTS_TOG#(>K:LANDING_LIGHTS_TOGGLE)
A32NX_OH_STROBES_TOG_AUTO#(A:LIGHT STROBE:0, Percent) ! if{ 0 (>K:STROBES_TOGGLE) } 1 (>L:STROBE_1_Auto)
A32NX_OH_STROBES_TOG_OFF#(A:LIGHT STROBE:0, Percent) if{ 0 (>K:STROBES_TOGGLE) } 0 (>L:STROBE_1_Auto)
A32NX_OH_STROBES_TOG_ON#(A:LIGHT STROBE:0, Percent) ! if{ 0 (>K:STROBES_TOGGLE) } 0 (>L:STROBE_1_Auto)
A32NX_LANDING_LIGHTS_L_R_Retract#2 (>L:LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET) 2 (>L:LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)
A32NX_Landing_Lights_L_R_OFF#1 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET) 1 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET)
A32NX_Landing_Lights_L_R_ON#0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET) 0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)
A32NX_OH_DOME_LIGHT_BRT#1 (>K:CABIN_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_7_SET)
A32NX_OH_DOME_LIGHT_DIM#1 (>K:CABIN_LIGHTS_SET) 20 (>K:LIGHT_POTENTIOMETER_7_SET)
A32NX_OH_DOME_LIGHT_TOGGLE#(A:LIGHT POTENTIOMETER:7, Percent) 0 == if{ 1 (>K:CABIN_LIGHTS_SET) 20 (>K:LIGHT_POTENTIOMETER_7_SET) } els{ (A:LIGHT POTENTIOMETER:7, Percent) 100 == if{ 0 (>K:CABIN_LIGHTS_SET) 0 (>K:LIGHT_POTENTIOMETER_7_SET) } els{ 1 (>K:CABIN_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_7_SET) } }
A32NX_OVHD_ANN_LT_BRT#1 (>L:A32NX_OVHD_INTLT_ANN)
A32NX_OVHD_ANN_LT_DIM#2 (>L:A32NX_OVHD_INTLT_ANN)
A32NX_OVHD_ANN_LT_TEST#0 (>L:A32NX_OVHD_INTLT_ANN)
A32NX_OVHD_BEACON_LIGHT_OFF#0 0 (>K:2:BEACON_LIGHTS_SET)
A32NX_OVHD_BEACON_LIGHTS_ON#0 1 (>K:2:BEACON_LIGHTS_SET) 
A32NX_OVHD_LANDING_LIGHTS_LEFT_OFF#1 (>LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET) 
A32NX_OVHD_LANDING_LIGHTS_LEFT_ON#0 (>L:LIGHTING_LANDING_2) 0 (>L:LANDING_2_Retracted) 1 2 r (>K:2:LANDING_LIGHTS_SET)
A32NX_OVHD_LANDING_LIGHTS_LEFT_RETRACTED#2 (>LIGHTING_LANDING_2) 1 (>L:LANDING_2_Retracted) 0 2 r (>K:2:LANDING_LIGHTS_SET) 
A32NX_OVHD_LANDING_LIGHTS_OFF#1 (>LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET) 
A32NX_OVHD_LANDING_LIGHTS_RIGHT_ON#0 (>L:LIGHTING_LANDING_3) 0 (>L:LANDING_3_Retracted) 1 3 r (>K:2:LANDING_LIGHTS_SET)
A32NX_OVHD_LANDING_LIGHTS_RIGHT_RETRACTED#2 (>LIGHTING_LANDING_3) 1 (>L:LANDING_3_Retracted) 0 3 r (>K:2:LANDING_LIGHTS_SET) 
A32NX_PEDESTAL_KNOB_DEC#(A:LIGHT POTENTIOMETER:85,percent) 5 - 0 max 85 (>K:2:LIGHT_POTENTIOMETER_SET)
A32NX_PEDESTAL_KNOB_INC#(A:LIGHT POTENTIOMETER:85,percent) 5 + 100 min 85 (>K:2:LIGHT_POTENTIOMETER_SET)
EMER_EXIT_ARM#1 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
EMER_EXIT_OFF#0 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
EMER_EXIT_ON#2 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
Lights_Wing_OFF#0 0 (>K:2:WING_LIGHTS_SET) 
Wing_Lights_ON#0 1 (>K:2:WING_LIGHTS_SET)
STBY_COMPASS_LIGHT_OFF#(>L:A32NX_STBY_COMPASS_LIGHT_TOGGLE)
STBY_COMPASS_LIGHT_TOGGLE#(L:A32NX_STBY_COMPASS_LIGHT_TOGGLE) ! (>L:A32NX_STBY_COMPASS_LIGHT_TOGGLE)
//Fly By Wire/A320/MCDU
A320_Neo_CDU_1_BTN_CLR_Press#1 (>L:A32NX_MCDU_PUSH_ANIM_1_CLR) (E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime) 1 (>L:A32NX_MCDU_CLR_Pressed) (>H:A320_Neo_CDU_1_BTN_CLR)
A320_Neo_CDU_1_BTN_CLR_Release#0 (>L:A32NX_MCDU_CLR_Pressed)
A320_Neo_CDU_2_BTN_CLR_Press#1 (>L:A32NX_MCDU_PUSH_ANIM_2_CLR) (E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime) 1 (>L:A32NX_MCDU_CLR_Pressed) (>H:A320_Neo_CDU_2_BTN_CLR)
A320_Neo_CDU_2_BTN_CLR_Release#0 (>L:A32NX_MCDU_CLR_Pressed)
A320_Neo_CDU_L_BTN_BRT#(L:A32NX_MCDU_L_BRIGHTNESS) 7.7 min 0.300 + (>L:A32NX_MCDU_L_BRIGHTNESS)
A320_Neo_CDU_L_BTN_DIM#(L:A32NX_MCDU_L_BRIGHTNESS) 0.8 max 0.300 - (>L:A32NX_MCDU_L_BRIGHTNESS)
A320_Neo_CDU_R_BTN_BRT#(L:A32NX_MCDU_R_BRIGHTNESS) 7.7 min 0.300 + (>L:A32NX_MCDU_R_BRIGHTNESS)
A320_Neo_CDU_R_BTN_DIM#(L:A32NX_MCDU_R_BRIGHTNESS) 0.8 max 0.300 - (>L:A32NX_MCDU_R_BRIGHTNESS)
//Fly By Wire/A320/Navigation
A320_Neo_ATC_BTN_0#(>H:A320_Neo_ATC_BTN_0)
A320_Neo_ATC_BTN_1#(>H:A320_Neo_ATC_BTN_1)
A320_Neo_ATC_BTN_2#(>H:A320_Neo_ATC_BTN_2)
A320_Neo_ATC_BTN_3#(>H:A320_Neo_ATC_BTN_3)
A320_Neo_ATC_BTN_4#(>H:A320_Neo_ATC_BTN_4)
A320_Neo_ATC_BTN_5#(>H:A320_Neo_ATC_BTN_5)
A320_Neo_ATC_BTN_6#(>H:A320_Neo_ATC_BTN_6)
A320_Neo_ATC_BTN_7#(>H:A320_Neo_ATC_BTN_7)
A320_Neo_ATC_BTN_8#(>H:A320_Neo_ATC_BTN_8)
A320_Neo_ATC_BTN_9#(>H:A320_Neo_ATC_BTN_9)
A320_Neo_CDU_1_BTN_0#(>H:A320_Neo_CDU_1_BTN_0)
A320_Neo_CDU_1_BTN_1#(>H:A320_Neo_CDU_1_BTN_1)
A320_Neo_CDU_1_BTN_2#(>H:A320_Neo_CDU_1_BTN_2)
A320_Neo_CDU_1_BTN_3#(>H:A320_Neo_CDU_1_BTN_3)
A320_Neo_CDU_1_BTN_4#(>H:A320_Neo_CDU_1_BTN_4)
A320_Neo_CDU_1_BTN_5#(>H:A320_Neo_CDU_1_BTN_5)
A320_Neo_CDU_1_BTN_6#(>H:A320_Neo_CDU_1_BTN_6)
A320_Neo_CDU_1_BTN_7#(>H:A320_Neo_CDU_1_BTN_7)
A320_Neo_CDU_1_BTN_8#(>H:A320_Neo_CDU_1_BTN_8)
A320_Neo_CDU_1_BTN_9#(>H:A320_Neo_CDU_1_BTN_9)
A320_Neo_CDU_1_BTN_A#(>H:A320_Neo_CDU_1_BTN_A)
A320_Neo_CDU_1_BTN_AIRPORT#(>H:A320_Neo_CDU_1_BTN_AIRPORT)
A320_Neo_CDU_1_BTN_ATC#(>H:A320_Neo_CDU_1_BTN_ATC)
A320_Neo_CDU_1_BTN_B#(>H:A320_Neo_CDU_1_BTN_B)
A320_Neo_CDU_1_BTN_C#(>H:A320_Neo_CDU_1_BTN_C)
A320_Neo_CDU_1_BTN_D#(>H:A320_Neo_CDU_1_BTN_D)
A320_Neo_CDU_1_BTN_DATA#(>H:A320_Neo_CDU_1_BTN_DATA)
A320_Neo_CDU_1_BTN_DIR#(>H:A320_Neo_CDU_1_BTN_DIR)
A320_Neo_CDU_1_BTN_DOT#(>H:A320_Neo_CDU_1_BTN_DOT)
A320_Neo_CDU_1_BTN_DOWN#(>H:A320_Neo_CDU_1_BTN_DOWN)
A320_Neo_CDU_1_BTN_E#(>H:A320_Neo_CDU_1_BTN_E)
A320_Neo_CDU_1_BTN_F#(>H:A320_Neo_CDU_1_BTN_F)
A320_Neo_CDU_1_BTN_FPLN#(>H:A320_Neo_CDU_1_BTN_FPLN)
A320_Neo_CDU_1_BTN_FUEL#(>H:A320_Neo_CDU_1_BTN_FUEL)
A320_Neo_CDU_1_BTN_G#(>H:A320_Neo_CDU_1_BTN_G)
A320_Neo_CDU_1_BTN_H#(>H:A320_Neo_CDU_1_BTN_H)
A320_Neo_CDU_1_BTN_I#(>H:A320_Neo_CDU_1_BTN_I)
A320_Neo_CDU_1_BTN_J#(>H:A320_Neo_CDU_1_BTN_J)
A320_Neo_CDU_1_BTN_K#(>H:A320_Neo_CDU_1_BTN_K)
A320_Neo_CDU_1_BTN_L#(>H:A320_Neo_CDU_1_BTN_L)
A320_Neo_CDU_1_BTN_L1#(>H:A320_Neo_CDU_1_BTN_L1)
A320_Neo_CDU_1_BTN_L2#(>H:A320_Neo_CDU_1_BTN_L2)
A320_Neo_CDU_1_BTN_L3#(>H:A320_Neo_CDU_1_BTN_L3)
A320_Neo_CDU_1_BTN_L4#(>H:A320_Neo_CDU_1_BTN_L4)
A320_Neo_CDU_1_BTN_L5#(>H:A320_Neo_CDU_1_BTN_L5)
A320_Neo_CDU_1_BTN_L6#(>H:A320_Neo_CDU_1_BTN_L6)
A320_Neo_CDU_1_BTN_M#(>H:A320_Neo_CDU_1_BTN_M)
A320_Neo_CDU_1_BTN_MENU#(>H:A320_Neo_CDU_1_BTN_MENU)
A320_Neo_CDU_1_BTN_N#(>H:A320_Neo_CDU_1_BTN_N)
A320_Neo_CDU_1_BTN_NEXTPAGE#(>H:A320_Neo_CDU_1_BTN_NEXTPAGE)
A320_Neo_CDU_1_BTN_O#(>H:A320_Neo_CDU_1_BTN_O)
A320_Neo_CDU_1_BTN_OVFY#(>H:A320_Neo_CDU_1_BTN_OVFY)
A320_Neo_CDU_1_BTN_P#(>H:A320_Neo_CDU_1_BTN_P)
A320_Neo_CDU_1_BTN_PERF#(>H:A320_Neo_CDU_1_BTN_PERF)
A320_Neo_CDU_1_BTN_PLUSMINUS#(>H:A320_Neo_CDU_1_BTN_PLUSMINUS)
A320_Neo_CDU_1_BTN_PREVPAGE#(>H:A320_Neo_CDU_1_BTN_PREVPAGE)
A320_Neo_CDU_1_BTN_Q#(>H:A320_Neo_CDU_1_BTN_Q)
A320_Neo_CDU_1_BTN_R#(>H:A320_Neo_CDU_1_BTN_R)
A320_Neo_CDU_1_BTN_R1#(>H:A320_Neo_CDU_1_BTN_R1)
A320_Neo_CDU_1_BTN_R2#(>H:A320_Neo_CDU_1_BTN_R2)
A320_Neo_CDU_1_BTN_R3#(>H:A320_Neo_CDU_1_BTN_R3)
A320_Neo_CDU_1_BTN_R4#(>H:A320_Neo_CDU_1_BTN_R4)
A320_Neo_CDU_1_BTN_R5#(>H:A320_Neo_CDU_1_BTN_R5)
A320_Neo_CDU_1_BTN_R6#(>H:A320_Neo_CDU_1_BTN_R6)
A320_Neo_CDU_1_BTN_RAD#(>H:A320_Neo_CDU_1_BTN_RAD)
A320_Neo_CDU_1_BTN_S#(>H:A320_Neo_CDU_1_BTN_S)
A320_Neo_CDU_1_BTN_SEC#(>H:A320_Neo_CDU_1_BTN_SEC)
A320_Neo_CDU_1_BTN_SP#(>H:A320_Neo_CDU_1_BTN_SP)
A320_Neo_CDU_1_BTN_T#(>H:A320_Neo_CDU_1_BTN_T)
A320_Neo_CDU_1_BTN_U#(>H:A320_Neo_CDU_1_BTN_U)
A320_Neo_CDU_1_BTN_UP#(>H:A320_Neo_CDU_1_BTN_UP)
A320_Neo_CDU_1_BTN_V#(>H:A320_Neo_CDU_1_BTN_V)
A320_Neo_CDU_1_BTN_W#(>H:A320_Neo_CDU_1_BTN_W)
A320_Neo_CDU_1_BTN_X#(>H:A320_Neo_CDU_1_BTN_X)
A320_Neo_CDU_1_BTN_Y#(>H:A320_Neo_CDU_1_BTN_Y)
A320_Neo_CDU_1_BTN_Z#(>H:A320_Neo_CDU_1_BTN_Z)
A320_Neo_CDU_2_BTN_0#(>H:A320_Neo_CDU_2_BTN_0)
A320_Neo_CDU_2_BTN_1#(>H:A320_Neo_CDU_2_BTN_1)
A320_Neo_CDU_2_BTN_2#(>H:A320_Neo_CDU_2_BTN_2)
A320_Neo_CDU_2_BTN_3#(>H:A320_Neo_CDU_2_BTN_3)
A320_Neo_CDU_2_BTN_4#(>H:A320_Neo_CDU_2_BTN_4)
A320_Neo_CDU_2_BTN_5#(>H:A320_Neo_CDU_2_BTN_5)
A320_Neo_CDU_2_BTN_6#(>H:A320_Neo_CDU_2_BTN_6)
A320_Neo_CDU_2_BTN_7#(>H:A320_Neo_CDU_2_BTN_7)
A320_Neo_CDU_2_BTN_8#(>H:A320_Neo_CDU_2_BTN_8)
A320_Neo_CDU_2_BTN_9#(>H:A320_Neo_CDU_2_BTN_9)
A320_Neo_CDU_2_BTN_A#(>H:A320_Neo_CDU_2_BTN_A)
A320_Neo_CDU_2_BTN_AIRPORT#(>H:A320_Neo_CDU_2_BTN_AIRPORT)
A320_Neo_CDU_2_BTN_ATC#(>H:A320_Neo_CDU_2_BTN_ATC)
A320_Neo_CDU_2_BTN_B#(>H:A320_Neo_CDU_2_BTN_B)
A320_Neo_CDU_2_BTN_C#(>H:A320_Neo_CDU_2_BTN_C)
A320_Neo_CDU_2_BTN_D#(>H:A320_Neo_CDU_2_BTN_D)
A320_Neo_CDU_2_BTN_DATA#(>H:A320_Neo_CDU_2_BTN_DATA)
A320_Neo_CDU_2_BTN_DIR#(>H:A320_Neo_CDU_2_BTN_DIR)
A320_Neo_CDU_2_BTN_DIV#(>H:A320_Neo_CDU_2_BTN_DIV)
A320_Neo_CDU_2_BTN_DOT#(>H:A320_Neo_CDU_2_BTN_DOT)
A320_Neo_CDU_2_BTN_DOWN#(>H:A320_Neo_CDU_2_BTN_DOWN)
A320_Neo_CDU_2_BTN_E#(>H:A320_Neo_CDU_2_BTN_E)
A320_Neo_CDU_2_BTN_F#(>H:A320_Neo_CDU_2_BTN_F)
A320_Neo_CDU_2_BTN_FPLN#(>H:A320_Neo_CDU_2_BTN_FPLN)
A320_Neo_CDU_2_BTN_FUEL#(>H:A320_Neo_CDU_2_BTN_FUEL)
A320_Neo_CDU_2_BTN_G#(>H:A320_Neo_CDU_2_BTN_G)
A320_Neo_CDU_2_BTN_H#(>H:A320_Neo_CDU_2_BTN_H)
A320_Neo_CDU_2_BTN_I#(>H:A320_Neo_CDU_2_BTN_I)
A320_Neo_CDU_2_BTN_INIT#(>H:A320_Neo_CDU_2_BTN_INIT)
A320_Neo_CDU_2_BTN_J#(>H:A320_Neo_CDU_2_BTN_J)
A320_Neo_CDU_2_BTN_K#(>H:A320_Neo_CDU_2_BTN_K)
A320_Neo_CDU_2_BTN_L#(>H:A320_Neo_CDU_2_BTN_L)
A320_Neo_CDU_2_BTN_L1#(>H:A320_Neo_CDU_2_BTN_L1)
A320_Neo_CDU_2_BTN_L2#(>H:A320_Neo_CDU_2_BTN_L2)
A320_Neo_CDU_2_BTN_L3#(>H:A320_Neo_CDU_2_BTN_L3)
A320_Neo_CDU_2_BTN_L4#(>H:A320_Neo_CDU_2_BTN_L4)
A320_Neo_CDU_2_BTN_L5#(>H:A320_Neo_CDU_2_BTN_L5)
A320_Neo_CDU_2_BTN_L6#(>H:A320_Neo_CDU_2_BTN_L6)
A320_Neo_CDU_2_BTN_M#(>H:A320_Neo_CDU_2_BTN_M)
A320_Neo_CDU_2_BTN_MENU#(>H:A320_Neo_CDU_2_BTN_MENU)
A320_Neo_CDU_2_BTN_N#(>H:A320_Neo_CDU_2_BTN_N)
A320_Neo_CDU_2_BTN_NEXTPAGE#(>H:A320_Neo_CDU_2_BTN_NEXTPAGE)
A320_Neo_CDU_2_BTN_O#(>H:A320_Neo_CDU_2_BTN_O)
A320_Neo_CDU_2_BTN_OVFY#(>H:A320_Neo_CDU_2_BTN_OVFY)
A320_Neo_CDU_2_BTN_P#(>H:A320_Neo_CDU_2_BTN_P)
A320_Neo_CDU_2_BTN_PERF#(>H:A320_Neo_CDU_2_BTN_PERF)
A320_Neo_CDU_2_BTN_PLUSMINUS#(>H:A320_Neo_CDU_2_BTN_PLUSMINUS)
A320_Neo_CDU_2_BTN_PREVPAGE#(>H:A320_Neo_CDU_2_BTN_PREVPAGE)
A320_Neo_CDU_2_BTN_PROG#(>H:A320_Neo_CDU_2_BTN_PROG)
A320_Neo_CDU_2_BTN_Q#(>H:A320_Neo_CDU_2_BTN_Q)
A320_Neo_CDU_2_BTN_R#(>H:A320_Neo_CDU_2_BTN_R)
A320_Neo_CDU_2_BTN_R1#(>H:A320_Neo_CDU_2_BTN_R1)
A320_Neo_CDU_2_BTN_R2#(>H:A320_Neo_CDU_2_BTN_R2)
A320_Neo_CDU_2_BTN_R3#(>H:A320_Neo_CDU_2_BTN_R3)
A320_Neo_CDU_2_BTN_R4#(>H:A320_Neo_CDU_2_BTN_R4)
A320_Neo_CDU_2_BTN_R5#(>H:A320_Neo_CDU_2_BTN_R5)
A320_Neo_CDU_2_BTN_R6#(>H:A320_Neo_CDU_2_BTN_R6)
A320_Neo_CDU_2_BTN_RAD#(>H:A320_Neo_CDU_2_BTN_RAD)
A320_Neo_CDU_2_BTN_S#(>H:A320_Neo_CDU_2_BTN_S)
A320_Neo_CDU_2_BTN_SEC#(>H:A320_Neo_CDU_2_BTN_SEC)
A320_Neo_CDU_2_BTN_SP#(>H:A320_Neo_CDU_2_BTN_SP)
A320_Neo_CDU_2_BTN_T#(>H:A320_Neo_CDU_2_BTN_T)
A320_Neo_CDU_2_BTN_U#(>H:A320_Neo_CDU_2_BTN_U)
A320_Neo_CDU_2_BTN_UP#(>H:A320_Neo_CDU_2_BTN_UP)
A320_Neo_CDU_2_BTN_V#(>H:A320_Neo_CDU_2_BTN_V)
A320_Neo_CDU_2_BTN_W#(>H:A320_Neo_CDU_2_BTN_W)
A320_Neo_CDU_2_BTN_X#(>H:A320_Neo_CDU_2_BTN_X)
A320_Neo_CDU_2_BTN_Y#(>H:A320_Neo_CDU_2_BTN_Y)
A320_Neo_CDU_2_BTN_Z#(>H:A320_Neo_CDU_2_BTN_Z)
A32NX_ADIRS_1_PUSH#(L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON,bool) ! (>L:A32NX_OVHD_ADIRS_ADR_1_PB_IS_ON,bool)
A32NX_ADIRS_2_PUSH#(L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON,bool) ! (>L:A32NX_OVHD_ADIRS_ADR_2_PB_IS_ON,bool)
A32NX_ADIRS_3_PUSH#(L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON,bool) ! (>L:A32NX_OVHD_ADIRS_ADR_3_PB_IS_ON,bool)
A32NX_ADIRS_KNOB_1_ATT#2 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)
A32NX_ADIRS_KNOB_1_NAV#1 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)
A32NX_ADIRS_KNOB_1_OFF#0 (>L:A32NX_OVHD_ADIRS_IR_1_MODE_SELECTOR_KNOB)
A32NX_ADIRS_KNOB_2_ATT#2 (>L:A32NX_ADIRS_KNOB_2)
A32NX_ADIRS_KNOB_2_NAV#1 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)
A32NX_ADIRS_KNOB_2_OFF#0 (>L:A32NX_OVHD_ADIRS_IR_2_MODE_SELECTOR_KNOB)
A32NX_ADIRS_KNOB_3_ATT#2 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)
A32NX_ADIRS_KNOB_3_NAV#1 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)
A32NX_ADIRS_KNOB_3_OFF#0 (>L:A32NX_OVHD_ADIRS_IR_3_MODE_SELECTOR_KNOB)
A320_Neo_ATC_BTN_CLR#(>H:A320_Neo_ATC_BTN_CLR)
A320_Neo_ATC_BTN_IDENT#(>H:A320_Neo_ATC_BTN_IDENT)
A320_Neo_CDU_1_BTN_DIV#(>H:A320_Neo_CDU_1_BTN_DIV)
A320_Neo_CDU_1_BTN_SLASH#(>H:A320_Neo_CDU_1_BTN_DIV)
A320_Neo_CDU_1_BTN_SLASH#>H:A320_Neo_CDU_1_BTN_DIV
A32NX_TRANSPONDER_SYSTEM#0 (>L:A32NX_TRANSPONDER_SYSTEM)
A32NX_TRANSPONDER_SYSTEM#1 (>L:A32NX_TRANSPONDER_SYSTEM)
TCAS_SWITCH_POSITION_STBY#0 (>L:A32NX_SWITCH_TCAS_Position)
TCAS_SWITCH_POSITION_TA#1 (>L:A32NX_SWITCH_TCAS_Position)
TCAS_SWITCH_POSITION_TA_RA#2 (>L:A32NX_SWITCH_TCAS_Position)
//Fly By Wire/A320/Passengers/Crew
A32NX_CALLS_EMER_ON_OFF#0 (>L:A32NX_CALLS_EMER_ON)
A32NX_CALLS_EMER_ON_ON#1 (>L:A32NX_CALLS_EMER_ON)
A32NX_EVAC_CAPT_TOGGLE_CAPT#0 (>L:A32NX_EVAC_CAPT_TOGGLE)
A32NX_EVAC_CAPT_TOGGLE_CAPT_AND_PURS#1 (>L:A32NX_EVAC_CAPT_TOGGLE)
A32NX_EVAC_COMMAND_TOGGLE_OFF#0 (>L:A32NX_EVAC_COMMAND_TOGGLE)
A32NX_EVAC_COMMAND_TOGGLE_ON#1 (>L:A32NX_EVAC_COMMAND_TOGGLE)
NO_SMOKING_AUTO#(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 == is{1 if{(>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } els} (L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 ==if{ 1 if{ 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } }
NO_SMOKING_OFF#(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 0 == is{1 if{(>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } els} (L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 ==if{ 1 if{ 2 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 2 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } }
NO_SMOKING_ON#(L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 2 == is{1 if{(>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } els} (L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 1 ==if{ 1 if{ 0 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) 0 (>L:XMLVAR_SWITCH_OVHD_INTLT_NOSMOKING_Position) } } }
PUSH_OVHD_CALLS_AFT_OFF#0 (>L:PUSH_OVHD_CALLS_AFT)
PUSH_OVHD_CALLS_AFT_ON#1 (>L:PUSH_OVHD_CALLS_AFT)
PUSH_OVHD_CALLS_ALL_OFF#0 (>L:PUSH_OVHD_CALLS_ALL)
PUSH_OVHD_CALLS_ALL_ON#1 (>L:PUSH_OVHD_CALLS_ALL)
PUSH_OVHD_CALLS_FWD_OFF#0 (>L:PUSH_OVHD_CALLS_FWD)
PUSH_OVHD_CALLS_FWD_ON#1 (>L:PUSH_OVHD_CALLS_FWD)
PUSH_OVHD_CALLS_MECH_OFF#0 (>L:PUSH_OVHD_CALLS_MECH)
PUSH_OVHD_CALLS_MECH_ON#1 (>L:PUSH_OVHD_CALLS_MECH)
PUSH_OVHD_EVAC_HORN_OFF#0 (>L:PUSH_OVHD_EVAC_HORN)
PUSH_OVHD_EVAC_HORN_ON#1 (>L:PUSH_OVHD_EVAC_HORN)
SEATBELT_SWITCH#(L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position) ! (>L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position)
//Fly By Wire/A320/Radar
A32NX_TOGGLE_WEATHERRADAR_PWS_AND_TCAS#(L:A32NX_SWITCH_RADAR_PWS_POSITION, Number) 0 == if{ 0 (>L:XMLVAR_A320_WEATHERRADAR_SYS) 2 (>L:A32NX_SWITCH_TCAS_POSITION) 1 (>L:A32NX_SWITCH_RADAR_PWS_POSITION) } els{ 1 (>L:XMLVAR_A320_WEATHERRADAR_SYS) 0 (>L:A32NX_SWITCH_TCAS_POSITION) 0 (>L:A32NX_SWITCH_RADAR_PWS_POSITION) }
//Fly By Wire/A320/Radio
A320_Neo_FBW_BTN_L_ADF#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ 1 if{ (>H:A320_Neo_FDW_BTN_L_ADF) 4 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } } }
A320_Neo_FBW_BTN_L_AM#(L:XMLVAR_RMP_L_On) (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! and if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) 4 == (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) 5 == or } and if{ (>H:A320_Neo_FDW_BTN_L_AM) (L:XMLVAR_RMP_L_AM_Active) ! (>L:XMLVAR_RMP_L_AM_Active) }
A320_Neo_FBW_BTN_L_BFO#(L:XMLVAR_RMP_L_On) (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 4 == } and if{ (>H:A320_Neo_FDW_BTN_L_BFO) (L:XMLVAR_RMP_L_BFO_Active) ! (>L:XMLVAR_RMP_L_BFO_Active) }
A320_Neo_FBW_BTN_L_HF1#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_HF1) 4 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }
A320_Neo_FBW_BTN_L_HF2#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_HF2) 5 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }
A320_Neo_FBW_BTN_L_ILS#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ 1 if{ (>H:A320_Neo_FDW_BTN_L_ILS) 2 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } } }
A320_Neo_FBW_BTN_L_MLS#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ 0 if{ (>H:A320_Neo_FDW_BTN_L_MLS) 3 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } } }
A320_Neo_FBW_BTN_L_NAV#(L:XMLVAR_RMP_L_On) 1 and if{ (>H:A320_Neo_FDW_BTN_L_NAV) (L:XMLVAR_RMP_L_NAV_Active) ! (>L:XMLVAR_RMP_L_NAV_Active) 0 (L:XMLVAR_RMP_L_NAV_Active) == if{ 1 (>L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) 0 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } els{ 0 (>L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) } }
A320_Neo_FBW_BTN_L_VHF1#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_VHF1) 1 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }
A320_Neo_FBW_BTN_L_VHF2#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_VHF2) 2 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }
A320_Neo_FBW_BTN_L_VHF3#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) ! if{ (L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 == if{ (>H:A320_Neo_FDW_BTN_L_VHF3) 3 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) } } }
A320_Neo_FBW_BTN_L_VOR#(L:XMLVAR_RMP_L_On) if{ (L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) ! if{ 1 if{ (>H:A320_Neo_FDW_BTN_L_VOR) 1 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) } } }
A320_Neo_FBW_SWITCH_L_TOGGLE#(L:XMLVAR_RMP_L_On) ! (>L:XMLVAR_RMP_L_On) (L:XMLVAR_RMP_L_On) if{ 0 (>L:XMLVAR_RMP_L_GROUP_FREQ_IS_DISABLED) 1 (>L:XMLVAR_RMP_L_GROUP_MODE_IS_DISABLED) 1 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_FREQ) 0 (>L:XMLVAR_RMP_L_CURRENT_BUTTON_IN_GROUP_MODE) 0 (>L:XMLVAR_RMP_L_AM_Active) 0 (>L:XMLVAR_RMP_L_NAV_Active) 0 (>L:XMLVAR_RMP_L_BFO_Active) } (>H:A320_Neo_FDW_SWITCH_L_TOGGLE)
A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE_OFF#0 (>L:A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE)
A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE_ON#1 (>L:A32NX_OVHD_COCKPITDOORVIDEO_TOGGLE)
A32NX_RMP_L_INNER_KNOB_TURNED_ANTICLOCKWISE#(>H:A32NX_RMP_L_INNER_KNOB_TURNED_ANTICLOCKWISE)
A32NX_RMP_L_INNER_KNOB_TURNED_CLOCKWISE#(>H:A32NX_RMP_L_INNER_KNOB_TURNED_CLOCKWISE)
A32NX_RMP_L_OUTER_KNOB_TURNED_ANTICLOCKWISE#(>H:A32NX_RMP_L_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A32NX_RMP_L_OUTER_KNOB_TURNED_CLOCKWISE#(>H:A32NX_RMP_L_OUTER_KNOB_TURNED_CLOCKWISE)
A32NX_RMP_R_OFF#0 (>L:A32NX_RMP_R_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_R_TOGGLE_SWITCH)
A32NX_RMP_R_ON#1 (>L:A32NX_RMP_R_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_R_TOGGLE_SWITCH)
A32NX_RMP_R_TOG#(L:A32NX_RMP_R_TOGGLE_SWITCH, bool) ! (>L:A32NX_RMP_R_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_R_TOGGLE_SWITCH)
A32NX_RMP_L_TOGGLE#(L:A32NX_RMP_L_TOGGLE_SWITCH, bool) ! (>L:A32NX_RMP_L_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_L_TOGGLE_SWITCH)
A32NX_RMP_L_TOGGLE_OFF#(L:A32NX_RMP_L_TOGGLE_SWITCH, bool) if{ 0 (>L:A32NX_RMP_L_TOGGLE_SWITCH, bool)  (>H:A32NX_RMP_L_TOGGLE_SWITCH) }
A32NX_RMP_L_TOGGLE_ON#(L:A32NX_RMP_L_TOGGLE_SWITCH, bool) ! if{ 0 (>L:A32NX_RMP_L_TOGGLE_SWITCH, bool) (>H:A32NX_RMP_L_TOGGLE_SWITCH) }
A32NX_RMP_L_TRANSFER_BUTTON_PRESSED#(>H:A32NX_RMP_L_TRANSFER_BUTTON_PRESSED)
//Fly By Wire/A320/Warning System
A320_Neo_MFD_BTN_TERRONND_1#(>H:A320_Neo_MFD_BTN_TERRONND_1)
A32NX_MASTER_CAUTION_PRESSED#0 (>L:A32NX_MASTER_CAUTION) 1 (>L:PUSH_AUTOPILOT_MASTERCAUT_L) 
A32NX_MASTER_CAUTION_RELEASED#0 (>L:PUSH_AUTOPILOT_MASTERCAUT_L) 
A32NX_GPWS_FLAPS3_OFF#0 (>L:A32NX_GPWS_FLAPS3)
A32NX_GPWS_FLAPS3_ON#1 (>L:A32NX_GPWS_FLAPS3)
A32NX_GPWS_FLAP_OFF_OFF#0 (>L:A32NX_GPWS_FLAP_OFF)
A32NX_GPWS_FLAP_OFF_ON#1 (>L:A32NX_GPWS_FLAP_OFF)
A32NX_GPWS_GS_OFF_OFF#0 (>L:A32NX_GPWS_GS_OFF)
A32NX_GPWS_GS_OFF_ON#1 (>L:A32NX_GPWS_GS_OFF)
A32NX_GPWS_SYS_OFF_OFF#0 (>L:A32NX_GPWS_SYS_OFF)
A32NX_GPWS_SYS_OFF_ON#1 (>L:A32NX_GPWS_SYS_OFF)
A32NX_MASTER_WARNING_PRESSED#0 (>L:A32NX_MASTER_WARNING) 1 (>L:PUSH_AUTOPILOT_MASTERAWARN_L) 
A32NX_MASTER_WARNING_RELEASED#0 (>L:PUSH_AUTOPILOT_MASTERAWARN_L)
A32NX_GPWS_TERR_OFF_OFF#0 (>L:A32NX_GPWS_TERR_OFF)
A32NX_GPWS_TERR_OFF_ON#1 (>L:A32NX_GPWS_TERR_OFF)
//Fly By Wire/A380X/Air Condition and Pressurization
A380X_OH_AIR_APU_BLEED_Press#0 (>K:APU_BLEED_AIR_SOURCE_TOGGLE) (L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON) ! (>L:A32NX_OVHD_PNEU_APU_BLEED_PB_IS_ON)
A380X_OH_AIR_ENG_1_BLEED_Press#1 (>K:ENGINE_BLEED_AIR_SOURCE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_AIRCOND_ENG1BLEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_AIRCOND_ENG1BLEED_Pressed)
A380X_OH_AIR_ENG_2_BLEED_Press#2 (>K:ENGINE_BLEED_AIR_SOURCE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_AIRCOND_ENG2BLEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_AIRCOND_ENG2BLEED_Pressed)
A380X_OH_AIR_ENG_3_BLEED_Press#3 (>K:ENGINE_BLEED_AIR_SOURCE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_AIRCOND_ENG3BLEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_AIRCOND_ENG3BLEED_Pressed)
A380X_OH_AIR_ENG_4_BLEED_Press#4 (>K:ENGINE_BLEED_AIR_SOURCE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_AIRCOND_ENG4BLEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_AIRCOND_ENG4BLEED_Pressed)
A380X_OH_AIR_XBLEED_KNOB_AUTO#1 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)
A380X_OH_AIR_XBLEED_KNOB_CLOSE#0 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)
A380X_OH_AIR_XBLEED_KNOB_OPEN#2 (>L:A32NX_KNOB_OVHD_AIRCOND_XBLEED_Position)
//Fly By Wire/A380X/Anti Ice
A380X_OH_ANTIICE_ENG1_TOG#(>K:ANTI_ICE_TOGGLE_ENG1) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG1_Pressed)
A380X_OH_ANTIICE_ENG2_TOG#(>K:ANTI_ICE_TOGGLE_ENG2) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG2_Pressed)
A380X_OH_ANTIICE_ENG3_TOG#(>K:ANTI_ICE_TOGGLE_ENG3) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG3_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG3_Pressed)
A380X_OH_ANTIICE_ENG4_TOG#(>K:ANTI_ICE_TOGGLE_ENG4) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG4_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_ENG4_Pressed)
A380X_OVHD_ANTIICE_WING_TOGGLE#(>K:TOGGLE_STRUCTURAL_DEICE) (L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_ANTIICE_WING_Pressed) 
A380X_OVHD_PROBE_WINDOW_HEAT_TOGGLE#(L:A32NX_MAN_PITOT_HEAT,Bool) ! (>L:A32NX_MAN_PITOT_HEAT) (L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_PROBESWINDOW_Pressed) 
//Fly By Wire/A380X/Autopilot
A380_FCU_ALT_Knob_Dec#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) - (L:XMLVAR_Autopilot_Altitude_Increment) (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - (L:XMLVAR_Autopilot_Altitude_Increment) % + 100 max (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Down) (>H:A320_Neo_CDU_AP_DEC_ALT) 
A380_FCU_ALT_Knob_Inc#3 (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) + (A:AUTOPILOT ALTITUDE LOCK VAR:3, feet) (L:XMLVAR_Autopilot_Altitude_Increment) % - 49000 min (>K:2:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up) (>H:A320_Neo_CDU_AP_INC_ALT)
A380_FCU_HDG_Knob_Dec#(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{  (>H:A320_Neo_FCU_HDG_DEC_TRACK) } els{  (>H:A320_Neo_FCU_HDG_DEC_HEADING) }
A380_FCU_HDG_Knob_Inc#(L:A32NX_TRK_FPA_MODE_ACTIVE, bool) 1 == if{  (>H:A320_Neo_FCU_HDG_INC_TRACK) } els{  (>H:A320_Neo_FCU_HDG_INC_HEADING) }
A380_FCU_SPEED_Knob_Dec#(>H:A320_Neo_FCU_SPEED_DEC)
A380_FCU_SPEED_Knob_Inc#(>H:A320_Neo_FCU_SPEED_INC)
A380X_FCU_AP_1_Button_Press#(>H:A320_Neo_FCU_AP_1_PUSH)
A380X_FCU_AP_2_Button_Press#(>H:A320_Neo_FCU_AP_2_PUSH)
A380X_FCU_APPR_Button_Press#(>H:A320_Neo_FCU_APPR_PUSH)
A380X_FCU_ATHR_Button_Press#1 (>K:AUTO_THROTTLE_ARM)
A380X_FCU_Altitude_Increment_Toggle#(L:XMLVAR_Autopilot_Altitude_Increment, number) 100 == if{ 1000 } els{ 100 } (>L:XMLVAR_Autopilot_Altitude_Increment, number) 
A380X_FCU_FD_Button_Press#1 (>K:TOGGLE_FLIGHT_DIRECTOR) 2 (>K:TOGGLE_FLIGHT_DIRECTOR)
A380X_FCU_LOC_Button_Press#(>H:A320_Neo_FCU_LOC_PUSH)
A380X_FCU_TRUEMAG_Push#(>H:A320_Neo_FCU_TRUEMAG_PUSH)
A380X_FCU_VS_Knob_Dec#(L:A32NX_TRK_FPA_MODE_ACTIVE,Bool) 1 == if{ (>H:A320_Neo_FCU_VS_DEC_FPA) } els{ (>H:A320_Neo_FCU_VS_DEC_VS) } (>H:A320_Neo_CDU_VS) 
A380X_FCU_VS_Knob_Inc#(L:A32NX_TRK_FPA_MODE_ACTIVE,Bool) 1 == if{ (>H:A320_Neo_FCU_VS_INC_FPA) } els{ (>H:A320_Neo_FCU_VS_INC_VS) } (>H:A320_Neo_CDU_VS) 
A380X_FCU_VS_Knob_Pull#(>H:A320_Neo_FCU_VS_PULL) (>H:A320_Neo_CDU_VS)
A380X_FCU_VS_Knob_Push#(>H:A320_Neo_FCU_VS_PUSH) (>H:A320_Neo_CDU_VS)
//Fly By Wire/A380X/Avionics
A380X_ECAM_ABN_PROC_Button_Press#1 (>L:A32NX_BTN_ABNPROC)
A380X_ECAM_ABN_PROC_Button_Release#0 (>L:A32NX_BTN_ABNPROC)
A380X_ECAM_APU_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 7 != if{ 7 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_BLEED_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 1 != if{ 1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_CB_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 14 != if{ 14 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_CL_Button_Press#1 (>L:A32NX_BTN_CL)
A380X_ECAM_CL_Button_Release#0 (>L:A32NX_BTN_CL)
A380X_ECAM_CLR_Button_Press#1 (>L:A32NX_BTN_CLR)
A380X_ECAM_CLR_Button_Release#0 (>L:A32NX_BTN_CLR)
A380X_ECAM_CLR2_Button_Press#1 (>L:A32NX_BTN_CLR2)
A380X_ECAM_CLR2_Button_Release#0 (>L:A32NX_BTN_CLR2)
A380X_ECAM_COND_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 8 != if{ 8 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_DOOR_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 9 != if{ 9 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_EL_AC_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 3 != if{ 3 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_EL_DC_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 10 != if{ 10 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_EMER_CANC_Button_Press#1 (>L:A32NX_BTN_EMERCANC)
A380X_ECAM_EMER_CANC_Button_Release#0 (>L:A32NX_BTN_EMERCANC)
A380X_ECAM_ENG_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 0 != if{ 0 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_FCTL_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 12 != if{ 12 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_FUEL_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 4 != if{ 4 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_HYD_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 5 != if{ 5 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_MORE_Button_Press#1 (>L:A32NX_BTN_MORE)
A380X_ECAM_MORE_Button_Release#0 (>L:A32NX_BTN_MORE)
A380X_ECAM_PRESS_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 2 != if{ 2 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_RCL_Button_Press#1 (>L:A32NX_BTN_RCL)
A380X_ECAM_RCL_LAST_Button_Release#0 (>L:A32NX_BTN_RCL)
A380X_ECAM_STS_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 15 != if{ 15 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_TO_CONFIG_Button_Press#1 (>L:A32NX_BTN_TOCONFIG)
A380X_ECAM_TO_CONFIG_Button_Release#0 (>L:A32NX_BTN_TOCONFIG)
A380X_ECAM_VIDEO_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 13 != if{ 13 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_WHEEL_Button_Press#(L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) 11 != if{ 11 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } els{ -1 (>L:A32NX_ECAM_SD_CURRENT_PAGE_INDEX) } (>H:A32NX_SD_PAGE_CHANGED)
A380X_ECAM_ABN_PROC_Press#1 (>L:A32NX_BTN_ABNPROC)
A380X_ECAM_ABN_PROC_Release#0 (>L:A32NX_BTN_ABNPROC)
A380X_ECAM_CALL_FOR_CHECKLIST_Press#1 (>L:A32NX_BTN_CL)
A380X_ECAM_CALL_FOR_CHECKLIST_Release#0 (>L:A32NX_BTN_CL)
A380X_ECAM_CHECK_Button_L_Press_#1 (>L:A32NX_BTN_CHECK_LH)
A380X_ECAM_CHECK_Button_L_Release#0 (>L:A32NX_BTN_CHECK_LH)
A380X_ECAM_CHECK_Button_R_Press#1 (>L:A32NX_BTN_CHECK_RH)
A380X_ECAM_CHECK_Button_R_Release#0 (>L:A32NX_BTN_CHECK_RH)
A380X_ECAM_DOWN_Button_Press#1 (>L:A32NX_BTN_DOWN)
A380X_ECAM_DOWN_Button_Release#0 (>L:A32NX_BTN_DOWN)
A380X_ECAM_UP_Button_Press#1 (>L:A32NX_BTN_UP)
A380X_ECAM_UP_Button_Release#0 (>L:A32NX_BTN_UP)
//Fly By Wire/A380X/Brakes
A380X_AUTOBRAKES_RTO_ARM_Button_Press#1 (>L:A32NX_OVHD_AUTOBRK_RTO_ARM_IS_PRESSED)
A380X_AUTOBRAKES_RTO_ARM_Button_Release#0 (>L:A32NX_OVHD_AUTOBRK_RTO_ARM_IS_PRESSED)
A380X_AUTOBRAKES_SELECTED_MODE_2#3 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)
A380X_AUTOBRAKES_SELECTED_MODE_3#4 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)
A380X_AUTOBRAKES_SELECTED_MODE_BTV#1 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)
A380X_AUTOBRAKES_SELECTED_MODE_DISARM#0 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)
A380X_AUTOBRAKES_SELECTED_MODE_HI#5 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)
A380X_AUTOBRAKES_SELECTED_MODE_LO#2 (>L:A32NX_AUTOBRAKES_SELECTED_MODE)
//Fly By Wire/A380X/EFIS
A380X_EFIS_L_ARPT_Button_Press#(L:A380X_EFIS_L_ARPT_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_L_ARPT_BUTTON_IS_ON,Bool)
A380X_EFIS_L_Baro_Knob_Dec#(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{  (L:XMLVAR_Baro_Selector_HPA_1) if{  1 (A:KOHLSMAN SETTING MB:1, mbars) -- 16 * (>K:2:KOHLSMAN_SET) }  els{ 1 (>K:KOHLSMAN_DEC) } els{ (>H:A380X_FCU_BARO_PRESEL_DEC) }
A380X_EFIS_L_Baro_Knob_Inc#(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{  (L:XMLVAR_Baro_Selector_HPA_1) if{  1 (A:KOHLSMAN SETTING MB:1, mbars) ++ 16 * (>K:2:KOHLSMAN_SET) }  els{ 1 (>K:KOHLSMAN_INC) } els{ (>H:A380X_FCU_BARO_PRESEL_INC) }
A380X_EFIS_L_Baro_Knob_Pull#3 (>L:XMLVAR_Baro1_Mode)
A380X_EFIS_L_Baro_Knob_Push#1 (>L:XMLVAR_Baro1_Mode)
A380X_EFIS_L_Baro_Selector_HPA_Toggle#(L:XMLVAR_Baro_Selector_HPA_1) ! (>L:XMLVAR_Baro_Selector_HPA_1)
A380X_EFIS_L_CSTR_Button_Press#(L:A380X_EFIS_L_CSTR_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_L_CSTR_BUTTON_IS_ON,Bool)
A380X_EFIS_L_LS_Button_Press#(L:A380X_EFIS_L_LS_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_L_LS_BUTTON_IS_ON,Bool)
A380X_EFIS_L_Mode_Select_ARC#(L:A32NX_EFIS_L_ND_RANGE) -- 1 max (>L:A32NX_EFIS_L_ND_RANGE) 3 (>L:A32NX_EFIS_L_ND_MODE)
A380X_EFIS_L_Mode_Select_Knob_Dec#(L:A32NX_EFIS_L_ND_MODE) 3 == (L:A32NX_EFIS_L_ND_RANGE) 7 < and if{  (L:A32NX_EFIS_L_ND_RANGE) 0 > if{  (L:A32NX_EFIS_L_ND_RANGE) ++ (>L:A32NX_EFIS_L_ND_RANGE) } } (L:A32NX_EFIS_L_ND_MODE) -- 0 max 4 min s0 (>L:A32NX_EFIS_L_ND_MODE) l0 3 == (L:A32NX_EFIS_L_ND_RANGE) 1 > and if{ (L:A32NX_EFIS_L_ND_RANGE) -- 1 max (>L:A32NX_EFIS_L_ND_RANGE) } l0 2 < if{ 4 (>L:A32NX_EFIS_L_OANS_RANGE) (L:A32NX_EFIS_L_ND_RANGE) 0 == if{  1 (>L:A32NX_EFIS_L_ND_RANGE) } }
A380X_EFIS_L_Mode_Select_Knob_Inc#(L:A32NX_EFIS_L_ND_MODE) 3 == (L:A32NX_EFIS_L_ND_RANGE) 7 < and if{  (L:A32NX_EFIS_L_ND_RANGE) 0 > if{  (L:A32NX_EFIS_L_ND_RANGE) ++ (>L:A32NX_EFIS_L_ND_RANGE) } } (L:A32NX_EFIS_L_ND_MODE) ++ 0 max 4 min s0 (>L:A32NX_EFIS_L_ND_MODE) l0 3 == (L:A32NX_EFIS_L_ND_RANGE) 1 > and if{ (L:A32NX_EFIS_L_ND_RANGE) -- 1 max (>L:A32NX_EFIS_L_ND_RANGE) } l0 2 < if{ 4 (>L:A32NX_EFIS_L_OANS_RANGE) (L:A32NX_EFIS_L_ND_RANGE) 0 == if{  1 (>L:A32NX_EFIS_L_ND_RANGE) } }
A380X_EFIS_L_Mode_Select_LS#0 (>L:A32NX_EFIS_L_ND_MODE) 4 (>L:A32NX_EFIS_L_OANS_RANGE) (L:A32NX_EFIS_L_ND_RANGE) 0 == if{ 1 (>L:A32NX_EFIS_L_ND_RANGE) }
A380X_EFIS_L_Mode_Select_NAV#(L:A32NX_EFIS_L_ND_MODE) 3 == 1 6 (L:A32NX_EFIS_L_ND_RANGE) rng and if{  (L:A32NX_EFIS_L_ND_RANGE) ++ (>L:A32NX_EFIS_L_ND_RANGE) } 2 (>L:A32NX_EFIS_L_ND_MODE)
A380X_EFIS_L_Mode_Select_PLAN#(L:A32NX_EFIS_L_ND_RANGE) ++ 7 min (>L:A32NX_EFIS_L_ND_RANGE) 4 (>L:A32NX_EFIS_L_ND_MODE)
A380X_EFIS_L_Mode_Select_VOR#1 (>L:A32NX_EFIS_L_ND_MODE) 4 (>L:A32NX_EFIS_L_OANS_RANGE) (L:A32NX_EFIS_L_ND_RANGE) 0 == if{ 1 (>L:A32NX_EFIS_L_ND_RANGE) }
A380X_EFIS_L_NDB_Button_Press#0 3 (L:A380X_EFIS_L_ACTIVE_FILTER) 3 == ? (>L:A380X_EFIS_L_ACTIVE_FILTER)
A380X_EFIS_L_Range_Select_Knob_Dec#(L:A32NX_EFIS_L_ND_MODE) 0 == (L:A32NX_EFIS_L_ND_MODE) 1 == or (L:A32NX_EFIS_L_OANS_RANGE) 4 != and if{ 4 (>L:A32NX_EFIS_L_OANS_RANGE) } (L:A32NX_EFIS_L_ND_RANGE) 0 == (L:A32NX_EFIS_L_OANS_RANGE) 0 > and if{ (L:A32NX_EFIS_L_OANS_RANGE) -- (>L:A32NX_EFIS_L_OANS_RANGE) } (L:A32NX_EFIS_L_ND_RANGE) 0 > if{ (L:A32NX_EFIS_L_ND_RANGE) -- (>L:A32NX_EFIS_L_ND_RANGE) } (L:A32NX_EFIS_L_ND_RANGE) 0 > (L:A32NX_EFIS_L_OANS_RANGE) 4 != and if{ 4 (>L:A32NX_EFIS_L_OANS_RANGE) } (L:A32NX_EFIS_L_ND_MODE) 0 == (L:A32NX_EFIS_L_ND_MODE) 1 == or  (L:A32NX_EFIS_L_ND_RANGE) 0 == and if{ 1 (> L:A32NX_EFIS_L_ND_RANGE) }
A380X_EFIS_L_Range_Select_Knob_Inc#(L:A32NX_EFIS_L_ND_MODE) 0 == (L:A32NX_EFIS_L_ND_MODE) 1 == or (L:A32NX_EFIS_L_OANS_RANGE) 4 != and if{ 4 (>L:A32NX_EFIS_L_OANS_RANGE) } (L:A32NX_EFIS_L_ND_RANGE) 7 < (L:A32NX_EFIS_L_OANS_RANGE) 4 == and if{ (L:A32NX_EFIS_L_ND_RANGE) ++ (>L:A32NX_EFIS_L_ND_RANGE) } (L:A32NX_EFIS_L_OANS_RANGE) 4 < (L:A32NX_EFIS_L_ND_RANGE) 0 == and if{ (L:A32NX_EFIS_L_OANS_RANGE) ++ (>L:A32NX_EFIS_L_OANS_RANGE) } (L:A32NX_EFIS_L_ND_RANGE) 0 > (L:A32NX_EFIS_L_OANS_RANGE) 4 != and if{ 4 (>L:A32NX_EFIS_L_OANS_RANGE) } (L:A32NX_EFIS_L_ND_MODE) 0 == (L:A32NX_EFIS_L_ND_MODE) 1 == or  (L:A32NX_EFIS_L_ND_RANGE) 0 == and if{ 1 (> L:A32NX_EFIS_L_ND_RANGE) }
A380X_EFIS_L_TAXI_Button_Press#(L:A32NX_ELEC_DC_ESS_BUS_IS_POWERED, Bool) if{ } 
A380X_EFIS_L_TERR_Button_Press#0 2 (L:A380X_EFIS_L_ACTIVE_OVERLAY) 2 == ? (>L:A380X_EFIS_L_ACTIVE_OVERLAY)
A380X_EFIS_L_TRAF_Button_Press#(L:A380X_EFIS_L_TRAF_BUTTON_IS_ON,Bool) ! (L:A380X_EFIS_L_TRAF_BUTTON_IS_ON,Bool)
A380X_EFIS_L_VOR1_Button_Press#0 2 (L:A32NX_EFIS_L_NAVAID_1_MODE) 2 == ? (>L:A32NX_EFIS_L_NAVAID_1_MODE)
A380X_EFIS_L_VOR2_Button_Press#0 2 (L:A32NX_EFIS_L_NAVAID_2_MODE) 2 == ? (>L:A32NX_EFIS_L_NAVAID_2_MODE)
A380X_EFIS_L_VORD_Button_Press#0 2 (L:A380X_EFIS_L_ACTIVE_FILTER) 2 == ? (>L:A380X_EFIS_L_ACTIVE_FILTER)
A380X_EFIS_L_VV_Button_Press#(L:A380X_EFIS_L_VV_BUTTON_IS_ON,Bool) ! (L:A380X_EFIS_L_VV_BUTTON_IS_ON,Bool)
A380X_EFIS_L_WPT_Button_Press#0 1 (L:A380X_EFIS_L_ACTIVE_FILTER) 1 == ? (>L:A380X_EFIS_L_ACTIVE_FILTER)
A380X_EFIS_L_WX_Button_Press#0 1 (L:A380X_EFIS_L_ACTIVE_OVERLAY) 1 == ? (>L:A380X_EFIS_L_ACTIVE_OVERLAY)
A380X_EFIS_R_ARPT_Button_Press#(L:A380X_EFIS_R_ARPT_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_R_ARPT_BUTTON_IS_ON,Bool)
A380X_EFIS_R_CSTR_Button_Press#(L:A380X_EFIS_R_CSTR_BUTTON_IS_ON,Bool) ! (>L:A380X_EFIS_R_CSTR_BUTTON_IS_ON,Bool)
A380X_EFIS_R_Mode_Select_ARC#(L:A32NX_EFIS_R_ND_RANGE) -- 1 max (>L:A32NX_EFIS_R_ND_RANGE) 3 (>L:A32NX_EFIS_R_ND_MODE)
A380X_EFIS_R_Mode_Select_LS#0 (>L:A32NX_EFIS_L_ND_MODE) 4 (>L:A32NX_EFIS_L_OANS_RANGE) (L:A32NX_EFIS_L_ND_RANGE) 0 == if{ 1 (>L:A32NX_EFIS_L_ND_RANGE) }
A380X_EFIS_R_Mode_Select_NAV#(L:A32NX_EFIS_R_ND_MODE) 3 == 1 6 (L:A32NX_EFIS_R_ND_RANGE) rng and if{  (L:A32NX_EFIS_R_ND_RANGE) ++ (>L:A32NX_EFIS_R_ND_RANGE) } 2 (>L:A32NX_EFIS_R_ND_MODE)
A380X_EFIS_R_Mode_Select_PLAN#(L:A32NX_EFIS_R_ND_RANGE) ++ 7 min (>L:A32NX_EFIS_R_ND_RANGE) 4 (>L:A32NX_EFIS_R_ND_MODE)
A380X_EFIS_R_Mode_Select_VOR#1 (>L:A32NX_EFIS_R_ND_MODE) 4 (>L:A32NX_EFIS_R_OANS_RANGE) (L:A32NX_EFIS_R_ND_RANGE) 0 == if{ 1 (>L:A32NX_EFIS_R_ND_RANGE) }
A380X_EFIS_R_NDB_Button_Press#0 3 (L:A380X_EFIS_R_ACTIVE_FILTER) 3 == ? (>L:A380X_EFIS_R_ACTIVE_FILTER)
A380X_EFIS_R_TERR_Button_Press#0 2 (L:A380X_EFIS_R_ACTIVE_OVERLAY) 2 == ? (>L:A380X_EFIS_R_ACTIVE_OVERLAY)
A380X_EFIS_R_TRAF_Button_Press#(L:A380X_EFIS_R_TRAF_BUTTON_IS_ON,Bool) ! (L:A380X_EFIS_R_TRAF_BUTTON_IS_ON,Bool)
A380X_EFIS_R_VOR1_Button_Press#0 2 (L:A32NX_EFIS_R_NAVAID_1_MODE) 2 == ? (>L:A32NX_EFIS_R_NAVAID_1_MODE)
A380X_EFIS_R_VOR2_Button_Press#0 2 (L:A32NX_EFIS_R_NAVAID_2_MODE) 2 == ? (>L:A32NX_EFIS_R_NAVAID_2_MODE)
A380X_EFIS_R_VORD_Button_Press#0 2 (L:A380X_EFIS_R_ACTIVE_FILTER) 2 == ? (>L:A380X_EFIS_R_ACTIVE_FILTER)
A380X_EFIS_R_WPT_Button_Press#0 1 (L:A380X_EFIS_R_ACTIVE_FILTER) 1 == ? (>L:A380X_EFIS_R_ACTIVE_FILTER)
A380X_EFIS_R_WX_Button_Press#0 1 (L:A380X_EFIS_R_ACTIVE_OVERLAY) 1 == ? (>L:A380X_EFIS_R_ACTIVE_OVERLAY)
//Fly By Wire/A380X/Electrical
A380_OVHD_ELEC_Battery_1_Button_Toggle#(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO)
A380_OVHD_ELEC_Battery_2_Button_Toggle#(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO)
A380_OVHD_ELEC_Battery_APU_Button_Toggle#(L:A32NX_OVHD_ELEC_BAT_APU_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_APU_PB_IS_AUTO) 
A380_OVHD_ELEC_Battery_ESS_Button_Toggle#(L:A32NX_OVHD_ELEC_BAT_ESS_PB_IS_AUTO) ! (>L:A32NX_OVHD_ELEC_BAT_ESS_PB_IS_AUTO)
A380X_OH_ELEC_BUS_TIE_AUTO_Press#(L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO,Bool) ! (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO)
A380X_OH_ELEC_EXT_1_Toggle#(L:A32NX_EXT_PWR_AVAIL:1,Bool) if{ (L:A32NX_OVHD_ELEC_EXT_PWR_1_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_ELEC_EXT_PWR_1_PB_IS_ON, Bool) }
A380X_OH_ELEC_EXT_2_Toggle#(L:A32NX_EXT_PWR_AVAIL:2,Bool) if{ (L:A32NX_OVHD_ELEC_EXT_PWR_2_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_ELEC_EXT_PWR_2_PB_IS_ON, Bool) }
A380X_OH_ELEC_EXT_3_Toggle#(L:A32NX_EXT_PWR_AVAIL:3,Bool) if{ (L:A32NX_OVHD_ELEC_EXT_PWR_3_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_ELEC_EXT_PWR_3_PB_IS_ON, Bool) }
A380X_OH_ELEC_EXT_4Toggle#(L:A32NX_EXT_PWR_AVAIL:4,Bool) if{ (L:A32NX_OVHD_ELEC_EXT_PWR_4_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_ELEC_EXT_PWR_4_PB_IS_ON, Bool) }
A380X_OVHD_ELEC_BUS_TIE_Button_Toggle#(L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO,Bool) ! (>L:A32NX_OVHD_ELEC_BUS_TIE_PB_IS_AUTO,Bool)
A380X_OVHD_ELEC_Battery_APU_Button_Auto#1 (>L:A32NX_OVHD_ELEC_BAT_APU_PB_IS_AUTO) 
A380X_OVHD_ELEC_Battery_APU_Button_Off#0 (>L:A32NX_OVHD_ELEC_BAT_APU_PB_IS_AUTO) 
A380X_OVHD_ELEC_Battery_ESS_Button_Auto#1 (>L:A32NX_OVHD_ELEC_BAT_ESS_PB_IS_AUTO) 
A380X_OVHD_ELEC_Battery_ESS_Button_Off#0 (>L:A32NX_OVHD_ELEC_BAT_ESS_PB_IS_AUTO) 
//Fly By Wire/A380X/Engine
A380X_ENG1_MASTER_SWITCH_OFF#1 (>K:FUELSYSTEM_VALVE_CLOSE) (A:GENERAL ENG STARTER:1,Bool) if{ (>K:TOGGLE_STARTER1) }
A380X_ENG1_MASTER_SWITCH_ON#1 (>K:FUELSYSTEM_VALVE_OPEN) (A:GENERAL ENG STARTER:1,Bool) ! if{ (>K:TOGGLE_STARTER1) }
A380X_ENG1_2_MASTER_SWITCH_ON#1 (>K:FUELSYSTEM_VALVE_OPEN) 2 (>K:FUELSYSTEM_VALVE_OPEN)
A380X_ENG1_2_MASTER_SWITCH_OFF#1 (>K:FUELSYSTEM_VALVE_CLOSE) 2 (>K:FUELSYSTEM_VALVE_CLOSE)
A380X_ENG2_MASTER_SWITCH_OFF#2 (>K:FUELSYSTEM_VALVE_CLOSE) (A:GENERAL ENG STARTER:2,Bool) if{ (>K:TOGGLE_STARTER2) }
A380X_ENG2_MASTER_SWITCH_ON#2 (>K:FUELSYSTEM_VALVE_OPEN) (A:GENERAL ENG STARTER:2,Bool) ! if{ (>K:TOGGLE_STARTER2) }
A380X_ENG3_MASTER_SWITCH_OFF#3 (>K:FUELSYSTEM_VALVE_CLOSE) (A:GENERAL ENG STARTER:3,Bool) if{ (>K:TOGGLE_STARTER3) }
A380X_ENG3_MASTER_SWITCH_ON#3 (>K:FUELSYSTEM_VALVE_OPEN) (A:GENERAL ENG STARTER:3,Bool) ! if{ (>K:TOGGLE_STARTER3) }
A380X_ENG3_4_MASTER_SWITCH_OFF#3 (>K:FUELSYSTEM_VALVE_CLOSE) 4 (>K:FUELSYSTEM_VALVE_CLOSE)
A380X_ENG3_4_MASTER_SWITCH_ON#3 (>K:FUELSYSTEM_VALVE_OPEN) 4 (>K:FUELSYSTEM_VALVE_OPEN)
A380X_ENG4_MASTER_SWITCH_OFF#4 (>K:FUELSYSTEM_VALVE_CLOSE) (A:GENERAL ENG STARTER:4,Bool) if{ (>K:TOGGLE_STARTER4) }
A380X_ENG4_MASTER_SWITCH_ON#4 (>K:FUELSYSTEM_VALVE_OPEN) (A:GENERAL ENG STARTER:4,Bool) ! if{ (>K:TOGGLE_STARTER4) }
A380X_OVHD_ENG_MODE_SELECT_KNOB_CRANK#0 (>L:XMLVAR_ENG_MODE_SEL) 0 (>K:TURBINE_IGNITION_SWITCH_SET)
A380X_OVHD_ENG_MODE_SELECT_KNOB_IGN_START#2 (>L:XMLVAR_ENG_MODE_SEL) 2 (>K:TURBINE_IGNITION_SWITCH_SET)
A380X_OVHD_ENG_MODE_SELECT_KNOB_NORM#1 (>L:XMLVAR_ENG_MODE_SEL) 1 (>K:TURBINE_IGNITION_SWITCH_SET)
//Fly By Wire/A380X/Fire Protection
A380X_OVHD_FIRE_TEST_PB_PRESS#1 (>L:A32NX_OVHD_FIRE_TEST_PB_IS_PRESSED)
A380X_OVHD_FIRE_TEST_PB_RELEASE#0 (>L:A32NX_OVHD_FIRE_TEST_PB_IS_PRESSED)
//Fly By Wire/A380X/Fuel
FBW_A380X_Crossfeed_1_Press#46 (>K:FUELSYSTEM_VALVE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed)
FBW_A380X_Crossfeed_2_Press#47 (>K:FUELSYSTEM_VALVE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed)
FBW_A380X_Crossfeed_3_Press#48 (>K:FUELSYSTEM_VALVE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed)
FBW_A380X_Crossfeed_4_Press#49 (>K:FUELSYSTEM_VALVE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed)
FBW_A380X_Feed_TK_1_Main_Fuel_Pump_Press#2 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK1_MAIN_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK1_MAIN_Pressed)
FBW_A380X_Feed_TK_1_Stby_Fuel_Pump_Press#3 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK1_STBY_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK1_STBY_Pressed)
FBW_A380X_Feed_TK_2_Main_Fuel_Pump_Press#64 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK2_MAIN_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK2_MAIN_Pressed)
FBW_A380X_Feed_TK_2_Stby_Fuel_Pump_Press#65 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK2_STBY_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK2_STBY_Pressed)
FBW_A380X_Feed_TK_3_Main_Fuel_Pump_Press#66 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK3_MAIN_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK3_MAIN_Pressed)
FBW_A380X_Feed_TK_3_Stby_Fuel_Pump_Press#67 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK3_STBY_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK3_STBY_Pressed)
FBW_A380X_Feed_TK_4_Main_Fuel_Pump_Press#68 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK4_MAIN_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK4_MAIN_Pressed)
FBW_A380X_Feed_TK_4_Stby_Fuel_Pump_Press#69 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK4_STBY_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_FEEDTK4_STBY_Pressed)
FBW_A380X_Inr_Tk_Xfr_Press#(L:A380X_OVHD_FUEL_INRTK_XFR_PB_IS_AUTO, Bool) ! (>L:A380X_OVHD_FUEL_INRTK_XFR_PB_IS_AUTO, Bool)
FBW_A380X_L_Inr_Tk_Aft_Fuel_Pump_Press#74 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LINRTK_AFT_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LINRTK_AFT_Pressed)
FBW_A380X_L_Inr_Tk_Fwd_Fuel_Pump_Press#73 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LINRTK_FWD_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LINRTK_FWD_Pressed)
FBW_A380X_L_Mid_Tk_Aft_Fuel_Pump_Press#72 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LMIDTK_AFT_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LMIDTK_AFT_Pressed)
FBW_A380X_L_Mid_Tk_Fwd_Fuel_Pump_Press#71 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LMIDTK_FWD_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LMIDTK_FWD_Pressed)
FBW_A380X_L_Outr_Tk_Pmp_Fuel_Pump_Press#70 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LOUTRTK_PMP_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_LOUTRTK_PMP_Pressed)
FBW_A380X_Mid_Tk_Xfr_Press#(L:A380X_OVHD_FUEL_MIDTK_XFR_PB_IS_AUTO, Bool) ! (>L:A380X_OVHD_FUEL_MIDTK_XFR_PB_IS_AUTO, Bool)
FBW_A380X_Outr_Tk_Xfr_Press#(L:A380X_OVHD_FUEL_OUTRTK_XFR_PB_IS_AUTO, Bool) ! (>L:A380X_OVHD_FUEL_OUTRTK_XFR_PB_IS_AUTO, Bool)
FBW_A380X_R_Inr_Tk_Aft_Fuel_Pump_Press#79 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RINRTK_AFT_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RINRTK_AFT_Pressed)
FBW_A380X_R_Inr_Tk_Fwd_Fuel_Pump_Press#78 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RINRTK_FWD_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RINRTK_FWD_Pressed)
FBW_A380X_R_Mid_Tk_Aft_Fuel_Pump_Press#77 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RMIDTK_AFT_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RMIDTK_AFT_Pressed)
FBW_A380X_R_Mid_Tk_Fwd_Fuel_Pump_Press#76 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RMIDTK_FWD_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_RMIDTK_FWD_Pressed)
FBW_A380X_R_Outr_Tk_Pmp_Fuel_Pump_Press#75 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_ROUTRTK_PMP_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_ROUTRTK_PMP_Pressed)
FBW_A380X_Trim_Tk_L__Fuel_Pump_Press#80 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_TRIMTKL__Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_TRIMTKL__Pressed)
FBW_A380X_Trim_Tk_R__Fuel_Pump_Press#81 1 (>K:2:ELECTRICAL_BUS_TO_CIRCUIT_CONNECTION_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_TRIMTKR__Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_TRIMTKR__Pressed)
FBW_A380X_Trim_Tk_Xfr_Press#(L:A380X_OVHD_FUEL_TRIMTK_XFR_PB_IS_AUTO, Bool) ! (>L:A380X_OVHD_FUEL_TRIMTK_XFR_PB_IS_AUTO, Bool)
//Fly By Wire/A380X/Lights
A380_OVHD_Ann_Lt_BRT#1 (>L:A32NX_OVHD_INTLT_ANN)
A380_OVHD_Ann_Lt_DIM#2 (>L:A32NX_OVHD_INTLT_ANN)
A380_OVHD_Ann_Lt_TEST#0 (>L:A32NX_OVHD_INTLT_ANN)
A380_OVHD_Landing_Lights_Off#0 s0 2 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_2)
A380_OVHD_Landing_Lights_On#1 s0 2 l0 (>K:2:LANDING_LIGHTS_SET) l0 (>L:LIGHTING_LANDING_2)
A380X_OVHD_Beacon_Lights_Off#0 s0 0 r (>K:2:BEACON_LIGHTS_SET) l0 (>L:LIGHTING_BEACON_0)
A380X_OVHD_Beacon_Lights_On#1 s0 0 r (>K:2:BEACON_LIGHTS_SET) l0 (>L:LIGHTING_BEACON_0)
A380X_OVHD_Emer_Exit_Lt_Arm#1 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
A380X_OVHD_Emer_Exit_Lt_Off#2 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
A380X_OVHD_Emer_Exit_Lt_On#0 (>L:XMLVAR_SWITCH_OVHD_INTLT_EMEREXIT_Position)
A380X_OVHD_Logo_Lights_Auto#1 (>L:LIGHTING_LOGO_0) 1 (>L:LOGO_0_Auto) 1 0 r (>K:2:LOGO_LIGHTS_SET)
A380X_OVHD_Logo_Lights_Off#2 (>L:LIGHTING_LOGO_0) 0 (>L:LOGO_0_Auto) 0 0 r (>K:2:LOGO_LIGHTS_SET)
A380X_OVHD_Logo_Lights_On#0 (>L:LIGHTING_LOGO_0) 0 (>L:LOGO_0_Auto) 1 0 r (>K:2:LOGO_LIGHTS_SET)
A380X_OVHD_Nav_Lights_Off#0 (>L:LIGHTING_NAV_0) 0 0 (>K:2:NAV_LIGHTS_SET) 0 0 (>K:2:LOGO_LIGHTS_SET)
A380X_OVHD_Nav_Lights_On#1 (>L:LIGHTING_NAV_0) 0 1 (>K:2:NAV_LIGHTS_SET) 0 1 (>K:2:LOGO_LIGHTS_SET)
A380X_OVHD_Nose_Lights_Off#2 (>L:LIGHTING_LANDING_1) 1 0 (>K:2:LANDING_LIGHTS_SET) 1 0 (>K:2:TAXI_LIGHTS_SET) 
A380X_OVHD_Nose_Lights_TO#0 (>L:LIGHTING_LANDING_1) 1 1 (>K:2:LANDING_LIGHTS_SET) 1 1 (>K:2:TAXI_LIGHTS_SET) 
A380X_OVHD_Nose_Lights_Taxi#1 (>L:LIGHTING_LANDING_1) 1 0 (>K:2:LANDING_LIGHTS_SET) 1 1 (>K:2:TAXI_LIGHTS_SET) 
A380X_OVHD_Rwy_Turn_Off___Camera_Lights_Off#0 (>L:LIGHTING_TAXI_2) 2 0 (>K:2:TAXI_LIGHTS_SET) 3 0 (>K:2:TAXI_LIGHTS_SET)
A380X_OVHD_Rwy_Turn_Off___Camera_Lights_On#1 (>L:LIGHTING_TAXI_2) 2 1 (>K:2:TAXI_LIGHTS_SET) 3 1 (>K:2:TAXI_LIGHTS_SET)
A380X_OVHD_Strobe_Lights_Auto#1 (>L:LIGHTING_STROBE_0) 1 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)
A380X_OVHD_Strobe_Lights_Off#2 (>L:LIGHTING_STROBE_0) 0 (>L:STROBE_0_Auto) 0 0 r (>K:2:STROBES_SET)
A380X_OVHD_Strobe_Lights_On#0 (>L:LIGHTING_STROBE_0) 0 (>L:STROBE_0_Auto) 1 0 r (>K:2:STROBES_SET)
A380X_OVHD_Wing_Lights_Off#0 s0 0 l0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0)
A380X_OVHD_Wing_Lights_On#1 s0 0 l0 (>K:2:WING_LIGHTS_SET) l0 (>L:LIGHTING_WING_0)
//Fly By Wire/A380X/MCDU
A380X_KCCU_L_Key_0#(>H:A32NX_KCCU_L_0)
A380X_KCCU_L_Key_1#(>H:A32NX_KCCU_L_1)
A380X_KCCU_L_Key_2#(>H:A32NX_KCCU_L_2)
A380X_KCCU_L_Key_3#(>H:A32NX_KCCU_L_3)
A380X_KCCU_L_Key_4#(>H:A32NX_KCCU_L_4)
A380X_KCCU_L_Key_5#(>H:A32NX_KCCU_L_5)
A380X_KCCU_L_Key_6#(>H:A32NX_KCCU_L_6)
A380X_KCCU_L_Key_7#(>H:A32NX_KCCU_L_7)
A380X_KCCU_L_Key_8#(>H:A32NX_KCCU_L_8)
A380X_KCCU_L_Key_9#(>H:A32NX_KCCU_L_9)
A380X_KCCU_L_Key_A#(>H:A32NX_KCCU_L_A)
A380X_KCCU_L_Key_ATCCOM#(>H:A32NX_KCCU_L_ATCCOM)
A380X_KCCU_L_Key_B#(>H:A32NX_KCCU_L_B)
A380X_KCCU_L_Key_BACKSPACE#(>H:A32NX_KCCU_L_BACKSPACE)
A380X_KCCU_L_Key_C#(>H:A32NX_KCCU_L_C)
A380X_KCCU_L_Key_CLRINFO#(>H:A32NX_KCCU_L_CLRINFO)
A380X_KCCU_L_Key_D#(>H:A32NX_KCCU_L_D)
A380X_KCCU_L_Key_DEST#(>H:A32NX_KCCU_L_DEST)
A380X_KCCU_L_Key_DIR#(>H:A32NX_KCCU_L_DIR)
A380X_KCCU_L_Key_DOT#(>H:A32NX_KCCU_L_DOT)
A380X_KCCU_L_Key_DOWN#(>H:A32NX_KCCU_L_DOWN)
A380X_KCCU_L_Key_E#(>H:A32NX_KCCU_L_E)
A380X_KCCU_L_Key_ENT#(>H:A32NX_KCCU_L_ENT)
A380X_KCCU_L_Key_ESC#(>H:A32NX_KCCU_L_ESC)
A380X_KCCU_L_Key_ESC2#(>H:A32NX_KCCU_L_ESC2)
A380X_KCCU_L_Key_F#(>H:A32NX_KCCU_L_F)
A380X_KCCU_L_Key_FORWARD#(>H:A32NX_KCCU_L_FORWARD)
A380X_KCCU_L_Key_FPLN#(>H:A32NX_KCCU_L_FPLN)
A380X_KCCU_L_Key_G#(>H:A32NX_KCCU_L_G)
A380X_KCCU_L_Key_H#(>H:A32NX_KCCU_L_H)
A380X_KCCU_L_Key_I#(>H:A32NX_KCCU_L_I)
A380X_KCCU_L_Key_INIT#(>H:A32NX_KCCU_L_INIT)
A380X_KCCU_L_Key_J#(>H:A32NX_KCCU_L_J)
A380X_KCCU_L_Key_KBD#(>H:A32NX_KCCU_L_KBD)
A380X_KCCU_L_Key_L#(>H:A32NX_KCCU_L_L)
A380X_KCCU_L_Key_LEFT#(>H:A32NX_KCCU_L_LEFT)
A380X_KCCU_L_Key_M#(>H:A32NX_KCCU_L_M)
A380X_KCCU_L_Key_MAILBOX#(>H:A32NX_KCCU_L_MAILBOX)
A380X_KCCU_L_Key_N#(>H:A32NX_KCCU_L_N)
A380X_KCCU_L_Key_NAVAID#(>H:A32NX_KCCU_L_NAVAID)
A380X_KCCU_L_Key_ND#(>H:A32NX_KCCU_L_ND)
A380X_KCCU_L_Key_O#(>H:A32NX_KCCU_L_O)
A380X_KCCU_L_Key_P#(>H:A32NX_KCCU_L_P)
A380X_KCCU_L_Key_PERF#(>H:A32NX_KCCU_L_PERF)
A380X_KCCU_L_Key_PLUSMINUS#(>H:A32NX_KCCU_L_PLUSMINUS)
A380X_KCCU_L_Key_Q#(>H:A32NX_KCCU_L_Q)
A380X_KCCU_L_Key_R#(>H:A32NX_KCCU_L_R)
A380X_KCCU_L_Key_REWIND#(>H:A32NX_KCCU_L_REWIND)
A380X_KCCU_L_Key_RIGHT#(>H:A32NX_KCCU_L_RIGHT)
A380X_KCCU_L_Key_S#(>H:A32NX_KCCU_L_S)
A380X_KCCU_L_Key_SECINDEX#(>H:A32NX_KCCU_L_SECINDEX)
A380X_KCCU_L_Key_SLASH#(>H:A32NX_KCCU_L_SLASH)
A380X_KCCU_L_Key_SP#(>H:A32NX_KCCU_L_SP)
A380X_KCCU_L_Key_SURV#(>H:A32NX_KCCU_L_SURV)
A380X_KCCU_L_Key_T#(>H:A32NX_KCCU_L_T)
A380X_KCCU_L_Key_U#(>H:A32NX_KCCU_L_U)
A380X_KCCU_L_Key_UP#(>H:A32NX_KCCU_L_UP)
A380X_KCCU_L_Key_V#(>H:A32NX_KCCU_L_V)
A380X_KCCU_L_Key_W#(>H:A32NX_KCCU_L_W)
A380X_KCCU_L_Key_X#(>H:A32NX_KCCU_L_X)
A380X_KCCU_L_Key_Y#(>H:A32NX_KCCU_L_Y)
A380X_KCCU_L_Key_Z#(>H:A32NX_KCCU_L_Z)
A380X_KCCU_R_Key_0#(>H:A32NX_KCCU_R_0)
A380X_KCCU_R_Key_1#(>H:A32NX_KCCU_R_1)
A380X_KCCU_R_Key_2#(>H:A32NX_KCCU_R_2)
A380X_KCCU_R_Key_3#(>H:A32NX_KCCU_R_3)
A380X_KCCU_R_Key_4#(>H:A32NX_KCCU_R_4)
A380X_KCCU_R_Key_5#(>H:A32NX_KCCU_R_5)
A380X_KCCU_R_Key_6#(>H:A32NX_KCCU_R_6)
A380X_KCCU_R_Key_7#(>H:A32NX_KCCU_R_7)
A380X_KCCU_R_Key_8#(>H:A32NX_KCCU_R_8)
A380X_KCCU_R_Key_9#(>H:A32NX_KCCU_R_9)
A380X_KCCU_R_Key_A#(>H:A32NX_KCCU_R_A)
A380X_KCCU_R_Key_ATCCOM#(>H:A32NX_KCCU_R_ATCCOM)
A380X_KCCU_R_Key_B#(>H:A32NX_KCCU_R_B)
A380X_KCCU_R_Key_BACKSPACE#(>H:A32NX_KCCU_R_BACKSPACE)
A380X_KCCU_R_Key_C#(>H:A32NX_KCCU_R_C)
A380X_KCCU_R_Key_CLRINFO#(>H:A32NX_KCCU_R_CLRINFO)
A380X_KCCU_R_Key_D#(>H:A32NX_KCCU_R_D)
A380X_KCCU_R_Key_DEST#(>H:A32NX_KCCU_R_DEST)
A380X_KCCU_R_Key_DIR#(>H:A32NX_KCCU_R_DIR)
A380X_KCCU_R_Key_DOT#(>H:A32NX_KCCU_R_DOT)
A380X_KCCU_R_Key_DOWN#(>H:A32NX_KCCU_R_DOWN)
A380X_KCCU_R_Key_E#(>H:A32NX_KCCU_R_E)
A380X_KCCU_R_Key_ENT#(>H:A32NX_KCCU_R_ENT)
A380X_KCCU_R_Key_ESC#(>H:A32NX_KCCU_R_ESC)
A380X_KCCU_R_Key_ESC2#(>H:A32NX_KCCU_R_ESC2)
A380X_KCCU_R_Key_F#(>H:A32NX_KCCU_R_F)
A380X_KCCU_R_Key_FORWARD#(>H:A32NX_KCCU_R_FORWARD)
A380X_KCCU_R_Key_FPLN#(>H:A32NX_KCCU_R_FPLN)
A380X_KCCU_R_Key_G#(>H:A32NX_KCCU_R_G)
A380X_KCCU_R_Key_H#(>H:A32NX_KCCU_R_H)
A380X_KCCU_R_Key_I#(>H:A32NX_KCCU_R_I)
A380X_KCCU_R_Key_INIT#(>H:A32NX_KCCU_R_INIT)
A380X_KCCU_R_Key_J#(>H:A32NX_KCCU_R_J)
A380X_KCCU_R_Key_KBD#(>H:A32NX_KCCU_R_KBD)
A380X_KCCU_R_Key_L#(>H:A32NX_KCCU_R_L)
A380X_KCCU_R_Key_LEFT#(>H:A32NX_KCCU_R_LEFT)
A380X_KCCU_R_Key_M#(>H:A32NX_KCCU_R_M)
A380X_KCCU_R_Key_MAILBOX#(>H:A32NX_KCCU_R_MAILBOX)
A380X_KCCU_R_Key_N#(>H:A32NX_KCCU_R_N)
A380X_KCCU_R_Key_NAVAID#(>H:A32NX_KCCU_R_NAVAID)
A380X_KCCU_R_Key_ND#(>H:A32NX_KCCU_R_ND)
A380X_KCCU_R_Key_O#(>H:A32NX_KCCU_R_O)
A380X_KCCU_R_Key_P#(>H:A32NX_KCCU_R_P)
A380X_KCCU_R_Key_PERF#(>H:A32NX_KCCU_R_PERF)
A380X_KCCU_R_Key_PLUSMINUS#(>H:A32NX_KCCU_R_PLUSMINUS)
A380X_KCCU_R_Key_Q#(>H:A32NX_KCCU_R_Q)
A380X_KCCU_R_Key_R#(>H:A32NX_KCCU_R_R)
A380X_KCCU_R_Key_REWIND#(>H:A32NX_KCCU_R_REWIND)
A380X_KCCU_R_Key_RIGHT#(>H:A32NX_KCCU_R_RIGHT)
A380X_KCCU_R_Key_S#(>H:A32NX_KCCU_R_S)
A380X_KCCU_R_Key_SECINDEX#(>H:A32NX_KCCU_R_SECINDEX)
A380X_KCCU_R_Key_SLASH#(>H:A32NX_KCCU_R_SLASH)
A380X_KCCU_R_Key_SP#(>H:A32NX_KCCU_R_SP)
A380X_KCCU_R_Key_SURV#(>H:A32NX_KCCU_R_SURV)
A380X_KCCU_R_Key_T#(>H:A32NX_KCCU_R_T)
A380X_KCCU_R_Key_U#(>H:A32NX_KCCU_R_U)
A380X_KCCU_R_Key_UP#(>H:A32NX_KCCU_R_UP)
A380X_KCCU_R_Key_V#(>H:A32NX_KCCU_R_V)
A380X_KCCU_R_Key_W#(>H:A32NX_KCCU_R_W)
A380X_KCCU_R_Key_X#(>H:A32NX_KCCU_R_X)
A380X_KCCU_R_Key_Y#(>H:A32NX_KCCU_R_Y)
A380X_KCCU_R_Key_Z#(>H:A32NX_KCCU_R_Z)
A380X_KCCU_L_Key_K#(>H:A32NX_KCCU_L_K)
A380X_KCCU_R_Key_K#(>H:A32NX_KCCU_R_K)
//Fly By Wire/A380X/Miscellaneous
A380X_EFIS_L_CHRONO_Button_Press#0 (>H:A32NX_EFIS_L_CHRONO_PUSHED)
//Fly By Wire/A380X/Radios
A380X_RMP1_ADK_1_Button_Press#(>H:RMP_1_ADK_1_PRESSED)
A380X_RMP1_ADK_2_Button_Press#(>H:RMP_1_ADK_2_PRESSED)
A380X_RMP1_ADK_3_Button_Press#(>H:RMP_1_ADK_3_PRESSED)
A380X_RMP1_BLANK_Button_Press#(>H:RMP_1_BLANK_PRESSED)
A380X_RMP1_BLANK2_Button_Press#(>H:RMP_1_BLANK2_PRESSED)
A380X_RMP1_CAB_CALL_Button_Press#(>H:RMP_1_CAB_CALL_PRESSED)
A380X_RMP1_CAB_VOL_Button_Press#(>H:RMP_1_CAB_VOL_PRESSED)
A380X_RMP1_CAB_VOL_Knob_Dec#(L:A380X_RMP_1_CAB_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_CAB_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_CAB_VOL)  l0 (>L:A380X_RMP_3_CAB_VOL) }
A380X_RMP1_CAB_VOL_Knob_Inc#(L:A380X_RMP_1_CAB_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_CAB_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_CAB_VOL)  l0 (>L:A380X_RMP_3_CAB_VOL) }
A380X_RMP1_DIGIT_0_Button_Press#(>H:RMP_1_DIGIT_0_PRESSED)
A380X_RMP1_DIGIT_1_Button_Press#(>H:RMP_1_DIGIT_1_PRESSED)
A380X_RMP1_DIGIT_2_Button_Press#(>H:RMP_1_DIGIT_2_PRESSED)
A380X_RMP1_DIGIT_3_Button_Press#(>H:RMP_1_DIGIT_3_PRESSED)
A380X_RMP1_DIGIT_4_Button_Press#(>H:RMP_1_DIGIT_4_PRESSED)
A380X_RMP1_DIGIT_5_Button_Press#(>H:RMP_1_DIGIT_5_PRESSED)
A380X_RMP1_DIGIT_6_Button_Press#(>H:RMP_1_DIGIT_6_PRESSED)
A380X_RMP1_DIGIT_7_Button_Press#(>H:RMP_1_DIGIT_7_PRESSED)
A380X_RMP1_DIGIT_8_Button_Press#(>H:RMP_1_DIGIT_8_PRESSED)
A380X_RMP1_DIGIT_9_Button_Press#(>H:RMP_1_DIGIT_9_PRESSED)
A380X_RMP1_DIGIT_CLR_Button_Press#(>H:RMP_1_DIGIT_CLR_PRESSED)
A380X_RMP1_DIGIT_DOT_Button_Press#(>H:RMP_1_DIGIT_DOT_PRESSED)
A380X_RMP1_DOWN_Button_Press#(>H:RMP_1_DOWN_PRESSED)
A380X_RMP1_DUMMY_VOL_Button_Press#(>H:RMP_1_DUMMY_VOL_PRESSED)
A380X_RMP1_DUMMY_VOL_Knob_Dec#(L:A380X_RMP_1_DUMMY_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_DUMMY_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_DUMMY_VOL)  l0 (>L:A380X_RMP_3_DUMMY_VOL) }
A380X_RMP1_DUMMY_VOL_Knob_Inc#(L:A380X_RMP_1_DUMMY_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_DUMMY_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_DUMMY_VOL)  l0 (>L:A380X_RMP_3_DUMMY_VOL) }
A380X_RMP1_DUMMY2_Button_Press#(>H:RMP_1_DUMMY2_PRESSED)
A380X_RMP1_HF_Button_Press#(>H:RMP_1_HF_PRESSED)
A380X_RMP1_HF_CALL_1_Button_Press#(>H:RMP_1_HF_CALL_1_PRESSED)
A380X_RMP1_HF_CALL_2_Button_Press#(>H:RMP_1_HF_CALL_2_PRESSED)
A380X_RMP1_HF_VOL_1_Button_Press#(>H:RMP_1_HF_VOL_1_PRESSED)
A380X_RMP1_HF_VOL_1_Knob_Dec#(L:A380X_RMP_1_HF_VOL_1) -- 100 min 0 max s0 (>L:A380X_RMP_1_HF_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_HF_VOL_1)  l0 (>L:A380X_RMP_3_HF_VOL_1) }
A380X_RMP1_HF_VOL_1_Knob_Inc#(L:A380X_RMP_1_HF_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_1_HF_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_HF_VOL_1)  l0 (>L:A380X_RMP_3_HF_VOL_1) }
A380X_RMP1_HF_VOL_2_Button_Press#(>H:RMP_1_HF_VOL_2_PRESSED)
A380X_RMP1_HF_VOL_2_Knob_Dec#(L:A380X_RMP_1_HF_VOL_2) -- 100 min 0 max s0 (>L:A380X_RMP_1_HF_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_HF_VOL_2)  l0 (>L:A380X_RMP_3_HF_VOL_2) }
A380X_RMP1_HF_VOL_2_Knob_Inc#(L:A380X_RMP_1_HF_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_1_HF_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_HF_VOL_2)  l0 (>L:A380X_RMP_3_HF_VOL_2) }
A380X_RMP1_INT_VOL_Button_Press#(>H:RMP_1_INT_VOL_PRESSED)
A380X_RMP1_INT_VOL_Knob_Dec#(L:A380X_RMP_1_INT_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_INT_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_INT_VOL)  l0 (>L:A380X_RMP_3_INT_VOL) }
A380X_RMP1_INT_VOL_Knob_Inc#(L:A380X_RMP_1_INT_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_INT_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_INT_VOL)  l0 (>L:A380X_RMP_3_INT_VOL) }
A380X_RMP1_LSK_1_Button_Press#(>H:RMP_1_LSK_1_PRESSED)
A380X_RMP1_LSK_2_Button_Press#(>H:RMP_1_LSK_2_PRESSED)
A380X_RMP1_LSK_3_Button_Press#(>H:RMP_1_LSK_3_PRESSED)
A380X_RMP1_MECH_CALL_Button_Press#(>H:RMP_1_MECH_CALL_PRESSED)
A380X_RMP1_MENU_Button_Press#(>H:RMP_1_MENU_PRESSED)
A380X_RMP1_MSG_CLR_Button_Press#(>H:RMP_1_MSG_CLR_PRESSED)
A380X_RMP1_NAV_Button_Press#(>H:RMP_1_NAV_PRESSED)
A380X_RMP1_NAV_SEL_Knob_ADF_1#0 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP1_NAV_SEL_Knob_ADF_2#1 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP1_NAV_SEL_Knob_LS#2 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP1_NAV_SEL_Knob_MKR#5 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP1_NAV_SEL_Knob_VOR_1#3 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP1_NAV_SEL_Knob_VOR_2#4 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP1_NAV_VOL_Button_Press#(>H:RMP_1_NAV_VOL_PRESSED)
A380X_RMP1_NAV_VOL_Knob_Dec#(L:A380X_RMP_1_NAV_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_NAV_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_VOL)  l0 (>L:A380X_RMP_3_NAV_VOL) }
A380X_RMP1_NAV_VOL_Knob_Inc#(L:A380X_RMP_1_NAV_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_NAV_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_VOL)  l0 (>L:A380X_RMP_3_NAV_VOL) }
A380X_RMP1_PA_CALL_Button_Press#(>H:RMP_1_PA_CALL_PRESSED)
A380X_RMP1_PA_VOL_Button_Press#(>H:RMP_1_PA_VOL_PRESSED)
A380X_RMP1_PA_VOL_Knob_Dec#(L:A380X_RMP_1_PA_VOL) -- 100 min 0 max s0 (>L:A380X_RMP_1_PA_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_PA_VOL)  l0 (>L:A380X_RMP_3_PA_VOL) }
A380X_RMP1_PA_VOL_Knob_Inc#(L:A380X_RMP_1_PA_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_1_PA_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_PA_VOL)  l0 (>L:A380X_RMP_3_PA_VOL) }
A380X_RMP1_RST_Button_Press#(>H:RMP_1_RST_PRESSED)
A380X_RMP1_SQWK_Button_Press#(>H:RMP_1_SQWK_PRESSED)
A380X_RMP1_STBY_RAD_NAV_Button_Press#(>H:RMP_1_STBY_RAD_NAV_PRESSED)
A380X_RMP1_TEL_Button_Press#(>H:RMP_1_TEL_PRESSED)
A380X_RMP1_TEL_CALL_1_Button_Press#(>H:RMP_1_TEL_CALL_1_PRESSED)
A380X_RMP1_TEL_CALL_2_Button_Press#(>H:RMP_1_TEL_CALL_2_PRESSED)
A380X_RMP1_TEL_VOL_1_Button_Press#(>H:RMP_1_TEL_VOL_1_PRESSED)
A380X_RMP1_TEL_VOL_1_Knob_Dec#(L:A380X_RMP_1_TEL_VOL_1) -- 100 min 0 max s0 (>L:A380X_RMP_1_TEL_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_TEL_VOL_1)  l0 (>L:A380X_RMP_3_TEL_VOL_1) }
A380X_RMP1_TEL_VOL_1_Knob_Inc#(L:A380X_RMP_1_TEL_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_1_TEL_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_TEL_VOL_1)  l0 (>L:A380X_RMP_3_TEL_VOL_1) }
A380X_RMP1_TEL_VOL_2_Button_Press#(>H:RMP_1_TEL_VOL_2_PRESSED)
A380X_RMP1_TEL_VOL_2_Knob_Dec#(L:A380X_RMP_1_TEL_VOL_2) -- 100 min 0 max s0 (>L:A380X_RMP_1_TEL_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_TEL_VOL_2)  l0 (>L:A380X_RMP_3_TEL_VOL_2) }
A380X_RMP1_TEL_VOL_2_Knob_Inc#(L:A380X_RMP_1_TEL_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_1_TEL_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_TEL_VOL_2)  l0 (>L:A380X_RMP_3_TEL_VOL_2) }
A380X_RMP1_UP_Button_Press#(>H:RMP_1_UP_PRESSED)
A380X_RMP1_VHF_Button_Press#(>H:RMP_1_VHF_PRESSED)
A380X_RMP1_VHF_CALL_1_Button_Press#(>H:RMP_1_VHF_CALL_1_PRESSED)
A380X_RMP1_VHF_CALL_2_Button_Press#(>H:RMP_1_VHF_CALL_2_PRESSED)
A380X_RMP1_VHF_CALL_3_Button_Press#(>H:RMP_1_VHF_CALL_3_PRESSED)
A380X_RMP1_VHF_VOL_1_Button_Press#(>H:RMP_1_VHF_VOL_1_PRESSED)
A380X_RMP1_VHF_VOL_1_Button_Toggle#(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_1) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_1) l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_1) } 
A380X_RMP1_VHF_VOL_1_Knob_Dec#(L:A380X_RMP_1_VHF_VOL_1) -- 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_1)  l0 (>L:A380X_RMP_3_VHF_VOL_1) }
A380X_RMP1_VHF_VOL_1_Knob_Inc#(L:A380X_RMP_1_VHF_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_1)  l0 (>L:A380X_RMP_3_VHF_VOL_1) }
A380X_RMP1_VHF_VOL_2_Button_Press#(>H:RMP_1_VHF_VOL_2_PRESSED)
A380X_RMP1_VHF_VOL_2_Button_Toggle#(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_2) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_2) l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_2) } 
A380X_RMP1_VHF_VOL_2_Knob_Dec#(L:A380X_RMP_1_VHF_VOL_2) -- 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_2)  l0 (>L:A380X_RMP_3_VHF_VOL_2) }
A380X_RMP1_VHF_VOL_2_Knob_Inc#(L:A380X_RMP_1_VHF_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_2)  l0 (>L:A380X_RMP_3_VHF_VOL_2) }
A380X_RMP1_VHF_VOL_3_Button_Press#(>H:RMP_1_VHF_VOL_3_PRESSED)
A380X_RMP1_VHF_VOL_3_Button_Toggle#(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_3) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_3) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_3) l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_3) } 
A380X_RMP1_VHF_VOL_3_Knob_Dec#(L:A380X_RMP_1_VHF_VOL_3) -- 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_3) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_3)  l0 (>L:A380X_RMP_3_VHF_VOL_3) }
A380X_RMP1_VHF_VOL_3_Knob_Inc#(L:A380X_RMP_1_VHF_VOL_3) ++ 100 min 0 max s0 (>L:A380X_RMP_1_VHF_VOL_3) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_3)  l0 (>L:A380X_RMP_3_VHF_VOL_3) }
A380X_RMP1_VOICE_Button_Press#(>H:RMP_1_VOICE_PRESSED)
A380X_RMP2_ADK_1_Button_Press#(>H:RMP_2_ADK_1_PRESSED)
A380X_RMP2_ADK_2_Button_Press#(>H:RMP_2_ADK_2_PRESSED)
A380X_RMP2_ADK_3_Button_Press#(>H:RMP_2_ADK_3_PRESSED)
A380X_RMP2_BLANK_Button_Press#(>H:RMP_2_BLANK_PRESSED)
A380X_RMP2_BLANK2_Button_Press#(>H:RMP_2_BLANK2_PRESSED)
A380X_RMP2_CAB_CALL_Button_Press#(>H:RMP_2_CAB_CALL_PRESSED)
A380X_RMP2_CAB_VOL_Button_Press#(>H:RMP_2_CAB_VOL_PRESSED)
A380X_RMP2_CAB_VOL_Knob_Dec##REF!
A380X_RMP2_CAB_VOL_Knob_Inc#(L:A380X_RMP_2_CAB_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_CAB_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_CAB_VOL)  l0 (>L:A380X_RMP_3_CAB_VOL) }
A380X_RMP2_DIGIT_0_Button_Press#(>H:RMP_2_DIGIT_0_PRESSED)
A380X_RMP2_DIGIT_1_Button_Press#(>H:RMP_2_DIGIT_1_PRESSED)
A380X_RMP2_DIGIT_2_Button_Press#(>H:RMP_2_DIGIT_2_PRESSED)
A380X_RMP2_DIGIT_3_Button_Press#(>H:RMP_2_DIGIT_3_PRESSED)
A380X_RMP2_DIGIT_4_Button_Press#(>H:RMP_2_DIGIT_4_PRESSED)
A380X_RMP2_DIGIT_5_Button_Press#(>H:RMP_2_DIGIT_5_PRESSED)
A380X_RMP2_DIGIT_6_Button_Press#(>H:RMP_2_DIGIT_6_PRESSED)
A380X_RMP2_DIGIT_7_Button_Press#(>H:RMP_2_DIGIT_7_PRESSED)
A380X_RMP2_DIGIT_8_Button_Press#(>H:RMP_2_DIGIT_8_PRESSED)
A380X_RMP2_DIGIT_9_Button_Press#(>H:RMP_2_DIGIT_9_PRESSED)
A380X_RMP2_DIGIT_CLR_Button_Press#(>H:RMP_2_DIGIT_CLR_PRESSED)
A380X_RMP2_DIGIT_DOT_Button_Press#(>H:RMP_2_DIGIT_DOT_PRESSED)
A380X_RMP2_DOWN_Button_Press#(>H:RMP_2_DOWN_PRESSED)
A380X_RMP2_DUMMY_VOL_Button_Press#(>H:RMP_2_DUMMY_VOL_PRESSED)
A380X_RMP2_DUMMY_VOL_Knob_Dec##REF!
A380X_RMP2_DUMMY_VOL_Knob_Inc#(L:A380X_RMP_2_DUMMY_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_DUMMY_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_DUMMY_VOL)  l0 (>L:A380X_RMP_3_DUMMY_VOL) }
A380X_RMP2_DUMMY2_Button_Press#(>H:RMP_2_DUMMY2_PRESSED)
A380X_RMP2_HF_Button_Press#(>H:RMP_2_HF_PRESSED)
A380X_RMP2_HF_CALL_1_Button_Press#(>H:RMP_2_HF_CALL_1_PRESSED)
A380X_RMP2_HF_CALL_2_Button_Press#(>H:RMP_2_HF_CALL_2_PRESSED)
A380X_RMP2_HF_VOL_1_Button_Press#(>H:RMP_2_HF_VOL_1_PRESSED)
A380X_RMP2_HF_VOL_1_Knob_Dec##REF!
A380X_RMP2_HF_VOL_1_Knob_Inc#(L:A380X_RMP_2_HF_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_2_HF_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_HF_VOL_1)  l0 (>L:A380X_RMP_3_HF_VOL_1) }
A380X_RMP2_HF_VOL_2_Button_Press#(>H:RMP_2_HF_VOL_2_PRESSED)
A380X_RMP2_HF_VOL_2_Knob_Dec##REF!
A380X_RMP2_HF_VOL_2_Knob_Inc#(L:A380X_RMP_2_HF_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_2_HF_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_HF_VOL_2)  l0 (>L:A380X_RMP_3_HF_VOL_2) }
A380X_RMP2_INT_VOL_Button_Press#(>H:RMP_2_INT_VOL_PRESSED)
A380X_RMP2_INT_VOL_Knob_Dec##REF!
A380X_RMP2_INT_VOL_Knob_Inc#(L:A380X_RMP_2_INT_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_INT_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_INT_VOL)  l0 (>L:A380X_RMP_3_INT_VOL) }
A380X_RMP2_LSK_1_Button_Press#(>H:RMP_2_LSK_1_PRESSED)
A380X_RMP2_LSK_2_Button_Press#(>H:RMP_2_LSK_2_PRESSED)
A380X_RMP2_LSK_3_Button_Press#(>H:RMP_2_LSK_3_PRESSED)
A380X_RMP2_MECH_CALL_Button_Press#(>H:RMP_2_MECH_CALL_PRESSED)
A380X_RMP2_MENU_Button_Press#(>H:RMP_2_MENU_PRESSED)
A380X_RMP2_MSG_CLR_Button_Press#(>H:RMP_2_MSG_CLR_PRESSED)
A380X_RMP2_NAV_Button_Press#(>H:RMP_2_NAV_PRESSED)
A380X_RMP2_NAV_SEL_Knob_ADF_1#0 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP2_NAV_SEL_Knob_ADF_2#1 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP2_NAV_SEL_Knob_LS#2 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP2_NAV_SEL_Knob_MKR#5 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP2_NAV_SEL_Knob_VOR_1#3 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP2_NAV_SEL_Knob_VOR_2#4 s0 (>L:A380X_RMP_1_NAV_SEL) (L:32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_SEL) l0 (>L:A380X_RMP_3_NAV_SEL) }
A380X_RMP2_NAV_VOL_Button_Press#(>H:RMP_2_NAV_VOL_PRESSED)
A380X_RMP2_NAV_VOL_Knob_Dec##REF!
A380X_RMP2_NAV_VOL_Knob_Inc#(L:A380X_RMP_2_NAV_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_NAV_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_NAV_VOL)  l0 (>L:A380X_RMP_3_NAV_VOL) }
A380X_RMP2_PA_CALL_Button_Press#(>H:RMP_2_PA_CALL_PRESSED)
A380X_RMP2_PA_VOL_Button_Press#(>H:RMP_2_PA_VOL_PRESSED)
A380X_RMP2_PA_VOL_Knob_Dec##REF!
A380X_RMP2_PA_VOL_Knob_Inc#(L:A380X_RMP_2_PA_VOL) ++ 100 min 0 max s0 (>L:A380X_RMP_2_PA_VOL) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_PA_VOL)  l0 (>L:A380X_RMP_3_PA_VOL) }
A380X_RMP2_RST_Button_Press#(>H:RMP_2_RST_PRESSED)
A380X_RMP2_SQWK_Button_Press#(>H:RMP_2_SQWK_PRESSED)
A380X_RMP2_STBY_RAD_NAV_Button_Press#(>H:RMP_2_STBY_RAD_NAV_PRESSED)
A380X_RMP2_TEL_Button_Press#(>H:RMP_2_TEL_PRESSED)
A380X_RMP2_TEL_CALL_1_Button_Press#(>H:RMP_2_TEL_CALL_1_PRESSED)
A380X_RMP2_TEL_CALL_2_Button_Press#(>H:RMP_2_TEL_CALL_2_PRESSED)
A380X_RMP2_TEL_VOL_1_Button_Press#(>H:RMP_2_TEL_VOL_1_PRESSED)
A380X_RMP2_TEL_VOL_1_Knob_Dec##REF!
A380X_RMP2_TEL_VOL_1_Knob_Inc#(L:A380X_RMP_2_TEL_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_2_TEL_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_TEL_VOL_1)  l0 (>L:A380X_RMP_3_TEL_VOL_1) }
A380X_RMP2_TEL_VOL_2_Button_Press#(>H:RMP_2_TEL_VOL_2_PRESSED)
A380X_RMP2_TEL_VOL_2_Knob_Dec##REF!
A380X_RMP2_TEL_VOL_2_Knob_Inc#(L:A380X_RMP_2_TEL_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_2_TEL_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_TEL_VOL_2)  l0 (>L:A380X_RMP_3_TEL_VOL_2) }
A380X_RMP2_UP_Button_Press#(>H:RMP_2_UP_PRESSED)
A380X_RMP2_VHF_Button_Press#(>H:RMP_2_VHF_PRESSED)
A380X_RMP2_VHF_CALL_1_Button_Press#(>H:RMP_2_VHF_CALL_1_PRESSED)
A380X_RMP2_VHF_CALL_2_Button_Press#(>H:RMP_2_VHF_CALL_2_PRESSED)
A380X_RMP2_VHF_CALL_3_Button_Press#(>H:RMP_2_VHF_CALL_3_PRESSED)
A380X_RMP2_VHF_VOL_1_Button_Press#(>H:RMP_2_VHF_VOL_1_PRESSED)
A380X_RMP2_VHF_VOL_1_Button_Toggle#(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_1) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_1) l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_1) } 
A380X_RMP2_VHF_VOL_1_Knob_Dec##REF!
A380X_RMP2_VHF_VOL_1_Knob_Inc#(L:A380X_RMP_2_VHF_VOL_1) ++ 100 min 0 max s0 (>L:A380X_RMP_2_VHF_VOL_1) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_1)  l0 (>L:A380X_RMP_3_VHF_VOL_1) }
A380X_RMP2_VHF_VOL_2_Button_Press#(>H:RMP_2_VHF_VOL_2_PRESSED)
A380X_RMP2_VHF_VOL_2_Button_Toggle#(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_2) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_2) l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_2) } 
A380X_RMP2_VHF_VOL_2_Knob_Dec##REF!
A380X_RMP2_VHF_VOL_2_Knob_Inc#(L:A380X_RMP_2_VHF_VOL_2) ++ 100 min 0 max s0 (>L:A380X_RMP_2_VHF_VOL_2) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_2)  l0 (>L:A380X_RMP_3_VHF_VOL_2) }
A380X_RMP2_VHF_VOL_3_Button_Press#(>H:RMP_2_VHF_VOL_3_PRESSED)
A380X_RMP2_VHF_VOL_3_Button_Toggle#(L:A380X_RMP_1_VHF_VOL_RX_SWITCH_3) ! s0 (>L:A380X_RMP_1_VHF_VOL_RX_SWITCH_3) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_RX_SWITCH_3) l0 (>L:A380X_RMP_3_VHF_VOL_RX_SWITCH_3) } 
A380X_RMP2_VHF_VOL_3_Knob_Dec##REF!
A380X_RMP2_VHF_VOL_3_Knob_Inc#(L:A380X_RMP_2_VHF_VOL_3) ++ 100 min 0 max s0 (>L:A380X_RMP_2_VHF_VOL_3) (L:A32NX_FO_SYNC_EFIS_ENABLED, Bool) if{ l0 (>L:A380X_RMP_2_VHF_VOL_3)  l0 (>L:A380X_RMP_3_VHF_VOL_3) }
A380X_RMP2_VOICE_Button_Press#(>H:RMP_2_VOICE_PRESSED)
//Fly By Wire/A380X/Warning
A380_MASTER_WARNING_L_Button_Press#1 (>L:PUSH_AUTOPILOT_MASTERWAN_L)
A380_MASTER_WARNING_L_Button_Release#0 (>L:PUSH_AUTOPILOT_MASTERWAN_L)
A380X_DCDU_ATC_MSG_ACK#1 (>L:A32NX_DCDU_ATC_MSG_ACK) (L:XMLVAR_Momentary_PUSH_GLARESHIELD_CS_ATCMSG_Pressed) ! (>L:XMLVAR_Momentary_PUSH_GLARESHIELD_CS_ATCMSG_Pressed)
A380X_MASTER_CAUTION_Button_Press#1 (>L:PUSH_AUTOPILOT_MASTERCAUT_L)
A380X_MASTER_CAUTION_Button_Release#0 (>L:PUSH_AUTOPILOT_MASTERCAUT_L)
//FlyInside/Bell 47 G/Electrical
ALTERNATOR_SWITCH_TOGGLE#(L:Aircraft.Engine.1.Alternator.Enabled) ! (>L:Aircraft.Engine.1.Alternator.Enabled)
BATTERY_SWITCH_TOGGLE#(L:Aircraft.Electric.Battery.On) ! (>L:Aircraft.Electric.Battery.On)
INSTRUMENTS_POWER_SWITCH_TOGGLE#(L:Aircraft.Systems.Instruments.Enabled) ! (>L:Aircraft.Systems.Instruments.Enabled)
IGNITION_KEY_SWITCH#(L:Aircraft.Engine.1.Input.MagnetosPosition, Number) 3 + 4 % (>L:Aircraft.Engine.1.Input.MagnetosPosition, Number)
STARTER_COLLECTIVE_SWITCH#(L:Aircraft.Systems.Starter.Switch) ! (>L:Aircraft.Systems.Starter.Switch)
//FlyInside/Bell 47 G/Engines
OIL_TRANS_TEMP_SWAP#1.0 (L:Aircraft.Gauges.DisplayOilTemp, number) - (>L:Aircraft.Gauges.DisplayOilTemp, number)
//FlyInside/Bell 47 G/Flight Instrumentation
BAROMETRIC_PRESSURE_ENCODER_DEC#(L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number) 0.01 - 30.8 min (>L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number)
BAROMETRIC_PRESSURE_ENCODER_INC#(L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number) 0.01 + 30.8 min (>L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number)
STD_PRESSURE_SW#29.92 (>L:Aircraft.Instruments.Altimeter.Kohlsman.HG, number)
//FlyInside/Bell 47 G/Fuel
FUEL_PRIMER_SWITCH_TOGGLE#(L:Aircraft.Systems.Fuel.Primer.Switch) ! (>L:Aircraft.Systems.Fuel.Primer.Switch)
//FlyInside/Bell 47 G/Interaction
CABIN_DOORS_TOGGLE#(L:Doors.Hidden) ! (>L:Doors.Hidden)
//FlyInside/Bell 47 G/Lights
CABIN_LIGHTS_ON_OFF#(>K:TOGGLE_CABIN_LIGHTS)
BEACON_LIGHT_SWITCH_TOGGLE#(>K:TOGGLE_BEACON_LIGHTS)
NAVIGATION_LIGHTS_SWITCH_TOGGLE#(>K:TOGGLE_NAV_LIGHTS)
STROBE_LIGHT_SWITCH_TOGGLE#(>K:STROBES_TOGGLE)
LANDING_LIGHT_SWITCH_TOGGLE#(K:LANDING_LIGHTS_TOGGLE) ! (>K:LANDING_LIGHTS_TOGGLE)
//FlyInside/Bell 47 G/Miscellaneous
OIL_TEMP_TRANS_SWITCH_TOGGLE#(L:Aircraft.Gauges.DisplayOilTemp) ! (>L:Aircraft.Gauges.DisplayOilTemp)
//FlyInside/Bell 47 G/Radio
COM_RADIO_KHZ_DEC_ENCODER#(>K:COM_RADIO_FRACT_DEC)
COM_RADIO_KHZ_INC_ENCODER#(>K:COM_RADIO_FRACT_INC)
COM_RADIO_MHZ_DEC_ENCODER#(>K:COM_RADIO_WHOLE_DEC)
COM_RADIO_MHZ_INC_ENCODER#(>K:COM_RADIO_WHOLE_INC)
COM_RADIO_STBY_ACTIVE_SWAP_SW#(>K:COM_STBY_RADIO_SWAP)
COM_RADIO_SWITCH_ON_OFF#(L:Aircraft.Radios.Com.1.On) ! (>L:Aircraft.Radios.Com.1.On)
TRANSPONDER_CODE_1000_INC#(>K:XPNDR_1000_INC)
TRANSPONDER_CODE_100_INC#(>K:XPNDR_100_INC)
TRANSPONDER_CODE_10_INC#(>K:XPNDR_10_INC)
TRANSPONDER_CODE_1_INC#(>K:XPNDR_1_INC)
TRANSPONDER_MODE_CHANGE_ENCODER#(L:Aircraft.Radios.Transponder.State, Number) 4 + 5 % (>L:Aircraft.Radios.Transponder.State, Number) }
//FlyingIron/BF 109G-6/Engine
PropGovernorSwitch_Toggle#(L:ENGINE_PropGovernorSwitch) ! (>L:ENGINE_PropGovernorSwitch)
//FlyingIron/BF 109G-6/Miscellaneous
Toggle_Canopy#1 (>K:TOGGLE_AIRCRAFT_EXIT_FAST)
//FlyingIron/P-38L Lightning/Engine Cooling
_Left_Engine_Oil_Cooler_doors_AUTO#0 (>L:ENGINE_OilCoolerLeft_Manual) 1 (>L:ENGINE_OilCoolerLeft_Auto)
_Right__Engine_Oil_Cooler_Doors_Auto_#0 (>L:ENGINE_OilCoolerRight_Manual) 1 (>L:ENGINE_OilCoolerRight_Auto)
_Right__Engine_Oil_Cooler_Doors_Closed#0 (>L:ENGINE_OilCoolerRight_Auto) -1 (>L:ENGINE_OilCoolerRight_Manual)
_Right__Engine_Oil_Cooler_Doors_Open#0 (>L:ENGINE_OilCoolerRight_Auto) 1 (>L:ENGINE_OilCoolerRight_Manual)
Left__Engine_Oil_cooler_doors_Open#0 (>L:ENGINE_OilCoolerLeft_Auto) 1 (>L:ENGINE_OilCoolerLeft_Manual) 
Left_Engine_Coolant_Flap_Open#2 (>L:ENGINE_Coolantflap_Left_Switch) 1 (>L:ENGINE_CoolantLeft_Flap_Mode)
Left_engine_Oil_Cooler_Doors_Closed#0 (>L:ENGINE_OilCoolerLeft_Auto) -1 (>L:ENGINE_OilCoolerLeft_Manual)
Left_engine_coolant_flap_closed#0 (>L:ENGINE_Coolantflap_Left_Switch) -1 (>L:ENGINE_CoolantLeft_Flap_Mode)
left_engine_coolant_flap_auto#1 (>L:ENGINE_Coolantflap_Left_Switch) 0 (>L:ENGINE_CoolantLeft_Flap_Mode)
left_engine_infercooler_flap_cloase#0 (>L:ENGINE_IntercoolerLeft_Switch) -1 (>L:ENGINE_IntercoolerLeft_Flap_Mode) 0 (>L:ENGINE_IntercoolerLeft_Flap_Position)
left_engine_intercooler_flap_AUTO#1 (>L:ENGINE_IntercoolerLeft_Switch) 1 (>L:ENGINE_IntercoolerLeft_Flap_Mode) 0 (>L:ENGINE_IntercoolerLeft_Flap_Position)
left_engine_intercooler_flap_Open#2 (>L:ENGINE_IntercoolerLeft_Switch) 1 (>L:ENGINE_IntercoolerLeft_Flap_Mode) 1 (>L:ENGINE_IntercoolerLeft_Flap_Position)
right_engine_coolant_flap_auto#1 (>L:ENGINE_Coolantflap_Right_Switch) 0 (>L:ENGINE_CoolantRight_Flap_Mode)
right_engine_coolant_flap_closed#0 (>L:ENGINE_Coolantflap_Right_Switch) -1 (>L:ENGINE_CoolantRight_Flap_Mode)
right_engine_coolant_flap_open#2 (>L:ENGINE_Coolantflap_Right_Switch) 1 (>L:ENGINE_CoolantRight_Flap_Mode)
right_engine_intercooler_flap_AUTO#1 (>L:ENGINE_IntercoolerRight_Switch) 1 (>L:ENGINE_IntercoolerRight_Flap_Mode) 0 (>L:ENGINE_IntercoolerRight_Flap_Position)
right_engine_intercooler_flap_Closed#0 (>L:ENGINE_IntercoolerRight_Switch) -1 (>L:ENGINE_IntercoolerRight_Flap_Mode) 0 (>L:ENGINE_IntercoolerRight_Flap_Position)
right_engine_intercooler_flap_open#2 (>L:ENGINE_IntercoolerRight_Switch) 1 (>L:ENGINE_IntercoolerRight_Flap_Mode) 1 (>L:ENGINE_IntercoolerRight_Flap_Position)
//FlyingIron/P-38L Lightning/Engines
Alternate_Air___Air_Filter_OFF#0 (L:ENGINE_AirFilter) ! (>L:ENGINE_AirFilter)
Alternate_Air___Air_Filter_ON#1 (L:ENGINE_AirFilter) ! (>L:ENGINE_AirFilter)
De-Feather_Right_Prop#0 (>K:TOGGLE_FEATHER_SWITCH_2) 0 (>L:PROP_FEATHER_SWITCH_RIGHT) 0 (>L:ENGINE_FeatherGuard_right)
De-feather_Left_Prop_#0 (>K:TOGGLE_FEATHER_SWITCH_1) 0 (>L:PROP_FEATHER_SWITCH_LEFT) 0 (>L:ENGINE_FeatherGuard_left)
Engage_Left_Inertial_starter_to_engine#0 (>L:ENGINE_Energizer) 1 (>L:FlywheelEngageLeft)
Engage_Right_Inertial_starter_to_engine#2 (>L:ENGINE_Energizer) 1 (>L:FlywheelEngageRight)
Feather_Right_Prop#1 (>K:TOGGLE_FEATHER_SWITCH_2) 1 (>L:PROP_FEATHER_SWITCH_RIGHT) 1 (>L:ENGINE_FeatherGuard_right)
Master_Mag_Switch#(L:ENGINE_Magneto_Master) ! (>L:ENGINE_Magneto_Master)
Prime_Left_Engine#2 (>L:FUEL_PrimerLeft) 1 (>L:EnginePrimingLeft)
Prime_Right_Engine#2 (>L:FUEL_PrimerRight) 1 (>L:EnginePrimingRight)
feather_left_Porp#1 (>K:TOGGLE_FEATHER_SWITCH_1) 1 (>L:PROP_FEATHER_SWITCH_LEFT) 1 (>L:ENGINE_FeatherGuard_left)
left_engine_Inertial_Starter_spin_up_switch_ON#1 (>L:FlywheelStartLeft) 0 (>L:ENGINE_Starter)
right_engine_Inertial_Starter_spin_up_switch_ON#1 (>L:FlywheelStartRight) 2 (>L:ENGINE_Starter)
//FlyingIron/P-38L Lightning/Fuel
Emergency_Fuel_Pump_right#(L:FUEL_PumpEmerg_1) ! (>L:FUEL_PumpEmerg_1)
Test_Low_Fuel_Light_#1 (>L:FUEL_LowlevelTest_IsDown)
emergency_fuel_pump_left#(L:FUEL_PumpEmerg_0) ! (>L:FUEL_PumpEmerg_0)
//FlyingIron/P-38L Lightning/Hydraulic
Aileron_Booster_valve_OFF#1 (L:HANDLING_AileronBooster) ! (>L:HANDLING_AileronBooster)
Aileron_Booster_valve_On#0 (L:HANDLING_AileronBooster) ! (>L:HANDLING_AileronBooster)
//FlyingIron/P-38L Lightning/Lights
Tail_Light_Off#1 (>L:LIGHTING_Position_Tail) 0 (>K:NAV_LIGHTS_SET) 0 (>K:LIGHT_POTENTIOMETER_6_SET)
Wing_Lights_Off#1 (>L:LIGHTING_Position_Wing) 0 (>K:WING_LIGHTS_SET) 0 (>K:LIGHT_POTENTIOMETER_5_SET)
tail_light_dim#2 (>L:LIGHTING_Position_Tail) 1 (>K:NAV_LIGHTS_SET) 25 (>K:LIGHT_POTENTIOMETER_6_SET)
tail_light_high#0 (>L:LIGHTING_Position_Tail) 1 (>K:NAV_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_6_SET)
wing_light_dim#2 (>L:LIGHTING_Position_Wing) 1 (>K:WING_LIGHTS_SET) 25 (>K:LIGHT_POTENTIOMETER_5_SET)
wing_light_high#0 (>L:LIGHTING_Position_Wing) 1 (>K:WING_LIGHTS_SET) 100 (>K:LIGHT_POTENTIOMETER_5_SET)
//FlyingIron/P-38L Lightning/Miscellaneous
Close_top_Canopy#0 (>L:CANOPY_OPEN_TOP) 0 (>L:AIRFRAME_Canopy_Top) 0 (>L:CANOPY_UNLOCKED) 0 (>L:CANOPY_UNLOCKED_LEFT) 0 (>L:CANOPY_UNLOCKED_RIGHT)
Open_Canopy_Top#1 (>L:CANOPY_OPEN_TOP) 1 (>L:AIRFRAME_Canopy_Top) 1 (>L:CANOPY_UNLOCKED) 1 (>L:CANOPY_UNLOCKED_LEFT) 1 (>L:CANOPY_UNLOCKED_RIGHT)
Side_Windows_Down_Open#0 (>L:AIRFRAME_Canopy_Left) 0 (>L:CANOPY_OPEN_LEFT) 0 (>L:AIRFRAME_Canopy_RIGHT) 0 (>L:CANOPY_OPEN_RIGHT)
Side_Windows_Up___Closed_#1 (>L:AIRFRAME_Canopy_Left) 1 (>L:CANOPY_OPEN_LEFT) 1 (>L:AIRFRAME_Canopy_RIGHT) 1 (>L:CANOPY_OPEN_RIGHT)
compass_power_off#0 (L:ELECTRICAL_CompassPowerSwitch) ! (>L:ELECTRICAL_CompassPowerSwitch)
compass_power_on#1 (L:ELECTRICAL_CompassPowerSwitch) ! (>L:ELECTRICAL_CompassPowerSwitch)
//FlyingIron/P-38L Lightning/O2 System
O2_On_100_#1 (>L:MISC_Oxygen)
O2_off#0 (>L:MISC_Oxygen)
//FlyingIron/P-38L Lightning/Weapons
Drop_tank_Release#1 (>0:_ButtonAnimVar) 1 (>K:FUEL_DUMP_TOGGLE)
left_drop_tank_arm_switch_ON#1 (L:WEAPONS_ArmingSwitchLeft) ! (>L:WEAPONS_ArmingSwitchLeft)
left_drop_tank_arm_switch_SAFE#0 (L:WEAPONS_ArmingSwitchLeft) ! (>L:WEAPONS_ArmingSwitchLeft)
master_ordinance_switch_OFF#0 (L:WEAPONS_MasterArm) ! (>L:WEAPONS_MasterArm)
master_ordnance_switch_ON#1 (L:WEAPONS_MasterArm) ! (>L:WEAPONS_MasterArm)
right_drop_tank_arm_switch_ON#1 (L:WEAPONS_ArmingSwitchRight) ! (>L:WEAPONS_ArmingSwitchRight)
right_drop_tank_arm_switch_SAFE#0 (L:WEAPONS_ArmingSwitchRight) ! (>L:WEAPONS_ArmingSwitchRight)
//Flysimware/Cessna 414A/Anti-Ice
ANTI-ICE_ELECT_HIGH__OFF_#(A:CIRCUIT SWITCH ON:69,Bool) 0 == if{ 69 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }  (A:CIRCUIT ON:69,Bool) 2 == (A:CIRCUIT ON:69,Bool) 2 == and (A:WINDSHIELD DEICE SWITCH, Bool) 1 == and if{ (>K:WINDSHIELD_DEICE_OFF) }  (A:CIRCUIT ON:69,Bool) 0 == (A:CIRCUIT ON:69,Bool) 2 == or (A:WINDSHIELD DEICE SWITCH, Bool) 0 == and if{ (>K:WINDSHIELD_DEICE_ON) } 2 (>L:GENERIC_Momentary_DEICE_ELECT)
ANTI-ICE_ELECT_HIGH__ON_#(A:CIRCUIT SWITCH ON:69,Bool) 0 == if{ 69 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }  (A:CIRCUIT ON:69,Bool) 2 == (A:CIRCUIT ON:69,Bool) 2 == and (A:WINDSHIELD DEICE SWITCH, Bool) 1 == and if{ (>K:WINDSHIELD_DEICE_OFF) }  (A:CIRCUIT ON:69,Bool) 0 == (A:CIRCUIT ON:69,Bool) 2 == or (A:WINDSHIELD DEICE SWITCH, Bool) 0 == and if{ (>K:WINDSHIELD_DEICE_ON) } 2 (>L:GENERIC_Momentary_DEICE_ELECT)
ANTI-ICE_ELECT_LOW__OFF_#(A:CIRCUIT SWITCH ON:69,Bool) 1 == if{ 69 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 1 (>L:GENERIC_Momentary_DEICE_ELECT)
ANTI-ICE_ELECT_LOW__ON_#(A:CIRCUIT SWITCH ON:69,Bool) 0 == if{ 69 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }   (A:CIRCUIT ON:69,Bool) 1 == (A:CIRCUIT ON:69,Bool) 0 == and (A:WINDSHIELD DEICE SWITCH, Bool) 0 == and if{ (>K:WINDSHIELD_DEICE_OFF) }  (A:CIRCUIT ON:69,Bool) 0 == (A:CIRCUIT ON:69,Bool) 0 == or (A:WINDSHIELD DEICE SWITCH, Bool) 0 == and if{ (>K:WINDSHIELD_DEICE_ON) } 0 (>L:GENERIC_Momentary_DEICE_ELECT)
CESSNA_414_PROP_ANTI-ICE_OFF#(L:DEICE_PROP) => Loads value 1 Load int constant 100 * (1., 100) 0 (>L:DEICE_PROP) (L:DEICE_PROP,bool) 100 * 0 (L:DEICE_PROP,bool) ! (>L:DEICE_PROP, bool) 1 (>L:DEICE_PROP,bool) 0 == (A:PROP DEICE SWITCH:1 Bool) 1 == (A:PROP DEICE SWITCH:2, Bool) 1 == and if{ (>K:TOGGLE_PROPELLER_DEICE) } 0 (>L:DEICE_PROP,bool) 0 == (A:PROP DEICE SWITCH:1 Bool) 0 == (A:PROP DEICE SWITCH:2, Bool) 0 == and if{ (>K:TOGGLE_PROPELLER_DEICE) } 
CESSNA_414_PROP_ANTI-ICE_ON#(L:DEICE_PROP) => Loads value 1 Load int constant 100 * (1., 100) 1 (>L:DEICE_PROP) (L:DEICE_PROP,bool) 100 * (L:DEICE_PROP,bool) ! (>L:DEICE_PROP, bool) (>L:DEICE_PROP,bool) 0 == (A:PROP DEICE SWITCH:1 Bool) 0 == (A:PROP DEICE SWITCH:2, Bool) 0 == and if{ (>K:TOGGLE_PROPELLER_DEICE) } (>L:DEICE_PROP,bool) 0 == (A:PROP DEICE SWITCH:1 Bool) 0 == (A:PROP DEICE SWITCH:2, Bool) 1 == and if{ (>K:TOGGLE_PROPELLER_DEICE) } 
//Flysimware/Cessna 414A/Autopilot
Garmin_605_AP_AP#(L:AP_MODE, Bool) ! (>L:AP_MODE)
Garmin_605_AP_APR#1 (>L:APR_BTN) (L:APR_MODE, bool) ! (>L:APR_MODE)
Garmin_605_AP_Alt#1 (>L:ALT_BTN) (L:ALT_MODE, bool) ! (>L:ALT_MODE)
Garmin_605_AP_BC#1 (>L:BC_BTN) (L:BC_MODE, bool) ! (>L:BC_MODE)
Garmin_605_AP_FD#1 (>L:FD_BTN) (L:FD_MODE, bool) ! (>L:FD_MODE)
Garmin_605_AP_HDG#1 (>L:HDG_BTN) (L:HDG_MODE, bool) ! (>L:HDG_MODE)
Garmin_605_AP_IAS#1 (>L:IAS_BTN) (L:IAS_MODE, bool) ! (>L:IAS_MODE)
Garmin_605_AP_NAV#1 (>L:NAV_BTN) (L:NAV_MODE, bool) ! (>L:NAV_MODE)
Garmin_605_AP_VS#1 (>L:VS_BTN) (L:VS_MODE, bool) ! (>L:VS_MODE)
Garmin_605_AP_WHL_DN#1 (>L:AP_WHEEL_DEC)
Garmin_605_AP_WHL_UP#1 (>L:AP_WHEEL_INC)
Garmin_605_AP_YD#(L:YD_MODE, bool) ! (>L:YD_MODE)
//Flysimware/Cessna 414A/Electrical
C414A_Alternator_Left_Toggle#(>K:TOGGLE_ALTERNATOR1)
C414A_Alternator_Right_Toggle#(>K:TOGGLE_ALTERNATOR2)
C414A_Electrical_Master_Bar_Down#0 s0 (>L:GENERIC_MASTER_BAR_1, Bool) l0 (>H:GENERIC_MASTER_BAR_1, Bool)
C414A_Electrical_Master_Bar_Up#1 s0 (>L:GENERIC_MASTER_BAR_1, Bool) l0 (>H:GENERIC_MASTER_BAR_1, Bool)
C414A_Master_Battery_Switch_Off#0 s0 (>L:GENERIC_ELECTRICAL_Switch_Battery_Master_1, Bool) l0 (>H:GENERIC_ELECTRICAL_Switch_Battery_Master_1)
C414A_Master_Battery_Switch_On#1 s0 (>L:GENERIC_ELECTRICAL_Switch_Battery_Master_1, Bool) l0 (>H:GENERIC_ELECTRICAL_Switch_Battery_Master_1)
C414A_Master_Battery_Toggle#(L:GENERIC_ELECTRICAL_Switch_Battery_Master_1, Bool) ! s0 (>L:GENERIC_ELECTRICAL_Switch_Battery_Master_1, Bool) l0 (>H:GENERIC_ELECTRICAL_Switch_Battery_Master_1)
C414A_Master_Electrical_Bar_Toggle_#(L:GENERIC_MASTER_BAR_1, Bool) ! s0 (>L:GENERIC_MASTER_BAR_1, Bool) l0 (>H:GENERIC_MASTER_BAR_1, Bool)
LEFT_ENGINE_LEFT_MAG_OFF#0 (>A:RECIP ENG LEFT MAGNETO:1, Bool) 
LEFT_ENGINE_LEFT_MAG_ON#1 (>A:RECIP ENG LEFT MAGNETO:1, Bool) 
LEFT_ENGINE_RIGHT_MAG_OFF#0 (>A:RECIP ENG RIGHT MAGNETO:1, Bool) 
LEFT_ENGINE_RIGHT_MAG_ON#1 (>A:RECIP ENG RIGHT MAGNETO:1, Bool) 
RIGHT_ENGINE_LEFT_MAG_OFF#0 (>A:RECIP ENG LEFT MAGNETO:2, Bool) 
RIGHT_ENGINE_LEFT_MAG_ON#1 (>A:RECIP ENG LEFT MAGNETO:2, Bool) 
RIGHT_ENGINE_RIGHT_MAG_OFF#0 (>A:RECIP ENG RIGHT MAGNETO:2, Bool) 
RIGHT_ENGINE_RIGHT_MAG_ON#1 (>A:RECIP ENG RIGHT MAGNETO:2, Bool) 
//Flysimware/Cessna 414A/Engines
C414A_Eng_Prime__Release#1 (>L:GENERIC_Momentary_PRIMER_SWITCH) (>H:GENERIC_Momentary_PRIMER_SWITCH) 
C414A_Eng1_Prime__Press# 0 (>L:GENERIC_Momentary_PRIMER_SWITCH) (>K:TOGGLE_PRIMER1) (>H:GENERIC_Momentary_PRIMER_SWITCH) 
C414A_Eng1_Starter_Press#1 (>L:TOGGLE_STARTER1, Bool) 1 (>L:STARTER1, Bool)
C414A_Eng1_Starter_Release#0 (>L:TOGGLE_STARTER1, Bool) 0 (>L:STARTER1, Bool)
C414A_Eng2_Prime__Press#2 (>L:GENERIC_Momentary_PRIMER_SWITCH) (>K:TOGGLE_PRIMER2) (>H:GENERIC_Momentary_PRIMER_SWITCH)
C414A_Eng2_Starter_Press#1 (>L:TOGGLE_STARTER2, Bool) 1 (>L:STARTER2, Bool)
C414A_Eng2_Starter_Release#0 (>L:TOGGLE_STARTER2, Bool) 0 (>L:STARTER2, Bool)
//Flysimware/Cessna 414A/Fuel
C414A_Aux_Fuel_Pump_1_High#2 (>L:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH) (A:GENERAL ENG FUEL PUMP SWITCH:1, Bool) 0 == if{ (>K:TOGGLE_ELECT_FUEL_PUMP1) } (>H:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH)
C414A_Aux_Fuel_Pump_1_Low#0 (>L:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH) (A:GENERAL ENG FUEL PUMP SWITCH:1, Bool) 0 == if{ (>K:TOGGLE_ELECT_FUEL_PUMP1) } (>H:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH) 
C414A_Aux_Fuel_Pump_1_Off#1 (>L:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH) (A:GENERAL ENG FUEL PUMP SWITCH:1, Bool) 1 == if{ (>K:TOGGLE_ELECT_FUEL_PUMP1) } (>H:GENERIC_Momentary_AUX_LEFT_PUMP_SWITCH)
C414A_Aux_Fuel_Pump_2_High#2 (>L:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH) (A:GENERAL ENG FUEL PUMP SWITCH:2, Bool) 0 == if{ (>K:TOGGLE_ELECT_FUEL_PUMP2) } (>H:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH)
C414A_Aux_Fuel_Pump_2_Low#0 (>L:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH) (A:GENERAL ENG FUEL PUMP SWITCH:2, Bool) 0 == if{ (>K:TOGGLE_ELECT_FUEL_PUMP2) } (>H:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH)
C414A_Aux_Fuel_Pump_2_Off#1 (>L:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH) (A:GENERAL ENG FUEL PUMP SWITCH:2, Bool) 1 == if{ (>K:TOGGLE_ELECT_FUEL_PUMP2) } (>H:GENERIC_Momentary_AUX_RIGHT_PUMP_SWITCH)
C414A_Fuel_Selector_Left_Left_Main#0 (>L:FUEL_Lever_Selector_2, Number) 0 (>K:FUEL_SELECTOR_2_LEFT)
C414A_Fuel_Selector_Left_Left_Main#1 (>L:FUEL_Lever_Selector_1, Number) 0 (>K:FUEL_SELECTOR_LEFT)
C414A_Fuel_Selector_Left_Off#0 (>L:FUEL_Lever_Selector_1, Number) 0 (>K:FUEL_SELECTOR_OFF)
C414A_Fuel_Selector_Left_Right_Main#2 (>L:FUEL_Lever_Selector_1, Number) 0 (>K:FUEL_SELECTOR_RIGHT)
C414A_Fuel_Selector_Right_-_Left_Main#0 (>L:FUEL_Lever_Selector_2, Number) 0 (>K:FUEL_SELECTOR_2_LEFT)
C414A_Fuel_Selector_Right_-_Off#0 (>L:FUEL_Lever_Selector_2, Number) 0 (>K:FUEL_SELECTOR_2_LEFT)
C414A_Fuel_Selector_Right_-_Right_Main#1 (>L:FUEL_Lever_Selector_2, Number) 0 (>K:FUEL_SELECTOR_2_RIGHT)
//Flysimware/Cessna 414A/Lights
C414A_LANDING_LIGHTS_EXTEND#0 (>K:LANDING_LIGHTS_SET) 1 (>L:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) 100 (>L:LANDING_LIGHT_MOTOR)
C414A_Lights_Strobe_Toggle#(>K:STROBES_TOGGLE)
C414A_LANDING_LIGHTS_OFF#1 (>L:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) 0 (>K:LANDING_LIGHTS_SET) (>H:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) 
C414A_LANDING_LIGHTS_ON#2 (>L:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) 1 (>K:LANDING_LIGHTS_SET) 100 (>L:LANDING_LIGHT_MOTOR,Number) (>H:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) 
C414A_LANDING_LIGHTS_RETRACT#0 (>K:LANDING_LIGHTS_SET) 0 (>L:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) 0 (>L:LANDING_LIGHT_MOTOR) (>H:GENERIC_Momentary_LIGHT_SWITCH_LANDING_1) 
C414A_TAXI_LIGHTS_OFF#0 (>K:TAXI_LIGHTS_SET) (A:GEAR HANDLE POSITION,Bool) (L:LIGHT_TAXI, bool) ! and if{ 1 } els{ 0 } (>L:LIGHT_TAXI)
C414A_TAXI_LIGHTS_ON#1 (>K:TAXI_LIGHTS_SET) (A:GEAR HANDLE POSITION,Bool) (L:LIGHT_TAXI, bool) ! and if{ 1 } els{ 0 } (>L:LIGHT_TAXI)
//Flysimware/Cessna 414A/Navigation
PMS_GTN750U1_Home_Short_Long_Press#(E:SIMULATION TIME,second) 1.00 + (>L:myTimer)
PMS_GTN750U1_Home_Short_Long_Rls#(E:SIMULATION TIME,second) (L:myTimer) < if{ (>H:GTN750_HomePush) } els{ (>H:GTN750_HomePushLong) }
PMS_GTN750U2_Home_Short_Long_Press#(E:SIMULATION TIME,second) 1.00 + (>L:myTimer)
PMS_GTN750U2_Home_Short_Long_Rls#(E:SIMULATION TIME,second) (L:myTimer) < if{ (>H:GTN750_2_HomePush) } els{ (>H:GTN750_2_HomePushLong) }
PMS_GTN750U1_CDI_Toggle#(>H:GTN750_CDI)
PMS_GTN750U1_Direct_to#(>H:GTN750_DirectToPush)
PMS_GTN750U1_FlightPlan#(>H:GTN750_GoToPage-HOME-PageFlighPlan)
PMS_GTN750U1_Knob_Push#(>H:GTN750_KnobPush)
PMS_GTN750U1_Large_Knob_Dec#(>H:GTN750_KnobLargeDec)
PMS_GTN750U1_Large_Knob_Inc#(>H:GTN750_KnobLargeInc)
PMS_GTN750U1_Menu#(>H:GTN750_GoToPage-HOME-MENU_HOME)
PMS_GTN750U1_Procedures#(>H:GTN750_GoToPage-HOME-PageProcs)
PMS_GTN750U1_Small_Knob_Dec#(>H:GTN750_KnobSmallDec)
PMS_GTN750U1_Small_Knob_Inc#(>H:GTN750_KnobSmallInc)
PMS_GTN750U1_Transfer_Com#(>H:GTN750_GTN_COM_Switch)
PMS_GTN750U1_Transfer_Nav#(>H:GTN750_GTN_NAV_Switch)
PMS_GTN750U2_CDI_Toggle#(>H:GTN750_2_CDI)
PMS_GTN750U2_Direct_to#(>H:GTN750_2_DirectToPush)
PMS_GTN750U2_FlightPlan#(>H:GTN750_2_GoToPage-HOME-PageFlighPlan)
PMS_GTN750U2_Knob_Push#(>H:GTN750_2_KnobPush)
PMS_GTN750U2_Large_Knob_Dec#(>H:GTN750_2_KnobLargeDec)
PMS_GTN750U2_Large_Knob_Inc#(>H:GTN750_2_KnobLargeInc)
PMS_GTN750U2_Menu#(>H:GTN750_2_GoToPage-HOME-MENU_HOME)
PMS_GTN750U2_Procedures#(>H:GTN750_2_GoToPage-HOME-PageProcs)
PMS_GTN750U2_Small_Knob_Dec#(>H:GTN750_2_KnobSmallDec)
PMS_GTN750U2_Small_Knob_Inc#(>H:GTN750_2_KnobSmallInc)
PMS_GTN750U2_Transfer_Com#(>H:GTN750_2_GTN_COM_Switch)
PMS_GTN750U2_Transfer_Nav#(>H:GTN750_2_GTN_NAV_Switch)
//Flysimware/Learjet 35/Autopilot
ALT_SEL#(L:MODE_ALTSEL,bool) ! (>L:MODE_ALTSEL,bool)
AP_ALT_ENCODER_INC#(L:ALERTER_DIGITAL,Number) 1000 + 50000 min (>L:ALERTER_DIGITAL,Number)
AP_ALT_VAR_DEC#(L:ALERTER_DIGITAL,Number) 1000 - 0 max (>L:ALERTER_DIGITAL,Number)
AP_HDG_TOGGLE#(>A:AUTOPILOT_HEADING_LOCK)
AP_IAS_SPD_Toggle#(>K:FLIGHT_LEVEL_CHANGE) (A:AUTOPILOT FLIGHT LEVEL CHANGE, bool) if { (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET) }
//Flysimware/Learjet 35/Flight Instrumentation
Pilot_Airspeed_Bug_Decrease#(L:GENERIC_LEAR_AIRSPEED_KNOB_L) 1 - 0 max (>L:GENERIC_LEAR_AIRSPEED_KNOB_L)
Pilot_Airspeed_Bug_Increase#(L:GENERIC_LEAR_AIRSPEED_KNOB_L) 1 + 400 min (>L:GENERIC_LEAR_AIRSPEED_KNOB_L)
//Flysimware/Learjet 35/Lights
Set_Taxi_Landing_light_Left_and_Right_LANDING#0 (>L:GENERIC_Momentary_LEAR_TAXI_LAND_L) 0 (>L:GENERIC_Momentary_LEAR_TAXI_LAND_R)
Set_Taxi_Landing_light_Left_and_Right_OFF#2 (>L:GENERIC_Momentary_LEAR_TAXI_LAND_L) 2 (>L:GENERIC_Momentary_LEAR_TAXI_LAND_R)
Set_Taxi_Landing_light_Left_and_Right_TAXI#1 (>L:GENERIC_Momentary_LEAR_TAXI_LAND_L) 1 (>L:GENERIC_Momentary_LEAR_TAXI_LAND_R)
//Got Friends/EA-7 Edgley Optica/Safety
Emergency_Locator_Transmitter_Arm#0 (>L:ELT_ON) 
Emergency_Locator_Transmitter_On#1 (>L:ELT_ON) 
Emergency_Locator_Transmitter_State#(L:ELT_ON) 
//Headwind Simulations/A330-900neo/Autopilot
A32NX_FCU_SPD_MACH_TOGGLE_PUSH#(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE) (>K:A32NX.FCU_SPD_MACH_TOGGLE_PUSH)
//Headwind Simulations/A330-900neo/EFIS
A32NX_FCU_EFIS_L_ARPT_PUSH#(L:A32NX_EFIS_L_OPTION, enum) 16 == if{ 0 } els{ 16 } (>L:A32NX_EFIS_L_OPTION, enum) (>K:A32NX.FCU_EFIS_L_ARPT_PUSH)
A32NX_FCU_EFIS_L_CSTR_PUSH#(L:A32NX_EFIS_L_OPTION, enum) 1 == if{ 0 } els{ 1 } (>L:A32NX_EFIS_L_OPTION, enum) (>K:A32NX.FCU_EFIS_L_CSTR_PUSH)
A32NX_FCU_EFIS_L_LS_PUSH#(>K:A32NX.FCU_EFIS_L_LS_PUSH)
A32NX_FCU_EFIS_L_NDB_PUSH#(L:A32NX_EFIS_L_OPTION, enum) 8 == if{ 0 } els{ 8 } (>L:A32NX_EFIS_L_OPTION, enum) (>K:A32NX.FCU_EFIS_L_NDB_PUSH)
A32NX_FCU_EFIS_L_VORD_PUSH#(L:A32NX_EFIS_L_OPTION, enum) 2 == if{ 0 } els{ 2 } (>L:A32NX_EFIS_L_OPTION, enum) (>K:A32NX.FCU_EFIS_L_VORD_PUSH)
A32NX_FCU_EFIS_L_WPT_PUSH#(L:A32NX_EFIS_L_OPTION, enum) 4 == if{ 0 } els{ 4 } (>L:A32NX_EFIS_L_OPTION, enum) (>K:A32NX.FCU_EFIS_L_WPT_PUSH)
A32NX_FCU_EFIS_R_ARPT_PUSH#(L:A32NX_EFIS_R_OPTION, enum) 16 == if{ 0 } els{ 16 } (>L:A32NX_EFIS_R_OPTION, enum) (>K:A32NX.FCU_EFIS_R_ARPT_PUSH)
A32NX_FCU_EFIS_R_CSTR_PUSH#(L:A32NX_EFIS_R_OPTION, enum) 1 == if{ 0 } els{ 1 } (>L:A32NX_EFIS_R_OPTION, enum) (>K:A32NX.FCU_EFIS_R_CSTR_PUSH)
A32NX_FCU_EFIS_R_LS_PUSH#(>K:A32NX.FCU_EFIS_R_LS_PUSH)
A32NX_FCU_EFIS_R_NDB_PUSH#(L:A32NX_EFIS_R_OPTION, enum) 8 == if{ 0 } els{ 8 } (>L:A32NX_EFIS_R_OPTION, enum) (>K:A32NX.FCU_EFIS_R_NDB_PUSH)
A32NX_FCU_EFIS_R_VORD_PUSH#(L:A32NX_EFIS_R_OPTION, enum) 2 == if{ 0 } els{ 2 } (>L:A32NX_EFIS_R_OPTION, enum) (>K:A32NX.FCU_EFIS_R_VORD_PUSH)
A32NX_FCU_EFIS_R_WPT_PUSH#(L:A32NX_EFIS_R_OPTION, enum) 4 == if{ 0 } els{ 4 } (>L:A32NX_EFIS_R_OPTION, enum) (>K:A32NX.FCU_EFIS_R_WPT_PUSH)
A339_EFIS_L_NAVAID_1_MODE_ADF#1 (>L:A32NX_FCU_EFIS_L_NAVAID_1_MODE) 
A339_EFIS_L_NAVAID_1_MODE_OFF#0 (>L:A32NX_FCU_EFIS_L_NAVAID_1_MODE)
A339_EFIS_L_NAVAID_1_MODE_VOR#2 (>L:A32NX_FCU_EFIS_L_NAVAID_1_MODE)
A339_EFIS_L_NAVAID_2_MODE__OFF#0 (>L:A32NX_FCU_EFIS_L_NAVAID_2_MODE)
A339_EFIS_L_NAVAID_2_MODE_ADF#1 (>L:A32NX_FCU_EFIS_L_NAVAID_2_MODE)
A339_EFIS_L_NAVAID_2_MODE_VOR#2 (>L:A32NX_FCU_EFIS_L_NAVAID_2_MODE)
A339_EFIS_L_ND_MODE_ARC#3 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A339_EFIS_L_ND_MODE_LS#0 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A339_EFIS_L_ND_MODE_NAV#2 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A339_EFIS_L_ND_MODE_PLAN#4 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A339_EFIS_L_ND_MODE_VOR#1 (>L:A32NX_FCU_EFIS_L_EFIS_MODE)
A339_EFIS_L_ND_RANGE_10#0 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A339_EFIS_L_ND_RANGE_160#4 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A339_EFIS_L_ND_RANGE_20#1 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A339_EFIS_L_ND_RANGE_320#5 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A339_EFIS_L_ND_RANGE_40#2 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A339_EFIS_L_ND_RANGE_80#3 (>L:A32NX_FCU_EFIS_L_EFIS_RANGE)
A339_EFIS_R_NAVAID_1_MODE_ADF#1 (>L:A32NX_FCU_EFIS_R_NAVAID_1_MODE)
A339_EFIS_R_NAVAID_1_MODE_OFF#0 (>L:A32NX_FCU_EFIS_R_NAVAID_1_MODE)
A339_EFIS_R_NAVAID_1_MODE_VOR#2 (>L:A32NX_FCU_EFIS_R_NAVAID_1_MODE)
A339_EFIS_R_NAVAID_2_MODE_ADF# 1 (>L:A32NX_FCU_EFIS_R_NAVAID_2_MODE)
A339_EFIS_R_NAVAID_2_MODE_OFF#0 (>L:A32NX_FCU_EFIS_R_NAVAID_2_MODE)
A339_EFIS_R_NAVAID_2_MODE_VOR#2 (>L:A32NX_FCU_EFIS_R_NAVAID_2_MODE)
A339_EFIS_R_ND_MODE_ARC#3 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A339_EFIS_R_ND_MODE_LS#0 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A339_EFIS_R_ND_MODE_NAV#2 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A339_EFIS_R_ND_MODE_PLAN#4 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A339_EFIS_R_ND_MODE_VOR#1 (>L:A32NX_FCU_EFIS_R_EFIS_MODE)
A339_EFIS_R_ND_RANGE_10#0 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A339_EFIS_R_ND_RANGE_160#4 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A339_EFIS_R_ND_RANGE_20#1 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A339_EFIS_R_ND_RANGE_320#5 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A339_EFIS_R_ND_RANGE_40#2 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A339_EFIS_R_ND_RANGE_80#3 (>L:A32NX_FCU_EFIS_R_EFIS_RANGE)
A339_FCU_EFIS_L_BARO_DEC#(L:A32NX_FCU_EFIS_L_DISPLAY_BARO_MODE, bool) if{ (L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE_MODE) 2 == if{ 1 (L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE) 0.01 - s0 33.864 * 16 * (>K:1:KOHLSMAN_SET) l0 (>L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE) } els{ 1 (L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE) -- s0 16 * (>K:1:KOHLSMAN_SET) l0 (>L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE) } }
A339_FCU_EFIS_L_BARO_INC#(L:A32NX_FCU_EFIS_L_DISPLAY_BARO_MODE, bool) if{ (L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE_MODE) 2 == if{ 0 (L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE) 0.01 + s0 33.864 * 16 * (>K:1:KOHLSMAN_SET) l0 (>L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE) } els{ 1 (L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE) ++ s0 16 * (>K:1:KOHLSMAN_SET) l0 (>L:A32NX_FCU_EFIS_L_DISPLAY_BARO_VALUE) } }
A339_FCU_EFIS_L_BARO_PULL#(L:XMLVAR_Baro1_Mode) s0 0 == if{ 2 (>L:XMLVAR_Baro1_Mode) } els{ l0 1 == if{ 3 (>L:XMLVAR_Baro1_Mode) } } (>K:A32NX.FCU_EFIS_L_BARO_PULL)
A339_FCU_EFIS_L_BARO_PUSH#(L:A32NX_FCU_EFIS_L_DISPLAY_BARO_MODE) ! if{ 1 } (>L:A32NX_FCU_EFIS_L_DISPLAY_BARO_MODE) (>K:A32NX.FCU_EFIS_L_BARO_PUSH)
A339_FCU_EFIS_L_BARO_SELECT_HPA#0 (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG)
A339_FCU_EFIS_L_BARO_SELECT_INHG#1 (>L:A32NX_FCU_EFIS_L_BARO_IS_INHG)
A339_FCU_EFIS_R_BARO_DEC#(L:A32NX_FCU_EFIS_R_DISPLAY_BARO_MODE, bool) if{ (L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE_MODE) 2 == if{ 1 (L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE) 0.01 - s0 33.864 * 16 * (>K:2:KOHLSMAN_SET) l0 (>L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE) } els{ 1 (L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE) -- s0 16 * (>K:2:KOHLSMAN_SET) l0 (>L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE) } }
A339_FCU_EFIS_R_BARO_INC#(L:A32NX_FCU_EFIS_R_DISPLAY_BARO_MODE, bool) if{ (L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE_MODE) 2 == if{ 0 (L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE) 0.01 + s0 33.864 * 16 * (>K:2:KOHLSMAN_SET) l0 (>L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE) } els{ 1 (L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE) ++ s0 16 * (>K:2:KOHLSMAN_SET) l0 (>L:A32NX_FCU_EFIS_R_DISPLAY_BARO_VALUE) } }
A339_FCU_EFIS_R_BARO_PULL#(L:XMLVAR_Baro2_Mode) s0 0 == if{ 2 (>L:XMLVAR_Baro2_Mode) } els{ l0 1 == if{ 3 (>L:XMLVAR_Baro2_Mode) } } (>K:A32NX.FCU_EFIS_R_BARO_PULL)
A339_FCU_EFIS_R_BARO_PUSH#(L:A32NX_FCU_EFIS_R_DISPLAY_BARO_MODE) ! if{ 1 } (>L:A32NX_FCU_EFIS_R_DISPLAY_BARO_MODE) (>K:A32NX.FCU_EFIS_R_BARO_PUSH)
A339_FCU_EFIS_R_BARO_SELECT_HPA#0 (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG)
A339_FCU_EFIS_R_BARO_SELECT_INHG#1 (>L:A32NX_FCU_EFIS_R_BARO_IS_INHG)
A339_FCU_METRIC_ALT_TOGGLE_PUSH#(>;K:A32NX.FCU_METRIC_ALT_TOGGLE_PUSH)
//Headwind Simulations/A330-900neo/Electrical
BAT_1#(L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO, Bool) if{ 0 (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) } els{ 1 (>L:A32NX_OVHD_ELEC_BAT_1_PB_IS_AUTO) } 
BAT_2#(L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO, Bool) if{ 0 (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) } els{ 1 (>L:A32NX_OVHD_ELEC_BAT_2_PB_IS_AUTO) } 
COMMERCIAL#(L:A32NX_OVHD_ELEC_COMMERCIAL_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_ELEC_COMMERCIAL_PB_IS_ON)
EXT_PWR#1 (>O:_ButtonAnimVar) (L:A32NX_EXT_PWR_AVAIL:1, Bool) if{ (L:A32NX_OVHD_ELEC_EXT_PWR_PB_IS_ON, Bool) ! (>L:A32NX_OVHD_ELEC_EXT_PWR_PB_IS_ON, Bool) } 
GALY___CAB#(L:A32NX_OVHD_ELEC_GALY_AND_CAB_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_ELEC_GALY_AND_CAB_PB_IS_AUTO)
//Headwind Simulations/A330-900neo/Fuel
CTR_TK_L_XFR#9 (>K:FUELSYSTEM_VALVE_TOGGLE) 
CTR_TK_R_XFR#10 (>K:FUELSYSTEM_VALVE_TOGGLE) 
L_TK_PUMPS_1#2 (>K:FUELSYSTEM_PUMP_TOGGLE) 
L_TK_PUMPS_2#5 (>K:FUELSYSTEM_PUMP_TOGGLE) 
MODE_SEL#(L:A32NX_OVHD_FUEL_MODESEL_MANUAL) ! s0 (>L:A32NX_OVHD_FUEL_MODESEL_MANUAL) 1 l0 + sp0 l0 4 (>K:2:FUELSYSTEM_JUNCTION_SET) l0 5 (>K:2:FUELSYSTEM_JUNCTION_SET) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_MODESEL_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_MODESEL_Pressed) 
R_TK_PUMPS_1#3 (>K:FUELSYSTEM_PUMP_TOGGLE) 
R_TK_PUMPS_2#6 (>K:FUELSYSTEM_PUMP_TOGGLE) 
X_FEED#3 (>K:FUELSYSTEM_VALVE_TOGGLE) (L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) ! (>L:XMLVAR_Momentary_PUSH_OVHD_FUEL_XFEED_Pressed) 
//Headwind Simulations/A330-900neo/Hydraulics
ELEC_PUMP#1 (>O:_ButtonAnimVar) (L:A32NX_OVHD_HYD_EPUMPY_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_HYD_EPUMPY_PB_IS_AUTO) 
ENG_1_PUMP#(L:A32NX_OVHD_HYD_ENG_1_PUMP_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_HYD_ENG_1_PUMP_PB_IS_AUTO) 
ENG_2_PUMP#(L:A32NX_OVHD_HYD_ENG_2_PUMP_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_HYD_ENG_2_PUMP_PB_IS_AUTO) 
PTU#(L:A32NX_OVHD_HYD_PTU_PB_IS_AUTO, Bool) ! (>L:A32NX_OVHD_HYD_PTU_PB_IS_AUTO) 
//Headwind Simulations/A330-900neo/Lights (exterior)
BEACON_OFF#0 (>K:BEACON_LIGHTS_SET)
BEACON_ON#1 (>K:BEACON_LIGHTS_SET)
//Headwind Simulations/A330-900neo/MCDU (left)
__-#1 (>L:A32NX_MCDU_PUSH_ANIM_1_PLUSMINUS) (>H:A320_Neo_CDU_1_BTN_PLUSMINUS)
_#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DOT) (>H:A320_Neo_CDU_1_BTN_DOT)
_#1 (>L:A32NX_MCDU_PUSH_ANIM_1_SLASH) (>H:A320_Neo_CDU_1_BTN_DIV)
0#1 (>L:A32NX_MCDU_PUSH_ANIM_1_0) (>H:A320_Neo_CDU_1_BTN_0)
1#1 (>L:A32NX_MCDU_PUSH_ANIM_1_1) (>H:A320_Neo_CDU_1_BTN_1)
2#1 (>L:A32NX_MCDU_PUSH_ANIM_1_2) (>H:A320_Neo_CDU_1_BTN_2)
3#1 (>L:A32NX_MCDU_PUSH_ANIM_1_3) (>H:A320_Neo_CDU_1_BTN_3)
4#1 (>L:A32NX_MCDU_PUSH_ANIM_1_4) (>H:A320_Neo_CDU_1_BTN_4)
5#1 (>L:A32NX_MCDU_PUSH_ANIM_1_5) (>H:A320_Neo_CDU_1_BTN_5)
6#1 (>L:A32NX_MCDU_PUSH_ANIM_1_6) (>H:A320_Neo_CDU_1_BTN_6)
7#1 (>L:A32NX_MCDU_PUSH_ANIM_1_7) (>H:A320_Neo_CDU_1_BTN_7)
8#1 (>L:A32NX_MCDU_PUSH_ANIM_1_8) (>H:A320_Neo_CDU_1_BTN_8)
9#1 (>L:A32NX_MCDU_PUSH_ANIM_1_9) (>H:A320_Neo_CDU_1_BTN_9)
A#1 (>L:A32NX_MCDU_PUSH_ANIM_1_A) (>H:A320_Neo_CDU_1_BTN_A)
A339X_MCDU_L1#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L1) (>H:A320_Neo_CDU_1_BTN_L1)
A339X_MCDU_L2#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L2) (>H:A320_Neo_CDU_1_BTN_L2)
A339X_MCDU_L3#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L3) (>H:A320_Neo_CDU_1_BTN_L3)
A339X_MCDU_L4#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L4) (>H:A320_Neo_CDU_1_BTN_L4)
A339X_MCDU_L5#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L5) (>H:A320_Neo_CDU_1_BTN_L5)
A339X_MCDU_L6#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L6) (>H:A320_Neo_CDU_1_BTN_L6)
A339X_MCDU_R1#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R1) (>H:A320_Neo_CDU_1_BTN_R1)
A339X_MCDU_R2#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R2) (>H:A320_Neo_CDU_1_BTN_R2)
A339X_MCDU_R3#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R3) (>H:A320_Neo_CDU_1_BTN_R3)
A339X_MCDU_R4#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R4) (>H:A320_Neo_CDU_1_BTN_R4)
A339X_MCDU_R5#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R5) (>H:A320_Neo_CDU_1_BTN_R5)
A339X_MCDU_R6#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R6) (>H:A320_Neo_CDU_1_BTN_R6)
AIRPORT#1 (>L:A32NX_MCDU_PUSH_ANIM_1_AIRPORT) (>H:A320_Neo_CDU_1_BTN_AIRPORT)
ATC_COMM#1 (>L:A32NX_MCDU_PUSH_ANIM_1_ATC) (>H:A320_Neo_CDU_1_BTN_ATC)
B#1 (>L:A32NX_MCDU_PUSH_ANIM_1_B) (>H:A320_Neo_CDU_1_BTN_B)
C#1 (>L:A32NX_MCDU_PUSH_ANIM_1_C) (>H:A320_Neo_CDU_1_BTN_C)
CLR_Press#1 (>L:A32NX_MCDU_PUSH_ANIM_1_CLR) (E:SIMULATION TIME, second) 1 + (>L:A32NX_MCDU_CLR_MinReleaseTime) 1 (>L:A32NX_MCDU_CLR_Pressed) (>H:A320_Neo_CDU_1_BTN_CLR)
CLR_Release#0 (>L:A32NX_MCDU_CLR_Pressed)
D#1 (>L:A32NX_MCDU_PUSH_ANIM_1_D) (>H:A320_Neo_CDU_1_BTN_D)
DATA#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DATA) (>H:A320_Neo_CDU_1_BTN_DATA)
DIR#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DIR) (>H:A320_Neo_CDU_1_BTN_DIR)
DOWN_ARROW#1 (>L:A32NX_MCDU_PUSH_ANIM_1_DARROW) (>H:A320_Neo_CDU_1_BTN_DOWN)
E#1 (>L:A32NX_MCDU_PUSH_ANIM_1_E) (>H:A320_Neo_CDU_1_BTN_E)
F#1 (>L:A32NX_MCDU_PUSH_ANIM_1_F) (>H:A320_Neo_CDU_1_BTN_F)
F-PLN#1 (>L:A32NX_MCDU_PUSH_ANIM_1_FPLN) (>H:A320_Neo_CDU_1_BTN_FPLN)
FUEL_PRED#1 (>L:A32NX_MCDU_PUSH_ANIM_1_FUEL) (>H:A320_Neo_CDU_1_BTN_FUEL)
G#1 (>L:A32NX_MCDU_PUSH_ANIM_1_G) (>H:A320_Neo_CDU_1_BTN_G)
H#1 (>L:A32NX_MCDU_PUSH_ANIM_1_H) (>H:A320_Neo_CDU_1_BTN_H)
I#1 (>L:A32NX_MCDU_PUSH_ANIM_1_I) (>H:A320_Neo_CDU_1_BTN_I)
INIT#1 (>L:A32NX_MCDU_PUSH_ANIM_1_INIT) (>H:A320_Neo_CDU_1_BTN_INIT)
J#1 (>L:A32NX_MCDU_PUSH_ANIM_1_J) (>H:A320_Neo_CDU_1_BTN_J)
K#1 (>L:A32NX_MCDU_PUSH_ANIM_1_K) (>H:A320_Neo_CDU_1_BTN_K)
L#1 (>L:A32NX_MCDU_PUSH_ANIM_1_L) (>H:A320_Neo_CDU_1_BTN_L)
LEFT_ARROW#1 (>L:A32NX_MCDU_PUSH_ANIM_1_LARROW) (>H:A320_Neo_CDU_1_BTN_PREVPAGE)
M#1 (>L:A32NX_MCDU_PUSH_ANIM_1_M) (>H:A320_Neo_CDU_1_BTN_M)
MCDU_MENU#1 (>L:A32NX_MCDU_PUSH_ANIM_1_MENU) (>H:A320_Neo_CDU_1_BTN_MENU)
N#1 (>L:A32NX_MCDU_PUSH_ANIM_1_N) (>H:A320_Neo_CDU_1_BTN_N)
O#1 (>L:A32NX_MCDU_PUSH_ANIM_1_O) (>H:A320_Neo_CDU_1_BTN_O)
OVFY#1 (>L:A32NX_MCDU_PUSH_ANIM_1_OVFY) (>H:A320_Neo_CDU_1_BTN_OVFY)
P#1 (>L:A32NX_MCDU_PUSH_ANIM_1_P) (>H:A320_Neo_CDU_1_BTN_P)
PERF#1 (>L:A32NX_MCDU_PUSH_ANIM_1_PERF) (>H:A320_Neo_CDU_1_BTN_PERF)
PROG#1 (>L:A32NX_MCDU_PUSH_ANIM_1_PROG) (>H:A320_Neo_CDU_1_BTN_PROG)
Q#1 (>L:A32NX_MCDU_PUSH_ANIM_1_Q) (>H:A320_Neo_CDU_1_BTN_Q)
R#1 (>L:A32NX_MCDU_PUSH_ANIM_1_R) (>H:A320_Neo_CDU_1_BTN_R)
RAD_NAV#1 (>L:A32NX_MCDU_PUSH_ANIM_1_RAD) (>H:A320_Neo_CDU_1_BTN_RAD)
RIGHT_ARROW#1 (>L:A32NX_MCDU_PUSH_ANIM_1_RARROW) (>H:A320_Neo_CDU_1_BTN_NEXTPAGE)
S#1 (>L:A32NX_MCDU_PUSH_ANIM_1_S) (>H:A320_Neo_CDU_1_BTN_S)
SEC_F-PLN#1 (>L:A32NX_MCDU_PUSH_ANIM_1_SEC) (>H:A320_Neo_CDU_1_BTN_SEC)
SP#1 (>L:A32NX_MCDU_PUSH_ANIM_1_SP) (>H:A320_Neo_CDU_1_BTN_SP)
T#1 (>L:A32NX_MCDU_PUSH_ANIM_1_T) (>H:A320_Neo_CDU_1_BTN_T)
U#1 (>L:A32NX_MCDU_PUSH_ANIM_1_U) (>H:A320_Neo_CDU_1_BTN_U)
UP_ARROW#1 (>L:A32NX_MCDU_PUSH_ANIM_1_UARROW) (>H:A320_Neo_CDU_1_BTN_UP)
V#1 (>L:A32NX_MCDU_PUSH_ANIM_1_V) (>H:A320_Neo_CDU_1_BTN_V)
W#1 (>L:A32NX_MCDU_PUSH_ANIM_1_W) (>H:A320_Neo_CDU_1_BTN_W)
X#1 (>L:A32NX_MCDU_PUSH_ANIM_1_X) (>H:A320_Neo_CDU_1_BTN_X)
Y#1 (>L:A32NX_MCDU_PUSH_ANIM_1_Y) (>H:A320_Neo_CDU_1_BTN_Y)
Z#1 (>L:A32NX_MCDU_PUSH_ANIM_1_Z) (>H:A320_Neo_CDU_1_BTN_Z)
//Headwind Simulations/A330-900neo/Safety
SEAT_BELT_AUTO#1 (>L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position)
SEAT_BELT_OFF#2 (>L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position)
SEAT_BELT_ON#0 (>L:XMLVAR_SWITCH_OVHD_INTLT_SEATBELT_Position)
//Headwind/A330-900/Lights
Toggle_main_landing_light#(A:LIGHT LANDING:2, Bool) ! sp0 2 l0 (>K:2:LANDING_LIGHTS_SET) 3 l0 (>K:2:LANDING_LIGHTS_SET)
//Horizon Simulations/B787-9/Lights
B787-9_ALL_LANDING_LIGHTS_OFF#0 (>K:2:LANDING_LIGHTS_SET)
B787-9_ALL_LANDING_LIGHTS_ON#1 (>K:2:LANDING_LIGHTS_SET)
B787-9_BEACON_LIGHT_OFF#0 (>K:2:BEACON_LIGHTS_SET)
B787-9_BEACON_LIGHT_ON#1 (>K:2:BEACON_LIGHTS_SET)
B787-9_LOGO_LIGHT_OFF#0 (>K:2:LOGO_LIGHTS_SET)
B787-9_LOGO_LIGHT_ON#1 (>K:2:LOGO_LIGHTS_SET)
B787-9_NAV_LIGHTS_OFF#0 (>K:2:NAV_LIGHTS_SET)
B787-9_NAV_LIGHTS_ON#1 (>K:2:NAV_LIGHTS_SET)
B787-9_STROBE_LIGHT_OFF#0 (>K:STROBES_SET)
B787-9_STROBE_LIGHT_ON#1 (>K:STROBES_SET)
B787-9_TAXI_TURNOFF_LIGHTS_OFF#0 (>K:2:TAXI_LIGHTS_SET)
B787-9_TAXI_TURNOFF_LIGHTS_ON#1 (>K:2:TAXI_LIGHTS_SET)
//House Atreides/Ornithopter/Avionics
Thopter__Toggle_Avionics#(>K:TOGGLE_AVIONICS_MASTER)
//House Atreides/Ornithopter/Electrical
Thopter__Toggle_Alternator#(>K:TOGGLE_MASTER_ALTERNATOR)
Thopter__Toggle_Battery#(>K:TOGGLE_MASTER_BATTERY)
//House Atreides/Ornithopter/Engines
Thopter__Engine_Start#(>K:ENGINE_AUTO_START)
Thopter__Engine_Stop#(>K:ENGINE_AUTO_SHUTDOWN)
//House Atreides/Ornithopter/Flight Controls
Thopter__Wings_Fold#(>K:WING_FOLD_ON)
Thopter__Wings_Unfold#(>K:WING_FOLD_OFF)
//House Atreides/Ornithopter/Fuel
Thopter__Toggle_Fuel_Valve#(>K:TOGGLE_FUEL_VALVE_ALL)
//House Atreides/Ornithopter/Interaction
Thopter__Left_Door_Toggle#(A:INTERACTIVE POINT GOAL:0, percent over 100) 0 == if{ 1 (>A:INTERACTIVE POINT GOAL:0, percent over 100) } els{ 0 (>A:INTERACTIVE POINT GOAL:0, percent over 100) }
Thopter__Right_Door_Toggle#(A:INTERACTIVE POINT GOAL:1, percent over 100) 0 == if{ 1 (>A:INTERACTIVE POINT GOAL:1, percent over 100) } els{ 0 (>A:INTERACTIVE POINT GOAL:1, percent over 100) }
//House Atreides/Ornithopter/Lights
Thopter__Dome_Lights_Toggle#(>K:TOGGLE_CABIN_LIGHTS)
Thopter__Landing_Lights_Toggle#(>K:LANDING_LIGHTS_TOGGLE)
Thopter__Toggle_Panel_Lights#(A:LIGHT PANEL ON,Bool) 1 == if{ (>K:PANEL_LIGHTS_OFF) } els{ (>K:PANEL_LIGHTS_ON) }
//Hype Performance Group/H135/Air Condition / Pressurization
H135_AIR_CONDITION_OFF#0 (>L:AIR_COND)
H135_AIR_CONDITION_ON#1 (>L:AIR_COND)
//Hype Performance Group/H135/Autopilot System
H135_AP_ALT_HOLD_TOGGLE#(>K:AP_ALT_HOLD)
H135_AP_AP1_TOGGLE#(L:APCP_AP1) ! (>L:APCP_AP1)
H135_AP_AP2_TOGGLE#(L:APCP_AP2) ! (>L:APCP_AP2)
H135_AP_A_TRIM_TOGGLE#(L:APCP_ATRIM) ! (>L:APCP_ATRIM)
H135_AP_BACKUP_TOGGLE#(L:APCP_BACKUP) ! (>L:APCP_BACKUP)
//Hype Performance Group/H135/Avionics
H135_DISPLAY_CENTER_ON#(L:DISPLAY_CENTER_ON) ! (>L:DISPLAY_CENTER_ON)
H135_DISPLAY_LEFT_ON#(L:DISPLAY_LEFT_ON) ! (>L:DISPLAY_LEFT_ON)
H135_DISPLAY_RIGHT_ON#(L:DISPLAY_RIGHT_ON) ! (>L:DISPLAY_RIGHT_ON)
H135_Left_Lower_MFD#(L:GTN_LEFT_ON) ! (>L:GTN_LEFT_ON)
H135_MFDC_SoftKey_Bottom_1#(L:MFDC_SoftKey_Bottom_1, number) ! (>L:MFDC_SoftKey_Bottom_1, number)
H135_MFDC_SoftKey_Bottom_2#(L:MFDC_SoftKey_Bottom_2, number) ! (>L:MFDC_SoftKey_Bottom_2, number)
H135_MFDC_SoftKey_Bottom_3#(L:MFDC_SoftKey_Bottom_3, number) ! (>L:MFDC_SoftKey_Bottom_3, number)
H135_MFDC_SoftKey_Bottom_4#(L:MFDC_SoftKey_Bottom_4, number) ! (>L:MFDC_SoftKey_Bottom_4, number)
H135_MFDC_SoftKey_Bottom_5#(L:MFDC_SoftKey_Bottom_5, number) ! (>L:MFDC_SoftKey_Bottom_5, number)
H135_MFDC_SoftKey_Bottom_6#(L:MFDC_SoftKey_Bottom_6, number) ! (>L:MFDC_SoftKey_Bottom_6, number)
H135_MFDC_SoftKey_Left_1#(L:MFDC_SoftKey_Left_1, number) ! (>L:MFDC_SoftKey_Left_1, number)
H135_MFDC_SoftKey_Left_2#(L:MFDC_SoftKey_Left_2, number) ! (>L:MFDC_SoftKey_Left_2, number)
H135_MFDC_SoftKey_Left_3#(L:MFDC_SoftKey_Left_3, number) ! (>L:MFDC_SoftKey_Left_3, number)
H135_MFDC_SoftKey_Left_4#(L:MFDC_SoftKey_Left_4, number) ! (>L:MFDC_SoftKey_Left_4, number)
H135_MFDC_SoftKey_Left_5#(L:MFDC_SoftKey_Left_5, number) ! (>L:MFDC_SoftKey_Left_5, number)
H135_MFDC_SoftKey_Left_6#(L:MFDC_SoftKey_Left_6, number) ! (>L:MFDC_SoftKey_Left_6, number)
H135_MFDC_SoftKey_Right_1#(L:MFDC_SoftKey_Right_1, number) ! (>L:MFDC_SoftKey_Right_1, number)
H135_MFDC_SoftKey_Right_2#(L:MFDC_SoftKey_Right_2, number) ! (>L:MFDC_SoftKey_Right_2, number)
H135_MFDC_SoftKey_Right_3#(L:MFDC_SoftKey_Right_3, number) ! (>L:MFDC_SoftKey_Right_3, number)
H135_MFDC_SoftKey_Right_4#(L:MFDC_SoftKey_Right_4, number) ! (>L:MFDC_SoftKey_Right_4, number)
H135_MFDC_SoftKey_Right_5#(L:MFDC_SoftKey_Right_5, number) ! (>L:MFDC_SoftKey_Right_5, number)
H135_MFDC_SoftKey_Right_6#(L:MFDC_SoftKey_Right_6, number) ! (>L:MFDC_SoftKey_Right_6, number)
H135_MFDC_SoftKey_Top_1#(L:MFDC_SoftKey_Top_1, number) ! (>L:MFDC_SoftKey_Top_1, number)
H135_MFDC_SoftKey_Top_2#(L:MFDC_SoftKey_Top_2, number) ! (>L:MFDC_SoftKey_Top_2, number)
H135_MFDC_SoftKey_Top_3#(L:MFDC_SoftKey_Top_3, number) ! (>L:MFDC_SoftKey_Top_3, number)
H135_MFDC_SoftKey_Top_4#(L:MFDC_SoftKey_Top_4, number) ! (>L:MFDC_SoftKey_Top_4, number)
H135_MFDC_SoftKey_Top_5#(L:MFDC_SoftKey_Top_5, number) ! (>L:MFDC_SoftKey_Top_5, number)
H135_MFDC_SoftKey_Top_6#(L:MFDC_SoftKey_Top_6, number) ! (>L:MFDC_SoftKey_Top_6, number)
H135_MFDL_SoftKey_Bottom_1#(L:MFDL_SoftKey_Bottom_1, number) ! (>L:MFDL_SoftKey_Bottom_1, number)
H135_MFDL_SoftKey_Bottom_2#(L:MFDL_SoftKey_Bottom_2, number) ! (>L:MFDL_SoftKey_Bottom_2, number)
H135_MFDL_SoftKey_Bottom_3#(L:MFDL_SoftKey_Bottom_3, number) ! (>L:MFDL_SoftKey_Bottom_3, number)
H135_MFDL_SoftKey_Bottom_4#(L:MFDL_SoftKey_Bottom_4, number) ! (>L:MFDL_SoftKey_Bottom_4, number)
H135_MFDL_SoftKey_Bottom_5#(L:MFDL_SoftKey_Bottom_5, number) ! (>L:MFDL_SoftKey_Bottom_5, number)
H135_MFDL_SoftKey_Bottom_6#(L:MFDL_SoftKey_Bottom_6, number) ! (>L:MFDL_SoftKey_Bottom_6, number)
H135_MFDL_SoftKey_Left_1#(L:MFDL_SoftKey_Left_1, number) ! (>L:MFDL_SoftKey_Left_1, number)
H135_MFDL_SoftKey_Left_2#(L:MFDL_SoftKey_Left_2, number) ! (>L:MFDL_SoftKey_Left_2, number)
H135_MFDL_SoftKey_Left_3#(L:MFDL_SoftKey_Left_3, number) ! (>L:MFDL_SoftKey_Left_3, number)
H135_MFDL_SoftKey_Left_4#(L:MFDL_SoftKey_Left_4, number) ! (>L:MFDL_SoftKey_Left_4, number)
H135_MFDL_SoftKey_Left_5#(L:MFDL_SoftKey_Left_5, number) ! (>L:MFDL_SoftKey_Left_5, number)
H135_MFDL_SoftKey_Left_6#(L:MFDL_SoftKey_Left_6, number) ! (>L:MFDL_SoftKey_Left_6, number)
H135_MFDL_SoftKey_Right_1#(L:MFDL_SoftKey_Right_1, number) ! (>L:MFDL_SoftKey_Right_1, number)
H135_MFDL_SoftKey_Right_2#(L:MFDL_SoftKey_Right_2, number) ! (>L:MFDL_SoftKey_Right_2, number)
H135_MFDL_SoftKey_Right_3#(L:MFDL_SoftKey_Right_3, number) ! (>L:MFDL_SoftKey_Right_3, number)
H135_MFDL_SoftKey_Right_4#(L:MFDL_SoftKey_Right_4, number) ! (>L:MFDL_SoftKey_Right_4, number)
H135_MFDL_SoftKey_Right_5#(L:MFDL_SoftKey_Right_5, number) ! (>L:MFDL_SoftKey_Right_5, number)
H135_MFDL_SoftKey_Right_6#(L:MFDL_SoftKey_Right_6, number) ! (>L:MFDL_SoftKey_Right_6, number)
H135_MFDL_SoftKey_Top_1#(L:MFDL_SoftKey_Top_1, number) ! (>L:MFDL_SoftKey_Top_1, number)
H135_MFDL_SoftKey_Top_2#(L:MFDL_SoftKey_Top_2, number) ! (>L:MFDL_SoftKey_Top_2, number)
H135_MFDL_SoftKey_Top_3#(L:MFDL_SoftKey_Top_3, number) ! (>L:MFDL_SoftKey_Top_3, number)
H135_MFDL_SoftKey_Top_4#(L:MFDL_SoftKey_Top_4, number) ! (>L:MFDL_SoftKey_Top_4, number)
H135_MFDL_SoftKey_Top_5#(L:MFDL_SoftKey_Top_5, number) ! (>L:MFDL_SoftKey_Top_5, number)
H135_MFDL_SoftKey_Top_6#(L:MFDL_SoftKey_Top_6, number) ! (>L:MFDL_SoftKey_Top_6, number)
H135_MFDR_SoftKey_Bottom_1#(L:MFDR_SoftKey_Bottom_1, number) ! (>L:MFDR_SoftKey_Bottom_1, number)
H135_MFDR_SoftKey_Bottom_2#(L:MFDR_SoftKey_Bottom_2, number) ! (>L:MFDR_SoftKey_Bottom_2, number)
H135_MFDR_SoftKey_Bottom_3#(L:MFDR_SoftKey_Bottom_3, number) ! (>L:MFDR_SoftKey_Bottom_3, number)
H135_MFDR_SoftKey_Bottom_4#(L:MFDR_SoftKey_Bottom_4, number) ! (>L:MFDR_SoftKey_Bottom_4, number)
H135_MFDR_SoftKey_Bottom_5#(L:MFDR_SoftKey_Bottom_5, number) ! (>L:MFDR_SoftKey_Bottom_5, number)
H135_MFDR_SoftKey_Bottom_6#(L:MFDR_SoftKey_Bottom_6, number) ! (>L:MFDR_SoftKey_Bottom_6, number)
H135_MFDR_SoftKey_Left_1#(L:MFDR_SoftKey_Left_1, number) ! (>L:MFDR_SoftKey_Left_1, number)
H135_MFDR_SoftKey_Left_2#(L:MFDR_SoftKey_Left_2, number) ! (>L:MFDR_SoftKey_Left_2, number)
H135_MFDR_SoftKey_Left_3#(L:MFDR_SoftKey_Left_3, number) ! (>L:MFDR_SoftKey_Left_3, number)
H135_MFDR_SoftKey_Left_4#(L:MFDR_SoftKey_Left_4, number) ! (>L:MFDR_SoftKey_Left_4, number)
H135_MFDR_SoftKey_Left_5#(L:MFDR_SoftKey_Left_5, number) ! (>L:MFDR_SoftKey_Left_5, number)
H135_MFDR_SoftKey_Left_6#(L:MFDR_SoftKey_Left_6, number) ! (>L:MFDR_SoftKey_Left_6, number)
H135_MFDR_SoftKey_Right_1#(L:MFDR_SoftKey_Right_1, number) ! (>L:MFDR_SoftKey_Right_1, number)
H135_MFDR_SoftKey_Right_2#(L:MFDR_SoftKey_Right_2, number) ! (>L:MFDR_SoftKey_Right_2, number)
H135_MFDR_SoftKey_Right_3#(L:MFDR_SoftKey_Right_3, number) ! (>L:MFDR_SoftKey_Right_3, number)
H135_MFDR_SoftKey_Right_4#(L:MFDR_SoftKey_Right_4, number) ! (>L:MFDR_SoftKey_Right_4, number)
H135_MFDR_SoftKey_Right_5#(L:MFDR_SoftKey_Right_5, number) ! (>L:MFDR_SoftKey_Right_5, number)
H135_MFDR_SoftKey_Right_6#(L:MFDR_SoftKey_Right_6, number) ! (>L:MFDR_SoftKey_Right_6, number)
H135_MFDR_SoftKey_Top_1#(L:MFDR_SoftKey_Top_1, number) ! (>L:MFDR_SoftKey_Top_1, number)
H135_MFDR_SoftKey_Top_2#(L:MFDR_SoftKey_Top_2, number) ! (>L:MFDR_SoftKey_Top_2, number)
H135_MFDR_SoftKey_Top_3#(L:MFDR_SoftKey_Top_3, number) ! (>L:MFDR_SoftKey_Top_3, number)
H135_MFDR_SoftKey_Top_4#(L:MFDR_SoftKey_Top_4, number) ! (>L:MFDR_SoftKey_Top_4, number)
H135_MFDR_SoftKey_Top_5#(L:MFDR_SoftKey_Top_5, number) ! (>L:MFDR_SoftKey_Top_5, number)
H135_MFDR_SoftKey_Top_6#(L:MFDR_SoftKey_Top_6, number) ! (>L:MFDR_SoftKey_Top_6, number)
H135_Right_Lower_MFD#(L:GTN_RIGHT_ON) ! (>L:GTN_RIGHT_ON)
H135_AVIONICS_1_OFF#0 (>K:AVIONICS_MASTER_1_SET)
H135_AVIONICS_1_ON#1 (>K:AVIONICS_MASTER_1_SET)
H135_AVIONICS_2_OFF#0 (>K:AVIONICS_MASTER_2_SET)
H135_AVIONICS_2_ON#1 (>K:AVIONICS_MASTER_2_SET)
H135_PITOT_HEATER_1_OFF#1 (>K:PITOT_HEAT_OFF)
H135_PITOT_HEATER_1_ON#1 (>K:PITOT_HEAT_ON)
H135_PITOT_HEATER_2_OFF#2 (>K:PITOT_HEAT_OFF)
H135_PITOT_HEATER_2_ON#2 (>K:PITOT_HEAT_ON)
//Hype Performance Group/H135/Electrical
H135_MASTER_AND_STANDBY_BATTERY_OFF#0 (>K:MASTER_BATTERY_SET)
H135_MASTER_AND_STANDBY_BATTERY_ON#1 (>K:MASTER_BATTERY_SET)
H135_MASTER_AND_STANDBY_BATTERY_TOGGLE#0 (>K:TOGGLE_MASTER_BATTERY) 
//Hype Performance Group/H135/Engines
H135_Engine1_Down#(L:Engine1_Down, bool) ! (>L:Engine1_Down, bool)
H135_Engine1_Up#(L:Engine1_Up, bool) ! (>L:Engine1_Up, bool)
H135_Engine2_Down#(L:Engine2_Down, bool) ! (>L:Engine2_Down, bool)
H135_Engine2_Up#(L:Engine2_Up, bool) ! (>L:Engine2_Up, bool)
//Hype Performance Group/H135/Fire
H135_FIRE_TEST_ENG1#(L:ENG1_FIRE_TEST) ! (>L:ENG1_FIRE_TEST)
H135_FIRE_TEST_ENG2#(L:ENG2_FIRE_TEST) ! (>L:ENG2_FIRE_TEST)
//Hype Performance Group/H135/Fuel
H135_FUEL_AUX_TOGGLE#3 (>K:FUELSYSTEM_VALVE_TOGGLE)
H135_FUEL_PRIME_PUMP_1_OFF#0 (>L:ENG1_PRIME)
H135_FUEL_PRIME_PUMP_1_ON#1 (>L:ENG1_PRIME)
H135_FUEL_PRIME_PUMP_2_OFF#0 (>L:ENG2_PRIME)
H135_FUEL_PRIME_PUMP_2_ON#1 (>L:ENG2_PRIME)
H135_FUEL_PUMP_1_OFF#1 (>K:FUELSYSTEM_PUMP_OFF)
H135_FUEL_PUMP_1_ON#1 (>K:FUELSYSTEM_PUMP_ON)
H135_FUEL_PUMP_2_OFF#4 (>K:FUELSYSTEM_PUMP_OFF)
H135_FUEL_PUMP_2_ON#4 (>K:FUELSYSTEM_PUMP_ON)
//Hype Performance Group/H135/Lights
H135_ACOL_LIGHT_OFF#1 (>K:BEACON_LIGHTS_OFF)
H135_ACOL_LIGHT_ON#1 (>K:BEACON_LIGHTS_ON)
H135_ACOL_LIGHT_Toggle#(>K:TOGGLE_BEACON_LIGHTS)
H135_CABIN_LIGHT_OFF#1 (>K:CABIN_LIGHTS_OFF)
H135_CABIN_LIGHT_ON#1 (>K:CABIN_LIGHTS_ON)
H135_CABIN_LIGHT_TOGGLE#(>K:TOGGLE_CABIN_LIGHTS)
H135_LANDING_LIGHTS_OFF#0 (>K:LANDING_LIGHTS_SET)
H135_LANDING_LIGHTS_ON#1 (>K:LANDING_LIGHTS_SET)
H135_POS_LIGHT_OFF#1 (>K:NAV_LIGHTS_OFF)
H135_POS_LIGHT_ON#1 (>K:NAV_LIGHTS_ON)
H135_POS_LIGHT_TOGGLE#(>K:TOGGLE_NAV_LIGHTS)
H135_STROBE_LIGHT_OFF#0 (>K:STROBES_SET)
H135_STROBE_LIGHT_ON#1 (>K:STROBES_SET)
//Hype Performance Group/H135/Miscellaneous
H135_MFDC_Knob_Down#(L:MFDC_Knob_Down, bool) ! (>L:MFDC_Knob_Down, bool)
H135_MFDC_Knob_Up#(L:MFDC_Knob_Up, bool) ! (>L:MFDC_Knob_Up, bool)
H135_MFDC_SoftKey_Right_BRT_Down#(L:Bright_Down, bool) ! (>L:Bright_Down, bool)
H135_MFDC_SoftKey_Right_BRT_Up#(L:Bright_Up, bool) ! (>L:Bright_Up, bool)
H135_MFDL_Knob_Down#(L:MFDL_Knob_Down, bool) ! (>L:MFDL_Knob_Down, bool)
H135_MFDL_Knob_Up#(L:MFDL_Knob_Up, bool) ! (>L:MFDL_Knob_Up, bool)
H135_MFDL_SoftKey_Right_BRT_Down#(L:Bright_Down, bool) ! (>L:Bright_Down, bool)
H135_MFDL_SoftKey_Right_BRT_Up#(L:Bright_Up, bool) ! (>L:Bright_Up, bool)
H135_MFDR_Knob_Down#(L:MFDR_Knob_Down, bool) ! (>L:MFDR_Knob_Down, bool)
H135_MFDR_Knob_Up#(L:MFDR_Knob_Up, bool) ! (>L:MFDR_Knob_Up, bool)
H135_MFDR_SoftKey_Right_BRT_Down#(L:Bright_Down, bool) ! (>L:Bright_Down, bool)
H135_MFDR_SoftKey_Right_BRT_Up#(L:Bright_Up, bool) ! (>L:Bright_Up, bool)
H135_Search_Light#(L:SPOTLIGHT_MODE, bool) ! (>L:SPOTLIGHT_MODE, bool)
H135_Tablet_Open#(L:TABLET_OPEN, bool) ! (>L:TABLET_OPEN, bool)
H135_Turbo_Mode#(L:TURBO_MODE) ! (>L:TURBO_MODE)
//Hype Performance Group/H135/Passengers/Crew
H135_Pilot_0_Show#(L:PILOT_1_SHOW, bool) ! (>L:PILOT_0_SHOW, bool)
H135_Pilot_1_Show#(L:PILOT_1_SHOW, bool) ! (>L:PILOT_1_SHOW, bool)
H135_Doors_Rear_CLOSE#0 (>L:TOGGLE_DOOR_BACK)
H135_Doors_Rear_OPEN#1 (>L:TOGGLE_DOOR_BACK)
H135_Doors_Rear_TOGGLE#(L:TOGGLE_DOOR_BACK) ! (>L:TOGGLE_DOOR_BACK)
//Hype Performance Group/H135/Warning System
H135_WARNING_LIGHTS_TEST_TOGGLE#(L:WARNIGNS_TEST_ON) ! (>L:WARNIGNS_TEST_ON)
//Hype Performance Group/H145/Air Condition / Pressurization
H145_SDK_OH_AIR_CONDITIONING_OFF#(>H:H145_SDK_OH_AIR_CONDITIONING_OFF)
H145_SDK_OH_AIR_CONDITIONING_ON#(>H:H145_SDK_OH_AIR_CONDITIONING_ON)
H145_SDK_OH_COCKPIT_VENT_OFF#(>H:H145_SDK_OH_COCKPIT_VENT_OFF)
H145_SDK_OH_COCKPIT_VENT_ON#(>H:H145_SDK_OH_COCKPIT_VENT_ON)
H145_SDK_OH_IBF_1_CLOSED#(>H:H145_SDK_OH_IBF_1_CLOSED)
H145_SDK_OH_IBF_1_NORMAL#(>H:H145_SDK_OH_IBF_1_NORMAL)
H145_SDK_OH_IBF_1_OPEN#(>H:H145_SDK_OH_IBF_1_OPEN)
H145_SDK_OH_IBF_2_CLOSED#(>H:H145_SDK_OH_IBF_2_CLOSED)
H145_SDK_OH_IBF_2_NORMAL#(>H:H145_SDK_OH_IBF_2_NORMAL)
H145_SDK_OH_IBF_2_OPEN#(>H:H145_SDK_OH_IBF_2_OPEN)
H145_SDK_OH_IBF_RECALL_OFF#(>H:H145_SDK_OH_IBF_RECALL_OFF)
H145_SDK_OH_IBF_RECALL_ON#(>H:H145_SDK_OH_IBF_RECALL_ON)
//Hype Performance Group/H145/Air Conditioning
H145_SDK_OH_BLEED_HEATING_POT#(>H:H145_SDK_OH_BLEED_HEATING_POT)
H145_SDK_OH_COCKPIT_VENT_POT#(>H:H145_SDK_OH_COCKPIT_VENT_POT)
//Hype Performance Group/H145/Autopilot
H145_SDK_APCP_ALTA_AntiClockwise#(>H:H145_SDK_APCP_ALTA_AntiClockwise)
H145_SDK_APCP_ALTA_Clockwise#(>H:H145_SDK_APCP_ALTA_Clockwise)
H145_SDK_APCP_ALT_TOGGLE#(>H:H145_SDK_APCP_ALT_TOGGLE)
H145_SDK_APCP_AP1_TOGGLE#(>H:H145_SDK_APCP_AP1_TOGGLE)
H145_SDK_APCP_AP2_TOGGLE#(>H:H145_SDK_APCP_AP2_TOGGLE)
H145_SDK_APCP_ATRIM_TOGGLE#(>H:H145_SDK_APCP_ATRIM_TOGGLE)
H145_SDK_APCP_BKUP_TOGGLE#(>H:H145_SDK_APCP_BKUP_TOGGLE)
H145_SDK_APCP_CRHT_AntiClockwise#(>H:H145_SDK_APCP_CRHT_AntiClockwise)
H145_SDK_APCP_CRHT_Clockwise#(>H:H145_SDK_APCP_CRHT_Clockwise)
H145_SDK_APCP_CRHT_TOGGLE#(>H:H145_SDK_APCP_CRHT_TOGGLE)
H145_SDK_APCP_HDG_AntiClockwise#(>H:H145_SDK_APCP_HDG_AntiClockwise)
H145_SDK_APCP_HDG_Clockwise#(>H:H145_SDK_APCP_HDG_Clockwise)
H145_SDK_APCP_ALTA_TOGGLE#(>H:H145_SDK_APCP_ALTA_TOGGLE)
H145_SDK_APCP_IAS_TOGGLE#(>H:H145_SDK_APCP_IAS_TOGGLE)
H145_SDK_APCP_VS_TOGGLE#(>H:H145_SDK_APCP_VS_TOGGLE)
H145_SDK_IESI_BARO_ANTICLOCKWISE#(>H:H145_SDK_IESI_BARO_ANTICLOCKWISE)
H145_SDK_IESI_BARO_CLOCKWISE#(>H:H145_SDK_IESI_BARO_CLOCKWISE)
H145_SDK_IESI_BARO_STD#(>H:H145_SDK_IESI_BARO_STD)
H145_SDK_IESI_BRT_DOWN#(>H:H145_SDK_IESI_BRT_DOWN)
H145_SDK_IESI_BRT_UP#(>H:H145_SDK_IESI_BRT_UP)
H145_SDK_IESI_CAGE#(>H:H145_SDK_IESI_CAGE)
//Hype Performance Group/H145/Avionics
H145_MFD1_SoftKey_B1#(>H:MFD1_SoftKey_B1)
H145_MFD1_SoftKey_B2#(>H:MFD1_SoftKey_B2)
H145_MFD1_SoftKey_B3#(>H:MFD1_SoftKey_B3)
H145_MFD1_SoftKey_B4#(>H:MFD1_SoftKey_B4)
H145_MFD1_SoftKey_B5#(>H:MFD1_SoftKey_B5)
H145_MFD1_SoftKey_B6#(>H:MFD1_SoftKey_B6)
H145_MFD1_SoftKey_KnobInnerAntiClockwise#(>H:MFD1_SoftKey_KnobInnerAntiClockwise)
H145_MFD1_SoftKey_KnobInnerClockwise#(>H:MFD1_SoftKey_KnobInnerClockwise)
H145_MFD1_SoftKey_KnobInnerPush#(>H:MFD1_SoftKey_KnobInnerPush)
H145_MFD1_SoftKey_KnobInnerPushLong#(>H:MFD1_SoftKey_KnobInnerPushLong)
H145_MFD1_SoftKey_KnobOuterAntiClockwise#(>H:MFD1_SoftKey_KnobOuterAntiClockwise)
H145_MFD1_SoftKey_KnobOuterClockwise#(>H:MFD1_SoftKey_KnobOuterClockwise)
H145_MFD1_SoftKey_L1#(>H:MFD1_SoftKey_L1)
H145_MFD1_SoftKey_L2#(>H:MFD1_SoftKey_L2)
H145_MFD1_SoftKey_L3#(>H:MFD1_SoftKey_L3)
H145_MFD1_SoftKey_L4#(>H:MFD1_SoftKey_L4)
H145_MFD1_SoftKey_L5#(>H:MFD1_SoftKey_L5)
H145_MFD1_SoftKey_L6#(>H:MFD1_SoftKey_L6)
H145_MFD1_SoftKey_R1#(>H:MFD1_SoftKey_R1)
H145_MFD1_SoftKey_R2#(>H:MFD1_SoftKey_R2)
H145_MFD1_SoftKey_R3#(>H:MFD1_SoftKey_R3)
H145_MFD1_SoftKey_R4#(>H:MFD1_SoftKey_R4)
H145_MFD1_SoftKey_R5#(>H:MFD1_SoftKey_R5)
H145_MFD1_SoftKey_R6#(>H:MFD1_SoftKey_R6)
H145_MFD1_SoftKey_T1#(>H:MFD1_SoftKey_T1)
H145_MFD1_SoftKey_T2#(>H:MFD1_SoftKey_T2)
H145_MFD1_SoftKey_T3#(>H:MFD1_SoftKey_T3)
H145_MFD1_SoftKey_T4#(>H:MFD1_SoftKey_T4)
H145_MFD1_SoftKey_T5#(>H:MFD1_SoftKey_T5)
H145_MFD1_SoftKey_T6#(>H:MFD1_SoftKey_T6)
H145_MFD2_SoftKey_B1#(>H:MFD2_SoftKey_B1)
H145_MFD2_SoftKey_B2#(>H:MFD2_SoftKey_B2)
H145_MFD2_SoftKey_B3#(>H:MFD2_SoftKey_B3)
H145_MFD2_SoftKey_B4#(>H:MFD2_SoftKey_B4)
H145_MFD2_SoftKey_B5#(>H:MFD2_SoftKey_B5)
H145_MFD2_SoftKey_B6#(>H:MFD2_SoftKey_B6)
H145_MFD2_SoftKey_KnobInnerAntiClockwise#(>H:MFD2_SoftKey_KnobInnerAntiClockwise)
H145_MFD2_SoftKey_KnobInnerClockwise#(>H:MFD2_SoftKey_KnobInnerClockwise)
H145_MFD2_SoftKey_KnobInnerPush#(>H:MFD2_SoftKey_KnobInnerPush)
H145_MFD2_SoftKey_KnobInnerPushLong#(>H:MFD2_SoftKey_KnobInnerPushLong)
H145_MFD2_SoftKey_KnobOuterAntiClockwise#(>H:MFD2_SoftKey_KnobOuterAntiClockwise)
H145_MFD2_SoftKey_KnobOuterClockwise#(>H:MFD2_SoftKey_KnobOuterClockwise)
H145_MFD2_SoftKey_L1#(>H:MFD2_SoftKey_L1)
H145_MFD2_SoftKey_L2#(>H:MFD2_SoftKey_L2)
H145_MFD2_SoftKey_L3#(>H:MFD2_SoftKey_L3)
H145_MFD2_SoftKey_L4#(>H:MFD2_SoftKey_L4)
H145_MFD2_SoftKey_L5#(>H:MFD2_SoftKey_L5)
H145_MFD2_SoftKey_L6#(>H:MFD2_SoftKey_L6)
H145_MFD2_SoftKey_R1#(>H:MFD2_SoftKey_R1)
H145_MFD2_SoftKey_R2#(>H:MFD2_SoftKey_R2)
H145_MFD2_SoftKey_R3#(>H:MFD2_SoftKey_R3)
H145_MFD2_SoftKey_R4#(>H:MFD2_SoftKey_R4)
H145_MFD2_SoftKey_R5#(>H:MFD2_SoftKey_R5)
H145_MFD2_SoftKey_R6#(>H:MFD2_SoftKey_R6)
H145_MFD2_SoftKey_T1#(>H:MFD2_SoftKey_T1)
H145_MFD2_SoftKey_T2#(>H:MFD2_SoftKey_T2)
H145_MFD2_SoftKey_T3#(>H:MFD2_SoftKey_T3)
H145_MFD2_SoftKey_T4#(>H:MFD2_SoftKey_T4)
H145_MFD2_SoftKey_T5#(>H:MFD2_SoftKey_T5)
H145_MFD2_SoftKey_T6#(>H:MFD2_SoftKey_T6)
H145_MFD4_SoftKey_B1#(>H:MFD4_SoftKey_B1)
H145_MFD4_SoftKey_B2#(>H:MFD4_SoftKey_B2)
H145_MFD4_SoftKey_B3#(>H:MFD4_SoftKey_B3)
H145_MFD4_SoftKey_B4#(>H:MFD4_SoftKey_B4)
H145_MFD4_SoftKey_B5#(>H:MFD4_SoftKey_B5)
H145_MFD4_SoftKey_B6#(>H:MFD4_SoftKey_B6)
H145_MFD4_SoftKey_KnobInnerAntiClockwise#(>H:MFD4_SoftKey_KnobInnerAntiClockwise)
H145_MFD4_SoftKey_KnobInnerClockwise#(>H:MFD4_SoftKey_KnobInnerClockwise)
H145_MFD4_SoftKey_KnobInnerPush#(>H:MFD4_SoftKey_KnobInnerPush)
H145_MFD4_SoftKey_KnobInnerPushLong#(>H:MFD4_SoftKey_KnobInnerPushLong)
H145_MFD4_SoftKey_KnobOuterAntiClockwise#(>H:MFD4_SoftKey_KnobOuterAntiClockwise)
H145_MFD4_SoftKey_KnobOuterClockwise#(>H:MFD4_SoftKey_KnobOuterClockwise)
H145_MFD4_SoftKey_L1#(>H:MFD4_SoftKey_L1)
H145_MFD4_SoftKey_L2#(>H:MFD4_SoftKey_L2)
H145_MFD4_SoftKey_L3#(>H:MFD4_SoftKey_L3)
H145_MFD4_SoftKey_L4#(>H:MFD4_SoftKey_L4)
H145_MFD4_SoftKey_L5#(>H:MFD4_SoftKey_L5)
H145_MFD4_SoftKey_L6#(>H:MFD4_SoftKey_L6)
H145_MFD4_SoftKey_R1#(>H:MFD4_SoftKey_R1)
H145_MFD4_SoftKey_R2#(>H:MFD4_SoftKey_R2)
H145_MFD4_SoftKey_R3#(>H:MFD4_SoftKey_R3)
H145_MFD4_SoftKey_R4#(>H:MFD4_SoftKey_R4)
H145_MFD4_SoftKey_R5#(>H:MFD4_SoftKey_R5)
H145_MFD4_SoftKey_R6#(>H:MFD4_SoftKey_R6)
H145_MFD4_SoftKey_T1#(>H:MFD4_SoftKey_T1)
H145_MFD4_SoftKey_T2#(>H:MFD4_SoftKey_T2)
H145_MFD4_SoftKey_T3#(>H:MFD4_SoftKey_T3)
H145_MFD4_SoftKey_T4#(>H:MFD4_SoftKey_T4)
H145_MFD4_SoftKey_T5#(>H:MFD4_SoftKey_T5)
H145_MFD4_SoftKey_T6#(>H:MFD4_SoftKey_T6)
H145_AVIONICS_1_OFF#0 (>K:AVIONICS_MASTER_1_SET)
H145_AVIONICS_1_ON#1 (>K:AVIONICS_MASTER_1_SET)
H145_AVIONICS_2_OFF#0 (>K:AVIONICS_MASTER_2_SET)
H145_AVIONICS_2_ON#1 (>K:AVIONICS_MASTER_2_SET)
//Hype Performance Group/H145/Electrical
H145_SDK_OH_BAT_MASTER_ENGAGE#(>H:H145_SDK_OH_BAT_MASTER_ENGAGE)
H145_SDK_OH_BAT_MASTER_OFF#(>H:H145_SDK_OH_BAT_MASTER_OFF)
H145_SDK_OH_BAT_MASTER_ON#(>H:H145_SDK_OH_BAT_MASTER_ON)
H145_SDK_OH_DC_RECEPT_OFF#(>H:H145_SDK_OH_DC_RECEPT_OFF)
H145_SDK_OH_DC_RECEPT_ON#(>H:H145_SDK_OH_DC_RECEPT_ON)
_DISCONTINUED__H145_SDK_OH_STANDBY_BATTERY_ON#1 (>K:H145_SDK_OH_STANDBY_BATTERY_SET)
H145_SDK_OH_COCKPIT_LIGHT_REAR_TOGGLE#(>H:H145_SDK_OH_COCKPIT_LIGHT_REAR_TOGGLE)
H145_SDK_OH_PITOT_1_OFF#(>H:H145_SDK_OH_PITOT_1_OFF)
H145_SDK_OH_PITOT_1_ON#(>H:H145_SDK_OH_PITOT_1_ON)
H145_SDK_OH_PITOT_2_OFF#(>H:H145_SDK_OH_PITOT_2_OFF)
H145_SDK_OH_PITOT_2_ON#(>H:H145_SDK_OH_PITOT_2_ON)
H145_SDK_OH_STANDBY_BATTERY_OFF#(>H:H145_SDK_OH_STANDBY_BATTERY_OFF)
H145_SDK_OH_STANDBY_BATTERY_ON#(>H:H145_SDK_OH_STANDBY_BATTERY_ON)
//Hype Performance Group/H145/Engines
H145_SDK_ECP_FADEC_EMER_1_OFF#(>H:H145_SDK_ECP_FADEC_EMER_1_OFF)
H145_SDK_ECP_FADEC_EMER_1_ON#(>H:H145_SDK_ECP_FADEC_EMER_1_ON)
H145_SDK_ECP_FADEC_EMER_2_OFF#(>H:H145_SDK_ECP_FADEC_EMER_2_OFF)
H145_SDK_ECP_FADEC_EMER_2_ON#(>H:H145_SDK_ECP_FADEC_EMER_2_ON)
H145_SDK_ECP_MAIN_1_FLIGHT#(>H:H145_SDK_ECP_MAIN_1_FLIGHT)
H145_SDK_ECP_MAIN_1_IDLE#(>H:H145_SDK_ECP_MAIN_1_IDLE)
H145_SDK_ECP_MAIN_1_OFF#(>H:H145_SDK_ECP_MAIN_1_OFF)
H145_SDK_ECP_MAIN_2_FLIGHT#(>H:H145_SDK_ECP_MAIN_2_FLIGHT)
H145_SDK_ECP_MAIN_2_IDLE#(>H:H145_SDK_ECP_MAIN_2_IDLE)
H145_SDK_ECP_MAIN_2_OFF#(>H:H145_SDK_ECP_MAIN_2_OFF)
H145_SDK_ECP_MAIN_LATCH_1_OFF#(>H:H145_SDK_ECP_MAIN_LATCH_1_OFF)
H145_SDK_ECP_MAIN_LATCH_1_ON#(>H:H145_SDK_ECP_MAIN_LATCH_1_ON)
H145_SDK_ECP_MAIN_LATCH_2_OFF#(>H:H145_SDK_ECP_MAIN_LATCH_2_OFF)
H145_SDK_ECP_MAIN_LATCH_2_ON#(>H:H145_SDK_ECP_MAIN_LATCH_2_ON)
H145_SDK_ECP_MAIN_1_DOWN#(>H:H145_SDK_ECP_MAIN_1_DOWN)
H145_SDK_ECP_MAIN_1_UP#(>H:H145_SDK_ECP_MAIN_1_UP)
H145_SDK_ECP_MAIN_2_DOWN#(>H:H145_SDK_ECP_MAIN_2_DOWN)
H145_SDK_ECP_MAIN_2_UP#(>H:H145_SDK_ECP_MAIN_2_UP)
//Hype Performance Group/H145/Fuel
H145_SDK_OH_FUEL_ENG1_PRIME_OFF#(>H:H145_SDK_OH_FUEL_ENG1_PRIME_OFF)
H145_SDK_OH_FUEL_ENG1_PRIME_ON#(>H:H145_SDK_OH_FUEL_ENG1_PRIME_ON)
H145_SDK_OH_FUEL_ENG2_PRIME_OFF#(>H:H145_SDK_OH_FUEL_ENG2_PRIME_OFF)
H145_SDK_OH_FUEL_ENG2_PRIME_ON#(>H:H145_SDK_OH_FUEL_ENG2_PRIME_ON)
H145_SDK_OH_FUEL_TRANSFER_AFT_OFF#(>H:H145_SDK_OH_FUEL_TRANSFER_AFT_OFF)
H145_SDK_OH_FUEL_TRANSFER_AFT_ON#(>H:H145_SDK_OH_FUEL_TRANSFER_AFT_ON)
H145_SDK_OH_FUEL_TRANSFER_FWD_OFF#(>H:H145_SDK_OH_FUEL_TRANSFER_FWD_OFF)
H145_SDK_OH_FUEL_TRANSFER_FWD_ON#(>H:H145_SDK_OH_FUEL_TRANSFER_FWD_ON)
//Hype Performance Group/H145/Lights (exterior)
H145HISLON#(>H:H145SDKHISLLAMPON)
//Hype Performance Group/H145/Lights
H145_SDK_OH_INT_LIGHT_CARGO_PAX_OFF#(>H:H145_SDK_OH_INT_LIGHT_CARGO_PAX_OFF)
H145_SDK_OH_INT_LIGHT_CARGO_PAX_ON#(>H:H145_SDK_OH_INT_LIGHT_CARGO_PAX_ON)
H145_SDK_OH_INT_LIGHT_CARGO_PAX_PAX#(>H:H145_SDK_OH_INT_LIGHT_CARGO_PAX_PAX)
H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_ARM#(>H:H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_ARM)
H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_OFF#(>H:H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_OFF)
H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_ON#(>H:H145_SDK_OH_INT_LIGHT_EMERGENCY_EXITS_ON)
H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_OFF#(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_OFF)
H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_ON#(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_ON)
H145_SDK_BEACON_LIGHTS_OFF#(>H:H145_SDK_BEACON_LIGHTS_OFF)
H145_SDK_BEACON_LIGHTS_ON#(>H:H145_SDK_BEACON_LIGHTS_ON)
H145_SDK_LDG_LIGHT_OFF#(>H:H145_SDK_LDG_LIGHT_OFF)
H145_SDK_LDG_LIGHT_ON#(>H:H145_SDK_LDG_LIGHT_ON)
H145_SDK_MASTERBRIGHTNESS_DEC#(>H:H145_SDK_MASTERBRIGHTNESS_DEC)
H145_SDK_MASTERBRIGHTNESS_INC#(>H:H145_SDK_MASTERBRIGHTNESS_INC)
H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_DAY#(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_DAY)
H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_NIGHT#(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_NIGHT)
H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_NVG#(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_NVG)
H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_POT#(>H:H145_SDK_OH_INT_LIGHT_INSTRUMENT_PANEL_POT)
H145_SDK_SL_LIGHT_OFF#(>H:H145_SDK_SL_LIGHT_OFF)
H145_SDK_SL_LIGHT_ON#(>H:H145_SDK_SL_LIGHT_ON)
Landing_Light_OFF#H:H145_SDK_LDG_LIGHT_OFF
Landing_Light_ON#H:H145_SDK_LDG_LIGHT_ON
//Hype Performance Group/H145/Miscellaneous
H145_SDK_DOOR_CARGO_L_TOGGLE#(>H:H145_SDK_DOOR_CARGO_L_TOGGLE)
H145_SDK_DOOR_CARGO_R_TOGGLE#(>H:H145_SDK_DOOR_CARGO_R_TOGGLE)
H145_SDK_DOOR_COCKPIT_L_TOGGLE#(>H:H145_SDK_DOOR_COCKPIT_L_TOGGLE)
H145_SDK_DOOR_COCKPIT_R_TOGGLE#(>H:H145_SDK_DOOR_COCKPIT_R_TOGGLE)
H145_SDK_DOOR_PAX_L_TOGGLE#(>H:H145_SDK_DOOR_PAX_L_TOGGLE)
H145_SDK_DOOR_PAX_R_TOGGLE#(>H:H145_SDK_DOOR_PAX_R_TOGGLE)
H145_SDK_OH_WINDSHIELD_WIPER_SLOW#(>H:H145_SDK_OH_WINDSHIELD_WIPER_SLOW)
H145_SDK_MISC_DME1_TOGGLE#(>H:H145_SDK_MISC_DME1_TOGGLE)
H145_SDK_MISC_DME2_TOGGLE#(>H:H145_SDK_MISC_DME2_TOGGLE)
H145_SDK_MISC_FMS1_OFF#(>H:H145_SDK_MISC_FMS1_OFF)
H145_SDK_MISC_FMS1_ON#(>H:H145_SDK_MISC_FMS1_ON)
H145_SDK_MISC_FMS2_OFF#(>H:H145_SDK_MISC_FMS2_OFF)
H145_SDK_MISC_FMS2_ON#(<H:H145_SDK_MISC_FMS2_ON)
H145_SDK_MISC_MKR_HIGH#(>H:H145_SDK_MISC_MKR_HIGH)
H145_SDK_MISC_MKR_LOW#(>H:H145_SDK_MISC_MKR_LOW)
H145_SDK_MISC_MKR_TOGGLE#(>H:H145_SDK_MISC_MKR_TOGGLE)
H145_SDK_OH_EMER_FLOATS_ARM#(>H:H145_SDK_OH_EMER_FLOATS_ARM)
H145_SDK_OH_EMER_FLOATS_OFF#(>H:H145_SDK_OH_EMER_FLOATS_OFF)
H145_SDK_OH_EMER_FLOATS_TEST#(>H:H145_SDK_OH_EMER_FLOATS_TEST)
H145_SDK_OH_FUZZ_CHIP_BURNER_OFF#(>H:H145_SDK_OH_FUZZ_CHIP_BURNER_OFF)
H145_SDK_OH_FUZZ_CHIP_BURNER_ON#(>H:H145_SDK_OH_FUZZ_CHIP_BURNER_ON)
H145_SDK_OH_LAVCS_OFF#(>H:H145_SDK_OH_LAVCS_OFF)
H145_SDK_OH_LAVCS_PAX#(>H:H145_SDK_OH_LAVCS_PAX)
H145_SDK_OH_LAVCS_PIL#(>H:H145_SDK_OH_LAVCS_PIL)
H145_SDK_OH_WINDSHIELD_WIPER_FAST#(>H:H145_SDK_OH_WINDSHIELD_WIPER_FAST)
H145_SDK_OH_WINDSHIELD_WIPER_OFF#(>H:H145_SDK_OH_WINDSHIELD_WIPER_OFF)
H145_SDK_TABLET_OPENCLOSE#(>H:H145_SDK_TABLET_OPENCLOSE)
H_H145_SDK_MISC_FMS1_TOGGLE#(>H:H145_SDK_MISC_FMS1_TOGGLE)
H_H145_SDK_MISC_FMS2_TOGGLE#(>H:H145_SDK_MISC_FMS2_TOGGLE)
//Hype Performance Group/H145/Radio
H145_SDK_OH_AUDIO_ACAS_MUTE#(>H:H145_SDK_OH_AUDIO_ACAS_MUTE)
H145_SDK_OH_AUDIO_ACAS_NORMAL#(>H:H145_SDK_OH_AUDIO_ACAS_NORMAL)
H145_SDK_OH_AUDIO_ACAS_TEST#(>H:H145_SDK_OH_AUDIO_ACAS_TEST)
H145_SDK_OH_AUDIO_HTAWS_MUTE#(>H:H145_SDK_OH_AUDIO_HTAWS_MUTE)
H145_SDK_OH_AUDIO_HTAWS_NORMAL#(>H:H145_SDK_OH_AUDIO_HTAWS_NORMAL)
H145_SDK_OH_AUDIO_HTAWS_STANDBY#(>H:H145_SDK_OH_AUDIO_HTAWS_STANDBY)
//Hype Performance Group/H145/Safety
H145_SDK_OH_EMER_FLOATS_ARM#(>H:H145_SDK_OH_EMER_FLOATS_ARM)
H145_SDK_OH_EMER_FLOATS_OFF#(>H:H145_SDK_OH_EMER_FLOATS_OFF)
H145_SDK_OH_EMER_FLOATS_TEST#(>H:H145_SDK_OH_EMER_FLOATS_TEST)
H145_SDK_OH_FIRE_ENG1_TEST_EXT#(>H:H145_SDK_OH_FIRE_ENG1_TEST_EXT)
H145_SDK_OH_FIRE_ENG1_TEST_EXT_WARN#(>H:H145_SDK_OH_FIRE_ENG1_TEST_EXT_WARN)
H145_SDK_OH_FIRE_ENG1_TEST_OFF#(>H:H145_SDK_OH_FIRE_ENG1_TEST_OFF)
H145_SDK_OH_FIRE_ENG2_TEST_EXT#(>H:H145_SDK_OH_FIRE_ENG2_TEST_EXT)
H145_SDK_OH_FIRE_ENG2_TEST_EXT_WARN#(>H:H145_SDK_OH_FIRE_ENG2_TEST_EXT_WARN)
H145_SDK_OH_FIRE_ENG2_TEST_OFF#(>H:H145_SDK_OH_FIRE_ENG2_TEST_OFF)
H145_SDK_OH_FUZZ_CHIP_BURNER_OFF#(>H:H145_SDK_OH_FUZZ_CHIP_BURNER_OFF)
H145_SDK_OH_FUZZ_CHIP_BURNER_ON#(>H:H145_SDK_OH_FUZZ_CHIP_BURNER_ON)
H145_SDK_OH_HYD_TEST_OFF#(>H:H145_SDK_OH_HYD_TEST_OFF)
H145_SDK_OH_HYD_TEST_SYS1#(>H:H145_SDK_OH_HYD_TEST_SYS1)
H145_SDK_OH_HYD_TEST_SYS2#(>H:H145_SDK_OH_HYD_TEST_SYS2)
H145_SDK_OH_LAMP_TEST_LAMP#(>H:H145_SDK_OH_LAMP_TEST_LAMP)
H145_SDK_OH_LAMP_TEST_OFF#(>H:H145_SDK_OH_LAMP_TEST_OFF)
H145_SDK_OH_LAMP_TEST_PREFLIGHT#(>H:H145_SDK_OH_LAMP_TEST_PREFLIGHT)
H145_SDK_OH_LAVCS_OFF#(>H:H145_SDK_OH_LAVCS_OFF)
H145_SDK_OH_LAVCS_PAX#(>H:H145_SDK_OH_LAVCS_PAX)
H145_SDK_OH_LAVCS_PIL#(>H:H145_SDK_OH_LAVCS_PIL)
//Hype Performance Group/H145/Warning
H145_SDK_WU_ENG1_FIRE_EXTINGUISH_Warning_Unit#(>H:H145_SDK_WU_ENG1_FIRE_EXTINGUISH Warning Unit)
H145_SDK_WU_ENG1_FIRE_SHUTOFF_Warning_Unit#(>H:H145_SDK_WU_ENG1_FIRE_SHUTOFF Warning Unit)
H145_SDK_WU_ENG2_FIRE_EXTINGUISH_Warning_Unit#(>H:H145_SDK_WU_ENG2_FIRE_EXTINGUISH Warning Unit)
H145_SDK_WU_ENG2_FIRE_SHUTOFF_Warning_Unit#(>H:H145_SDK_WU_ENG2_FIRE_SHUTOFF Warning Unit)
//IniBuilds/A300/Air Condition / Pressurization
A300_Ovhd_Air_Bleed_APU_Bleed_Off#0 (>L:INI_apu_bleed)
A300_Ovhd_Air_Bleed_APU_Bleed_On#1 (>L:INI_apu_bleed)
A300_Ovhd_Air_Bleed_APU_Bleed_Toggle#(L:INI_apu_bleed) ! (>L:INI_apu_bleed)
A300_Ovhd_Air_Bleed_Eng1_HP_Valve_Toggle#(L:INI_bleed_eng1_hp_valve) ! (>L:INI_bleed_eng1_hp_valve)
A300_Ovhd_Air_Bleed_Eng1_Valve_Toggle#(L:INI_ENG1_BLEED) ! (>L:INI_ENG1_BLEED)
A300_Ovhd_Air_Bleed_Eng2_HP_Valve_Toggle#(L:INI_bleed_eng2_hp_valve) ! (>L:INI_bleed_eng2_hp_valve)
A300_Ovhd_Air_Bleed_Eng2_Valve_Toggle#(L:INI_ENG2_BLEED) ! (>L:INI_ENG2_BLEED)
A300_Ovhd_Air_Bleed_XFeed_Mode_Toggle#(L:INI_XBLEED_MODE) ! (>L:INI_XBLEED_MODE)
A300_Ovhd_Air_Bleed_XFeed_Valve_Button#(L:INI_XBLEED_MODE, Bool) if{ (L:INI_XBLEED) ! (>L:INI_XBLEED) } (L:INI_XBLEED) (>L:INI_XBLEED_BUTTON) 
A300_Ovhd_Cabin_Auto_Press_Knob_Dec#(L:INI_CABIN_AUTO_PRESS_ACTUAL) 0.5 - 0 max 10 min (>L:INI_CABIN_AUTO_PRESS_ACTUAL)
A300_Ovhd_Cabin_Auto_Press_Knob_Inc#(L:INI_CABIN_AUTO_PRESS_ACTUAL) 0.5 + 0 max 10 min (>L:INI_CABIN_AUTO_PRESS_ACTUAL)
A300_Ovhd_Cabin_Outflow_Aft_Guard_Toggle#(L:__GUARD_PRESS_OUTFLOW_AFT_State) ! (>L:__GUARD_PRESS_OUTFLOW_AFT_State)
A300_Ovhd_Cabin_Outflow_After_Button_Toggle#(L:INI_CABIN_OUTFLOW_AFTER_BUTTON) ! (>L:INI_CABIN_OUTFLOW_AFTER_BUTTON) 
A300_Ovhd_Cabin_Outflow_Forward_Button_Toggle#(L:INI_CABIN_OUTFLOW_FORWARD_BUTTON) ! (>L:INI_CABIN_OUTFLOW_FORWARD_BUTTON) 
A300_Ovhd_Cabin_Outflow_Fwd_Guard_Toggle#(L:__GUARD_PRESS_OUTFLOW_FWD_State) ! (>L:__GUARD_PRESS_OUTFLOW_FWD_State)
A300_Ovhd_Cabin_Sys1_Button#1 (>L:INIDR_CABIN_SYS1_BUTTON)
A300_Ovhd_Cabin_Sys1_Regulator_Button#1 (>L:INIDR_CABIN_SYS1_REGULATOR_BUTTON)
A300_Ovhd_Cabin_Sys2_Button#1 (>L:INIDR_CABIN_SYS2_BUTTON)
A300_Ovhd_Cabin_Sys2_Regulator_Button#1 (>L:INIDR_CABIN_SYS2_REGULATOR_BUTTON)
A300_Ovhd_Compt_Aft_Cabin_Knob_Dec#(L:INI_AIRCOND_LVL_4) 5 - 0 max (>L:INI_AIRCOND_LVL_4) 
A300_Ovhd_Compt_Aft_Cabin_Knob_Inc#(L:INI_AIRCOND_LVL_4) 5 + 100 min (>L:INI_AIRCOND_LVL_4) 
A300_Ovhd_Compt_Bulk_Cargo_Knob_Dec#(L:INI_AIRCOND_LVL_5) 5 - 0 max (>L:INI_AIRCOND_LVL_5) 
A300_Ovhd_Compt_Bulk_Cargo_Knob_Inc#(L:INI_AIRCOND_LVL_5) 5 + 100 min (>L:INI_AIRCOND_LVL_5) 
A300_Ovhd_Compt_Cockpit_Knob_Dec#(L:INI_AIRCOND_LVL_1) 5 - 0 max (>L:INI_AIRCOND_LVL_1) 
A300_Ovhd_Compt_Cockpit_Knob_Inc#(L:INI_AIRCOND_LVL_1) 5 + 100 min (>L:INI_AIRCOND_LVL_1) 
A300_Ovhd_Compt_Econ_Flow_Toggle#(L:INI_econ_flow_selected) ! (>L:INI_econ_flow_selected) 
A300_Ovhd_Compt_Fwd_Cabin_Knob_Dec#(L:INI_AIRCOND_LVL_2) 5 - 0 max (>L:INI_AIRCOND_LVL_2) 
A300_Ovhd_Compt_Fwd_Cabin_Knob_Inc#(L:INI_AIRCOND_LVL_2) 5 + 100 min (>L:INI_AIRCOND_LVL_2) 
A300_Ovhd_Compt_Fwd_Cargo_Knob_Dec#(L:INI_AIRCOND_LVL_6) 5 - 0 max (>L:INI_AIRCOND_LVL_6) 
A300_Ovhd_Compt_Fwd_Cargo_Knob_Inc#(L:INI_AIRCOND_LVL_6) 5 + 100 min (>L:INI_AIRCOND_LVL_6) 
A300_Ovhd_Compt_Hot_Air_Supply_Toggle#(L:INI_HOT_AIR_SUPPLY_ON) ! (>L:INI_HOT_AIR_SUPPLY_ON)
A300_Ovhd_Compt_Isol_Valve_Left_Toggle#(L:INI_ISOLATION_VALVE_LEFT) ! (>L:INI_ISOLATION_VALVE_LEFT)
A300_Ovhd_Compt_Isol_Valve_Right_Toggle#(L:INI_ISOLATION_VALVE_RIGHT) ! (>L:INI_ISOLATION_VALVE_RIGHT)
A300_Ovhd_Compt_Max_Cool_Toggle#(L:INI_max_cool) ! (>L:INI_max_cool)
A300_Ovhd_Compt_Mid_Cabin_Knob_Dec#(L:INI_AIRCOND_LVL_3) 5 - 0 max (>L:INI_AIRCOND_LVL_3) 
A300_Ovhd_Compt_Mid_Cabin_Knob_Inc#(L:INI_AIRCOND_LVL_3) 5 + 100 min (>L:INI_AIRCOND_LVL_3) 
A300_Ovhd_Compt_Pack_Valve_1_Press#(L:INI_PACK1_BUTTON) ! (>L:INI_PACK1_BUTTON)
A300_Ovhd_Compt_Pack_Valve_2_Press#(L:INI_PACK2_BUTTON) ! (>L:INI_PACK2_BUTTON)
A300_Ovhd_Compt_Pressure_Selector_CRT#2 (>L:INI_pressure_selector_indicator_actual)
A300_Ovhd_Compt_Pressure_Selector_Cabin_Aft#3 (>L:INI_pressure_selector_indicator_actual)
A300_Ovhd_Compt_Pressure_Selector_Cabin_Fwd#5 (>L:INI_pressure_selector_indicator_actual)
A300_Ovhd_Compt_Pressure_Selector_Cabin_Mid#4 (>L:INI_pressure_selector_indicator_actual)
A300_Ovhd_Compt_Pressure_Selector_Cargo_Bulk#1 (>L:INI_pressure_selector_indicator_actual)
A300_Ovhd_Compt_Pressure_Selector_Cargo_Fwd#0 (>L:INI_pressure_selector_indicator_actual)
A300_Ovhd_Compt_Pressure_Selector_Cockpit#6 (>L:INI_pressure_selector_indicator_actual)
A300_Ovhd_Compt_Ram_Air_Button_Guard_Toggle#(L:__GUARD_RAM_AIR_State) ! (>L:__GUARD_RAM_AIR_State)
A300_Ovhd_Compt_Ram_Air_Toggle#(L:INI_RAM_AIR_ON) ! (>L:INI_RAM_AIR_ON) 
A300_Ovhd_Man_Press_Toggle#1 (>L:INIDR_CABIN_MAN_PRESS_BUTTON)
A300_Ovhd_Man_V_S_Control_Dn#2 (>L:INI_MAN_VS_CONTROL_SWITCH)
A300_Ovhd_Man_V_S_Control_Mid#1 (>L:INI_MAN_VS_CONTROL_SWITCH)
A300_Ovhd_Man_V_S_Control_Up#0 (>L:INI_MAN_VS_CONTROL_SWITCH)
A300_Ovhd_Pack1_Man_Ctl_Switch_Cold_Press#2 (>L:INI_PACK1_MAN_SWITCH) 
A300_Ovhd_Pack1_Man_Ctl_Switch_Hot_Press#0 (>L:INI_PACK1_MAN_SWITCH) 
A300_Ovhd_Pack1_Man_Ctl_Switch_Release#1 (>L:INI_PACK1_MAN_SWITCH) 
A300_Ovhd_Pack1_Mode_Toggle#(L:INI_bleed_pack1_mode) ! (>L:INI_bleed_pack1_mode)
A300_Ovhd_Pack2_Man_Ctl_Switch_Cold_Press#2 (>L:INI_PACK2_MAN_SWITCH) 
A300_Ovhd_Pack2_Man_Ctl_Switch_Hot_Press#0 (>L:INI_PACK2_MAN_SWITCH) 
A300_Ovhd_Pack2_Man_Ctl_Switch_Release#1 (>L:INI_PACK2_MAN_SWITCH) 
A300_Ovhd_Pack2_Mode_Toggle#(L:INI_bleed_pack2_mode) ! (>L:INI_bleed_pack2_mode)
A300_Ovhd_Vent_Cargo_Valve_Off_Indicator#(L:INI_CARGO_VALVE, Bool) ! 
A300_Ovhd_Vent_Cargo_Valve_Toggle#(L:INI_CARGO_VALVE) ! (>L:INI_CARGO_VALVE)
A300_Ovhd_Vent_Extract_Valve_Toggle#(L:INIDR_vent_extract_valve) ! (>L:INIDR_vent_extract_valve) 
A300_Ovhd_Vent_Gnd_Ctl_Off_Indicator#(L:INI_VENT_GND_CTL, Bool) ! 
A300_Ovhd_Vent_Gnd_Ctl_Toggle#(L:INI_VENT_GND_CTL) ! (>L:INI_VENT_GND_CTL)
A300_Ovhd_Vent_Gnd_Ovrd_On_Indicator#(L:INI_VENT_GND_OVRD, Bool)
A300_Ovhd_Vent_Gnd_Ovrd_Toggle#(L:INI_VENT_GND_OVRD) ! (>L:INI_VENT_GND_OVRD)
A300_Ovhd_Vent_Ovbd_Valve_Toggle#(L:INIDR_vent_outboard_valve) ! (>L:INIDR_vent_outboard_valve) 
//IniBuilds/A300/Anti-Ice
A300_Ovhd_Anti_Ice_Eng_1_Toggle#(L:INI_ENG1_ANTI_ICE, Bool) ! (>L:INI_ENG1_ANTI_ICE, Bool) 
A300_Ovhd_Anti_Ice_Eng_2_Toggle#(L:INI_ENG2_ANTI_ICE, Bool) ! (>L:INI_ENG2_ANTI_ICE, Bool) 
A300_Ovhd_Anti_Ice_Wing_ALTN_Mode_Toggle#(L:INI_ANTI_ICE_WING_MODE, Bool) ! (>L:INI_ANTI_ICE_WING_MODE, Bool)
A300_Ovhd_Anti_Ice_Wing_Supply_Toggle#(L:INI_WING_ANTI_ICE, Bool) ! (>L:INI_WING_ANTI_ICE, Bool)
A300_Ovhd_Probe_Heat_Capt_Toggle#(L:INI_PROBE_HEAT_CAPT) ! (>L:INI_PROBE_HEAT_CAPT) 
A300_Ovhd_Probe_Heat_FO_Toggle#(L:INI_PROBE_HEAT_COPILOT) ! (>L:INI_PROBE_HEAT_COPILOT) 
A300_Ovhd_Probe_Heat_Standby_Toggle#(L:INI_PROBE_HEAT_STANDBY) ! (>L:INI_PROBE_HEAT_STANDBY)
A300_Ovhd_Window_Heater_Left_Lat_Toggle#(L:INI_WINDOW_HEAT1) ! (>L:INI_WINDOW_HEAT1)
A300_Ovhd_Window_Heater_Left_WSLO_Toggle#(L:INI_WINDOW_HEAT2) ! (>L:INI_WINDOW_HEAT2)
A300_Ovhd_Window_Heater_Right_Lat_Toggle#(L:INI_WINDOW_HEAT4) ! (>L:INI_WINDOW_HEAT4)
A300_Ovhd_Window_Heater_Right_WSLO_Toggle#(L:INI_WINDOW_HEAT3) ! (>L:INI_WINDOW_HEAT3)
//IniBuilds/A300/Autopilot
A300_AP1_Toggle_#1 (>L:INI_AP1_BUTTON)
A300_AP2_Toggle#1 (>L:INI_AP2_BUTTON)
A300_AP_ALT_HLD_Button#1 (>L:AP1_BUTTON)
A300_AP_Altitude_Dial_DN#1 (>L:INI_ALTITUDE_DIAL_DN_COMMAND)
A300_AP_Altitude_Dial_Up#1 (>L:INI_ALTITUDE_DIAL_UP_COMMAND)
A300_AP_Altitude_Pull#1 (>L:INI_FCU_ALTITUDE_PULL_COMMAND)
A300_AP_Altitude_Push#1 (>L:INI_FCU_ALTITUDE_PUSH_COMMAND)
A300_AP_Auto_Throttle#1 (>L:AP8_BUTTON)
A300_AP_CWS_CMD_Toggle#1 (>L:INI_CWS_COMMAND)
A300_AP_Heading_Dial_Dn#1 (>L:INI_HEADING_DIAL_DN_COMMAND)
A300_AP_Heading_Dial_UP#1 (>L:INI_HEADING_DIAL_UP_COMMAND)
A300_AP_Heading_Managed#1 (>L:INI_FCU_MANAGED_HEADING_BUTTON)
A300_AP_Heading_Select#1 (>L:INI_FCU_SELECTED_HEADING_BUTTON)
A300_AP_Heading_Sync#1 (>L:INI_FCU_SYNC_HEADING_BUTTON)
A300_AP_LAND_Button#1 (>L:AP7_BUTTON)
A300_AP_LOC_V_L_BUTTON#1 (>L:AP6_BUTTON)
A300_AP_LVL_CHG#1 (>L:AP2_BUTTON)
A300_AP_NAV_Button#1 (>L:INI_FCU_MANAGED_HEADING_BUTTON)
A300_AP_PROFILE_Button#1 (>L:AP3_BUTTON)
A300_AP_Speed_Knob_Dec#1 (>L:INI_AIRSPEED_DIAL_DN_COMMAND) 
A300_AP_Speed_Knob_Inc#1 (>L:INI_AIRSPEED_DIAL_UP_COMMAND) 
A300_AP_Speed_Knob_Pull#1 (>L:INI_FCU_SELECTED_SPEED_BUTTON)
A300_AP_Speed_Knob_Push#1 (>L:INI_FCU_MANAGED_SPEED_BUTTON)
A300_AP_VS_Dial_DN#1 (>L:INI_VVI_DIAL_DN_COMMAND)
A300_AP_VS_Dial_Up#1 (>L:INI_VVI_DIAL_UP_COMMAND)
A300_AP_VS_Pull#1 (>L:AP9_BUTTON)
A300_Autoland_Light_Test_Switch#(L:INI_AUTOLAND_LIGHT_TEST) ! (>L:INI_AUTOLAND_LIGHT_TEST)
A300_SPD_MACH_Button#1 (>L:INI_SPD_MACH_BUTTON)
A300_Stop_Rudder_Input_Test_Button#(L:INI_STOP_RUDDER_INPUT_TEST_BUTTON) ! (>L:INI_STOP_RUDDER_INPUT_TEST_BUTTON)
A300_Takeoff_Toggle#1 (>L:INI_takeoff_toggle)
A300_Yoke_Autopilot_Disconnect_Push#1 (>K:AUTOPILOT_OFF)
//IniBuilds/A300/Autothrust System
A300_AP_ATHR_Button#1 (>L:AP8_BUTTON)
A300_Ovhd_ATS_1_Switch_OFF#0 (>L:INI_autothrottle_master_switch1)
A300_Ovhd_ATS_1_Switch_ON#1 (>L:INI_autothrottle_master_switch1)
A300_Ovhd_ATS_2_Switch_OFF#0 (>L:INI_autothrottle_master_switch2)
A300_Ovhd_ATS_2_Switch_ON#1 (>L:INI_autothrottle_master_switch2)
A300_Ovhd_Eng_Trim_Guard_Toggle#(L:__GUARD_ENG_TRIM_State) ! (>L:__GUARD_ENG_TRIM_State)
A300_Ovhd_Engine_Trim_Toggle#(L:__GUARD_ENG_TRIM_State) ! if{ 1 (>L:__GUARD_ENG_TRIM_State) } (L:INI_ENG_TRIM) ! (>L:INI_ENG_TRIM)
A300_AT_Disconnect#1 (>K:AUTO_THROTTLE_DISCONNECT)
//IniBuilds/A300/Avionics
A300_ADC_Inst_FO_Toggle#(L:INIDR_fo_switch_adc_inst_fo1) ! (>L:INIDR_fo_switch_adc_inst_fo1)
A300_ATT_HDG_FO_Toggle#1 (>L:INI_FO_ATT_HDG_COMMAND)
A300_Capt_Terr_Mode_GPWS_Toggle#(L:INIDR_terr_mode) ! (>L:INIDR_terr_mode)
A300_Cpt_ADC_Inst_Toggle#(L:INIDR_capt_switch_adc_inst_fo1) ! (>L:INIDR_capt_switch_adc_inst_fo1)
A300_Cpt_ATT_HDG_Toggle#1 (>L:INI_CAPT_ATT_HDG_COMMAND)
A300_Cpt_FD_Toggle#(L:INIDR_capt_switch_fd_fo1) ! (>L:INIDR_capt_switch_fd_fo1)
A300_Cpt_PFD_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_60) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_60) l0 60 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_Cpt_PFD_Brightness_Knob_Inc#(L:LIGHTING_POTENTIOMETER_60) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_60) l0 60 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_Cpt_PFD_ND_XFR_Toggle#(L:INIDR_pfd_nd_xfr) ! (>L:INIDR_pfd_nd_xfr)
A300_FD_FPV__Switch_Capt_OFF#0 (>L:INI_FDIR_SWITCH_CAPT)
A300_FD_FPV__Switch_Capt_ON#1 (>L:INI_FDIR_SWITCH_CAPT)
A300_FD_FPV__Switch_Capt_UP#2 (>L:INI_FDIR_SWITCH_CAPT)
A300_FO_EFIS_SGU_Toggle#1 (>L:INI_FO_SGU_COMMAND)
A300_FO_FD_Toggle#(L:INIDR_fo_switch_fd_fo1) ! (>L:INIDR_fo_switch_fd_fo1)
A300_FO_ND_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_63) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_63) l0 63 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_FO_ND_Brightness_Knob_Inc#(L:LIGHTING_POTENTIOMETER_63) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_63) l0 63 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_FO_PFD_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_62) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_62) l0 62 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_FO_PFD_Brightness_Knob_Inc#(L:LIGHTING_POTENTIOMETER_62) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_62) l0 62 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_FO_PFD_ND_XFR_Toggle#(L:INIDR_pfd_nd_xfr) ! (>L:INIDR_pfd_nd_xfr)
A300_FO_Terr_Mode_GPWS_Toggle#(L:INI_terr_mode) ! (>L:INI_terr_mode)
A300_GPWS_Flap_Switch_Flap_Ovrd#1 (>L:INI_GPWS_FLAP_SWITCH)
A300_GPWS_Flap_Switch_Norm#0 (>L:INI_GPWS_FLAP_SWITCH)
A300_GPWS_Flap_Switch_Off#2 (>L:INI_GPWS_FLAP_SWITCH)
A300_Landing_Elevation_Knob_Dec#(L:INI_landing_elevation, Number) 50 - (>L:INI_landing_elevation, Number)
A300_Landing_Elevation_Knob_Inc#(L:INI_landing_elevation, Number) 50 + (>L:INI_landing_elevation, Number)
A300_ND_Brightness_Inner_Knob_Dec#(L:LIGHTING_POTENTIOMETER_12) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_ND_Brightness_Inner_Knob_Inc#(L:LIGHTING_POTENTIOMETER_12) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_ND_Brightness_Outer_Knob_Dec#(L:LIGHTING_POTENTIOMETER_61) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_61) l0 61 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_ND_Brightness_Outer_Knob_Inc#(L:LIGHTING_POTENTIOMETER_61) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_61) l0 61 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_TERR_Button_CPT_Toggle#(L:INI_TERR_ON_CPT) ! (>L:INI_TERR_ON_CPT)
A300_TERR_Button_FO_Toggle#(L:INI_TERR_ON_FO) ! (>L:INI_TERR_ON_FO)
//IniBuilds/A300/Controls
A300_Capt_Yoke_Trim_Switch_Down#2 (>L:INI_CPT_YOKE_TRIM_SWITCH)
A300_Capt_Yoke_Trim_Switch_Release#1 (>L:INI_CPT_YOKE_TRIM_SWITCH)
A300_Capt_Yoke_Trim_Switch_Up#0 (>L:INI_CPT_YOKE_TRIM_SWITCH)
A300_FO_Yoke_Trim_Switch_Down#2 (>L:INI_FO_YOKE_TRIM_SWITCH)
A300_FO_Yoke_Trim_Switch_Release#1 (>L:INI_FO_YOKE_TRIM_SWITCH)
A300_FO_Yoke_Trim_Switch_Up#0 (>L:INI_FO_YOKE_TRIM_SWITCH)
A300_GPWS_Landing_Toggle#(L:INI_GPWS_LANDING_SWITCH) ! (>L:INI_GPWS_LANDING_SWITCH) 
A300_Ovhd_Pitch_Trim1_OFF#0 (>L:INI_pitch_trim1)
A300_Ovhd_Pitch_Trim1_ON#1 (>L:INI_pitch_trim1)
A300_Ovhd_Pitch_Trim2_OFF#0 (>L:INI_pitch_trim2)
A300_Ovhd_Pitch_Trim2_ON#1 (>L:INI_pitch_trim2)
A300_Ovhd_Yaw_Damper_1_OFF#0 (>L:INI_yaw_damper1)
A300_Ovhd_Yaw_Damper_1_ON#1 (>L:INI_yaw_damper1)
A300_Ovhd_Yaw_Damper_2_OFF#0 (>L:INI_yaw_damper2)
A300_Ovhd_Yaw_Damper_2_ON#1 (>L:INI_yaw_damper2)
A300_Ped_Spoilers_Arm_Toggle#(L:INI_SPOILERS_ARMED, Bool) ! (L:INI_SPOILERS_HANDLE_POSITION, position 16k) 0 == and if{ 1 } els{ 0 } (>K:SPOILERS_ARM_SET) 
A300_Rudder_Trim_Knob_Left#(>K:RUDDER_TRIM_LEFT)
A300_Rudder_Trim_Knob_Right#(>K:RUDDER_TRIM_RIGHT)
A300_Rudder_Trim_Reset_Button_Press#1 (>L:INI_RESET_RUDDER_TRIM_COMMAND)
A300_Rudder_Trim_Reset_Button_Release#0 (>L:INI_RESET_RUDDER_TRIM_COMMAND)
Parking_Brake_Toggle#1 (>K:PARKING_BRAKES)
//IniBuilds/A300/ECAM
A300_ECAM_AC_Push#1 (>L:PUSH_ECAM_ELEC_AC)
A300_ECAM_APU_Push#1 (>L:PUSH_ECAM_APU)
A300_ECAM_BLEED_Push#1 (>L:PUSH_ECAM_BLEED)
A300_ECAM_CLR_Push#1 (>L:PUSH_EWD_CLR)
A300_ECAM_COND_Push#1 (>L:PUSH_ECAM_COND)
A300_ECAM_DC_Push#1 (>L:PUSH_ECAM_ELEC_DC)
A300_ECAM_DOOR_Push#1 (>L:PUSH_ECAM_DOOR)
A300_ECAM_ENG_Push#1 (>L:PUSH_ECAM_ENG)
A300_ECAM_EWD_RCL_Press#1 (>L:PUSH_EWD_RCL)
A300_ECAM_EWD_STS_Push#1 (>L:PUSH_EWD_STS)
A300_ECAM_FCTL_Push#1 (>L:PUSH_ECAM_FCTL)
A300_ECAM_FUEL_Push#1 (>L:PUSH_ECAM_FUEL)
A300_ECAM_HYD_Push#1 (>L:PUSH_ECAM_HYD)
A300_ECAM_Left_Display_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_64) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_64) l0 64 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_ECAM_Left_Display_Brightness_Knob_Inc#(>L:LIGHTING_POTENTIOMETER_64) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_64) l0 64 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_ECAM_PRESS_Push#1 (>L:PUSH_ECAM_PRESS)
A300_ECAM_Right_Display_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_65) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_65) l0 65 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_ECAM_Right_Display_Brightness_Knob_Inc#(L:LIGHTING_POTENTIOMETER_65) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_65) l0 65 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_ECAM_SGU_1_Toggle#(L:INI_SGU1) ! (>L:INI_SGU1)
A300_ECAM_SGU_2_Toggle#(L:INI_SGU2) ! (>L:INI_SGU2)
A300_ECAM_WHEEL_Push#1 (>L:PUSH_ECAM_WHEEL)
//IniBuilds/A300/EFIS
A300_Cpt_EFIS_SGU_Toggle#1 (>L:INI_CAPT_SGU_COMMAND)
A300_EFIS_Cpt_ARPT_Button#1 (>L:INI_EFIS_CPT_ARPT_BUTTON)
A300_EFIS_Cpt_CSTR_Button#1 (>L:INI_EFIS_CPT_CSTR_BUTTON)
A300_EFIS_Cpt_DH_Button#1 (>L:INI_CPT_DH_COMMAND)
A300_EFIS_Cpt_DH_Knob_Dec#1 (>L:INI_FPA_DH_KNOB_TURNED_ANTICLOCKWISE)
A300_EFIS_Cpt_DH_Knob_Inc#1 (>L:INI_FPA_DH_KNOB_TURNED_CLOCKWISE)
A300_EFIS_Cpt_FPA_Button#1 (>L:INI_CPT_FPA_COMMAND)
A300_EFIS_Cpt_NDB_Button#1 (>L:INI_EFIS_CPT_NDB_BUTTON)
A300_EFIS_Cpt_VOR_Button#1 (>L:INI_EFIS_CPT_VOR_BUTTON)
A300_EFIS_Cpt_WPT_Button#1 (>L:INI_EFIS_CPT_FIXES_BUTTON)
A300_EFIS_FO_ARPT_Button#1 (>L:INI_EFIS_FO_ARPT_BUTTON)
A300_EFIS_FO_CSTR_Button#1 (>L:INI_EFIS_FO_CSTR_BUTTON)
A300_EFIS_FO_DH_Button#1 (>L:INI_FO_DH_COMMAND)
A300_EFIS_FO_DH_Knob_Dec#1 (>L:INI_FPA_DH_KNOB_FO_TURNED_ANTICLOCKWISE)
A300_EFIS_FO_DH_Knob_Inc#1 (>L:INI_FPA_DH_KNOB_FO_TURNED_CLOCKWISE)
A300_EFIS_FO_FPA_Button#1 (>L:INI_FO_FPA_COMMAND)
A300_EFIS_FO_NDB_Button#1 (>L:INI_EFIS_FO_NDB_BUTTON)
A300_EFIS_FO_VOR_Button#1 (>L:INI_EFIS_FO_VOR_BUTTON)
A300_EFIS_FO_WPT_Button#1 (>L:INI_EFIS_FO_FIXES_BUTTON)
A300_EFIS_Mode_Capt_Dec#(L:INI_map_mode_capt_switch) -- 0 max 4 min (>L:INI_map_mode_capt_switch)
A300_EFIS_Mode_Capt_Inc#(L:INI_map_mode_capt_switch) ++ 0 max 4 min (>L:INI_map_mode_capt_switch)
A300_EFIS_Mode_Cpt_ARC#2 (>L:INI_map_mode_capt_switch)
A300_EFIS_Mode_Cpt_MAP#3 (>L:INI_map_mode_capt_switch)
A300_EFIS_Mode_Cpt_PLAN#4 (>L:INI_map_mode_capt_switch)
A300_EFIS_Mode_Cpt_ROSE#1 (>L:INI_map_mode_capt_switch)
A300_EFIS_Mode_Cpt_TEST#0 (>L:INI_map_mode_capt_switch)
A300_EFIS_Mode_FO_ARC#2 (>L:INI_map_mode_fo_switch)
A300_EFIS_Mode_FO_Dec#(L:INI_map_mode_fo_switch) -- 0 max 4 min (>L:INI_map_mode_fo_switch)
A300_EFIS_Mode_FO_Inc#(L:INI_map_mode_fo_switch) ++ 0 max 4 min (>L:INI_map_mode_fo_switch)
A300_EFIS_Mode_FO_MAP#3 (>L:INI_map_mode_fo_switch)
A300_EFIS_Mode_FO_PLAN#4 (>L:INI_map_mode_fo_switch)
A300_EFIS_Mode_FO_ROSE#1 (>L:INI_map_mode_fo_switch)
A300_EFIS_Mode_FO_TEST#0 (>L:INI_map_mode_fo_switch)
A300_EFIS_Range_Capt_120#3 (>L:INI_map_range_capt_switch)
A300_EFIS_Range_Capt_15#0 (>L:INI_map_range_capt_switch)
A300_EFIS_Range_Capt_240#4 (>L:INI_map_range_capt_switch)
A300_EFIS_Range_Capt_30#1 (>L:INI_map_range_capt_switch)
A300_EFIS_Range_Capt_60#2 (>L:INI_map_range_capt_switch)
A300_EFIS_Range_Capt_Dec#(L:INI_map_range_capt_switch) -- 0 max 4 min (>L:INI_map_range_capt_switch)
A300_EFIS_Range_Capt_Inc#(L:INI_map_range_capt_switch) ++ 0 max 4 min (>L:INI_map_range_capt_switch)
A300_EFIS_Range_FO_120#3 (>L:INI_map_range_fo_switch)
A300_EFIS_Range_FO_15#0 (>L:INI_map_range_fo_switch)
A300_EFIS_Range_FO_240#4 (>L:INI_map_range_fo_switch)
A300_EFIS_Range_FO_30#1 (>L:INI_map_range_fo_switch)
A300_EFIS_Range_FO_60#2 (>L:INI_map_range_fo_switch)
A300_EFIS_Range_FO_Dec#(L:INI_map_range_fo_switch) -- 0 max 4 min (>L:INI_map_range_fo_switch)
A300_EFIS_Range_FO_Inc#(L:INI_map_range_fo_switch) ++ 0 max 4 min (>L:INI_map_range_fo_switch)
A300_EFIS_Selected_Nav_Capt_Switch_ILS#2 (>L:INI_efis_selected_nav_capt)
A300_EFIS_Selected_Nav_Capt_Switch_NAV#1 (>L:INI_efis_selected_nav_capt)
A300_EFIS_Selected_Nav_Capt_Switch_VOR#0 (>L:INI_efis_selected_nav_capt)
//IniBuilds/A300/Electrical
A300_Ovhd_Elec_AC_Bus_Selector_APU_Gen#6 (>L:INI_elec_ind_ac_selector)
A300_Ovhd_Elec_AC_Bus_Selector_Bus1#0 (>L:INI_elec_ind_ac_selector)
A300_Ovhd_Elec_AC_Bus_Selector_Bus2#1 (>L:INI_elec_ind_ac_selector)
A300_Ovhd_Elec_AC_Bus_Selector_EMER#3 (>L:INI_elec_ind_ac_selector)
A300_Ovhd_Elec_AC_Bus_Selector_ESS#2 (>L:INI_elec_ind_ac_selector)
A300_Ovhd_Elec_AC_Bus_Selector_Ext_Pwr#7 (>L:INI_elec_ind_ac_selector)
A300_Ovhd_Elec_AC_Bus_Selector_Gen1#4 (>L:INI_elec_ind_ac_selector)
A300_Ovhd_Elec_AC_Bus_Selector_Gen2#5 (>L:INI_elec_ind_ac_selector)
A300_Ovhd_Elec_Apu_Gen_Toggle#(L:INI_apu_gen_on) ! (>L:INI_apu_gen_on)
A300_Ovhd_Elec_Bat1_Toggle#(L:INI_BAT1_ON) ! (>L:INI_BAT1_ON)
A300_Ovhd_Elec_Bat2_Toggle#(L:INI_BAT2_ON) ! (>L:INI_BAT2_ON)
A300_Ovhd_Elec_Bat3_Toggle#(L:INI_BAT3_ON) ! (>L:INI_BAT3_ON)
A300_Ovhd_Elec_DC_Bus_Selector_Bat1#0 (>L:INI_elec_ind_dc_selector)
A300_Ovhd_Elec_DC_Bus_Selector_Bat2#1 (>L:INI_elec_ind_dc_selector)
A300_Ovhd_Elec_DC_Bus_Selector_Bat3#2 (>L:INI_elec_ind_dc_selector)
A300_Ovhd_Elec_DC_Bus_Selector_ESS#3 (>L:INI_elec_ind_dc_selector)
A300_Ovhd_Elec_DC_Bus_Selector_ESS_Bus#7 (>L:INI_elec_ind_dc_selector)
A300_Ovhd_Elec_DC_Bus_Selector_TR1#4 (>L:INI_elec_ind_dc_selector)
A300_Ovhd_Elec_DC_Bus_Selector_TR2#5 (>L:INI_elec_ind_dc_selector)
A300_Ovhd_Elec_Ext_Pwr_Toggle#(L:INI_gpu_avail, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:1, Bool) if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } }
A300_Ovhd_Elec_Gen1_Toggle#(L:INI_eng1_gen_on) ! (>L:INI_eng1_gen_on)
A300_Ovhd_Elec_Gen2_Toggle#(L:INI_eng2_gen_on) ! (>L:INI_eng2_gen_on)
Battery_1_Off#0 (>L:INI_BAT1_ON)
Battery_1_On#1 (>L:INI_BAT1_ON)
Battery_2_Off#0 (>L:INI_BAT2_ON)
Battery_2_On#1 (>L:INI_BAT2_ON)
Battery_3_Off#0 (>L:INI_BAT3_ON)
Battery_3_On#1 (>L:INI_BAT3_ON)
Overhead_Galley_Shed_Toggle#(L:INI_galley_shed) ! (>L:INI_galley_shed)
//IniBuilds/A300/Engines
A300_APU_Fuel_Pump_Override_Button#(L:INI_APU_FUEL_OVRD) ! (>L:INI_APU_FUEL_OVRD)
A300_Ovhd_APU_Master_Switch_Toggle#(L:INI_apu_master_switch) ! (>L:INI_apu_master_switch) 
A300_Ovhd_APU_Start_Button#(L:INI_apu_master_switch, Bool) if{ 1 (>L:INI_APU_START_BUTTON) }
A300_Ovhd_Engine_Ignition_Knob_A#1 (>L:INI_eng_ignition_switch)
A300_Ovhd_Engine_Ignition_Knob_B#0 (>L:INI_eng_ignition_switch)
A300_Ovhd_Engine_Ignition_Knob_Cont_Relight#4 (>L:INI_eng_ignition_switch)
A300_Ovhd_Engine_Ignition_Knob_Crank#2 (>L:INI_eng_ignition_switch)
A300_Ovhd_Engine_Ignition_Knob_Off#3 (>L:INI_eng_ignition_switch)
A300_Ovhd_Engine_Start_1_Toggle#(L:INI_ENG1_STARTER) ! (>L:INI_ENG1_STARTER)
A300_Ovhd_Engine_Start_2_Toggle#(L:INI_ENG2_STARTER) ! (>L:INI_ENG2_STARTER)
A300_TRP_Mode_CL_Press#1 (>L:INI_TRP_CL_BUTTON)
A300_TRP_Mode_CR_Press#1 (>L:INI_TRP_CR_BUTTON)
A300_TRP_Mode_MCT_Press_#1 (>L:INI_TRP_MCT_BUTTON)
A300_TRP_Mode_TOGA_Press_#1 (>L:INI_TRP_TOGA_BUTTON)
A300_Throttle_Reverse_Thrust_Toggle#0 (>K:THROTTLE_REVERSE_THRUST_TOGGLE)
//IniBuilds/A300/Fire
A300_Ovhd_Fire_API_Fire_Latch_Toggle#(L:INI_APU_FIRE_LATCH) ! (>L:INI_APU_FIRE_LATCH) (L:INI_APU_FIRE_LATCH, Bool) 0 == if{ 0 (>L:INI_FIRE_HANDLE_APU) }
A300_Ovhd_Fire_APU_Agent_Disch#(L:INI_APU_AGENT1_DISCH) ! (>L:INI_APU_AGENT1_DISCH)
A300_Ovhd_Fire_APU_Handle_Pull#1 (>L:INI_apu_fire_handle_BUTTON)
A300_Ovhd_Fire_APU_Loop_A_Toggle#(L:INI_APU_LOOP_A_STATE) ! (>L:INI_APU_LOOP_A_STATE)
A300_Ovhd_Fire_APU_Loop_B_Toggle#(L:INI_APU_LOOP_B_STATE) ! (>L:INI_APU_LOOP_B_STATE)
A300_Ovhd_Fire_APU_Loop_Test_Press#1 (>L:INI_APU_LOOP_TEST_SWITCH)
A300_Ovhd_Fire_APU_Loop_Test_Release#0 (>L:INI_APU_LOOP_TEST_SWITCH)
A300_Ovhd_Fire_APU_Squib_Test_Press#1 (>L:INI_APU_SQUIB_TEST)
A300_Ovhd_Fire_APU_Squib_Test_Release#0 (>L:INI_APU_SQUIB_TEST)
A300_Ovhd_Fire_Eng1_Agent1_Disch_Button#(L:INIDR_engine1_agent1_disch) ! (>L:INIDR_engine1_agent1_disch)
A300_Ovhd_Fire_Eng1_Agent2_Disch_Button#(L:INIDR_engine1_agent2_disch) ! (>L:INIDR_engine1_agent2_disch)
A300_Ovhd_Fire_Eng1_Handle_Pull#1 (>L:INI_eng1_fire_handle_BUTTON)
A300_Ovhd_Fire_Eng1_Latch_Toggle#(L:INI_ENG1_FIRE_LATCH) ! (>L:INI_ENG1_FIRE_LATCH) (L:INI_ENG1_FIRE_LATCH, Bool) 0 == if{ 0 (>L:INI_FIRE_HANDLE_ENG1) }
A300_Ovhd_Fire_Eng1_Loop_A_Toggle#(L:INI_ENG1_LOOP_A_STATE) ! (>L:INI_ENG1_LOOP_A_STATE)
A300_Ovhd_Fire_Eng1_Loop_B_Toggle#(L:INI_ENG1_LOOP_B_STATE) ! (>L:INI_ENG1_LOOP_B_STATE)
A300_Ovhd_Fire_Eng1_Loop_Test_Press#1 (>L:INI_ENGINE1_LOOP_TEST_SWITCH)
A300_Ovhd_Fire_Eng1_Loop_Test_Release#0 (>L:INI_ENGINE1_LOOP_TEST_SWITCH)
A300_Ovhd_Fire_Eng1_Squib_Test_Press#1 (>L:INI_ENG1_SQUIB_TEST)
A300_Ovhd_Fire_Eng1_Squib_Test_Release#0 (>L:INI_ENG1_SQUIB_TEST)
A300_Ovhd_Fire_Eng2_Agent1_Disch_Button#(L:INIDR_engine2_agent1_disch) ! (>L:INIDR_engine2_agent1_disch)
A300_Ovhd_Fire_Eng2_Agent2_Disch_Button#(L:INIDR_engine2_agent2_disch) ! (>L:INIDR_engine2_agent2_disch)
A300_Ovhd_Fire_Eng2_Handle_Pull#1 (>L:INI_eng2_fire_handle_BUTTON)
A300_Ovhd_Fire_Eng2_Latch_Toggle#(L:INI_ENG2_FIRE_LATCH) ! (>L:INI_ENG2_FIRE_LATCH) (L:INI_ENG2_FIRE_LATCH, Bool) 0 == if{ 0 (>L:INI_FIRE_HANDLE_ENG2) }
A300_Ovhd_Fire_Eng2_Loop_A_Toggle#(L:INI_ENG2_LOOP_A_STATE) ! (>L:INI_ENG2_LOOP_A_STATE)
A300_Ovhd_Fire_Eng2_Loop_B_Toggle#(L:INI_ENG2_LOOP_B_STATE) ! (>L:INI_ENG2_LOOP_B_STATE)
A300_Ovhd_Fire_Eng2_Loop_Test_Press#1 (>L:INI_ENGINE2_LOOP_TEST_SWITCH)
A300_Ovhd_Fire_Eng2_Loop_Test_Release#0 (>L:INI_ENGINE2_LOOP_TEST_SWITCH)
A300_Ovhd_Fire_Eng2_Squib_Test_Press#1 (>L:INI_ENG2_SQUIB_TEST)
A300_Ovhd_Fire_Eng2_Squib_Test_Release#0 (>L:INI_ENG2_SQUIB_TEST)
//IniBuilds/A300/Flight Instruments
A300_Cpt_Altimeter_Baro_Dec#1 (>K:KOHLSMAN_DEC) 0 (>L:XMLVAR_Baro1_Mode) (L:INI_INSTRUMENTS_LINKED, Bool) if{ (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:2:KOHLSMAN_SET) (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:3:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro2_Mode) 0 (>L:XMLVAR_Baro3_Mode) }
A300_Cpt_Altimeter_Baro_Inc#1 (>K:KOHLSMAN_INC) 0 (>L:XMLVAR_Baro1_Mode) (L:INI_INSTRUMENTS_LINKED, Bool) if{ (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:2:KOHLSMAN_SET) (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:3:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro2_Mode) 0 (>L:XMLVAR_Baro3_Mode) }
A300_Cpt_Altimeter_Bug_Dec#(L:INI_CPT_ALTIMETER_BUG, Number) 990 + 1000 % (>L:INI_CPT_ALTIMETER_BUG, Number)
A300_Cpt_Altimeter_Bug_Inc#(L:INI_CPT_ALTIMETER_BUG, Number) 10 + 1000 % (>L:INI_CPT_ALTIMETER_BUG, Number)
A300_Cpt_Altimeter_Knob_STD_Pull#1 (>L:INI_CPT_ALTIMETER_STD_COMMAND)
A300_Cpt_Clock_Mode_FAST#0 (>L:INIDR_CHRONO_GMT_STATUS)
A300_Cpt_Clock_Mode_HLD#2 (>L:INIDR_CHRONO_GMT_STATUS)
A300_Cpt_Clock_Mode_RUN#3 (>L:INIDR_CHRONO_GMT_STATUS)
A300_Cpt_Clock_Mode_SLOW#1 (>L:INIDR_CHRONO_GMT_STATUS)
A300_Cpt_Clock_Mode_STOP#4 (>L:INIDR_CHRONO_GMT_STATUS)
A300_Cpt_ET_CHRO_Run_Stop_Toggle#1 (>L:INI_ET_TOGGLE_BUTTON)
A300_Cpt_ET_CHRO_Start_Stop_Reset_Push#1 (>L:INIDR_CHRONO_START_BUTTON)
A300_FO_Altimeter_Baro_Dec#2 (>K:KOHLSMAN_DEC) 0 (>L:XMLVAR_Baro2_Mode) (L:INI_INSTRUMENTS_LINKED, Bool) if{ (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:1:KOHLSMAN_SET) (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:3:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro3_Mode) }
A300_FO_Altimeter_Baro_Inc#2 (>K:KOHLSMAN_INC) 0 (>L:XMLVAR_Baro2_Mode) (L:INI_INSTRUMENTS_LINKED, Bool) if{ (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:1:KOHLSMAN_SET) (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:3:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro3_Mode) }
A300_FO_Altimeter_Bug_Knob_Dec#(L:INI_FO_ALTIMETER_BUG, Number) 0 <= if{ (L:INI_FO_ALTIMETER BUG, Number) 1000 + (>L:INI_FO_ALTIMETER BUG,) } els{ (L:INI_FO_ALTIMETER BUG, Number) 10 - 1000 % (>L:INI_FO_ALTIMETER BUG) }
A300_FO_Altimeter_Bug_Knob_Inc#(L:INI_FO_ALTIMETER BUG, Number) 10 + 1000 % (>L:INI_FO_ALTIMETER BUG)
A300_FO_Altimeter_Knob_STD_Pull#1 (>L:INI_FO_ALTIMETER_STD_COMMAND) 
A300_FO_Clock_Mode_FAST#0 (>L:INIDR_CHRONO_GMT_STATUS_FO)
A300_FO_Clock_Mode_HLD#2 (>L:INIDR_CHRONO_GMT_STATUS_FO)
A300_FO_Clock_Mode_RUN#3 (>L:INIDR_CHRONO_GMT_STATUS_FO)
A300_FO_Clock_Mode_SLOW#1 (>L:INIDR_CHRONO_GMT_STATUS_FO)
A300_FO_Clock_Mode_SYNC#4 (>L:INIDR_CHRONO_GMT_STATUS_FO)
A300_FO_ET_CHRO_Run_Stop_Toggle#1 (>L:INI_ET_TOGGLE_BUTTON_FO)
A300_FO_ET_CHRO_Start_Stop_Reset_Push#1 (>L:INI_CHRONO_START_BUTTON_FO)
A300_Stby_Altimeter_Baro_Dec#3 (>K:KOHLSMAN_DEC) (L:INI_INSTRUMENTS_LINKED, Bool) if{ (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:2:KOHLSMAN_SET) (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:1:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro2_Mode) }
A300_Stby_Altimeter_Baro_Inc#3 (>K:KOHLSMAN_INC) (L:INI_INSTRUMENTS_LINKED, Bool) if{ (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:2:KOHLSMAN_SET) (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:1:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro2_Mode) }
//IniBuilds/A300/Fuel
A300_Ovhd_Aux_Tank_Toggle#(L:INI_ACT_TANK) ! (>L:INI_ACT_TANK) (L:__AUX_AUTOIsPressed) ! (>L:__AUX_AUTOIsPressed)
A300_Ovhd_Center_TK_Pump_1_Toggle#(L:INI_CENTER_TANK1) ! (>L:INI_CENTER_TANK1)
A300_Ovhd_Center_TK_Pump_2_Toggle#(L:INI_CENTER_TANK2) ! (>L:INI_CENTER_TANK2)
A300_Ovhd_Inner_Left_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_FUEL_ISO_2_State) ! (>L:__GUARD_FUEL_ISO_2_State)
A300_Ovhd_Inner_Left_TK_Iso_Valve_Toggle#(L:INI_isolation_valve_inner_tank_left) ! (>L:INI_isolation_valve_inner_tank_left)
A300_Ovhd_Inner_Left_TK_Pump_1_Toggle#(L:INI_INNER_TANK1_LEFT) ! (>L:INI_INNER_TANK1_LEFT)
A300_Ovhd_Inner_Left_TK_Pump_2_Toggle#(L:INI_INNER_TANK2_LEFT) ! (>L:INI_INNER_TANK2_LEFT)
A300_Ovhd_Inner_Right_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_FUEL_ISO_3_State) ! (>L:__GUARD_FUEL_ISO_3_State)
A300_Ovhd_Inner_Right_TK_Iso_Valve_Toggle#(L:INI_isolation_valve_inner_tank_right) ! (>L:INI_isolation_valve_inner_tank_right)
A300_Ovhd_Inner_Right_TK_Pump_1_Toggle#(L:INI_INNER_TANK1_RIGHT) ! (>L:INI_INNER_TANK1_RIGHT)
A300_Ovhd_Inner_Right_TK_Pump_2_Toggle#(L:INI_INNER_TANK2_RIGHT) ! (>L:INI_INNER_TANK2_RIGHT)
A300_Ovhd_Outer_Left_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_FUEL_ISO_1_State) ! (>L:__GUARD_FUEL_ISO_1_State)
A300_Ovhd_Outer_Left_TK_Iso_Valve_Toggle#(L:INI_isolation_valve_outer_tank_left) ! (>L:INI_isolation_valve_outer_tank_left)
A300_Ovhd_Outer_Left_TK_Pump_1_Toggle#(L:INI_OUTER_TANK1_LEFT) ! (>L:INI_OUTER_TANK1_LEFT)
A300_Ovhd_Outer_Left_TK_Pump_2_Toggle#(L:INI_OUTER_TANK2_LEFT) ! (>L:INI_OUTER_TANK2_LEFT)
A300_Ovhd_Outer_Right_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_FUEL_ISO_4_State) ! (>L:__GUARD_FUEL_ISO_4_State)
A300_Ovhd_Outer_Right_TK_Iso_Valve_Toggle#(L:INI_isolation_valve_outer_tank_right) ! (>L:INI_isolation_valve_outer_tank_right)
A300_Ovhd_Outer_Right_TK_Pump_1_Toggle#(L:INI_OUTER_TANK1_RIGHT) ! (>L:INI_OUTER_TANK1_RIGHT)
A300_Ovhd_Outer_Right_TK_Pump_2_Toggle#(L:INI_OUTER_TANK2_RIGHT) ! (>L:INI_OUTER_TANK2_RIGHT)
A300_Ovhd_Trim_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_TRMTK_ISO_State) ! (>L:__GUARD_TRMTK_ISO_State)
A300_Ovhd_Trim_TK_Iso_Valve_Toggle#(L:INI_TRIM_TANK_ISOL_VALVE) ! (>L:INI_TRIM_TANK_ISOL_VALVE)
A300_Ovhd_Trim_TK_Mode_Toggle#(L:INI_TRIM_TANK_MODE) ! (>L:INI_TRIM_TANK_MODE)
A300_Ovhd_Trim_TK_Pump_1_Toggle#(L:INI_TRIM_TANK1) ! (>L:INI_TRIM_TANK1)
A300_Ovhd_Trim_TK_Pump_2_Toggle#(L:INI_TRIM_TANK2) ! (>L:INI_TRIM_TANK2)
A300_Ovhd_Xfeed_Transfer_Toggle#(L:INI_xfeed_transfer_on) ! (>L:INI_xfeed_transfer_on)
A300_Ped_Eng1_Fuel_Cutoff_Lever_Off#0 (>L:INI_ENG1_MIXTURE_COMMAND)
A300_Ped_Eng1_Fuel_Cutoff_Lever_On#1 (>L:INI_ENG1_MIXTURE_COMMAND)
A300_Ped_Eng1_Fuel_Cutoff_Lever_Toggle#(L:INI_ENG1_MIXTURE_COMMAND) ! (>L:INI_ENG1_MIXTURE_COMMAND)
A300_Ped_Eng2_Fuel_Cutoff_Lever_Off#0 (>L:INI_ENG2_MIXTURE_COMMAND)
A300_Ped_Eng2_Fuel_Cutoff_Lever_On#1 (>L:INI_ENG2_MIXTURE_COMMAND)
A300_Ped_Eng2_Fuel_Cutoff_Lever_Toggle#(L:INI_ENG2_MIXTURE_COMMAND) ! (>L:INI_ENG2_MIXTURE_COMMAND)
//IniBuilds/A300/Gear
A300_Antiskid_Switch_Altn_Off#2 (>L:INIDR_brake_system)
A300_Antiskid_Switch_Altn_On#1 (>L:INIDR_brake_system)
A300_Antiskid_Switch_Norm_On#0 (>L:INIDR_brake_system)
A300_Autobrake_Low_Button_Push#1 (>L:INI_ABRK_LOW_COMMAND)
A300_Autobrake_Max_Button_Push#1 (>L:INI_ABRK_HI_COMMAND)
A300_Autobrake_Med_Button_Push#1 (>L:INI_ABRK_MED_COMMAND)
A300_Landing_Gear_Lever_Down#2 (>L:INI_GEAR_HANDLE_STATUS)
A300_Landing_Gear_Lever_Mid#1 (>L:INI_GEAR_HANDLE_STATUS)
A300_Landing_Gear_Lever_Up#0 (>L:INI_GEAR_HANDLE_STATUS)
//IniBuilds/A300/Hydraulic
A300_Ovhd_Hyd_Elec_Toggle#(L:INI_hyd_elec_status) ! (>L:INI_hyd_elec_status)
A300_Ovhd_Hyd_Eng1_Blue_Pump_Toggle#(L:INI_hyd_eng1_switch_pos) ! (>L:INI_hyd_eng1_switch_pos)
A300_Ovhd_Hyd_Eng1_Green_Pump_Toggle#(L:INI_hyd_eng1_A_switch_pos) ! (>L:INI_hyd_eng1_A_switch_pos)
A300_Ovhd_Hyd_Eng2_Green_Pump_Toggle#(L:INI_hyd_eng2_B_switch_pos) ! (>L:INI_hyd_eng2_B_switch_pos)
A300_Ovhd_Hyd_Eng2_Yellow_Pump_Toggle#(L:INI_hyd_eng2_switch_pos) ! (>L:INI_hyd_eng2_switch_pos)
A300_Ovhd_Hyd_PTU_Blue_Toggle#(L:INI_hyd_PTU_blue_status) ! (>L:INI_hyd_PTU_blue_status)
A300_Ovhd_Hyd_PTU_Yellow_Toggle#(L:INI_hyd_PTU_yellow_status) ! (>L:INI_hyd_PTU_yellow_status)
A300_Ovhd_Hyd_Servo_Ctl_Blue_Toggle#(L:INI_SERVO_BLUE_OFF_LIGHT) ! (>L:INI_SERVO_BLUE_OFF_LIGHT) 
A300_Ovhd_Hyd_Servo_Ctl_Green_Toggle#(L:INI_SERVO_GREEN_OFF_LIGHT) ! (>L:INI_SERVO_GREEN_OFF_LIGHT) 
A300_Ovhd_Hyd_Servo_Ctl_Yellow_Toggle#(L:INI_SERVO_YELLOW_OFF_LIGHT) ! (>L:INI_SERVO_YELLOW_OFF_LIGHT) 
A300_Ovhd_Pitch_Feel_1_Toggle#(L:INI_PITCH_FEEL1) ! (>L:INI_PITCH_FEEL1)
A300_Ovhd_Pitch_Feel_2_Toggle#(L:INI_PITCH_FEEL2) ! (>L:INI_PITCH_FEEL2)
A300_Ovhd_Rud_Travel_1_Toggle#(L:INI_RUDDER_TRAVEL1) ! (>L:INI_RUDDER_TRAVEL1) 
A300_Ovhd_Rud_Travel_2_Toggle#(L:INI_RUDDER_TRAVEL2) ! (>L:INI_RUDDER_TRAVEL2) 
A300_Ovhd_Splr_Spd_Brk_3___2_Toggle#(L:INI_SPEEDBRAKE3_2) ! (>L:INI_SPEEDBRAKE3_2)
A300_Ovhd_Splr_Spd_Brk_4___1_Toggle#(L:INI_SPEEDBRAKE4_1) ! (>L:INI_SPEEDBRAKE4_1)
A300_Ovhd_Splr_Spd_Brk_5_Toggle#(L:INI_SPEEDBRAKE5) ! (>L:INI_SPEEDBRAKE5)
A300_Ovhd_Splr_Spd_Brk_6_Toggle#(L:INI_SPEEDBRAKE6) ! (>L:INI_SPEEDBRAKE6)
A300_Ovhd_Splr_Spd_Brk_7_Toggle#(L:INI_SPEEDBRAKE7) ! (>L:INI_SPEEDBRAKE7)
//IniBuilds/A300/Lights
A300_Cap___Ctr_Inst_Light_Knob_Dec#(L:INI_POTENTIOMETER_26) 5 - 0 max 100 min (>L:INI_POTENTIOMETER_26)
A300_Cap___Ctr_Inst_Light_Knob_Inc#(L:INI_POTENTIOMETER_26) 5 + 0 max 100 min (>L:INI_POTENTIOMETER_26)
A300_Cpt_Yoke_Light_Knob_Dec#(L:INI_POTENTIOMETER_29) 5 - 0 min (>L:INI_POTENTIOMETER_29)
A300_Cpt_Yoke_Light_Knob_Inc#(L:INI_POTENTIOMETER_29) 5 + 100 max (>L:INI_POTENTIOMETER_29)
A300_FO_Inst_Light_Knob_Dec#(L:INI_POTENTIOMETER_27) 5 - 0 max (>L:INI_POTENTIOMETER_27)
A300_FO_Inst_Light_Knob_Inc#(L:INI_POTENTIOMETER_27) 5 + 100 min (>L:INI_POTENTIOMETER_27)
A300_FO_Yoke_Light_Knob_Dec#(L:INI_POTENTIOMETER_30) 5 - 0 min (>L:INI_POTENTIOMETER_30)
A300_FO_Yoke_Light_Knob_Inc#(L:INI_POTENTIOMETER_30) 5 + 100 max (>L:INI_POTENTIOMETER_30)
A300_MCU_Light_Knob_Dec#(L:INI_POTENTIOMETER_28) 5 - 0 max (>L:INI_POTENTIOMETER_28)
A300_MCU_Light_Knob_Inc#(L:INI_POTENTIOMETER_28) 5 + 100 min (>L:INI_POTENTIOMETER_28)
A300_Main_Inst_Pnl_Flood_Light_Dec#(L:INI_POTENTIOMETER_25) 5 - 0 min 100 max (>L:INI_POTENTIOMETER_25)
A300_Main_Inst_Pnl_Flood_Light_Inc#(L:INI_POTENTIOMETER_25) 5 + 0 min 100 max (>L:INI_POTENTIOMETER_25)
A300_Map_Light_Cpt_Dec#(L:INI_POTENTIOMETER_16) 5 - 0 max 100 min (>L:INI_POTENTIOMETER_16)
A300_Map_Light_Cpt_Inc#(L:INI_POTENTIOMETER_16) 5 + 0 max 100 min (>L:INI_POTENTIOMETER_16)
A300_Map_Light_FO_Dec#(L:INI_POTENTIOMETER_17) 5 - 0 max (>L:INI_POTENTIOMETER_17)
A300_Map_Light_FO_Inc#(L:INI_POTENTIOMETER_17) 5 + 100 min (>L:INI_POTENTIOMETER_17)
A300_Ovhd_Ann_Lt_Switch_BRT#1 (>L:INI_ANNLT_SWITCH)
A300_Ovhd_Ann_Lt_Switch_DIM#2 (>L:INI_ANNLT_SWITCH)
A300_Ovhd_Ann_Lt_Switch_TEST#0 (>L:INI_ANNLT_SWITCH)
A300_Ovhd_Dome_Light_Brt_Switch_BRT#1 (>L:INI_DOME_LIGHT_BRT_SWITCH)
A300_Ovhd_Dome_Light_Brt_Switch_DIM#0 (>L:INI_DOME_LIGHT_BRT_SWITCH)
A300_Ovhd_Dome_Light_Switch_OFF#0 (>L:INI_DOME_LIGHT_SWITCH)
A300_Ovhd_Dome_Light_Switch_ON#1 (>L:INI_DOME_LIGHT_SWITCH)
A300_Ovhd_Emer_Exit_Switch_ARM#1 (>L:INI_EMER_EXIT_SWITCH)
A300_Ovhd_Emer_Exit_Switch_DISARM#2 (>L:INI_EMER_EXIT_SWITCH)
A300_Ovhd_Emer_Exit_Switch_ON#0 (>L:INI_EMER_EXIT_SWITCH)
A300_Ovhd_Extlt_Beacon_Off#0 (>L:INI_BEACON_LIGHT_SWITCH)
A300_Ovhd_Extlt_Beacon_On#1 (>L:INI_BEACON_LIGHT_SWITCH)
A300_Ovhd_Extlt_Landing__Light_L_OFF#1 (>L:INI_LANDING_LIGHT_L_SWITCH)
A300_Ovhd_Extlt_Landing__Light_L_ON#0 (>L:INI_LANDING_LIGHT_L_SWITCH)
A300_Ovhd_Extlt_Landing__Light_L_RETRACT#2 (>L:INI_LANDING_LIGHT_L_SWITCH)
A300_Ovhd_Extlt_Landing__Light_R_OFF#2 (>L:INI_LANDING_LIGHT_R_SWITCH)
A300_Ovhd_Extlt_Landing__Light_R_ON#0 (>L:INI_LANDING_LIGHT_R_SWITCH)
A300_Ovhd_Extlt_Landing__Light_R_RETRACT#2 (>L:INI_LANDING_LIGHT_R_SWITCH)
A300_Ovhd_Extlt_Nav_Logo_1#1 (>L:INI_NAV_LOGO_LIGHT_SWITCH)
A300_Ovhd_Extlt_Nav_Logo_2#0 (>L:INI_NAV_LOGO_LIGHT_SWITCH)
A300_Ovhd_Extlt_Nav_Logo_Off#2 (>L:INI_NAV_LOGO_LIGHT_SWITCH)
A300_Ovhd_Extlt_Nose_Light_OFF#2 (>L:INI_TAXI_LIGHTS_SWITCH)
A300_Ovhd_Extlt_Nose_Light_TAXI#1 (>L:INI_TAXI_LIGHTS_SWITCH)
A300_Ovhd_Extlt_Nose_Light_TO#0 (>L:INI_TAXI_LIGHTS_SWITCH)
A300_Ovhd_Extlt_Rwy_Turnoff_L_Off#0 (>L:INI_RWY_TURNOFF_L_SWITCH)
A300_Ovhd_Extlt_Rwy_Turnoff_L_On#1 (>L:INI_RWY_TURNOFF_L_SWITCH)
A300_Ovhd_Extlt_Rwy_Turnoff_R_Off#0 (>L:INI_RWY_TURNOFF_R_SWITCH)
A300_Ovhd_Extlt_Rwy_Turnoff_R_On#1 (>L:INI_RWY_TURNOFF_R_SWITCH)
A300_Ovhd_Extlt_Strobe_Auto#1 (>L:INI_POTENTIOMETER_24)
A300_Ovhd_Extlt_Strobe_Off#2 (>L:INI_POTENTIOMETER_24)
A300_Ovhd_Extlt_Strobe_On#0 (>L:INI_POTENTIOMETER_24)
A300_Ovhd_Extlt_Wing_Light_Off#0 (>L:INI_WING_LIGHT_SWITCH)
A300_Ovhd_Extlt_Wing_Light_On# 1 (>L:INI_WING_LIGHT_SWITCH)
A300_Ovhd_Light_Knob_Dec#(L:INI_POTENTIOMETER_4) 5 - 0 min (>L:INI_POTENTIOMETER_4)
A300_Ovhd_Light_Knob_Inc#(L:INI_POTENTIOMETER_4) 5 + 100 max (>L:INI_POTENTIOMETER_4)
A300_Ovhd_No_Smoking_Switch_AUTO#1 (>L:INI_NO_SMOKING_SWITCH)
A300_Ovhd_No_Smoking_Switch_OFF#2 (>L:INI_NO_SMOKING_SWITCH)
A300_Ovhd_No_Smoking_Switch_ON#0 (>L:INI_NO_SMOKING_SWITCH)
A300_Ovhd_Seatbelts_Switch_OFF#0 (>L:INI_SEATBELTS_SWITCH)
A300_Ovhd_Seatbelts_Switch_ON#1 (>L:INI_SEATBELTS_SWITCH)
A300_Ovhd_Stby_Compass_Off#0 (>L:INI_STBY_COMPASS_LIGHT_SWITCH)
A300_Ovhd_Stby_Compass_On#1 (>L:INI_STBY_COMPASS_LIGHT_SWITCH)
A300_Ovhd_Storm_Light_Switch_OFF#0 (>L:INI_STORM_LIGHT_SWITCH)
A300_Ovhd_Storm_Light_Switch_ON#1 (>L:INI_STORM_LIGHT_SWITCH)
A300_Pedestal_Light_Knob_Dec#(L:INI_POTENTIOMETER_3) 5 - 0 max (>L:INI_POTENTIOMETER_3)
A300_Pedestal_Light_Knob_Inc#(L:INI_POTENTIOMETER_3) 5 + 100 min (>L:INI_POTENTIOMETER_3)
A300_Pedestal_Ovhd_Light_Inner_Knob_Dec#(L:INI_POTENTIOMETER_4) 5 - 0 max (>L:INI_POTENTIOMETER_4)
A300_Pedestal_Ovhd_Light_Inner_Knob_Inc#(L:INI_POTENTIOMETER_4) 5 + 100 min (>L:INI_POTENTIOMETER_4)
A300_Pedestal_Panel_Brightness_Outer_Knob_Dec#(L:INI_POTENTIOMETER_3) 5 - 0 max (>L:INI_POTENTIOMETER_3)
A300_Pedestal_Panel_Brightness_Outer_Knob_Inc#(L:INI_POTENTIOMETER_3) 5 + 100 min (>L:INI_POTENTIOMETER_3)
A300_Read_Light_Knob_Dec#(L:INI_POTENTIOMETER_18) 5 - 0 min (>L:INI_POTENTIOMETER_18) 
A300_Read_Light_Knob_Inc#(L:INI_POTENTIOMETER_18) 5 + 100 max (>L:INI_POTENTIOMETER_18) 
//IniBuilds/A300/MCDU
A300_MCDU1_Brightness_Dec#(L:LIGHTING_POTENTIOMETER_66) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_66) l0 66 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_MCDU1_Brightness_Inc#(L:LIGHTING_POTENTIOMETER_66) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_66) l0 66 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_MCDU1_Key_0#1 (>L:INI_MCDU1_0)
A300_MCDU1_Key_1#1 (>L:INI_MCDU1_1)
A300_MCDU1_Key_2#1 (>L:INI_MCDU1_2)
A300_MCDU1_Key_3#1 (>L:INI_MCDU1_3)
A300_MCDU1_Key_4#1 (>L:INI_MCDU1_4)
A300_MCDU1_Key_5#1 (>L:INI_MCDU1_5)
A300_MCDU1_Key_6#1 (>L:INI_MCDU1_6)
A300_MCDU1_Key_7#1 (>L:INI_MCDU1_7)
A300_MCDU1_Key_8#1 (>L:INI_MCDU1_8)
A300_MCDU1_Key_9#1 (>L:INI_MCDU1_9)
A300_MCDU1_Key_A#1 (>L:INI_MCDU1_A)
A300_MCDU1_Key_B#1 (>L:INI_MCDU1_B)
A300_MCDU1_Key_C#1 (>L:INI_MCDU1_C)
A300_MCDU1_Key_CLR#1 (>L:INI_MCDU1_CLR)
A300_MCDU1_Key_D#1 (>L:INI_MCDU1_D)
A300_MCDU1_Key_DIR_TO#1 (>L:INI_MCDU1_DIR_TO)
A300_MCDU1_Key_DOT#1 (>L:INI_MCDU1_DOT)
A300_MCDU1_Key_DOWN#1 (>L:INI_MCDU1_DOWN)
A300_MCDU1_Key_E#1 (>L:INI_MCDU1_E)
A300_MCDU1_Key_ENGOUT#1 (>L:INI_MCDU1_ENGOUT)
A300_MCDU1_Key_F#1 (>L:INI_MCDU1_F)
A300_MCDU1_Key_FPLAN#1 (>L:INI_MCDU1_FPLAN)
A300_MCDU1_Key_G#1 (>L:INI_MCDU1_G)
A300_MCDU1_Key_H#1 (>L:INI_MCDU1_H)
A300_MCDU1_Key_I#1 (>L:INI_MCDU1_I)
A300_MCDU1_Key_INIT#1 (>L:INI_MCDU1_INIT)
A300_MCDU1_Key_J#1 (>L:INI_MCDU1_J)
A300_MCDU1_Key_K#1 (>L:INI_MCDU1_K)
A300_MCDU1_Key_L#1 (>L:INI_MCDU1_L)
A300_MCDU1_Key_LSK1L#1 (>L:INI_MCDU1_LSK1L)
A300_MCDU1_Key_LSK1R#1 (>L:INI_MCDU1_LSK1R)
A300_MCDU1_Key_LSK2L#1 (>L:INI_MCDU1_LSK2L)
A300_MCDU1_Key_LSK2R#1 (>L:INI_MCDU1_LSK2R)
A300_MCDU1_Key_LSK3L#1 (>L:INI_MCDU1_LSK3L)
A300_MCDU1_Key_LSK3R#1 (>L:INI_MCDU1_LSK3R)
A300_MCDU1_Key_LSK4L#1 (>L:INI_MCDU1_LSK4L)
A300_MCDU1_Key_LSK4R#1 (>L:INI_MCDU1_LSK4R)
A300_MCDU1_Key_LSK5L#1 (>L:INI_MCDU1_LSK5L)
A300_MCDU1_Key_LSK5R#1 (>L:INI_MCDU1_LSK5R)
A300_MCDU1_Key_LSK6L#1 (>L:INI_MCDU1_LSK6L)
A300_MCDU1_Key_LSK6R#1 (>L:INI_MCDU1_LSK6R)
A300_MCDU1_Key_M#1 (>L:INI_MCDU1_M)
A300_MCDU1_Key_MENU#1 (>L:INI_MCDU1_MENU)
A300_MCDU1_Key_MINUS#1 (>L:INI_MCDU1_MINUS)
A300_MCDU1_Key_MODE#1 (>L:INI_MCDU1_MODE)
A300_MCDU1_Key_N#1 (>L:INI_MCDU1_N)
A300_MCDU1_Key_NEXT#1 (>L:INI_MCDU1_NEXT)
A300_MCDU1_Key_O#1 (>L:INI_MCDU1_O)
A300_MCDU1_Key_P#1 (>L:INI_MCDU1_P)
A300_MCDU1_Key_PLUS#1 (>L:INI_MCDU1_PLUS)
A300_MCDU1_Key_PROG#1 (>L:INI_MCDU1_PROG)
A300_MCDU1_Key_Q#1 (>L:INI_MCDU1_Q)
A300_MCDU1_Key_R#1 (>L:INI_MCDU1_R)
A300_MCDU1_Key_REF#1 (>L:INI_MCDU1_REF)
A300_MCDU1_Key_S#1 (>L:INI_MCDU1_S)
A300_MCDU1_Key_SEC_PLAN#1 (>L:INI_MCDU1_SEC_PLAN)
A300_MCDU1_Key_SLASH#1 (>L:INI_MCDU1_SLASH)
A300_MCDU1_Key_T#1 (>L:INI_MCDU1_T)
A300_MCDU1_Key_TACT_MODE#1 (>L:INI_MCDU1_TACT_MODE)
A300_MCDU1_Key_TO_APPR#1 (>L:INI_MCDU1_TO_APPR)
A300_MCDU1_Key_U#1 (>L:INI_MCDU1_U)
A300_MCDU1_Key_UARROW#1 (>L:INI_MCDU1_UARROW)
A300_MCDU1_Key_V#1 (>L:INI_MCDU1_V)
A300_MCDU1_Key_W#1 (>L:INI_MCDU1_W)
A300_MCDU1_Key_X#1 (>L:INI_MCDU1_X)
A300_MCDU1_Key_Y#1 (>L:INI_MCDU1_Y)
A300_MCDU1_Key_Z#1 (>L:INI_MCDU1_Z)
A300_MCDU2_Brightness_Dec#(L:LIGHTING_POTENTIOMETER_67) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_67) l0 67 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_MCDU2_Brightness_Inc#(L:LIGHTING_POTENTIOMETER_67) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_67) l0 67 (>K:2:LIGHT_POTENTIOMETER_SET)
A300_MCDU2_Key_0#1 (>L:INI_MCDU2_0)
A300_MCDU2_Key_1#1 (>L:INI_MCDU2_1)
A300_MCDU2_Key_2#1 (>L:INI_MCDU2_2)
A300_MCDU2_Key_3#1 (>L:INI_MCDU2_3)
A300_MCDU2_Key_4#1 (>L:INI_MCDU2_4)
A300_MCDU2_Key_5#1 (>L:INI_MCDU2_5)
A300_MCDU2_Key_6#1 (>L:INI_MCDU2_6)
A300_MCDU2_Key_7#1 (>L:INI_MCDU2_7)
A300_MCDU2_Key_8#1 (>L:INI_MCDU2_8)
A300_MCDU2_Key_9#1 (>L:INI_MCDU2_9)
A300_MCDU2_Key_A#1 (>L:INI_MCDU2_A)
A300_MCDU2_Key_B#1 (>L:INI_MCDU2_B)
A300_MCDU2_Key_C#1 (>L:INI_MCDU2_C)
A300_MCDU2_Key_CLR#1 (>L:INI_MCDU2_CLR)
A300_MCDU2_Key_D#1 (>L:INI_MCDU2_D)
A300_MCDU2_Key_DIR_TO#1 (>L:INI_MCDU2_DIR_TO)
A300_MCDU2_Key_DOT#1 (>L:INI_MCDU2_DOT)
A300_MCDU2_Key_DOWN#1 (>L:INI_MCDU2_DOWN)
A300_MCDU2_Key_E#1 (>L:INI_MCDU2_E)
A300_MCDU2_Key_ENGOUT#1 (>L:INI_MCDU2_ENGOUT)
A300_MCDU2_Key_F#1 (>L:INI_MCDU2_F)
A300_MCDU2_Key_FPLAN#1 (>L:INI_MCDU2_FPLAN)
A300_MCDU2_Key_G#1 (>L:INI_MCDU2_G)
A300_MCDU2_Key_H#1 (>L:INI_MCDU2_H)
A300_MCDU2_Key_I#1 (>L:INI_MCDU2_I)
A300_MCDU2_Key_INIT#1 (>L:INI_MCDU2_INIT)
A300_MCDU2_Key_J#1 (>L:INI_MCDU2_J)
A300_MCDU2_Key_K#1 (>L:INI_MCDU2_K)
A300_MCDU2_Key_L#1 (>L:INI_MCDU2_L)
A300_MCDU2_Key_LSK1L#1 (>L:INI_MCDU2_LSK1L)
A300_MCDU2_Key_LSK1R#1 (>L:INI_MCDU2_LSK1R)
A300_MCDU2_Key_LSK2L#1 (>L:INI_MCDU2_LSK2L)
A300_MCDU2_Key_LSK2R#1 (>L:INI_MCDU2_LSK2R)
A300_MCDU2_Key_LSK3L#1 (>L:INI_MCDU2_LSK3L)
A300_MCDU2_Key_LSK3R#1 (>L:INI_MCDU2_LSK3R)
A300_MCDU2_Key_LSK4L#1 (>L:INI_MCDU2_LSK4L)
A300_MCDU2_Key_LSK4R#1 (>L:INI_MCDU2_LSK4R)
A300_MCDU2_Key_LSK5L#1 (>L:INI_MCDU2_LSK5L)
A300_MCDU2_Key_LSK5R#1 (>L:INI_MCDU2_LSK5R)
A300_MCDU2_Key_LSK6L#1 (>L:INI_MCDU2_LSK6L)
A300_MCDU2_Key_LSK6R#1 (>L:INI_MCDU2_LSK6R)
A300_MCDU2_Key_M#1 (>L:INI_MCDU2_M)
A300_MCDU2_Key_MENU#1 (>L:INI_MCDU2_MENU)
A300_MCDU2_Key_MINUS#1 (>L:INI_MCDU2_MINUS)
A300_MCDU2_Key_MODE#1 (>L:INI_MCDU2_MODE)
A300_MCDU2_Key_N#1 (>L:INI_MCDU2_N)
A300_MCDU2_Key_NEXT#1 (>L:INI_MCDU2_NEXT)
A300_MCDU2_Key_O#1 (>L:INI_MCDU2_O)
A300_MCDU2_Key_P#1 (>L:INI_MCDU2_P)
A300_MCDU2_Key_PLUS#1 (>L:INI_MCDU2_PLUS)
A300_MCDU2_Key_PROG#1 (>L:INI_MCDU2_PROG)
A300_MCDU2_Key_Q#1 (>L:INI_MCDU2_Q)
A300_MCDU2_Key_R#1 (>L:INI_MCDU2_R)
A300_MCDU2_Key_REF#1 (>L:INI_MCDU2_REF)
A300_MCDU2_Key_S#1 (>L:INI_MCDU2_S)
A300_MCDU2_Key_SEC_PLAN#1 (>L:INI_MCDU2_SEC_PLAN)
A300_MCDU2_Key_SLASH#1 (>L:INI_MCDU2_SLASH)
A300_MCDU2_Key_T#1 (>L:INI_MCDU2_T)
A300_MCDU2_Key_TACT_MODE#1 (>L:INI_MCDU2_TACT_MODE)
A300_MCDU2_Key_TO_APPR#1 (>L:INI_MCDU2_TO_APPR)
A300_MCDU2_Key_U#1 (>L:INI_MCDU2_U)
A300_MCDU2_Key_UARROW#1 (>L:INI_MCDU2_UARROW)
A300_MCDU2_Key_V#1 (>L:INI_MCDU2_V)
A300_MCDU2_Key_W#1 (>L:INI_MCDU2_W)
A300_MCDU2_Key_X#1 (>L:INI_MCDU2_X)
A300_MCDU2_Key_Y#1 (>L:INI_MCDU2_Y)
A300_MCDU2_Key_Z#1 (>L:INI_MCDU2_Z)
//IniBuilds/A300/Miscellaneous
A300_Ovhd_CVRD_Test_Button_Press#1 (>L:INI_CVRD_TEST)
A300_Ovhd_CVRD_Test_Button_Release#0 (>L:INI_CVRD_TEST)
A300_Ovhd_Capt_Wiper_Knob_Fast#2 (>L:INI_CPT_WIPER_KNOB)
A300_Ovhd_Capt_Wiper_Knob_Off#0 (>L:INI_CPT_WIPER_KNOB)
A300_Ovhd_Capt_Wiper_Knob_Slow#1 (>L:INI_CPT_WIPER_KNOB)
A300_Ovhd_Cockpit_Door_Toggle#1 (>L:INIDR_COCKPIT_DOOR_COMMAND)
A300_Ovhd_FO_Wiper_Knob_Fast#2 (>L:INI_FO_WIPER_KNOB)
A300_Ovhd_FO_Wiper_Knob_Off#0 (>L:INI_FO_WIPER_KNOB)
A300_Ovhd_FO_Wiper_Knob_Slow#1 (>L:INI_FO_WIPER_KNOB)
A300_Pedestal_PPR_ADV_Button#(L:INI_PRINTER_ADV_BUTTON) ! (>L:INI_PRINTER_ADV_BUTTON) 
A300_Pedestal_Printer_ALRTRST_Button#(L:INI_PRINTER_ALRTRST_BUTTON) ! (>L:INI_PRINTER_ALRTRST_BUTTON)
A300_Pedestal_Printer_TEST_Button#(L:INI_PRINTER_TEST_BUTTON) ! (>L:INI_PRINTER_TEST_BUTTON)
//IniBuilds/A300/Navigation
A300_ATC_Ident_Toggle#(>K:XPNDR_IDENT_TOGGLE)
A300_ATC_Select_Toggle#(L:INI_tcas_xpdr) ! (>L:INI_tcas_xpdr)
A300_ATC_XPDR_Inner_Knob_Dec#1 (>L:INI_TRANSPONDER_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_ATC_XPDR_Inner_Knob_Inc#1 (>L:INI_TRANSPONDER_INNER_KNOB_TURNED_CLOCKWISE)
A300_ATC_XPDR_Outer_Knob_Dec#1 (>L:INI_TRANSPONDER_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_ATC_XPDR_Outer_Knob_Inc#1 (>L:INI_TRANSPONDER_OUTER_KNOB_TURNED_CLOCKWISE)
A300_IRS_Mode_Knob_HDG_STS#4 (>L:INI_IRS_MODE_KNOB)
A300_IRS_Mode_Knob_PPOS#2 (>L:INI_IRS_MODE_KNOB)
A300_IRS_Mode_Knob_TEST#0 (>L:INI_IRS_MODE_KNOB)
A300_IRS_Mode_Knob_TK_GS#1 (>L:INI_IRS_MODE_KNOB)
A300_IRS_Mode_Knob_WIND#3 (>L:INI_IRS_MODE_KNOB)
A300_Ovhd_IRS_0_Key#1 (>L:INI_IRS_0_BUTTON)
A300_Ovhd_IRS_1_Key#1 (>L:INI_IRS_1_BUTTON)
A300_Ovhd_IRS_2_Key#1 (>L:INI_IRS_2_BUTTON)
A300_Ovhd_IRS_3_Key#1 (>L:INI_IRS_3_BUTTON)
A300_Ovhd_IRS_4_Key#1 (>L:INI_IRS_4_BUTTON)
A300_Ovhd_IRS_5_Key#1 (>L:INI_IRS_5_BUTTON)
A300_Ovhd_IRS_6_Key#1 (>L:INI_IRS_6_BUTTON)
A300_Ovhd_IRS_7_Key#1 (>L:INI_IRS_7_BUTTON)
A300_Ovhd_IRS_8_Key#1 (>L:INI_IRS_8_BUTTON)
A300_Ovhd_IRS_9_Key#1 (>L:INI_IRS_9_BUTTON)
A300_Ovhd_IRS_CLR_Key#1 (>L:INI_IRS_CLR_BUTTON)
A300_Ovhd_IRS_C_State_Knob_ATT#2 (>L:INI_IRS3_STATE)
A300_Ovhd_IRS_C_State_Knob_NAV#1 (>L:INI_IRS3_STATE)
A300_Ovhd_IRS_C_State_Knob_OFF#0 (>L:INI_IRS3_STATE)
A300_Ovhd_IRS_ENT_Key#1 (>L:INI_IRS_ENT_BUTTON)
A300_Ovhd_IRS_L_State_Knob_ATT#2 (>L:INI_IRS1_STATE)
A300_Ovhd_IRS_L_State_Knob_NAV#1 (>L:INI_IRS1_STATE)
A300_Ovhd_IRS_L_State_Knob_OFF#0 (>L:INI_IRS1_STATE)
A300_Ovhd_IRS_R_State_Knob_ATT#2 (>L:INI_IRS2_STATE)
A300_Ovhd_IRS_R_State_Knob_NAV#1 (>L:INI_IRS2_STATE)
A300_Ovhd_IRS_R_State_Knob_OFF#0 (>L:INI_IRS2_STATE)
A300_Ovhd_IRS_Sys_Knob_1#1 (>L:INI_IRS_SYS_KNOB)
A300_Ovhd_IRS_Sys_Knob_2#2 (>L:INI_IRS_SYS_KNOB)
A300_Ovhd_IRS_Sys_Knob_3#3 (>L:INI_IRS_SYS_KNOB)
A300_Ovhd_IRS_Sys_Knob_OFF#0 (>L:INI_IRS_SYS_KNOB)
A300_Pedestal_Cpt_CRS1_Knob_Dec#(>K:VOR1_OBI_DEC)
A300_Pedestal_Cpt_CRS1_Knob_Inc#(>K:VOR1_OBI_INC)
A300_Pedestal_Cpt_CRS1_Knob_Press#1 (>L:INI_VOR1_FLIP_COMMAND)
A300_Pedestal_Cpt_VOR1_Inner_Knob_Dec#1 (>L:INI_RMP_VOR1_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_Cpt_VOR1_Inner_Knob_Inc#1 (>L:INI_RMP_VOR1_INNER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_Cpt_VOR1_Outer_Knob_Dec#1 (>L:INI_RMP_VOR1_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_Cpt_VOR1_Outer_Knob_Inc#1 (>L:INI_RMP_VOR1_OUTER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_FO_CRS2_Knob_Dec#(>K:VOR2_OBI_DEC)
A300_Pedestal_FO_CRS2_Knob_Inc#(>K:VOR2_OBI_INC)
A300_Pedestal_FO_CRS2_Knob_Press#1 (>L:INI_VOR2_FLIP_COMMAND)
A300_Pedestal_FO_VOR2_Inner_Knob_Dec#1 (>L:INI_RMP_VOR2_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_FO_VOR2_Inner_Knob_Inc#1 (>L:INI_RMP_VOR2_INNER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_FO_VOR2_Outer_Knob_Dec#1 (>L:INI_RMP_VOR2_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_FO_VOR2_Outer_Knob_Inc#1 (>L:INI_RMP_VOR2_OUTER_KNOB_TURNED_CLOCKWISE)
A300_RMP_ILS_Course_Knob_Dec#(L:INI_ils_course, number) -- dnor (>L:INI_ils_course, number)
A300_RMP_ILS_Course_Knob_Inc#(L:INI_ils_course, number) ++ dnor (>L:INI_ils_course, number)
A300_RMP_ILS_Inner_Knob_Dec#1 (>L:INI_RMP_ILS_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_RMP_ILS_Inner_Knob_Inc#1 (>L:INI_RMP_ILS_INNER_KNOB_TURNED_CLOCKWISE)
A300_RMP_ILS_Outer_Knob_Dec#1 (>L:INI_RMP_ILS_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_RMP_ILS_Outer_Knob_Inc#1 (>L:INI_RMP_ILS_OUTER_KNOB_TURNED_CLOCKWISE)
A300_TCAS_ALT_Switch_1#0 (>L:INI_tcas_alt_system) 
A300_TCAS_ALT_Switch_2#2 (>L:INI_tcas_alt_system) 
A300_TCAS_ALT_Switch_OFF#1 (>L:INI_tcas_alt_system) 
A300_TCAS_Mode_Selector_STBY#0 (>L:INI_tcas_mode_pedestal)
A300_TCAS_Mode_Selector_TA#3 (>L:INI_tcas_mode_pedestal) 
A300_TCAS_Mode_Selector_TARA#2 (>L:INI_tcas_mode_pedestal) 
A300_TCAS_Mode_Selector_XPDR#1 (>L:INI_tcas_mode_pedestal) 
A300_TCAS_Mode_Switch_ABOVE#0 (>L:INI_tcas_mode)
A300_TCAS_Mode_Switch_BELOW#2 (>L:INI_tcas_mode)
A300_TCAS_Mode_Switch_N#1 (>L:INI_tcas_mode)
A300_TCAS_Range_Toggle#(L:INI_tcas_range) ! (>L:INI_tcas_range)
A300_TCAS_Test_Toggle#(L:INI_TCAS_TEST_ACTIVE) ! (>L:INI_TCAS_TEST_ACTIVE)
//IniBuilds/A300/Radar
A300_Pedestal_WX_Radar_Gain_Dec#(L:INI_WXR_GAIN) -- (>L:INI_WXR_GAIN)
A300_Pedestal_WX_Radar_Gain_Inc#(L:INI_WXR_GAIN) ++ (>L:INI_WXR_GAIN)
A300_Pedestal_WX_Radar_Mode_MAP#4 (>L:INI_WXR_MODE)
A300_Pedestal_WX_Radar_Mode_OFF#0 (>L:INI_WXR_MODE)
A300_Pedestal_WX_Radar_Mode_TEST#1 (>L:INI_WXR_MODE)
A300_Pedestal_WX_Radar_Mode_TURB#3 (>L:INI_WXR_MODE)
A300_Pedestal_WX_Radar_Mode_WX#2 (>L:INI_WXR_MODE)
A300_Pedestal_WX_Radar_Sys_1#0 (>L:INI_WXR_SYS)
A300_Pedestal_WX_Radar_Sys_2#2 (>L:INI_WXR_SYS)
A300_Pedestal_WX_Radar_Sys_OFF#1 (>L:INI_WXR_SYS)
A300_Pedestal_WX_Radar_Tilt_Dec# (L:INI_WXR_TILT_KNOB) 1.5 - -15 max (>L:INI_WXR_TILT_KNOB)
A300_Pedestal_WX_Radar_Tilt_Inc# (L:INI_WXR_TILT_KNOB) 1.5 + 15 min (>L:INI_WXR_TILT_KNOB)
wx#4 (>L:INI_WXR_MODE)
//IniBuilds/A300/Radio
A300_Pedestal_Cpt_Voice_Ident_Switch_Down#1 (>L:INI_CPT_VOICE_IDENT_SWITCH)
A300_Pedestal_Cpt_Voice_Ident_Switch_Up#0 (>L:INI_CPT_VOICE_IDENT_SWITCH)
A300_Pedestal_HF1_Capt_Toggle#(L:INI_HF1_CAPTAIN) ! (>L:INI_HF1_CAPTAIN) 
A300_Pedestal_HF1_FO_Toggle#(L:INI_HF1_FO) ! (>L:INI_HF1_FO)
A300_Pedestal_HF2_Capt_Toggle#(L:INI_HF2_CAPTAIN) ! (>L:INI_HF2_CAPTAIN)
A300_Pedestal_HF2_FO_Toggle#(L:INI_HF2_FO) ! (>L:INI_HF2_FO)
A300_Pedestal_INT_Capt_Toggle#(L:INI_INT_CAPTAIN) ! (>L:INI_INT_CAPTAIN)
A300_Pedestal_INT_FO_Toggle#(L:INI_INT_FO) ! (>L:INI_INT_FO)
A300_Pedestal_PA_Capt_Toggle#(L:INI_PA_CAPTAIN) ! (>L:INI_PA_CAPTAIN)
A300_Pedestal_PA_FO_Toggle#(L:INI_PA_FO) ! (>L:INI_PA_FO)
A300_Pedestal_VHF1_FO_Toggle#1 (>L:INI_VHF1_FO_BUTTON)
A300_Pedestal_VHF2_Capt_Toggle#1 (>L:INI_VHF2_CPT_BUTTON)
A300_Pedestal_VHF2_FO_Toggle#1 (>L:INI_VHF2_FO_BUTTON)
A300_Pedestal_VHF3_Capt_Toggle#1 (>L:INI_VHF3_CPT_BUTTON)
A300_Pedestal_VHF3_FO_Toggle#1 (>L:INI_VHF3_FO_BUTTON)
A300_Pedestal_VHF_COM1_Inner_Knob_Khz_Dec#1 (>L:INI_RMP_COM1_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM1_Inner_Knob_Khz_Inc#1 (>L:INI_RMP_COM1_INNER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_COM1_Outer_Knob_Mhz_Dec#1 (>L:INI_RMP_COM1_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM1_Outer_Knob_Mhz_Inc#1 (>L:INI_RMP_COM1_OUTER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_COM1_Stby_Inner_Knob_Khz_Dec#1 (>L:INI_RMP_COM1_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM1_Stby_Inner_Knob_Khz_Inc#1 (>L:INI_RMP_COM1_STBY_INNER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_COM1_Stby_Outer_Knob_Mhz_Dec#1 (>L:INI_RMP_COM1_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM1_Stby_Outer_Knob_Mhz_Inc#1 (>L:INI_RMP_COM1_STBY_OUTER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_COM2_Inner_Knob_Khz_Dec#1 (>L:INI_RMP_COM2_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM2_Inner_Knob_Khz_Inc#1 (>L:INI_RMP_COM2_INNER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_COM2_Outer_Knob_Mhz_Dec#1 (>L:INI_RMP_COM2_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM2_Outer_Knob_Mhz_Inc#1 (>L:INI_RMP_COM2_OUTER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_COM2_STBY_Inner_Knob_Khz_Dec#1 (>L:INI_RMP_COM2_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM2_STBY_Inner_Knob_Khz_Inc#1 (>L:INI_RMP_COM2_STBY_INNER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_COM2_STBY_Outer_Knob_Mhz_Dec#1 (>L:INI_RMP_COM2_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM2_STBY_Outer_Knob_Mhz_Inc#1 (>L:INI_RMP_COM2_STBY_OUTER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_Capt_Sql_Switch_On#1 (>L:INI_CPT_VHF_SQL_SWITCH)
A300_Pedestal_VHF_Capt_Toggle#1 (>L:INI_CPT_VHF_TRANSFER_SWITCH_COMMAND)
A300_Pedestal_VHF_Capt_Transfer_Left#0 (>L:INI_CPT_VHF_TRANSFER_SWITCH_COMMAND)
A300_Pedestal_VHF_Capt_Transfer_Right#1 (>L:INI_CPT_VHF_TRANSFER_SWITCH_COMMAND)
A300_Pedestal_VHF_FO_Sql_Switch_Disable#0 (>L:INI_FO_VHF_SQL_SWITCH)
A300_Pedestal_VHF_FO_Sql_Switch_On#1 (>L:INI_FO_VHF_SQL_SWITCH)
A300_Pedestal_VHF_FO_Toggle#1 (>L:INI_FO_VHF_TRANSFER_SWITCH_COMMAND)
A300_Pedestal_VHF_FO_Transfer_Left#0 (>L:INI_FO_VHF_TRANSFER_SWITCH_COMMAND)
A300_Pedestal_VHF_FO_Transfer_Right#1 (>L:INI_FO_VHF_TRANSFER_SWITCH_COMMAND)
ATC_MSG_Press#0 (>L:INI_ATC_MSG)
CPT_IDC_0_Press#1 (>L:IDC_0_CPT)
CPT_IDC_01_Press#1 (>L:IDC_01_CPT)
CPT_IDC_02_Press#1 (>L:IDC_02_CPT)
CPT_IDC_03_Press#1 (>L:IDC_03_CPT)
CPT_IDC_04_Press#1 (>L:IDC_04_CPT)
CPT_IDC_05_Press#1 (>L:IDC_05_CPT)
CPT_IDC_06_Press#1 (>L:IDC_06_CPT)
CPT_IDC_07_Press#1 (>L:IDC_07_CPT)
CPT_IDC_08_Press#1 (>L:IDC_08_CPT)
CPT_IDC_09_Press#1 (>L:IDC_09_CPT)
CPT_IDC_A_Press#1 (>L:IDC_A_CPT)
CPT_IDC_ACCP_Press#1 (>L:IDC_ACCP_CPT)
CPT_IDC_ATC_Press#1 (>L:IDC_ATC_CPT)
CPT_IDC_B_Press#1 (>L:IDC_B_CPT)
CPT_IDC_C_Press#1 (>L:IDC_C_CPT)
CPT_IDC_CANC_Press#1 (>L:IDC_CANC_CPT)
CPT_IDC_CLR_Press#1 (>L:IDC_CLR_CPT)
CPT_IDC_D_Press#1 (>L:IDC_D_CPT)
CPT_IDC_DOT_Press#1 (>L:IDC_DOT_CPT)
CPT_IDC_E_Press#1 (>L:IDC_E_CPT)
CPT_IDC_F_Press#1 (>L:IDC_F_CPT)
CPT_IDC_G_Press#1 (>L:IDC_G_CPT)
CPT_IDC_H_Press#1 (>L:IDC_H_CPT)
CPT_IDC_HFD_Press#1 (>L:IDC_HFD_CPT)
CPT_IDC_I_Press#1 (>L:IDC_I_CPT)
CPT_IDC_J_Press#1 (>L:IDC_J_CPT)
CPT_IDC_K_Press#1 (>L:IDC_K_CPT)
CPT_IDC_L_Press#1 (>L:IDC_L_CPT)
CPT_IDC_LSK1_Press#1 (>L:IDC_LSK1_CPT)
CPT_IDC_LSK2_Press#1 (>L:IDC_LSK2_CPT)
CPT_IDC_LSK3_Press#1 (>L:IDC_LSK3_CPT)
CPT_IDC_LSK4_Press#1 (>L:IDC_LSK4_CPT)
CPT_IDC_LSK5_Press#1 (>L:IDC_LSK5_CPT)
CPT_IDC_LSK6_Press#1 (>L:IDC_LSK6_CPT)
CPT_IDC_M_Press#1 (>L:IDC_M_CPT)
CPT_IDC_MAIN_Press#1 (>L:IDC_MAIN_CPT)
CPT_IDC_MENU_Press#1 (>L:IDC_MENU_CPT)
CPT_IDC_MSG_Press#1 (>L:IDC_MSG_CPT)
CPT_IDC_N_Press#1 (>L:IDC_N_CPT)
CPT_IDC_NEXT_Press#1 (>L:IDC_NEXT_CPT)
CPT_IDC_O_Press#1 (>L:IDC_O_CPT)
CPT_IDC_P_Press#1 (>L:IDC_P_CPT)
CPT_IDC_PLUS_Press#1 (>L:IDC_PLUS_CPT)
CPT_IDC_PREV_Press#1 (>L:IDC_PREV_CPT)
CPT_IDC_Q_Press#1 (>L:IDC_Q_CPT)
CPT_IDC_R_Press#1 (>L:IDC_R_CPT)
CPT_IDC_RJCT_Press#1 (>L:IDC_RJCT_CPT)
CPT_IDC_RSK1_Press#1 (>L:IDC_RSK1_CPT)
CPT_IDC_RSK2_Press#1 (>L:IDC_RSK2_CPT)
CPT_IDC_RSK3_Press#1 (>L:IDC_RSK3_CPT)
CPT_IDC_RSK4_Press#1 (>L:IDC_RSK4_CPT)
CPT_IDC_RSK5_Press#1 (>L:IDC_RSK5_CPT)
CPT_IDC_RSK6_Press#1 (>L:IDC_RSK6_CPT)
CPT_IDC_S_Press#1 (>L:IDC_S_CPT)
CPT_IDC_SATDIAL_Press#1 (>L:IDC_SATDIAL_CPT)
CPT_IDC_SATM_Press#1 (>L:IDC_SATM_CPT)
CPT_IDC_SLASH_Press#1 (>L:IDC_SLASH_CPT)
CPT_IDC_SP_Press#1 (>L:IDC_SP_CPT)
CPT_IDC_T_Press#1 (>L:IDC_T_CPT)
CPT_IDC_TUN_Press#1 (>L:IDC_TUN_CPT)
CPT_IDC_U_Press#1 (>L:IDC_U_CPT)
CPT_IDC_V_Press#1 (>L:IDC_V_CPT)
CPT_IDC_VID_Press#1 (>L:IDC_VID_CPT)
CPT_IDC_W_Press#1 (>L:IDC_W_CPT)
CPT_IDC_X_Press#1 (>L:IDC_X_CPT)
CPT_IDC_Y_Press#1 (>L:IDC_Y_CPT)
CPT_IDC_Z_Press#1 (>L:IDC_Z_CPT)
FO_IDC_0_Press#1 (>L:IDC_0_FO)
FO_IDC_01_Press#1 (>L:IDC_01_FO)
FO_IDC_02_Press#1 (>L:IDC_02_FO)
FO_IDC_03_Press#1 (>L:IDC_03_FO)
FO_IDC_04_Press#1 (>L:IDC_04_FO)
FO_IDC_05_Press#1 (>L:IDC_05_FO)
FO_IDC_06_Press#1 (>L:IDC_06_FO)
FO_IDC_07_Press#1 (>L:IDC_07_FO)
FO_IDC_08_Press#1 (>L:IDC_08_FO)
FO_IDC_09_Press#1 (>L:IDC_09_FO)
FO_IDC_A_Press#1 (>L:IDC_A_FO)
FO_IDC_ACCP_Press#1 (>L:IDC_ACCP_FO)
FO_IDC_ATC_Press#1 (>L:IDC_ATC_FO)
FO_IDC_B_Press#1 (>L:IDC_B_FO)
FO_IDC_C_Press#1 (>L:IDC_C_FO)
FO_IDC_CANC_Press#1 (>L:IDC_CANC_FO)
FO_IDC_CLR_Press#1 (>L:IDC_CLR_FO)
FO_IDC_D_Press#1 (>L:IDC_D_FO)
FO_IDC_DOT_Press#1 (>L:IDC_DOT_FO)
FO_IDC_E_Press#1 (>L:IDC_E_FO)
FO_IDC_F_Press#1 (>L:IDC_F_FO)
FO_IDC_G_Press#1 (>L:IDC_G_FO)
FO_IDC_H_Press#1 (>L:IDC_H_FO)
FO_IDC_HFD_Press#1 (>L:IDC_HFD_FO)
FO_IDC_I_Press#1 (>L:IDC_I_FO)
FO_IDC_J_Press#1 (>L:IDC_J_FO)
FO_IDC_K_Press#1 (>L:IDC_K_FO)
FO_IDC_L_Press#1 (>L:IDC_L_FO)
FO_IDC_LSK1_Press#1 (>L:IDC_LSK1_FO)
FO_IDC_LSK2_Press#1 (>L:IDC_LSK2_FO)
FO_IDC_LSK3_Press#1 (>L:IDC_LSK3_FO)
FO_IDC_LSK4_Press#1 (>L:IDC_LSK4_FO)
FO_IDC_LSK5_Press#1 (>L:IDC_LSK5_FO)
FO_IDC_LSK6_Press#1 (>L:IDC_LSK6_FO)
FO_IDC_M_Press#1 (>L:IDC_M_FO)
FO_IDC_MAIN_Press#1 (>L:IDC_MAIN_FO)
FO_IDC_MENU_Press#1 (>L:IDC_MENU_FO)
FO_IDC_MSG_Press#1 (>L:IDC_MSG_FO)
FO_IDC_N_Press#1 (>L:IDC_N_FO)
FO_IDC_NEXT_Press#1 (>L:IDC_NEXT_FO)
FO_IDC_O_Press#1 (>L:IDC_O_FO)
FO_IDC_P_Press#1 (>L:IDC_P_FO)
FO_IDC_PLUS_Press#1 (>L:IDC_PLUS_FO)
FO_IDC_PREV_Press#1 (>L:IDC_PREV_FO)
FO_IDC_Q_Press#1 (>L:IDC_Q_FO)
FO_IDC_R_Press#1 (>L:IDC_R_FO)
FO_IDC_RJCT_Press#1 (>L:IDC_RJCT_FO)
FO_IDC_RSK1_Press#1 (>L:IDC_RSK1_FO)
FO_IDC_RSK2_Press#1 (>L:IDC_RSK2_FO)
FO_IDC_RSK3_Press#1 (>L:IDC_RSK3_FO)
FO_IDC_RSK4_Press#1 (>L:IDC_RSK4_FO)
FO_IDC_RSK5_Press#1 (>L:IDC_RSK5_FO)
FO_IDC_RSK6_Press#1 (>L:IDC_RSK6_FO)
FO_IDC_S_Press#1 (>L:IDC_S_FO)
FO_IDC_SATDIAL_Press#1 (>L:IDC_SATDIAL_FO)
FO_IDC_SATM_Press#1 (>L:IDC_SATM_FO)
FO_IDC_SLASH_Press#1 (>L:IDC_SLASH_FO)
FO_IDC_SP_Press#1 (>L:IDC_SP_FO)
FO_IDC_T_Press#1 (>L:IDC_T_FO)
FO_IDC_TUN_Press#1 (>L:IDC_TUN_FO)
FO_IDC_U_Press#1 (>L:IDC_U_FO)
FO_IDC_V_Press#1 (>L:IDC_V_FO)
FO_IDC_VID_Press#1 (>L:IDC_VID_FO)
FO_IDC_W_Press#1 (>L:IDC_W_FO)
FO_IDC_X_Press#1 (>L:IDC_X_FO)
FO_IDC_Y_Press#1 (>L:IDC_Y_FO)
FO_IDC_Z_Press#1 (>L:IDC_Z_FO)
A300_Pedestal_VHF_COM1_STBY_Inner_Knob_Khz_Dec#1 (>L:INI_RMP_COM1_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM1_STBY_Inner_Knob_Khz_Inc#1 (>L:INI_RMP_COM1_STBY_INNER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_COM1_STBY_Outer_Knob_Mhz_Dec#1 (>L:INI_RMP_COM1_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A300_Pedestal_VHF_COM1_STBY_Outer_Knob_Mhz_Inc#1 (>L:INI_RMP_COM1_STBY_OUTER_KNOB_TURNED_CLOCKWISE)
A300_Pedestal_VHF_Capt_Sql_Switch_Disable#0 (>L:INI_CPT_VHF_SQL_SWITCH)
sql#0 (>L:INI_FO_VHF_SQL_SWITCH)
//IniBuilds/A300/Safety
A300_Ovhd_Oxygen_Low_Pressure_Supply_Toggle#(L:INI_OXYGEN_LOW_PRESSURE_SUPPLY) ! (>L:INI_OXYGEN_LOW_PRESSURE_SUPPLY) 
//IniBuilds/A300/Warning
A300_GPWS_Press#1 (>L:INI_GPWS_PUSH)
A300_GPWS_Release#0 (>L:INI_GPWS_PUSH)
A300_Master_Caution_Push#1 (>L:INI_MASTER_CAUTION_ACTIVE)
A300_Master_Warning_Push#1 (>L:INI_MASTER_WARNING_ACTIVE)
A300_Parking_Brake_Accu_Press_Toggle#(L:INI_ACCU_PRESS_BUTTON) ! (>L:INI_ACCU_PRESS_BUTTON)
A300_Takeoff_Config_Test_Button_Press#1 (>L:INI_TAKEOFF_CONFIG_PRESSED)
A300_Takeoff_Config_Test_Button_Release#0 (>L:INI_TAKEOFF_CONFIG_PRESSED)
A300_Warning_Sys_Emer_Cancel_Push#1 (>L:PUSH_EWD_EMER_CANCEL)
A300_Warning_Sys_Emer_Guard_Toggle#(L:__EMER_GAURD_State) ! (>L:__EMER_GAURD_State)
A300_Warning_Sys_Norm_Cancel_Push#1 (>L:PUSH_EWD_NORM_CANCEL)
//IniBuilds/A310/Air Condition / Pressurization
A310_Ovhd_Air_Bleed_APU_Bleed_Off#0 (>L:A310_apu_bleed)
A310_Ovhd_Air_Bleed_APU_Bleed_On#1 (>L:A310_apu_bleed)
A310_Ovhd_Air_Bleed_APU_Bleed_Toggle#(L:A310_apu_bleed) ! (>L:A310_apu_bleed)
A310_Ovhd_Air_Bleed_Eng1_HP_Valve_Toggle#(L:A310_bleed_eng1_hp_valve) ! (>L:A310_bleed_eng1_hp_valve)
A310_Ovhd_Air_Bleed_Eng1_Valve_Toggle#(L:A310_ENG1_BLEED) ! (>L:A310_ENG1_BLEED)
A310_Ovhd_Air_Bleed_Eng2_HP_Valve_Toggle#(L:A310_bleed_eng2_hp_valve) ! (>L:A310_bleed_eng2_hp_valve)
A310_Ovhd_Air_Bleed_Eng2_Valve_Toggle#(L:A310_ENG2_BLEED) ! (>L:A310_ENG2_BLEED)
A310_Ovhd_Air_Bleed_XFeed_Mode_Toggle#(L:A300_XBLEED_MODE) ! (>L:A300_XBLEED_MODE)
A310_Ovhd_Air_Bleed_XFeed_Valve_Button#(L:A300_XBLEED_MODE, Bool) if{ (L:A300_XBLEED) ! (>L:A300_XBLEED) } (L:A300_XBLEED) (>L:A300_XBLEED_BUTTON) 
A310_Ovhd_Cabin_Auto_Press_Knob_Dec#(L:A310_CABIN_AUTO_PRESS_ACTUAL) 0.5 - 0 max 10 min (>L:A310_CABIN_AUTO_PRESS_ACTUAL)
A310_Ovhd_Cabin_Auto_Press_Knob_Inc#(L:A310_CABIN_AUTO_PRESS_ACTUAL) 0.5 + 0 max 10 min (>L:A310_CABIN_AUTO_PRESS_ACTUAL)
A310_Ovhd_Cabin_Outflow_Aft_Guard_Toggle#(L:__GUARD_PRESS_OUTFLOW_AFT_State) ! (>L:__GUARD_PRESS_OUTFLOW_AFT_State)
A310_Ovhd_Cabin_Outflow_After_Button_Toggle#(L:A300_CABIN_OUTFLOW_AFTER_BUTTON) ! (>L:A300_CABIN_OUTFLOW_AFTER_BUTTON) 
A310_Ovhd_Cabin_Outflow_Forward_Button_Toggle#(L:A300_CABIN_OUTFLOW_FORWARD_BUTTON) ! (>L:A300_CABIN_OUTFLOW_FORWARD_BUTTON) 
A310_Ovhd_Cabin_Outflow_Fwd_Guard_Toggle#(L:__GUARD_PRESS_OUTFLOW_FWD_State) ! (>L:__GUARD_PRESS_OUTFLOW_FWD_State)
A310_Ovhd_Cabin_Sys1_Button#1 (>L:A300DR_CABIN_SYS1_BUTTON)
A310_Ovhd_Cabin_Sys1_Regulator_Button#1 (>L:A300DR_CABIN_SYS1_REGULATOR_BUTTON)
A310_Ovhd_Cabin_Sys2_Button#1 (>L:A300DR_CABIN_SYS2_BUTTON)
A310_Ovhd_Cabin_Sys2_Regulator_Button#1 (>L:A300DR_CABIN_SYS2_REGULATOR_BUTTON)
A310_Ovhd_Compt_Aft_Cabin_Knob_Dec#(L:A310_AIRCOND_LVL_4) 5 - 0 max (>L:A310_AIRCOND_LVL_4) 
A310_Ovhd_Compt_Aft_Cabin_Knob_Inc#(L:A310_AIRCOND_LVL_4) 5 + 100 min (>L:A310_AIRCOND_LVL_4) 
A310_Ovhd_Compt_Bulk_Cargo_Knob_Dec#(L:A310_AIRCOND_LVL_5) 5 - 0 max (>L:A310_AIRCOND_LVL_5) 
A310_Ovhd_Compt_Bulk_Cargo_Knob_Inc#(L:A310_AIRCOND_LVL_5) 5 + 100 min (>L:A310_AIRCOND_LVL_5) 
A310_Ovhd_Compt_Cockpit_Knob_Dec#(L:A310_AIRCOND_LVL_1) 5 - 0 max (>L:A310_AIRCOND_LVL_1) 
A310_Ovhd_Compt_Cockpit_Knob_Inc#(L:A310_AIRCOND_LVL_1) 5 + 100 min (>L:A310_AIRCOND_LVL_1) 
A310_Ovhd_Compt_Econ_Flow_Toggle#(L:A310_econ_flow_selected) ! (>L:A310_econ_flow_selected) 
A310_Ovhd_Compt_Fwd_Cabin_Knob_Dec#(L:A310_AIRCOND_LVL_2) 5 - 0 max (>L:A310_AIRCOND_LVL_2) 
A310_Ovhd_Compt_Fwd_Cabin_Knob_Inc#(L:A310_AIRCOND_LVL_2) 5 + 100 min (>L:A310_AIRCOND_LVL_2) 
A310_Ovhd_Compt_Fwd_Cargo_Knob_Dec#(L:A310_AIRCOND_LVL_6) 5 - 0 max (>L:A310_AIRCOND_LVL_6) 
A310_Ovhd_Compt_Fwd_Cargo_Knob_Inc#(L:A310_AIRCOND_LVL_6) 5 + 100 min (>L:A310_AIRCOND_LVL_6) 
A310_Ovhd_Compt_Hot_Air_Supply_Toggle#(L:A300_HOT_AIR_SUPPLY_ON) ! (>L:A300_HOT_AIR_SUPPLY_ON)
A310_Ovhd_Compt_Isol_Valve_Left_Toggle#(L:A300_ISOLATION_VALVE_LEFT) ! (>L:A300_ISOLATION_VALVE_LEFT)
A310_Ovhd_Compt_Isol_Valve_Right_Toggle#(L:A300_ISOLATION_VALVE_RIGHT) ! (>L:A300_ISOLATION_VALVE_RIGHT)
A310_Ovhd_Compt_Max_Cool_Toggle#(L:A310_max_cool) ! (>L:A310_max_cool)
A310_Ovhd_Compt_Mid_Cabin_Knob_Dec#(L:A310_AIRCOND_LVL_3) 5 - 0 max (>L:A310_AIRCOND_LVL_3) 
A310_Ovhd_Compt_Mid_Cabin_Knob_Inc#(L:A310_AIRCOND_LVL_3) 5 + 100 min (>L:A310_AIRCOND_LVL_3) 
A310_Ovhd_Compt_Pack_Valve_1_Press#(L:A300_PACK1_BUTTON) ! (>L:A300_PACK1_BUTTON)
A310_Ovhd_Compt_Pack_Valve_2_Press#(L:A300_PACK2_BUTTON) ! (>L:A300_PACK2_BUTTON)
A310_Ovhd_Compt_Pressure_Selector_CRT#2 (>L:A310_pressure_selector_indicator_actual)
A310_Ovhd_Compt_Pressure_Selector_Cabin_Aft#3 (>L:A310_pressure_selector_indicator_actual)
A310_Ovhd_Compt_Pressure_Selector_Cabin_Fwd#5 (>L:A310_pressure_selector_indicator_actual)
A310_Ovhd_Compt_Pressure_Selector_Cabin_Mid#4 (>L:A310_pressure_selector_indicator_actual)
A310_Ovhd_Compt_Pressure_Selector_Cargo_Bulk#1 (>L:A310_pressure_selector_indicator_actual)
A310_Ovhd_Compt_Pressure_Selector_Cargo_Fwd#0 (>L:A310_pressure_selector_indicator_actual)
A310_Ovhd_Compt_Pressure_Selector_Cockpit#6 (>L:A310_pressure_selector_indicator_actual)
A310_Ovhd_Compt_Ram_Air_Button_Guard_Toggle#(L:__GUARD_RAM_AIR_State) ! (>L:__GUARD_RAM_AIR_State)
A310_Ovhd_Compt_Ram_Air_Toggle#(L:A300_RAM_AIR_ON) ! (>L:A300_RAM_AIR_ON) 
A310_Ovhd_Man_Press_Toggle#1 (>L:A300DR_CABIN_MAN_PRESS_BUTTON)
A310_Ovhd_Man_V_S_Control_Dn#2 (>L:A310_MAN_VS_CONTROL_SWITCH)
A310_Ovhd_Man_V_S_Control_Mid#1 (>L:A310_MAN_VS_CONTROL_SWITCH)
A310_Ovhd_Man_V_S_Control_Up#0 (>L:A310_MAN_VS_CONTROL_SWITCH)
A310_Ovhd_Pack1_Man_Ctl_Switch_Cold_Press#2 (>L:A310_PACK1_MAN_SWITCH) 
A310_Ovhd_Pack1_Man_Ctl_Switch_Hot_Press#0 (>L:A310_PACK1_MAN_SWITCH) 
A310_Ovhd_Pack1_Man_Ctl_Switch_Release#1 (>L:A310_PACK1_MAN_SWITCH) 
A310_Ovhd_Pack1_Mode_Toggle#(L:A310_bleed_pack1_mode) ! (>L:A310_bleed_pack1_mode)
A310_Ovhd_Pack2_Man_Ctl_Switch_Cold_Press#2 (>L:A310_PACK2_MAN_SWITCH) 
A310_Ovhd_Pack2_Man_Ctl_Switch_Hot_Press#0 (>L:A310_PACK2_MAN_SWITCH) 
A310_Ovhd_Pack2_Man_Ctl_Switch_Release#1 (>L:A310_PACK2_MAN_SWITCH) 
A310_Ovhd_Pack2_Mode_Toggle#(L:A310_bleed_pack2_mode) ! (>L:A310_bleed_pack2_mode)
A310_Ovhd_Vent_Cargo_Valve_Off_Indicator#(L:A310_CARGO_VALVE, Bool) ! 
A310_Ovhd_Vent_Cargo_Valve_Toggle#(L:A310_CARGO_VALVE) ! (>L:A310_CARGO_VALVE)
A310_Ovhd_Vent_Extract_Valve_Toggle#(L:A300DR_vent_extract_valve) ! (>L:A300DR_vent_extract_valve) 
A310_Ovhd_Vent_Gnd_Ctl_Off_Indicator#(L:A310_VENT_GND_CTL, Bool) ! 
A310_Ovhd_Vent_Gnd_Ctl_Toggle#(L:A310_VENT_GND_CTL) ! (>L:A310_VENT_GND_CTL)
A310_Ovhd_Vent_Gnd_Ovrd_On_Indicator#(L:A310_VENT_GND_OVRD, Bool)
A310_Ovhd_Vent_Gnd_Ovrd_Toggle#(L:A310_VENT_GND_OVRD) ! (>L:A310_VENT_GND_OVRD)
A310_Ovhd_Vent_Ovbd_Valve_Toggle#(L:A300DR_vent_outboard_valve) ! (>L:A300DR_vent_outboard_valve) 
//IniBuilds/A310/Anti-Ice
A310_Ovhd_Anti_Ice_Eng_1_Toggle#(L:A310_ENG1_ANTI_ICE, Bool) ! (>L:A310_ENG1_ANTI_ICE, Bool) 
A310_Ovhd_Anti_Ice_Eng_2_Toggle#(L:A310_ENG2_ANTI_ICE, Bool) ! (>L:A310_ENG2_ANTI_ICE, Bool) 
A310_Ovhd_Anti_Ice_Wing_ALTN_Mode_Toggle#(L:A300_ANTI_ICE_WING_MODE, Bool) ! (>L:A300_ANTI_ICE_WING_MODE, Bool)
A310_Ovhd_Anti_Ice_Wing_Supply_Toggle#(L:A310_WING_ANTI_ICE, Bool) ! (>L:A310_WING_ANTI_ICE, Bool)
A310_Ovhd_Probe_Heat_Capt_Toggle#(L:A300_PROBE_HEAT_CAPT) ! (>L:A300_PROBE_HEAT_CAPT) 
A310_Ovhd_Probe_Heat_FO_Toggle#(L:A300_PROBE_HEAT_COPILOT) ! (>L:A300_PROBE_HEAT_COPILOT) 
A310_Ovhd_Probe_Heat_Standby_Toggle#(L:A300_PROBE_HEAT_STANDBY) ! (>L:A300_PROBE_HEAT_STANDBY)
A310_Ovhd_Window_Heater_Left_Lat_Toggle#(L:A300_WINDOW_HEAT1) ! (>L:A300_WINDOW_HEAT1)
A310_Ovhd_Window_Heater_Left_WSLO_Toggle#(L:A300_WINDOW_HEAT2) ! (>L:A300_WINDOW_HEAT2)
A310_Ovhd_Window_Heater_Right_Lat_Toggle#(L:A300_WINDOW_HEAT4) ! (>L:A300_WINDOW_HEAT4)
A310_Ovhd_Window_Heater_Right_WSLO_Toggle#(L:A300_WINDOW_HEAT3) ! (>L:A300_WINDOW_HEAT3)
//IniBuilds/A310/Autopilot
A310_AP_ALT_HLD_Button#1 (>L:AP1_BUTTON)
A310_AP_Altitude_Dial_DN#1 (>L:A310_ALTITUDE_DIAL_DN_COMMAND)
A310_AP_Altitude_Dial_Up#1 (>L:A310_ALTITUDE_DIAL_UP_COMMAND)
A310_AP_Altitude_Pull#1 (>L:A310_FCU_ALTITUDE_PULL_COMMAND)
A310_AP_Altitude_Push#1 (>L:A310_FCU_ALTITUDE_PUSH_COMMAND)
A310_AP_Auto_Throttle#1 (>L:AP8_BUTTON)
A310_AP_CWS_CMD_Toggle#1 (>L:A310_CWS_COMMAND)
A310_AP_Heading_Dial_Dn#1 (>L:A310_HEADING_DIAL_DN_COMMAND)
A310_AP_Heading_Dial_UP#1 (>L:A310_HEADING_DIAL_UP_COMMAND)
A310_AP_Heading_Managed#1 (>L:A310_FCU_MANAGED_HEADING_BUTTON)
A310_AP_Heading_Select#1 (>L:A310_FCU_SELECTED_HEADING_BUTTON)
A310_AP_Heading_Sync#1 (>L:A310_FCU_SYNC_HEADING_BUTTON)
A310_AP_LAND_Button#1 (>L:AP7_BUTTON)
A310_AP_LOC_V_L_BUTTON#1 (>L:AP6_BUTTON)
A310_AP_LVL_CHG#1 (>L:AP2_BUTTON)
A310_AP_NAV_Button#1 (>L:A310_FCU_MANAGED_HEADING_BUTTON)
A310_AP_PROFILE_Button#1 (>L:AP3_BUTTON)
A310_AP_Speed_Knob_Dec#1 (>L:A310_AIRSPEED_DIAL_DN_COMMAND) 
A310_AP_Speed_Knob_Inc#1 (>L:A310_AIRSPEED_DIAL_UP_COMMAND) 
A310_AP_Speed_Knob_Pull#1 (>L:A310_FCU_SELECTED_SPEED_BUTTON)
A310_AP_Speed_Knob_Push#1 (>L:A310_FCU_MANAGED_SPEED_BUTTON)
A310_AP_VS_Dial_DN#1 (>L:A310_VVI_DIAL_DN_COMMAND)
A310_AP_VS_Dial_Up#1 (>L:A310_VVI_DIAL_UP_COMMAND)
A310_AP_VS_Pull#1 (>L:AP9_BUTTON)
A310_AP1_Toggle_#1 (>L:A310_AP1_BUTTON)
A310_AP2_Toggle#1 (>L:A310_AP2_BUTTON)
A310_Autoland_Light_Test_Switch#(L:A310_AUTOLAND_LIGHT_TEST) ! (>L:A310_AUTOLAND_LIGHT_TEST)
A310_SPD_MACH_Button#1 (>L:A310_SPD_MACH_BUTTON)
A310_Stop_Rudder_Input_Test_Button#(L:A310_STOP_RUDDER_INPUT_TEST_BUTTON) ! (>L:A310_STOP_RUDDER_INPUT_TEST_BUTTON)
A310_Takeoff_Toggle#1 (>L:A310_takeoff_toggle)
A310_Yoke_Autopilot_Disconnect_Push#1 (>K:AUTOPILOT_OFF)
//IniBuilds/A310/Autothrust System
A310_AP_ATHR_Button#1 (>L:AP8_BUTTON)
A310_Ovhd_ATS_1_Switch_OFF#0 (>L:A310_autothrottle_master_switch1)
A310_Ovhd_ATS_1_Switch_ON#1 (>L:A310_autothrottle_master_switch1)
A310_Ovhd_ATS_2_Switch_OFF#0 (>L:A310_autothrottle_master_switch2)
A310_Ovhd_ATS_2_Switch_ON#1 (>L:A310_autothrottle_master_switch2)
A310_Ovhd_Eng_Trim_Guard_Toggle#(L:__GUARD_ENG_TRIM_State) ! (>L:__GUARD_ENG_TRIM_State)
A310_Ovhd_Engine_Trim_Toggle#(L:__GUARD_ENG_TRIM_State) ! if{ 1 (>L:__GUARD_ENG_TRIM_State) } (L:A310_ENG_TRIM) ! (>L:A310_ENG_TRIM)
//IniBuilds/A310/Avionics
A310_ADC_Inst_FO_Toggle#(L:A300DR_fo_switch_adc_inst_fo1) ! (>L:A300DR_fo_switch_adc_inst_fo1)
A310_ATT_HDG_FO_Toggle#1 (>L:A310_FO_ATT_HDG_COMMAND)
A310_Capt_Terr_Mode_GPWS_Toggle#(L:A300DR_terr_mode) ! (>L:A300DR_terr_mode)
A310_Cpt_ADC_Inst_Toggle#(L:A300DR_capt_switch_adc_inst_fo1) ! (>L:A300DR_capt_switch_adc_inst_fo1)
A310_Cpt_ATT_HDG_Toggle#1 (>L:A310_CAPT_ATT_HDG_COMMAND)
A310_Cpt_FD_Toggle#(L:A300DR_capt_switch_fd_fo1) ! (>L:A300DR_capt_switch_fd_fo1)
A310_Cpt_PFD_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_60) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_60) l0 60 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_Cpt_PFD_Brightness_Knob_Inc#(L:LIGHTING_POTENTIOMETER_60) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_60) l0 60 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_Cpt_PFD_ND_XFR_Toggle#(L:A300DR_pfd_nd_xfr) ! (>L:A300DR_pfd_nd_xfr)
A310_FD_FPV__Switch_Capt_OFF#0 (>L:A310_FDIR_SWITCH_CAPT)
A310_FD_FPV__Switch_Capt_ON#1 (>L:A310_FDIR_SWITCH_CAPT)
A310_FD_FPV__Switch_Capt_UP#2 (>L:A310_FDIR_SWITCH_CAPT)
A310_FO_EFIS_SGU_Toggle#1 (>L:A310_FO_SGU_COMMAND)
A310_FO_FD_Toggle#(L:A300DR_fo_switch_fd_fo1) ! (>L:A300DR_fo_switch_fd_fo1)
A310_FO_ND_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_63) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_63) l0 63 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_FO_ND_Brightness_Knob_Inc#(L:LIGHTING_POTENTIOMETER_63) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_63) l0 63 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_FO_PFD_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_62) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_62) l0 62 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_FO_PFD_Brightness_Knob_Inc#(L:LIGHTING_POTENTIOMETER_62) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_62) l0 62 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_FO_PFD_ND_XFR_Toggle#(L:A300DR_pfd_nd_xfr) ! (>L:A300DR_pfd_nd_xfr)
A310_FO_Terr_Mode_GPWS_Toggle#(L:A310_terr_mode) ! (>L:A310_terr_mode)
A310_GPWS_Flap_Switch_Flap_Ovrd#1 (>L:A310_GPWS_FLAP_SWITCH)
A310_GPWS_Flap_Switch_Norm#0 (>L:A310_GPWS_FLAP_SWITCH)
A310_GPWS_Flap_Switch_Off#2 (>L:A310_GPWS_FLAP_SWITCH)
A310_Landing_Elevation_Knob_Dec#(L:A310_landing_elevation, Number) 50 - (>L:A310_landing_elevation, Number)
A310_Landing_Elevation_Knob_Inc#(L:A310_landing_elevation, Number) 50 + (>L:A310_landing_elevation, Number)
A310_ND_Brightness_Inner_Knob_Dec#(L:LIGHTING_POTENTIOMETER_12) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_ND_Brightness_Inner_Knob_Inc#(L:LIGHTING_POTENTIOMETER_12) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_ND_Brightness_Outer_Knob_Dec#(L:LIGHTING_POTENTIOMETER_61) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_61) l0 61 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_ND_Brightness_Outer_Knob_Inc#(L:LIGHTING_POTENTIOMETER_61) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_61) l0 61 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_TERR_Button_CPT_Toggle#(L:A310_TERR_ON_CPT) ! (>L:A310_TERR_ON_CPT)
A310_TERR_Button_FO_Toggle#(L:A310_TERR_ON_FO) ! (>L:A310_TERR_ON_FO)
//IniBuilds/A310/Controls
A310_Capt_Yoke_Trim_Switch_Down#2 (>L:A310_CPT_YOKE_TRIM_SWITCH)
A310_Capt_Yoke_Trim_Switch_Release#1 (>L:A310_CPT_YOKE_TRIM_SWITCH)
A310_Capt_Yoke_Trim_Switch_Up#0 (>L:A310_CPT_YOKE_TRIM_SWITCH)
A310_FO_Yoke_Trim_Switch_Down#2 (>L:A310_FO_YOKE_TRIM_SWITCH)
A310_FO_Yoke_Trim_Switch_Release#1 (>L:A310_FO_YOKE_TRIM_SWITCH)
A310_FO_Yoke_Trim_Switch_Up#0 (>L:A310_FO_YOKE_TRIM_SWITCH)
A310_GPWS_Landing_Toggle#(L:A310_GPWS_LANDING_SWITCH) ! (>L:A310_GPWS_LANDING_SWITCH) 
A310_Ovhd_Pitch_Trim1_OFF#0 (>L:A310_pitch_trim1)
A310_Ovhd_Pitch_Trim1_ON#1 (>L:A310_pitch_trim1)
A310_Ovhd_Pitch_Trim2_OFF#0 (>L:A310_pitch_trim2)
A310_Ovhd_Pitch_Trim2_ON#1 (>L:A310_pitch_trim2)
A310_Ovhd_Yaw_Damper_1_OFF#0 (>L:A310_yaw_damper1)
A310_Ovhd_Yaw_Damper_1_ON#1 (>L:A310_yaw_damper1)
A310_Ovhd_Yaw_Damper_2_OFF#0 (>L:A310_yaw_damper2)
A310_Ovhd_Yaw_Damper_2_ON#1 (>L:A310_yaw_damper2)
A310_Ped_Spoilers_Arm_Toggle#(L:A310_SPOILERS_ARMED, Bool) ! (L:A310_SPOILERS_HANDLE_POSITION, position 16k) 0 == and if{ 1 } els{ 0 } (>K:SPOILERS_ARM_SET) 
A310_Rudder_Trim_Knob_Left#(>K:RUDDER_TRIM_LEFT)
A310_Rudder_Trim_Knob_Right#(>K:RUDDER_TRIM_RIGHT)
A310_Rudder_Trim_Reset_Button_Press#1 (>L:A310_RESET_RUDDER_TRIM_COMMAND)
A310_Rudder_Trim_Reset_Button_Release#0 (>L:A310_RESET_RUDDER_TRIM_COMMAND)
//IniBuilds/A310/ECAM
A310_ECAM_AC_Push#1 (>L:PUSH_ECAM_ELEC_AC)
A310_ECAM_APU_Push#1 (>L:PUSH_ECAM_APU)
A310_ECAM_BLEED_Push#1 (>L:PUSH_ECAM_BLEED)
A310_ECAM_CLR_Push#1 (>L:PUSH_EWD_CLR)
A310_ECAM_COND_Push#1 (>L:PUSH_ECAM_COND)
A310_ECAM_DC_Push#1 (>L:PUSH_ECAM_ELEC_DC)
A310_ECAM_DOOR_Push#1 (>L:PUSH_ECAM_DOOR)
A310_ECAM_ENG_Push#1 (>L:PUSH_ECAM_ENG)
A310_ECAM_EWD_RCL_Press#1 (>L:PUSH_EWD_RCL)
A310_ECAM_EWD_STS_Push#1 (>L:PUSH_EWD_STS)
A310_ECAM_FCTL_Push#1 (>L:PUSH_ECAM_FCTL)
A310_ECAM_FUEL_Push#1 (>L:PUSH_ECAM_FUEL)
A310_ECAM_HYD_Push#1 (>L:PUSH_ECAM_HYD)
A310_ECAM_Left_Display_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_64) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_64) l0 64 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_ECAM_Left_Display_Brightness_Knob_Inc#(>L:LIGHTING_POTENTIOMETER_64) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_64) l0 64 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_ECAM_PRESS_Push#1 (>L:PUSH_ECAM_PRESS)
A310_ECAM_Right_Display_Brightness_Knob_Dec#(L:LIGHTING_POTENTIOMETER_65) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_65) l0 65 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_ECAM_Right_Display_Brightness_Knob_Inc#(L:LIGHTING_POTENTIOMETER_65) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_65) l0 65 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_ECAM_SGU_1_Toggle#(L:A310_SGU1) ! (>L:A310_SGU1)
A310_ECAM_SGU_2_Toggle#(L:A310_SGU2) ! (>L:A310_SGU2)
A310_ECAM_WHEEL_Push#1 (>L:PUSH_ECAM_WHEEL)
//IniBuilds/A310/EFIS
A310_Cpt_EFIS_SGU_Toggle#1 (>L:A310_CAPT_SGU_COMMAND)
A310_EFIS_Cpt_ARPT_Button#1 (>L:A310_EFIS_CPT_ARPT_BUTTON)
A310_EFIS_Cpt_CSTR_Button#1 (>L:A310_EFIS_CPT_CSTR_BUTTON)
A310_EFIS_Cpt_DH_Button#1 (>L:A310_CPT_DH_COMMAND)
A310_EFIS_Cpt_DH_Knob_Dec#1 (>L:A310_FPA_DH_KNOB_TURNED_ANTICLOCKWISE)
A310_EFIS_Cpt_DH_Knob_Inc#1 (>L:A310_FPA_DH_KNOB_TURNED_CLOCKWISE)
A310_EFIS_Cpt_FPA_Button#1 (>L:A310_CPT_FPA_COMMAND)
A310_EFIS_Cpt_NDB_Button#1 (>L:A310_EFIS_CPT_NDB_BUTTON)
A310_EFIS_Cpt_VOR_Button#1 (>L:A310_EFIS_CPT_VOR_BUTTON)
A310_EFIS_Cpt_WPT_Button#1 (>L:A310_EFIS_CPT_FIXES_BUTTON)
A310_EFIS_FO_DH_Button#1 (>L:A310_FO_DH_COMMAND)
A310_EFIS_FO_DH_Knob_Dec#1 (>L:A310_FPA_DH_KNOB_FO_TURNED_ANTICLOCKWISE)
A310_EFIS_FO_DH_Knob_Inc#1 (>L:A310_FPA_DH_KNOB_FO_TURNED_CLOCKWISE)
A310_EFIS_FO_FPA_Button#1 (>L:A310_FO_FPA_COMMAND)
A310_EFIS_Mode_Cpt_ARC#2 (>L:A310_map_mode_capt_switch)
A310_EFIS_Mode_Cpt_MAP#3 (>L:A310_map_mode_capt_switch)
A310_EFIS_Mode_Cpt_PLAN#4 (>L:A310_map_mode_capt_switch)
A310_EFIS_Mode_Cpt_ROSE#1 (>L:A310_map_mode_capt_switch)
A310_EFIS_Mode_Cpt_TEST#0 (>L:A310_map_mode_capt_switch)
A310_EFIS_Range_Capt_120#3 (>L:A310_map_range_capt_switch)
A310_EFIS_Range_Capt_15#0 (>L:A310_map_range_capt_switch)
A310_EFIS_Range_Capt_240#4 (>L:A310_map_range_capt_switch)
A310_EFIS_Range_Capt_30#1 (>L:A310_map_range_capt_switch)
A310_EFIS_Range_Capt_60#2 (>L:A310_map_range_capt_switch)
A310_EFIS_Selected_Nav_Capt_Switch_ILS#2 (>L:A310_efis_selected_nav_capt)
A310_EFIS_Selected_Nav_Capt_Switch_NAV#1 (>L:A310_efis_selected_nav_capt)
A310_EFIS_Selected_Nav_Capt_Switch_VOR#0 (>L:A310_efis_selected_nav_capt)
A310_EFIS_Mode_Capt_Dec#(L:A310_map_mode_capt_switch) -- 0 max 4 min (>L:A310_map_mode_capt_switch)
A310_EFIS_Mode_Capt_Inc#(L:A310_map_mode_capt_switch) ++ 0 max 4 min (>L:A310_map_mode_capt_switch)
A310_EFIS_Mode_FO_Dec#(L:A310_map_mode_fo_switch) -- 0 max 4 min (>L:A310_map_mode_fo_switch)
A310_EFIS_Mode_FO_Inc#(L:A310_map_mode_fo_switch) ++ 0 max 4 min (>L:A310_map_mode_fo_switch)
A310_EFIS_Range_Capt_Dec#(L:A310_map_range_capt_switch) -- 0 max 4 min (>L:A310_map_range_capt_switch)
A310_EFIS_Range_Capt_Inc#(L:A310_map_range_capt_switch) ++ 0 max 4 min (>L:A310_map_range_capt_switch)
A310_EFIS_Range_FO_Dec#(L:A310_map_range_fo_switch) -- 0 max 4 min (>L:A310_map_range_fo_switch)
A310_EFIS_Range_FO_Inc#(L:A310_map_range_fo_switch) ++ 0 max 4 min (>L:A310_map_range_fo_switch)
A310_EFIS_FO_ARPT_Button#1 (>L:A310_EFIS_FO_ARPT_BUTTON)
A310_EFIS_FO_CSTR_Button#1 (>L:A310_EFIS_FO_CSTR_BUTTON)
A310_EFIS_FO_NDB_Button#1 (>L:A310_EFIS_FO_NDB_BUTTON)
A310_EFIS_FO_VOR_Button#1 (>L:A310_EFIS_FO_VOR_BUTTON)
A310_EFIS_FO_WPT_Button#1 (>L:A310_EFIS_FO_FIXES_BUTTON)
A310_EFIS_Mode_FO_ARC#2 (>L:A310_map_mode_fo_switch)
A310_EFIS_Mode_FO_MAP#3 (>L:A310_map_mode_fo_switch)
A310_EFIS_Mode_FO_PLAN#4 (>L:A310_map_mode_fo_switch)
A310_EFIS_Mode_FO_ROSE#1 (>L:A310_map_mode_fo_switch)
A310_EFIS_Mode_FO_TEST#0 (>L:A310_map_mode_fo_switch)
A310_EFIS_Range_FO_120#3 (>L:A310_map_range_fo_switch)
A310_EFIS_Range_FO_15#0 (>L:A310_map_range_fo_switch)
A310_EFIS_Range_FO_240#4 (>L:A310_map_range_fo_switch)
A310_EFIS_Range_FO_30#1 (>L:A310_map_range_fo_switch)
A310_EFIS_Range_FO_60#2 (>L:A310_map_range_fo_switch)
//IniBuilds/A310/Electrical
A310_Ovhd_Elec_AC_Bus_Selector_APU_Gen#6 (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_AC_Bus_Selector_Bus1#0 (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_AC_Bus_Selector_Bus2#1 (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_AC_Bus_Selector_EMER#3 (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_AC_Bus_Selector_ESS#2 (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_AC_Bus_Selector_Ext_Pwr#7 (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_AC_Bus_Selector_Gen1#4 (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_AC_Bus_Selector_Gen2#5 (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_Apu_Gen_Toggle#(L:A310_apu_gen_on) ! (>L:A310_apu_gen_on)
A310_Ovhd_Elec_Bat1_Toggle#(L:A310_BAT1_ON) ! (>L:A310_BAT1_ON)
A310_Ovhd_Elec_Bat2_Toggle#(L:A310_BAT2_ON) ! (>L:A310_BAT2_ON)
A310_Ovhd_Elec_Bat3_Toggle#(L:A310_BAT3_ON) ! (>L:A310_BAT3_ON)
A310_Ovhd_Elec_DC_Bus_Selector_Bat1#0 (>L:A310_elec_ind_dc_selector)
A310_Ovhd_Elec_DC_Bus_Selector_Bat2#1 (>L:A310_elec_ind_dc_selector)
A310_Ovhd_Elec_DC_Bus_Selector_Bat3#2 (>L:A310_elec_ind_dc_selector)
A310_Ovhd_Elec_DC_Bus_Selector_ESS#3 (>L:A310_elec_ind_dc_selector)
A310_Ovhd_Elec_DC_Bus_Selector_ESS_Bus#7 (>L:A310_elec_ind_dc_selector)
A310_Ovhd_Elec_DC_Bus_Selector_TR1#4 (>L:A310_elec_ind_dc_selector)
A310_Ovhd_Elec_DC_Bus_Selector_TR2#5 (>L:A310_elec_ind_dc_selector)
A310_Ovhd_Elec_Ext_Pwr_Toggle#(L:A310_gpu_avail, Bool) (A:EXTERNAL POWER ON:1, Bool) ! and if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } els{ (A:EXTERNAL POWER ON:1, Bool) if{ 1 (>K:TOGGLE_EXTERNAL_POWER) } }
A310_Ovhd_Elec_Gen1_Toggle#(L:A310_eng1_gen_on) ! (>L:A310_eng1_gen_on)
A310_Ovhd_Elec_Gen2_Toggle#(L:A310_eng2_gen_on) ! (>L:A310_eng2_gen_on)
A310_Ovhd_Elec_AC_Bus_Selector_Dec#(L:A310_elec_ind_ac_selector) -- 0 max 7 min (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_AC_Bus_Selector_Inc#(L:A310_elec_ind_ac_selector) ++ 0 max 7 min (>L:A310_elec_ind_ac_selector)
A310_Ovhd_Elec_DC_Bus_Selector_Dec#(L:A310_elec_ind_dc_selector) -- 0 max 7 min (>L:A310_elec_ind_dc_selector)
A310_Ovhd_Elec_DC_Bus_Selector_Inc#(L:A310_elec_ind_dc_selector) ++ 0 max 7 min (>L:A310_elec_ind_dc_selector)
Battery_1_Off#0 (>L:A310_BAT1_ON)
Battery_1_On#1 (>L:A310_BAT1_ON)
Battery_2_Off#0 (>L:A310_BAT2_ON)
Battery_2_On#1 (>L:A310_BAT2_ON)
Battery_3_Off#0 (>L:A310_BAT3_ON)
Battery_3_On#1 (>L:A310_BAT3_ON)
//IniBuilds/A310/Engines
A310_APU_Fuel_Pump_Override_Button#(L:A300_APU_FUEL_OVRD) ! (>L:A300_APU_FUEL_OVRD)
A310_Ovhd_APU_Master_Switch_Toggle#(L:A310_apu_master_switch) ! (>L:A310_apu_master_switch) 
A310_Ovhd_APU_Start_Button#(L:A310_apu_master_switch, Bool) if{ 1 (>L:A310_APU_START_BUTTON) }
A310_Ovhd_Engine_Ignition_Knob_A#1 (>L:A310_eng_ignition_switch)
A310_Ovhd_Engine_Ignition_Knob_B#0 (>L:A310_eng_ignition_switch)
A310_Ovhd_Engine_Ignition_Knob_Cont_Relight#4 (>L:A310_eng_ignition_switch)
A310_Ovhd_Engine_Ignition_Knob_Crank#2 (>L:A310_eng_ignition_switch)
A310_Ovhd_Engine_Ignition_Knob_Off#3 (>L:A310_eng_ignition_switch)
A310_Ovhd_Engine_Start_1_Toggle#(L:A310_ENG1_STARTER) ! (>L:A310_ENG1_STARTER)
A310_Ovhd_Engine_Start_2_Toggle#(L:A310_ENG2_STARTER) ! (>L:A310_ENG2_STARTER)
A310_TRP_Mode_CL_Press#1 (>L:A310_TRP_CL_BUTTON)
A310_TRP_Mode_CL_Press#1 (>L:A310_TRP_CR_BUTTON)
A310_TRP_Mode_MCT_Press_#1 (>L:A310_TRP_MCT_BUTTON)
A310_TRP_Mode_TOGA_Press_#1 (>L:A310_TRP_TOGA_BUTTON)
A310_Throttle_Reverse_Thrust_Toggle#0 (>K:THROTTLE_REVERSE_THRUST_TOGGLE)
A310_TRP_Mode_CL_Press1#(>L:A310_TRP_CL_BUTTON)
A310_TRP_Mode_CR_Press1#(>L:A310_TRP_CR_BUTTON)
//IniBuilds/A310/Fire
A310_Ovhd_Fire_API_Fire_Latch_Toggle#(L:A310_APU_FIRE_LATCH) ! (>L:A310_APU_FIRE_LATCH) (L:A310_APU_FIRE_LATCH, Bool) 0 == if{ 0 (>L:A310_FIRE_HANDLE_APU) }
A310_Ovhd_Fire_APU_Agent_Disch#(L:A310_APU_AGENT1_DISCH) ! (>L:A310_APU_AGENT1_DISCH)
A310_Ovhd_Fire_APU_Handle_Pull#1 (>L:A310_apu_fire_handle_BUTTON)
A310_Ovhd_Fire_APU_Loop_A_Toggle#(L:A310_APU_LOOP_A_STATE) ! (>L:A310_APU_LOOP_A_STATE)
A310_Ovhd_Fire_APU_Loop_B_Toggle#(L:A310_APU_LOOP_B_STATE) ! (>L:A310_APU_LOOP_B_STATE)
A310_Ovhd_Fire_APU_Loop_Test_Press#1 (>L:A310_APU_LOOP_TEST_SWITCH)
A310_Ovhd_Fire_APU_Loop_Test_Release#0 (>L:A310_APU_LOOP_TEST_SWITCH)
A310_Ovhd_Fire_APU_Squib_Test_Press#1 (>L:A310_APU_SQUIB_TEST)
A310_Ovhd_Fire_APU_Squib_Test_Release#0 (>L:A310_APU_SQUIB_TEST)
A310_Ovhd_Fire_Eng1_Agent1_Disch_Button#(L:A300DR_engine1_agent1_disch) ! (>L:A300DR_engine1_agent1_disch)
A310_Ovhd_Fire_Eng1_Agent2_Disch_Button#(L:A300DR_engine1_agent2_disch) ! (>L:A300DR_engine1_agent2_disch)
A310_Ovhd_Fire_Eng1_Handle_Pull#1 (>L:A310_eng1_fire_handle_BUTTON)
A310_Ovhd_Fire_Eng1_Latch_Toggle#(L:A310_ENG1_FIRE_LATCH) ! (>L:A310_ENG1_FIRE_LATCH) (L:A310_ENG1_FIRE_LATCH, Bool) 0 == if{ 0 (>L:A310_FIRE_HANDLE_ENG1) }
A310_Ovhd_Fire_Eng1_Loop_A_Toggle#(L:A310_ENG1_LOOP_A_STATE) ! (>L:A310_ENG1_LOOP_A_STATE)
A310_Ovhd_Fire_Eng1_Loop_B_Toggle#(L:A310_ENG1_LOOP_B_STATE) ! (>L:A310_ENG1_LOOP_B_STATE)
A310_Ovhd_Fire_Eng1_Loop_Test_Press#1 (>L:A310_ENGINE1_LOOP_TEST_SWITCH)
A310_Ovhd_Fire_Eng1_Loop_Test_Release#0 (>L:A310_ENGINE1_LOOP_TEST_SWITCH)
A310_Ovhd_Fire_Eng1_Squib_Test_Press#1 (>L:A310_ENG1_SQUIB_TEST)
A310_Ovhd_Fire_Eng1_Squib_Test_Release#0 (>L:A310_ENG1_SQUIB_TEST)
A310_Ovhd_Fire_Eng2_Agent1_Disch_Button#(L:A300DR_engine2_agent1_disch) ! (>L:A300DR_engine2_agent1_disch)
A310_Ovhd_Fire_Eng2_Agent2_Disch_Button#(L:A300DR_engine2_agent2_disch) ! (>L:A300DR_engine2_agent2_disch)
A310_Ovhd_Fire_Eng2_Handle_Pull#1 (>L:A310_eng2_fire_handle_BUTTON)
A310_Ovhd_Fire_Eng2_Latch_Toggle#(L:A310_ENG2_FIRE_LATCH) ! (>L:A310_ENG2_FIRE_LATCH) (L:A310_ENG2_FIRE_LATCH, Bool) 0 == if{ 0 (>L:A310_FIRE_HANDLE_ENG2) }
A310_Ovhd_Fire_Eng2_Loop_A_Toggle#(L:A310_ENG2_LOOP_A_STATE) ! (>L:A310_ENG2_LOOP_A_STATE)
A310_Ovhd_Fire_Eng2_Loop_B_Toggle#(L:A310_ENG2_LOOP_B_STATE) ! (>L:A310_ENG2_LOOP_B_STATE)
A310_Ovhd_Fire_Eng2_Loop_Test_Press#1 (>L:A310_ENGINE2_LOOP_TEST_SWITCH)
A310_Ovhd_Fire_Eng2_Loop_Test_Release#0 (>L:A310_ENGINE2_LOOP_TEST_SWITCH)
A310_Ovhd_Fire_Eng2_Squib_Test_Press#1 (>L:A310_ENG2_SQUIB_TEST)
A310_Ovhd_Fire_Eng2_Squib_Test_Release#0 (>L:A310_ENG2_SQUIB_TEST)
//IniBuilds/A310/Flight Instrumentation
A310_Cpt_Altimeter_Baro_Dec#1 (>K:KOHLSMAN_DEC) 0 (>L:XMLVAR_Baro1_Mode) (L:A310_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:2:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:3:KOHLSMAN_SET) 0 (>L:XMLVAR_Baro2_Mode) 0 (>L:XMLVAR_Baro3_Mode) }
A310_Cpt_Altimeter_Baro_Inc#1 (>K:KOHLSMAN_INC) 0 (>L:XMLVAR_Baro1_Mode) (L:A310_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:2:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:1, millibar) 16 * (>K:3:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro2_Mode) 0 (>L:XMLVAR_Baro3_Mode) }
A310_Cpt_Altimeter_Bug_Dec#(L:A310_CPT_ALTIMETER_BUG, Number) 990 + 1000 % (>L:A310_CPT_ALTIMETER_BUG, Number)
A310_Cpt_Altimeter_Bug_Inc#(L:A310_CPT_ALTIMETER_BUG, Number) 10 + 1000 % (>L:A310_CPT_ALTIMETER_BUG, Number)
A310_Cpt_Altimeter_Knob_STD_Pull#1 (>L:A310_CPT_ALTIMETER_STD_COMMAND)
A310_Cpt_Clock_Mode_FAST#0 (>L:A300DR_CHRONO_GMT_STATUS)
A310_Cpt_Clock_Mode_HLD#2 (>L:A300DR_CHRONO_GMT_STATUS)
A310_Cpt_Clock_Mode_RUN#3 (>L:A300DR_CHRONO_GMT_STATUS)
A310_Cpt_Clock_Mode_SLOW#1 (>L:A300DR_CHRONO_GMT_STATUS)
A310_Cpt_Clock_Mode_STOP#4 (>L:A300DR_CHRONO_GMT_STATUS)
A310_Cpt_ET_CHRO_Run_Stop_Toggle#1 (>L:A310_ET_TOGGLE_BUTTON)
A310_Cpt_ET_CHRO_Start_Stop_Reset_Push#1 (>L:A300DR_CHRONO_START_BUTTON)
A310_FO_Altimeter_Baro_Dec#2 (>K:KOHLSMAN_DEC) 0 (>L:XMLVAR_Baro2_Mode) (L:A310_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:1:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:3:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro3_Mode) }
A310_FO_Altimeter_Baro_Inc#2 (>K:KOHLSMAN_INC) 0 (>L:XMLVAR_Baro2_Mode) (L:A310_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:1:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:2, millibar) 16 * (>K:3:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro3_Mode) }
A310_FO_Altimeter_Bug_Knob_Dec#(L:A310_FO_ALTIMETER_BUG, Number) 0 <=  if{ (L:A310_FO_ALTIMETER BUG, Number) 1000 + (>L:A310_FO_ALTIMETER BUG,) } els{ (L:A310_FO_ALTIMETER BUG, Number) 10 - 1000 % (>L:A310_FO_ALTIMETER BUG) }
A310_FO_Altimeter_Bug_Knob_Inc#(L:A310_FO_ALTIMETER BUG, Number) 10 + 1000 % (>L:A310_FO_ALTIMETER BUG)
A310_FO_Altimeter_Knob_STD_Pull#1 (>L:A310_FO_ALTIMETER_STD_COMMAND) 
A310_FO_Clock_Mode_FAST#0 (>L:A300DR_CHRONO_GMT_STATUS_FO)
A310_FO_Clock_Mode_HLD#2 (>L:A300DR_CHRONO_GMT_STATUS_FO)
A310_FO_Clock_Mode_RUN#3 (>L:A300DR_CHRONO_GMT_STATUS_FO)
A310_FO_Clock_Mode_SLOW#1 (>L:A300DR_CHRONO_GMT_STATUS_FO)
A310_FO_Clock_Mode_SYNC#4 (>L:A300DR_CHRONO_GMT_STATUS_FO)
A310_FO_ET_CHRO_Run_Stop_Toggle#1 (>L:A310_ET_TOGGLE_BUTTON_FO)
A310_FO_ET_CHRO_Start_Stop_Reset_Push#1 (>L:A310_CHRONO_START_BUTTON_FO)
A310_Stby_Altimeter_Baro_Dec#3 (>K:KOHLSMAN_DEC) (L:A310_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:2:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:1:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro2_Mode) }
A310_Stby_Altimeter_Baro_Inc#3 (>K:KOHLSMAN_INC) (L:A310_INSTRUMENTS_LINKED, Bool) if{  (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:2:KOHLSMAN_SET)  (A:KOHLSMAN SETTING MB:3, millibar) 16 * (>K:1:KOHLSMAN_SET)  0 (>L:XMLVAR_Baro1_Mode) 0 (>L:XMLVAR_Baro2_Mode) }
A310_FO_Altimeter_Bug_Dec1#(L:A310_FO_ALTIMETER_BUG, Number) 990 + 1000 % (>L:A310_FO_ALTIMETER_BUG, Number)
A310_FO_Altimeter_Bug_Inc1#(L:A310_FO_ALTIMETER_BUG, Number) 10 + 1000 % (>L:A310_FO_ALTIMETER_BUG, Number)
//IniBuilds/A310/Fuel
A310_Ovhd_Aux_Tank_Toggle#(L:A310_ACT_TANK) ! (>L:A310_ACT_TANK) (L:__AUX_AUTOIsPressed) ! (>L:__AUX_AUTOIsPressed)
A310_Ovhd_Center_TK_Pump_1_Toggle#(L:A310_CENTER_TANK1) ! (>L:A310_CENTER_TANK1)
A310_Ovhd_Center_TK_Pump_2_Toggle#(L:A310_CENTER_TANK2) ! (>L:A310_CENTER_TANK2)
A310_Ovhd_Inner_Left_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_FUEL_ISO_2_State) ! (>L:__GUARD_FUEL_ISO_2_State)
A310_Ovhd_Inner_Left_TK_Iso_Valve_Toggle#(L:A310_isolation_valve_inner_tank_left) ! (>L:A310_isolation_valve_inner_tank_left)
A310_Ovhd_Inner_Left_TK_Pump_1_Toggle#(L:A310_INNER_TANK1_LEFT) ! (>L:A310_INNER_TANK1_LEFT)
A310_Ovhd_Inner_Left_TK_Pump_2_Toggle#(L:A310_INNER_TANK2_LEFT) ! (>L:A310_INNER_TANK2_LEFT)
A310_Ovhd_Inner_Right_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_FUEL_ISO_3_State) ! (>L:__GUARD_FUEL_ISO_3_State)
A310_Ovhd_Inner_Right_TK_Iso_Valve_Toggle#(L:A310_isolation_valve_inner_tank_right) ! (>L:A310_isolation_valve_inner_tank_right)
A310_Ovhd_Inner_Right_TK_Pump_1_Toggle#(L:A310_INNER_TANK1_RIGHT) ! (>L:A310_INNER_TANK1_RIGHT)
A310_Ovhd_Inner_Right_TK_Pump_2_Toggle#(L:A310_INNER_TANK2_RIGHT) ! (>L:A310_INNER_TANK2_RIGHT)
A310_Ovhd_Outer_Left_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_FUEL_ISO_1_State) ! (>L:__GUARD_FUEL_ISO_1_State)
A310_Ovhd_Outer_Left_TK_Iso_Valve_Toggle#(L:A310_isolation_valve_outer_tank_left) ! (>L:A310_isolation_valve_outer_tank_left)
A310_Ovhd_Outer_Left_TK_Pump_1_Toggle#(L:A310_OUTER_TANK1_LEFT) ! (>L:A310_OUTER_TANK1_LEFT)
A310_Ovhd_Outer_Left_TK_Pump_2_Toggle#(L:A310_OUTER_TANK2_LEFT) ! (>L:A310_OUTER_TANK2_LEFT)
A310_Ovhd_Outer_Right_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_FUEL_ISO_4_State) ! (>L:__GUARD_FUEL_ISO_4_State)
A310_Ovhd_Outer_Right_TK_Iso_Valve_Toggle#(L:A310_isolation_valve_outer_tank_right) ! (>L:A310_isolation_valve_outer_tank_right)
A310_Ovhd_Outer_Right_TK_Pump_1_Toggle#(L:A310_OUTER_TANK1_RIGHT) ! (>L:A310_OUTER_TANK1_RIGHT)
A310_Ovhd_Outer_Right_TK_Pump_2_Toggle#(L:A310_OUTER_TANK2_RIGHT) ! (>L:A310_OUTER_TANK2_RIGHT)
A310_Ovhd_Trim_TK_Iso_Valve_Guard_Toggle#(L:__GUARD_TRMTK_ISO_State) ! (>L:__GUARD_TRMTK_ISO_State)
A310_Ovhd_Trim_TK_Iso_Valve_Toggle#(L:A310_TRIM_TANK_ISOL_VALVE) ! (>L:A310_TRIM_TANK_ISOL_VALVE)
A310_Ovhd_Trim_TK_Mode_Toggle#(L:A310_TRIM_TANK_MODE) ! (>L:A310_TRIM_TANK_MODE)
A310_Ovhd_Trim_TK_Pump_1_Toggle#(L:A310_TRIM_TANK1) ! (>L:A310_TRIM_TANK1)
A310_Ovhd_Trim_TK_Pump_2_Toggle#(L:A310_TRIM_TANK2) ! (>L:A310_TRIM_TANK2)
A310_Ovhd_Xfeed_Transfer_Toggle#(L:A310_xfeed_transfer_on) ! (>L:A310_xfeed_transfer_on)
A310_Ped_Eng1_Fuel_Cutoff_Lever_Off#0 (>L:A310_ENG1_MIXTURE_COMMAND)
A310_Ped_Eng1_Fuel_Cutoff_Lever_On#1 (>L:A310_ENG1_MIXTURE_COMMAND)
A310_Ped_Eng1_Fuel_Cutoff_Lever_Toggle#(L:A310_ENG1_MIXTURE_COMMAND) ! (>L:A310_ENG1_MIXTURE_COMMAND)
A310_Ped_Eng2_Fuel_Cutoff_Lever_Off#0 (>L:A310_ENG2_MIXTURE_COMMAND)
A310_Ped_Eng2_Fuel_Cutoff_Lever_On#1 (>L:A310_ENG2_MIXTURE_COMMAND)
A310_Ped_Eng2_Fuel_Cutoff_Lever_Toggle#(L:A310_ENG2_MIXTURE_COMMAND) ! (>L:A310_ENG2_MIXTURE_COMMAND)
//IniBuilds/A310/Gear
A310_Antiskid_Switch_Altn_Off#2 (>L:A300DR_brake_system)
A310_Antiskid_Switch_Altn_On#1 (>L:A300DR_brake_system)
A310_Antiskid_Switch_Norm_On#0 (>L:A300DR_brake_system)
A310_Autobrake_Low_Button_Push#1 (>L:A310_ABRK_LOW_COMMAND)
A310_Autobrake_Max_Button_Push#1 (>L:A310_ABRK_HI_COMMAND)
A310_Autobrake_Med_Button_Push#1 (>L:A310_ABRK_MED_COMMAND)
A310_Landing_Gear_Lever_Down#2 (>L:A310_GEAR_HANDLE_STATUS)
A310_Landing_Gear_Lever_Mid#1 (>L:A310_GEAR_HANDLE_STATUS)
A310_Landing_Gear_Lever_Up#0 (>L:A310_GEAR_HANDLE_STATUS)
//IniBuilds/A310/Hydraulic
A310_Ovhd_Hyd_Elec_Toggle#(L:A310_hyd_elec_status) ! (>L:A310_hyd_elec_status)
A310_Ovhd_Hyd_Eng1_Blue_Pump_Toggle#(L:A310_hyd_eng1_switch_pos) ! (>L:A310_hyd_eng1_switch_pos)
A310_Ovhd_Hyd_Eng1_Green_Pump_Toggle#(L:A310_hyd_eng1_A_switch_pos) ! (>L:A310_hyd_eng1_A_switch_pos)
A310_Ovhd_Hyd_Eng2_Green_Pump_Toggle#(L:A310_hyd_eng2_B_switch_pos) ! (>L:A310_hyd_eng2_B_switch_pos)
A310_Ovhd_Hyd_Eng2_Yellow_Pump_Toggle#(L:A310_hyd_eng2_switch_pos) ! (>L:A310_hyd_eng2_switch_pos)
A310_Ovhd_Hyd_PTU_Blue_Toggle#(L:A310_hyd_PTU_blue_status) ! (>L:A310_hyd_PTU_blue_status)
A310_Ovhd_Hyd_PTU_Yellow_Toggle#(L:A310_hyd_PTU_yellow_status) ! (>L:A310_hyd_PTU_yellow_status)
A310_Ovhd_Hyd_Servo_Ctl_Blue_Toggle#(L:A310_SERVO_BLUE_OFF_LIGHT) ! (>L:A310_SERVO_BLUE_OFF_LIGHT) 
A310_Ovhd_Hyd_Servo_Ctl_Green_Toggle#(L:A310_SERVO_GREEN_OFF_LIGHT) ! (>L:A310_SERVO_GREEN_OFF_LIGHT) 
A310_Ovhd_Hyd_Servo_Ctl_Yellow_Toggle#(L:A310_SERVO_YELLOW_OFF_LIGHT) ! (>L:A310_SERVO_YELLOW_OFF_LIGHT) 
A310_Ovhd_Pitch_Feel_1_Toggle#(L:A310_PITCH_FEEL1) ! (>L:A310_PITCH_FEEL1)
A310_Ovhd_Pitch_Feel_2_Toggle#(L:A310_PITCH_FEEL2) ! (>L:A310_PITCH_FEEL2)
A310_Ovhd_Rud_Travel_1_Toggle#(L:A310_RUDDER_TRAVEL1) ! (>L:A310_RUDDER_TRAVEL1) 
A310_Ovhd_Rud_Travel_2_Toggle#(L:A310_RUDDER_TRAVEL2) ! (>L:A310_RUDDER_TRAVEL2) 
A310_Ovhd_Splr_Spd_Brk_3___2_Toggle#(L:A310_SPEEDBRAKE3_2) ! (>L:A310_SPEEDBRAKE3_2)
A310_Ovhd_Splr_Spd_Brk_4___1_Toggle#(L:A310_SPEEDBRAKE4_1) ! (>L:A310_SPEEDBRAKE4_1)
A310_Ovhd_Splr_Spd_Brk_5_Toggle#(L:A310_SPEEDBRAKE5) ! (>L:A310_SPEEDBRAKE5)
A310_Ovhd_Splr_Spd_Brk_6_Toggle#(L:A310_SPEEDBRAKE6) ! (>L:A310_SPEEDBRAKE6)
A310_Ovhd_Splr_Spd_Brk_7_Toggle#(L:A310_SPEEDBRAKE7) ! (>L:A310_SPEEDBRAKE7)
//IniBuilds/A310/Lights
A310_Cap___Ctr_Inst_Light_Knob_Dec#(L:A310_POTENTIOMETER_26) 5 - 0 max 100 min (>L:A310_POTENTIOMETER_26)
A310_Cap___Ctr_Inst_Light_Knob_Inc#(L:A310_POTENTIOMETER_26) 5 + 0 max 100 min (>L:A310_POTENTIOMETER_26)
A310_Cpt_Yoke_Light_Knob_Dec#(L:A310_POTENTIOMETER_29) 5 - 0 min (>L:A310_POTENTIOMETER_29)
A310_Cpt_Yoke_Light_Knob_Inc#(L:A310_POTENTIOMETER_29) 5 + 100 max (>L:A310_POTENTIOMETER_29)
A310_FO_Inst_Light_Knob_Dec#(L:A310_POTENTIOMETER_27) 5 - 0 max (>L:A310_POTENTIOMETER_27)
A310_FO_Inst_Light_Knob_Inc#(L:A310_POTENTIOMETER_27) 5 + 100 min (>L:A310_POTENTIOMETER_27)
A310_FO_Yoke_Light_Knob_Dec#(L:A310_POTENTIOMETER_30) 5 - 0 min (>L:A310_POTENTIOMETER_30)
A310_FO_Yoke_Light_Knob_Inc#(L:A310_POTENTIOMETER_30) 5 + 100 max (>L:A310_POTENTIOMETER_30)
A310_MCU_Light_Knob_Dec#(L:A310_POTENTIOMETER_28) 5 - 0 max (>L:A310_POTENTIOMETER_28)
A310_MCU_Light_Knob_Inc#(L:A310_POTENTIOMETER_28) 5 + 100 min (>L:A310_POTENTIOMETER_28)
A310_Main_Inst_Pnl_Flood_Light_Dec#(L:A310_POTENTIOMETER_25) 5 - 0 min 100 max (>L:A310_POTENTIOMETER_25)
A310_Main_Inst_Pnl_Flood_Light_Inc#(L:A310_POTENTIOMETER_25) 5 + 0 min 100 max (>L:A310_POTENTIOMETER_25)
A310_Map_Light_Cpt_Dec#(L:A310_POTENTIOMETER_16) 5 - 0 max 100 min (>L:A310_POTENTIOMETER_16)
A310_Map_Light_Cpt_Inc#(L:A310_POTENTIOMETER_16) 5 + 0 max 100 min (>L:A310_POTENTIOMETER_16)
A310_Map_Light_FO_Dec#(L:A310_POTENTIOMETER_17) 5 - 0 max (>L:A310_POTENTIOMETER_17)
A310_Map_Light_FO_Inc#(L:A310_POTENTIOMETER_17) 5 + 100 min (>L:A310_POTENTIOMETER_17)
A310_Ovhd_Ann_Lt_Switch_BRT#1 (>L:A310_ANNLT_SWITCH)
A310_Ovhd_Ann_Lt_Switch_DIM#2 (>L:A310_ANNLT_SWITCH)
A310_Ovhd_Ann_Lt_Switch_TEST#0 (>L:A310_ANNLT_SWITCH)
A310_Ovhd_Dome_Light_Brt_Switch_BRT#1 (>L:A310_DOME_LIGHT_BRT_SWITCH)
A310_Ovhd_Dome_Light_Brt_Switch_DIM#0 (>L:A310_DOME_LIGHT_BRT_SWITCH)
A310_Ovhd_Dome_Light_Switch_OFF#0 (>L:A310_DOME_LIGHT_SWITCH)
A310_Ovhd_Dome_Light_Switch_ON#1 (>L:A310_DOME_LIGHT_SWITCH)
A310_Ovhd_Emer_Exit_Switch_ARM#1 (>L:A310_EMER_EXIT_SWITCH)
A310_Ovhd_Emer_Exit_Switch_DISARM#2 (>L:A310_EMER_EXIT_SWITCH)
A310_Ovhd_Emer_Exit_Switch_ON#0 (>L:A310_EMER_EXIT_SWITCH)
A310_Ovhd_Extlt_Beacon_Off#0 (>L:A310_BEACON_LIGHT_SWITCH)
A310_Ovhd_Extlt_Beacon_On#1 (>L:A310_BEACON_LIGHT_SWITCH)
A310_Ovhd_Extlt_Landing__Light_L_OFF#1 (>L:A310_LANDING_LIGHT_L_SWITCH)
A310_Ovhd_Extlt_Landing__Light_L_ON#0 (>L:A310_LANDING_LIGHT_L_SWITCH)
A310_Ovhd_Extlt_Landing__Light_L_RETRACT#2 (>L:A310_LANDING_LIGHT_L_SWITCH)
A310_Ovhd_Extlt_Landing__Light_R_OFF#2 (>L:A310_LANDING_LIGHT_R_SWITCH)
A310_Ovhd_Extlt_Landing__Light_R_ON#0 (>L:A310_LANDING_LIGHT_R_SWITCH)
A310_Ovhd_Extlt_Landing__Light_R_RETRACT#2 (>L:A310_LANDING_LIGHT_R_SWITCH)
A310_Ovhd_Extlt_Nav_Logo_1#1 (>L:A310_NAV_LOGO_LIGHT_SWITCH)
A310_Ovhd_Extlt_Nav_Logo_2#0 (>L:A310_NAV_LOGO_LIGHT_SWITCH)
A310_Ovhd_Extlt_Nav_Logo_Off#2 (>L:A310_NAV_LOGO_LIGHT_SWITCH)
A310_Ovhd_Extlt_Nose_Light_OFF#2 (>L:A310_TAXI_LIGHTS_SWITCH)
A310_Ovhd_Extlt_Nose_Light_TAXI#1 (>L:A310_TAXI_LIGHTS_SWITCH)
A310_Ovhd_Extlt_Nose_Light_TO#0 (>L:A310_TAXI_LIGHTS_SWITCH)
A310_Ovhd_Extlt_Rwy_Turnoff_L_Off#0 (>L:A310_RWY_TURNOFF_L_SWITCH)
A310_Ovhd_Extlt_Rwy_Turnoff_L_On#1 (>L:A310_RWY_TURNOFF_L_SWITCH)
A310_Ovhd_Extlt_Rwy_Turnoff_R_Off#0 (>L:A310_RWY_TURNOFF_R_SWITCH)
A310_Ovhd_Extlt_Rwy_Turnoff_R_On#1 (>L:A310_RWY_TURNOFF_R_SWITCH)
A310_Ovhd_Extlt_Strobe_Auto#1 (>L:A310_POTENTIOMETER_24)
A310_Ovhd_Extlt_Strobe_Off#2 (>L:A310_POTENTIOMETER_24)
A310_Ovhd_Extlt_Strobe_On#0 (>L:A310_POTENTIOMETER_24)
A310_Ovhd_Extlt_Wing_Light_Off#0 (>L:A310_WING_LIGHT_SWITCH)
A310_Ovhd_Extlt_Wing_Light_On# 1 (>L:A310_WING_LIGHT_SWITCH)
A310_Ovhd_Light_Knob_Dec#(L:A310_POTENTIOMETER_4) 5 - 0 min (>L:A310_POTENTIOMETER_4)
A310_Ovhd_Light_Knob_Inc#(L:A310_POTENTIOMETER_4) 5 + 100 max (>L:A310_POTENTIOMETER_4)
A310_Ovhd_No_Smoking_Switch_AUTO#1 (>L:A310_NO_SMOKING_SWITCH)
A310_Ovhd_No_Smoking_Switch_OFF#2 (>L:A310_NO_SMOKING_SWITCH)
A310_Ovhd_No_Smoking_Switch_ON#0 (>L:A310_NO_SMOKING_SWITCH)
A310_Ovhd_Seatbelts_Switch_OFF#0 (>L:A310_SEATBELTS_SWITCH)
A310_Ovhd_Seatbelts_Switch_ON#1 (>L:A310_SEATBELTS_SWITCH)
A310_Ovhd_Stby_Compass_Off#0 (>L:A310_STBY_COMPASS_LIGHT_SWITCH)
A310_Ovhd_Stby_Compass_On#1 (>L:A310_STBY_COMPASS_LIGHT_SWITCH)
A310_Ovhd_Storm_Light_Switch_OFF#0 (>L:A310_STORM_LIGHT_SWITCH)
A310_Ovhd_Storm_Light_Switch_ON#1 (>L:A310_STORM_LIGHT_SWITCH)
A310_Pedestal_Light_Knob_Dec#(L:A310_POTENTIOMETER_3) 5 - 0 max (>L:A310_POTENTIOMETER_3)
A310_Pedestal_Light_Knob_Inc#(L:A310_POTENTIOMETER_3) 5 + 100 min (>L:A310_POTENTIOMETER_3)
A310_Pedestal_Ovhd_Light_Inner_Knob_Dec#(L:A310_POTENTIOMETER_4) 5 - 0 max (>L:A310_POTENTIOMETER_4)
A310_Pedestal_Ovhd_Light_Inner_Knob_Inc#(L:A310_POTENTIOMETER_4) 5 + 100 min (>L:A310_POTENTIOMETER_4)
A310_Pedestal_Panel_Brightness_Outer_Knob_Dec#(L:A310_POTENTIOMETER_3) 5 - 0 max (>L:A310_POTENTIOMETER_3)
A310_Pedestal_Panel_Brightness_Outer_Knob_Inc#(L:A310_POTENTIOMETER_3) 5 + 100 min (>L:A310_POTENTIOMETER_3)
A310_Read_Light_Knob_Dec#(L:A310_POTENTIOMETER_18) 5 - 0 min (>L:A310_POTENTIOMETER_18) 
A310_Read_Light_Knob_Inc#(L:A310_POTENTIOMETER_18) 5 + 100 max (>L:A310_POTENTIOMETER_18) 
A310_Read_Light_Knob_Dec1#(L:A310_POTENTIOMETER_18) -- 0 max 100 min (>L:A310_POTENTIOMETER_18)
A310_Read_Light_Knob_Inc1#(L:A310_POTENTIOMETER_18) ++ 0 max 100 min (>L:A310_POTENTIOMETER_18)
//IniBuilds/A310/MCDU
A310_MCDU1_Brightness_Dec#(L:LIGHTING_POTENTIOMETER_66) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_66) l0 66 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_MCDU1_Brightness_Inc#(L:LIGHTING_POTENTIOMETER_66) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_66) l0 66 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_MCDU1_Key_0#1 (>L:A310_MCDU1_0)
A310_MCDU1_Key_1#1 (>L:A310_MCDU1_1)
A310_MCDU1_Key_2#1 (>L:A310_MCDU1_2)
A310_MCDU1_Key_3#1 (>L:A310_MCDU1_3)
A310_MCDU1_Key_4#1 (>L:A310_MCDU1_4)
A310_MCDU1_Key_5#1 (>L:A310_MCDU1_5)
A310_MCDU1_Key_6#1 (>L:A310_MCDU1_6)
A310_MCDU1_Key_7#1 (>L:A310_MCDU1_7)
A310_MCDU1_Key_8#1 (>L:A310_MCDU1_8)
A310_MCDU1_Key_9#1 (>L:A310_MCDU1_9)
A310_MCDU1_Key_A#1 (>L:A310_MCDU1_A)
A310_MCDU1_Key_B#1 (>L:A310_MCDU1_B)
A310_MCDU1_Key_C#1 (>L:A310_MCDU1_C)
A310_MCDU1_Key_CLR#1 (>L:A310_MCDU1_CLR)
A310_MCDU1_Key_D#1 (>L:A310_MCDU1_D)
A310_MCDU1_Key_DIR_TO#1 (>L:A310_MCDU1_DIR_TO)
A310_MCDU1_Key_DOT#1 (>L:A310_MCDU1_DOT)
A310_MCDU1_Key_DOWN#1 (>L:A310_MCDU1_DOWN)
A310_MCDU1_Key_E#1 (>L:A310_MCDU1_E)
A310_MCDU1_Key_ENGOUT#1 (>L:A310_MCDU1_ENGOUT)
A310_MCDU1_Key_F#1 (>L:A310_MCDU1_F)
A310_MCDU1_Key_FPLAN#1 (>L:A310_MCDU1_FPLAN)
A310_MCDU1_Key_G#1 (>L:A310_MCDU1_G)
A310_MCDU1_Key_H#1 (>L:A310_MCDU1_H)
A310_MCDU1_Key_I#1 (>L:A310_MCDU1_I)
A310_MCDU1_Key_INIT#1 (>L:A310_MCDU1_INIT)
A310_MCDU1_Key_J#1 (>L:A310_MCDU1_J)
A310_MCDU1_Key_K#1 (>L:A310_MCDU1_K)
A310_MCDU1_Key_L#1 (>L:A310_MCDU1_L)
A310_MCDU1_Key_LSK1L#1 (>L:A310_MCDU1_LSK1L)
A310_MCDU1_Key_LSK1R#1 (>L:A310_MCDU1_LSK1R)
A310_MCDU1_Key_LSK2L#1 (>L:A310_MCDU1_LSK2L)
A310_MCDU1_Key_LSK2R#1 (>L:A310_MCDU1_LSK2R)
A310_MCDU1_Key_LSK3L#1 (>L:A310_MCDU1_LSK3L)
A310_MCDU1_Key_LSK3R#1 (>L:A310_MCDU1_LSK3R)
A310_MCDU1_Key_LSK4L#1 (>L:A310_MCDU1_LSK4L)
A310_MCDU1_Key_LSK4R#1 (>L:A310_MCDU1_LSK4R)
A310_MCDU1_Key_LSK5L#1 (>L:A310_MCDU1_LSK5L)
A310_MCDU1_Key_LSK5R#1 (>L:A310_MCDU1_LSK5R)
A310_MCDU1_Key_LSK6L#1 (>L:A310_MCDU1_LSK6L)
A310_MCDU1_Key_LSK6R#1 (>L:A310_MCDU1_LSK6R)
A310_MCDU1_Key_M#1 (>L:A310_MCDU1_M)
A310_MCDU1_Key_MENU#1 (>L:A310_MCDU1_MENU)
A310_MCDU1_Key_MINUS#1 (>L:A310_MCDU1_MINUS)
A310_MCDU1_Key_MODE#1 (>L:A310_MCDU1_MODE)
A310_MCDU1_Key_N#1 (>L:A310_MCDU1_N)
A310_MCDU1_Key_NEXT#1 (>L:A310_MCDU1_NEXT)
A310_MCDU1_Key_O#1 (>L:A310_MCDU1_O)
A310_MCDU1_Key_P#1 (>L:A310_MCDU1_P)
A310_MCDU1_Key_PLUS#1 (>L:A310_MCDU1_PLUS)
A310_MCDU1_Key_PROG#1 (>L:A310_MCDU1_PROG)
A310_MCDU1_Key_Q#1 (>L:A310_MCDU1_Q)
A310_MCDU1_Key_R#1 (>L:A310_MCDU1_R)
A310_MCDU1_Key_REF#1 (>L:A310_MCDU1_REF)
A310_MCDU1_Key_S#1 (>L:A310_MCDU1_S)
A310_MCDU1_Key_SEC_PLAN#1 (>L:A310_MCDU1_SEC_PLAN)
A310_MCDU1_Key_SLASH#1 (>L:A310_MCDU1_SLASH)
A310_MCDU1_Key_T#1 (>L:A310_MCDU1_T)
A310_MCDU1_Key_TACT_MODE#1 (>L:A310_MCDU1_TACT_MODE)
A310_MCDU1_Key_TO_APPR#1 (>L:A310_MCDU1_TO_APPR)
A310_MCDU1_Key_U#1 (>L:A310_MCDU1_U)
A310_MCDU1_Key_UARROW#1 (>L:A310_MCDU1_UARROW)
A310_MCDU1_Key_V#1 (>L:A310_MCDU1_V)
A310_MCDU1_Key_W#1 (>L:A310_MCDU1_W)
A310_MCDU1_Key_X#1 (>L:A310_MCDU1_X)
A310_MCDU1_Key_Y#1 (>L:A310_MCDU1_Y)
A310_MCDU1_Key_Z#1 (>L:A310_MCDU1_Z)
A310_MCDU2_Brightness_Dec#(L:LIGHTING_POTENTIOMETER_67) 5 - 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_67) l0 67 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_MCDU2_Brightness_Inc#(L:LIGHTING_POTENTIOMETER_67) 5 + 0 max 100 min s0 (>L:LIGHTING_POTENTIOMETER_67) l0 67 (>K:2:LIGHT_POTENTIOMETER_SET)
A310_MCDU2_Key_0#1 (>L:A310_MCDU2_0)
A310_MCDU2_Key_1#1 (>L:A310_MCDU2_1)
A310_MCDU2_Key_2#1 (>L:A310_MCDU2_2)
A310_MCDU2_Key_3#1 (>L:A310_MCDU2_3)
A310_MCDU2_Key_4#1 (>L:A310_MCDU2_4)
A310_MCDU2_Key_5#1 (>L:A310_MCDU2_5)
A310_MCDU2_Key_6#1 (>L:A310_MCDU2_6)
A310_MCDU2_Key_7#1 (>L:A310_MCDU2_7)
A310_MCDU2_Key_8#1 (>L:A310_MCDU2_8)
A310_MCDU2_Key_9#1 (>L:A310_MCDU2_9)
A310_MCDU2_Key_A#1 (>L:A310_MCDU2_A)
A310_MCDU2_Key_B#1 (>L:A310_MCDU2_B)
A310_MCDU2_Key_C#1 (>L:A310_MCDU2_C)
A310_MCDU2_Key_CLR#1 (>L:A310_MCDU2_CLR)
A310_MCDU2_Key_D#1 (>L:A310_MCDU2_D)
A310_MCDU2_Key_DIR_TO#1 (>L:A310_MCDU2_DIR_TO)
A310_MCDU2_Key_DOT#1 (>L:A310_MCDU2_DOT)
A310_MCDU2_Key_DOWN#1 (>L:A310_MCDU2_DOWN)
A310_MCDU2_Key_E#1 (>L:A310_MCDU2_E)
A310_MCDU2_Key_ENGOUT#1 (>L:A310_MCDU2_ENGOUT)
A310_MCDU2_Key_F#1 (>L:A310_MCDU2_F)
A310_MCDU2_Key_FPLAN#1 (>L:A310_MCDU2_FPLAN)
A310_MCDU2_Key_G#1 (>L:A310_MCDU2_G)
A310_MCDU2_Key_H#1 (>L:A310_MCDU2_H)
A310_MCDU2_Key_I#1 (>L:A310_MCDU2_I)
A310_MCDU2_Key_INIT#1 (>L:A310_MCDU2_INIT)
A310_MCDU2_Key_J#1 (>L:A310_MCDU2_J)
A310_MCDU2_Key_K#1 (>L:A310_MCDU2_K)
A310_MCDU2_Key_L#1 (>L:A310_MCDU2_L)
A310_MCDU2_Key_LSK1L#1 (>L:A310_MCDU2_LSK1L)
A310_MCDU2_Key_LSK1R#1 (>L:A310_MCDU2_LSK1R)
A310_MCDU2_Key_LSK2L#1 (>L:A310_MCDU2_LSK2L)
A310_MCDU2_Key_LSK2R#1 (>L:A310_MCDU2_LSK2R)
A310_MCDU2_Key_LSK3L#1 (>L:A310_MCDU2_LSK3L)
A310_MCDU2_Key_LSK3R#1 (>L:A310_MCDU2_LSK3R)
A310_MCDU2_Key_LSK4L#1 (>L:A310_MCDU2_LSK4L)
A310_MCDU2_Key_LSK4R#1 (>L:A310_MCDU2_LSK4R)
A310_MCDU2_Key_LSK5L#1 (>L:A310_MCDU2_LSK5L)
A310_MCDU2_Key_LSK5R#1 (>L:A310_MCDU2_LSK5R)
A310_MCDU2_Key_LSK6L#1 (>L:A310_MCDU2_LSK6L)
A310_MCDU2_Key_LSK6R#1 (>L:A310_MCDU2_LSK6R)
A310_MCDU2_Key_M#1 (>L:A310_MCDU2_M)
A310_MCDU2_Key_MENU#1 (>L:A310_MCDU2_MENU)
A310_MCDU2_Key_MINUS#1 (>L:A310_MCDU2_MINUS)
A310_MCDU2_Key_MODE#1 (>L:A310_MCDU2_MODE)
A310_MCDU2_Key_N#1 (>L:A310_MCDU2_N)
A310_MCDU2_Key_NEXT#1 (>L:A310_MCDU2_NEXT)
A310_MCDU2_Key_O#1 (>L:A310_MCDU2_O)
A310_MCDU2_Key_P#1 (>L:A310_MCDU2_P)
A310_MCDU2_Key_PLUS#1 (>L:A310_MCDU2_PLUS)
A310_MCDU2_Key_PROG#1 (>L:A310_MCDU2_PROG)
A310_MCDU2_Key_Q#1 (>L:A310_MCDU2_Q)
A310_MCDU2_Key_R#1 (>L:A310_MCDU2_R)
A310_MCDU2_Key_REF#1 (>L:A310_MCDU2_REF)
A310_MCDU2_Key_S#1 (>L:A310_MCDU2_S)
A310_MCDU2_Key_SEC_PLAN#1 (>L:A310_MCDU2_SEC_PLAN)
A310_MCDU2_Key_SLASH#1 (>L:A310_MCDU2_SLASH)
A310_MCDU2_Key_T#1 (>L:A310_MCDU2_T)
A310_MCDU2_Key_TACT_MODE#1 (>L:A310_MCDU2_TACT_MODE)
A310_MCDU2_Key_TO_APPR#1 (>L:A310_MCDU2_TO_APPR)
A310_MCDU2_Key_U#1 (>L:A310_MCDU2_U)
A310_MCDU2_Key_UARROW#1 (>L:A310_MCDU2_UARROW)
A310_MCDU2_Key_V#1 (>L:A310_MCDU2_V)
A310_MCDU2_Key_W#1 (>L:A310_MCDU2_W)
A310_MCDU2_Key_X#1 (>L:A310_MCDU2_X)
A310_MCDU2_Key_Y#1 (>L:A310_MCDU2_Y)
A310_MCDU2_Key_Z#1 (>L:A310_MCDU2_Z)
//IniBuilds/A310/Miscellaneous
A310_Ovhd_CVRD_Test_Button_Press#1 (>L:A300_CVRD_TEST)
A310_Ovhd_CVRD_Test_Button_Release#0 (>L:A300_CVRD_TEST)
A310_Ovhd_Capt_Wiper_Knob_Fast#2 (>L:A310_CPT_WIPER_KNOB)
A310_Ovhd_Capt_Wiper_Knob_Off#0 (>L:A310_CPT_WIPER_KNOB)
A310_Ovhd_Capt_Wiper_Knob_Slow#1 (>L:A310_CPT_WIPER_KNOB)
A310_Ovhd_Cockpit_Door_Toggle#1 (>L:A300DR_COCKPIT_DOOR_COMMAND)
A310_Ovhd_FO_Wiper_Knob_Fast#2 (>L:A310_FO_WIPER_KNOB)
A310_Ovhd_FO_Wiper_Knob_Off#0 (>L:A310_FO_WIPER_KNOB)
A310_Ovhd_FO_Wiper_Knob_Slow#1 (>L:A310_FO_WIPER_KNOB)
A310_Pedestal_PPR_ADV_Button#(L:A310_PRINTER_ADV_BUTTON) ! (>L:A310_PRINTER_ADV_BUTTON) 
A310_Pedestal_Printer_ALRTRST_Button#(L:A310_PRINTER_ALRTRST_BUTTON) ! (>L:A310_PRINTER_ALRTRST_BUTTON)
A310_Pedestal_Printer_TEST_Button#(L:A310_PRINTER_TEST_BUTTON) ! (>L:A310_PRINTER_TEST_BUTTON)
//IniBuilds/A310/Navigation
A310_ATC_Ident_Toggle#(>K:XPNDR_IDENT_TOGGLE)
A310_ATC_Select_Toggle#(L:A310_tcas_xpdr) ! (>L:A310_tcas_xpdr)
A310_ATC_XPDR_Inner_Knob_Dec#1 (>L:A310_TRANSPONDER_INNER_KNOB_TURNED_ANTICLOCKWISE)
A310_ATC_XPDR_Inner_Knob_Inc#1 (>L:A310_TRANSPONDER_INNER_KNOB_TURNED_CLOCKWISE)
A310_ATC_XPDR_Outer_Knob_Dec#1 (>L:A310_TRANSPONDER_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A310_ATC_XPDR_Outer_Knob_Inc#1 (>L:A310_TRANSPONDER_OUTER_KNOB_TURNED_CLOCKWISE)
A310_IRS_Mode_Knob_HDG_STS#4 (>L:A310_IRS_MODE_KNOB)
A310_IRS_Mode_Knob_PPOS#2 (>L:A310_IRS_MODE_KNOB)
A310_IRS_Mode_Knob_TEST#0 (>L:A310_IRS_MODE_KNOB)
A310_IRS_Mode_Knob_TK_GS#1 (>L:A310_IRS_MODE_KNOB)
A310_IRS_Mode_Knob_WIND#3 (>L:A310_IRS_MODE_KNOB)
A310_Ovhd_IRS_0_Key#1 (>L:A310_IRS_0_BUTTON)
A310_Ovhd_IRS_1_Key#1 (>L:A310_IRS_1_BUTTON)
A310_Ovhd_IRS_2_Key#1 (>L:A310_IRS_2_BUTTON)
A310_Ovhd_IRS_3_Key#1 (>L:A310_IRS_3_BUTTON)
A310_Ovhd_IRS_4_Key#1 (>L:A310_IRS_4_BUTTON)
A310_Ovhd_IRS_5_Key#1 (>L:A310_IRS_5_BUTTON)
A310_Ovhd_IRS_6_Key#1 (>L:A310_IRS_6_BUTTON)
A310_Ovhd_IRS_7_Key#1 (>L:A310_IRS_7_BUTTON)
A310_Ovhd_IRS_8_Key#1 (>L:A310_IRS_8_BUTTON)
A310_Ovhd_IRS_9_Key#1 (>L:A310_IRS_9_BUTTON)
A310_Ovhd_IRS_C_State_Knob_ATT#2 (>L:A310_IRS3_STATE)
A310_Ovhd_IRS_C_State_Knob_NAV#1 (>L:A310_IRS3_STATE)
A310_Ovhd_IRS_C_State_Knob_OFF#0 (>L:A310_IRS3_STATE)
A310_Ovhd_IRS_CLR_Key#1 (>L:A310_IRS_CLR_BUTTON)
A310_Ovhd_IRS_ENT_Key#1 (>L:A310_IRS_ENT_BUTTON)
A310_Ovhd_IRS_L_State_Knob_ATT#2 (>L:A310_IRS1_STATE)
A310_Ovhd_IRS_L_State_Knob_NAV#1 (>L:A310_IRS1_STATE)
A310_Ovhd_IRS_L_State_Knob_OFF#0 (>L:A310_IRS1_STATE)
A310_Ovhd_IRS_R_State_Knob_ATT#2 (>L:A310_IRS2_STATE)
A310_Ovhd_IRS_R_State_Knob_NAV#1 (>L:A310_IRS2_STATE)
A310_Ovhd_IRS_R_State_Knob_OFF#0 (>L:A310_IRS2_STATE)
A310_Ovhd_IRS_Sys_Knob_1#1 (>L:A310_IRS_SYS_KNOB)
A310_Ovhd_IRS_Sys_Knob_2#2 (>L:A310_IRS_SYS_KNOB)
A310_Ovhd_IRS_Sys_Knob_3#3 (>L:A310_IRS_SYS_KNOB)
A310_Ovhd_IRS_Sys_Knob_OFF#0 (>L:A310_IRS_SYS_KNOB)
A310_Pedestal_Cpt_CRS1_Knob_Dec#(>K:VOR1_OBI_DEC)
A310_Pedestal_Cpt_CRS1_Knob_Inc#(>K:VOR1_OBI_INC)
A310_Pedestal_Cpt_CRS1_Knob_Press#1 (>L:A310_VOR1_FLIP_COMMAND)
A310_Pedestal_Cpt_VOR1_Inner_Knob_Dec#1 (>L:A310_RMP_VOR1_INNER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_Cpt_VOR1_Inner_Knob_Inc#1 (>L:A310_RMP_VOR1_INNER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_Cpt_VOR1_Outer_Knob_Dec#1 (>L:A310_RMP_VOR1_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_Cpt_VOR1_Outer_Knob_Inc#1 (>L:A310_RMP_VOR1_OUTER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_FO_CRS2_Knob_Dec#(>K:VOR2_OBI_DEC)
A310_Pedestal_FO_CRS2_Knob_Inc#(>K:VOR2_OBI_INC)
A310_Pedestal_FO_CRS2_Knob_Press#1 (>L:A310_VOR2_FLIP_COMMAND)
A310_Pedestal_FO_VOR2_Inner_Knob_Dec#1 (>L:A310_RMP_VOR2_INNER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_FO_VOR2_Inner_Knob_Inc#1 (>L:A310_RMP_VOR2_INNER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_FO_VOR2_Outer_Knob_Dec#1 (>L:A310_RMP_VOR2_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_FO_VOR2_Outer_Knob_Inc#1 (>L:A310_RMP_VOR2_OUTER_KNOB_TURNED_CLOCKWISE)
A310_RMP_ILS_Course_Knob_Dec#(L:A310_ils_course, number) -- dnor (>L:A310_ils_course, number)
A310_RMP_ILS_Course_Knob_Inc#(L:A310_ils_course, number) ++ dnor (>L:A310_ils_course, number)
A310_RMP_ILS_Inner_Knob_Dec#1 (>L:A310_RMP_ILS_INNER_KNOB_TURNED_ANTICLOCKWISE)
A310_RMP_ILS_Inner_Knob_Inc#1 (>L:A310_RMP_ILS_INNER_KNOB_TURNED_CLOCKWISE)
A310_RMP_ILS_Outer_Knob_Dec#1 (>L:A310_RMP_ILS_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A310_RMP_ILS_Outer_Knob_Inc#1 (>L:A310_RMP_ILS_OUTER_KNOB_TURNED_CLOCKWISE)
A310_TCAS_ALT_Switch_1#0 (>L:A310_tcas_alt_system) 
A310_TCAS_ALT_Switch_2#2 (>L:A310_tcas_alt_system) 
A310_TCAS_ALT_Switch_OFF#1 (>L:A310_tcas_alt_system) 
A310_TCAS_Mode_Selector_STBY#0 (>L:A310_tcas_mode_pedestal)
A310_TCAS_Mode_Selector_TA#3 (>L:A310_tcas_mode_pedestal) 
A310_TCAS_Mode_Selector_TARA#2 (>L:A310_tcas_mode_pedestal) 
A310_TCAS_Mode_Selector_XPDR#1 (>L:A310_tcas_mode_pedestal) 
A310_TCAS_Mode_Switch_ABOVE#0 (>L:A310_tcas_mode)
A310_TCAS_Mode_Switch_BELOW#2 (>L:A310_tcas_mode)
A310_TCAS_Mode_Switch_N#1 (>L:A310_tcas_mode)
A310_TCAS_Range_Toggle#(L:A310_tcas_range) ! (>L:A310_tcas_range)
A310_TCAS_Test_Toggle#(L:A310_TCAS_TEST_ACTIVE) ! (>L:A310_TCAS_TEST_ACTIVE)
key#1 (>L:A310_IRS_9_BUTTON)
//IniBuilds/A310/Radar
A310_Pedestal_WX_Radar_Gain_Dec#(L:A310_WXR_GAIN) -- (>L:A310_WXR_GAIN)
A310_Pedestal_WX_Radar_Gain_Inc#(L:A310_WXR_GAIN) ++ (>L:A310_WXR_GAIN)
A310_Pedestal_WX_Radar_Mode_MAP#4 (>L:A310_WXR_MODE)
A310_Pedestal_WX_Radar_Mode_OFF#0 (>L:A310_WXR_MODE)
A310_Pedestal_WX_Radar_Mode_TEST#1 (>L:A310_WXR_MODE)
A310_Pedestal_WX_Radar_Mode_TURB#3 (>L:A310_WXR_MODE)
A310_Pedestal_WX_Radar_Mode_WX#2 (>L:A310_WXR_MODE)
A310_Pedestal_WX_Radar_Sys_1#0 (>L:A310_WXR_SYS)
A310_Pedestal_WX_Radar_Sys_2#2 (>L:A310_WXR_SYS)
A310_Pedestal_WX_Radar_Sys_OFF#1 (>L:A310_WXR_SYS)
A310_Pedestal_WX_Radar_Tilt_Dec# (L:A310_WXR_TILT_KNOB) 1.5 - -15 max (>L:A310_WXR_TILT_KNOB)
A310_Pedestal_WX_Radar_Tilt_Inc# (L:A310_WXR_TILT_KNOB) 1.5 + 15 min (>L:A310_WXR_TILT_KNOB)
wx#4 (>L:A310_WXR_MODE)
//IniBuilds/A310/Radio
A310_Pedestal_Cpt_Voice_Ident_Switch_Down#1 (>L:A310_CPT_VOICE_IDENT_SWITCH)
A310_Pedestal_Cpt_Voice_Ident_Switch_Up#0 (>L:A310_CPT_VOICE_IDENT_SWITCH)
A310_Pedestal_HF1_Capt_Toggle#(L:A310_HF1_CAPTAIN) ! (>L:A310_HF1_CAPTAIN) 
A310_Pedestal_HF1_FO_Toggle#(L:A310_HF1_FO) ! (>L:A310_HF1_FO)
A310_Pedestal_HF2_Capt_Toggle#(L:A310_HF2_CAPTAIN) ! (>L:A310_HF2_CAPTAIN)
A310_Pedestal_HF2_FO_Toggle#(L:A310_HF2_FO) ! (>L:A310_HF2_FO)
A310_Pedestal_INT_Capt_Toggle#(L:A310_INT_CAPTAIN) ! (>L:A310_INT_CAPTAIN)
A310_Pedestal_INT_FO_Toggle#(L:A310_INT_FO) ! (>L:A310_INT_FO)
A310_Pedestal_PA_Capt_Toggle#(L:A310_PA_CAPTAIN) ! (>L:A310_PA_CAPTAIN)
A310_Pedestal_PA_FO_Toggle#(L:A310_PA_FO) ! (>L:A310_PA_FO)
A310_Pedestal_VHF_COM1_Inner_Knob_Khz_Dec#1 (>L:A310_RMP_COM1_INNER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_VHF_COM1_Inner_Knob_Khz_Inc#1 (>L:A310_RMP_COM1_INNER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_VHF_COM1_Outer_Knob_Mhz_Dec#1 (>L:A310_RMP_COM1_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_VHF_COM1_Outer_Knob_Mhz_Inc#1 (>L:A310_RMP_COM1_OUTER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_VHF_COM1_Stby_Inner_Knob_Khz_Dec#1 (>L:A310_RMP_COM1_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_VHF_COM1_Stby_Inner_Knob_Khz_Inc#1 (>L:A310_RMP_COM1_STBY_INNER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_VHF_COM1_Stby_Outer_Knob_Mhz_Dec#1 (>L:A310_RMP_COM1_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_VHF_COM1_Stby_Outer_Knob_Mhz_Inc#1 (>L:A310_RMP_COM1_STBY_OUTER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_VHF_COM2_Inner_Knob_Khz_Dec#1 (>L:A310_RMP_COM2_INNER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_VHF_COM2_Inner_Knob_Khz_Inc#1 (>L:A310_RMP_COM2_INNER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_VHF_COM2_Outer_Knob_Mhz_Dec#1 (>L:A310_RMP_COM2_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_VHF_COM2_Outer_Knob_Mhz_Inc#1 (>L:A310_RMP_COM2_OUTER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_VHF_COM2_STBY_Inner_Knob_Khz_Dec#1 (>L:A310_RMP_COM2_STBY_INNER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_VHF_COM2_STBY_Inner_Knob_Khz_Inc#1 (>L:A310_RMP_COM2_STBY_INNER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_VHF_COM2_STBY_Outer_Knob_Mhz_Dec#1 (>L:A310_RMP_COM2_STBY_OUTER_KNOB_TURNED_ANTICLOCKWISE)
A310_Pedestal_VHF_COM2_STBY_Outer_Knob_Mhz_Inc#1 (>L:A310_RMP_COM2_STBY_OUTER_KNOB_TURNED_CLOCKWISE)
A310_Pedestal_VHF_Capt_Sql_Switch_Disable#0- (>L:A310_CPT_VHF_SQL_SWITCH)
A310_Pedestal_VHF_Capt_Sql_Switch_On#1 (>L:A310_CPT_VHF_SQL_SWITCH)
A310_Pedestal_VHF_Capt_Toggle#1 (>L:A310_CPT_VHF_TRANSFER_SWITCH_COMMAND)
A310_Pedestal_VHF_Capt_Transfer_Left#0 (>L:A310_CPT_VHF_TRANSFER_SWITCH_COMMAND)
A310_Pedestal_VHF_Capt_Transfer_Right#1 (>L:A310_CPT_VHF_TRANSFER_SWITCH_COMMAND)
A310_Pedestal_VHF_FO_Sql_Switch_Disable#0 (>L:A310_FO_VHF_SQL_SWITCH)
A310_Pedestal_VHF_FO_Sql_Switch_On#1 (>L:A310_FO_VHF_SQL_SWITCH)
A310_Pedestal_VHF_FO_Toggle#1 (>L:A310_FO_VHF_TRANSFER_SWITCH_COMMAND)
A310_Pedestal_VHF_FO_Transfer_Left#0 (>L:A310_FO_VHF_TRANSFER_SWITCH_COMMAND)
A310_Pedestal_VHF_FO_Transfer_Right#1 (>L:A310_FO_VHF_TRANSFER_SWITCH_COMMAND)
A310_Pedestal_VHF1_FO_Toggle#1 (>L:A310_VHF1_FO_BUTTON)
A310_Pedestal_VHF2_Capt_Toggle#1 (>L:A310_VHF2_CPT_BUTTON)
A310_Pedestal_VHF2_FO_Toggle#1 (>L:A310_VHF2_FO_BUTTON)
A310_Pedestal_VHF3_Capt_Toggle#1 (>L:A310_VHF3_CPT_BUTTON)
A310_Pedestal_VHF3_FO_Toggle#1 (>L:A310_VHF3_FO_BUTTON)
sql#0 (>L:A310_FO_VHF_SQL_SWITCH)
//IniBuilds/A310/Safety
A310_Ovhd_Oxygen_Low_Pressure_Supply_Toggle#(L:A310_OXYGEN_LOW_PRESSURE_SUPPLY) ! (>L:A310_OXYGEN_LOW_PRESSURE_SUPPLY) 
//IniBuilds/A310/Warning
A310_GPWS_Press#1 (>L:A310_GPWS_PUSH)
A310_GPWS_Release#0 (>L:A310_GPWS_PUSH)
A310_Master_Caution_Push#1 (>L:A310_MASTER_CAUTION_ACTIVE)
A310_Master_Warning_Push#1 (>L:A310_MASTER_WARNING_ACTIVE)
A310_Parking_Brake_Accu_Press_Toggle#(L:A310_ACCU_PRESS_BUTTON) ! (>L:A310_ACCU_PRESS_BUTTON)
A310_Takeoff_Config_Test_Button_Press#1 (>L:A310_TAKEOFF_CONFIG_PRESSED)
A310_Takeoff_Config_Test_Button_Release#0 (>L:A310_TAKEOFF_CONFIG_PRESSED)
A310_Warning_Sys_Emer_Cancel_Push#1 (>L:PUSH_EWD_EMER_CANCEL)
A310_Warning_Sys_Emer_Guard_Toggle#(L:__EMER_GAURD_State) ! (>L:__EMER_GAURD_State)
A310_Warning_Sys_Norm_Cancel_Push#1 (>L:PUSH_EWD_NORM_CANCEL)
//IniBuilds/A320/Autopilot
INI320_FCU_ALTITUDE_DIAL_DN#1 (>L:INI_ALTITUDE_DIAL_DN_COMMAND)
INI320_FCU_ALTITUDE_DIAL_UP#1 (>L:INI_ALTITUDE_DIAL_UP_COMMAND)
INI320_FCU_ALTITUDE_PULL#1 (>L:INI_FCU_ALTITUDE_PULL_COMMAND)
INI320_FCU_ALTITUDE_PUSH#1 (>L:INI_FCU_ALTITUDE_PUSH_COMMAND)
INI320_FCU_ALTITUDE_SCALE_TOGGLE#(L:INI_ALTITUDE_STATE) ! (>L:INI_FCU_ALTITUDE_MODE_COMMAND)
INI320_FCU_AP1_PUSH#1 (>L:INI_AP1_BUTTON)
INI320_FCU_AP2_PUSH#1 (>L:INI_AP2_BUTTON)
INI320_FCU_APPR_PUSH#1 (>L:AP7_BUTTON)
INI320_FCU_ATHR_PUSH#1 (>L:AP8_BUTTON)
INI320_FCU_EXPED_PUSH#1 (>L:A320_FCU_EXPEDITE_COMMAND)
INI320_FCU_HEADING_DIAL_DN#1 (>L:INI_HEADING_DIAL_DN_COMMAND)
INI320_FCU_HEADING_DIAL_UP#1 (>L:INI_HEADING_DIAL_UP_COMMAND)
INI320_FCU_HEADING_PULL#1 (>L:INI_FCU_SELECTED_HEADING_BUTTON)
INI320_FCU_HEADING_PUSH#1 (>L:INI_FCU_MANAGED_HEADING_BUTTON)
INI320_FCU_LOC_PUSH#1 (>L:AP6_BUTTON)
INI320_FCU_METRIC_ALT_PUSH#(L:INI_FCU_METRIC_STATE) ! (>L:INI_FCU_METRIC_STATE)
INI320_FCU_SPD_MACH_PUSH#1 (>L:INI_SPD_MACH_BUTTON)
INI320_FCU_SPEED_DIAL_DN#1 (>L:INI_AIRSPEED_DIAL_DN_COMMAND)
INI320_FCU_SPEED_DIAL_UP#1 (>L:INI_AIRSPEED_DIAL_UP_COMMAND)
INI320_FCU_SPEED_PULL#1 (>L:INI_FCU_SELECTED_SPEED_BUTTON)
INI320_FCU_SPEED_PUSH#1 (>L:INI_FCU_MANAGED_SPEED_BUTTON)
INI320_FCU_TRK_FPA_PUSH#1 (>L:INI_FCU_HDG_VS_COMMAND)
INI320_FCU_VS_DIAL_DN#1 (>L:INI_VVI_DIAL_DN_COMMAND)
INI320_FCU_VS_DIAL_UP#1 (>L:INI_VVI_DIAL_UP_COMMAND)
INI320_FCU_VS_PULL#1 (>L:AP9_BUTTON)
INI320_FCU_VS_PUSH#1 (>L:INI_FCU_PUSH_COMMAND)
INI320_SIDESTICK_AP_DISCONNECT_PUSH#(>K:AUTOPILOT_OFF)
//IniBuilds/A320/BRAKES
INI320_BRAKES_AUTOBRAKES_DECREASE#(L:INI_AUTOBRAKE_LEVEL) -- 0 max 3 min (>L:INI_AUTOBRAKE_LEVEL)
INI320_BRAKES_AUTOBRAKES_INCREASE#(L:INI_AUTOBRAKE_LEVEL) ++ 0 max 3 min (>L:INI_AUTOBRAKE_LEVEL)
INI320_BRAKES_AUTOBRAKES_LOW#1 (>L:INI_AUTOBRAKE_LEVEL)
INI320_BRAKES_AUTOBRAKES_MAX#3 (>L:INI_AUTOBRAKE_LEVEL)
INI320_BRAKES_AUTOBRAKES_MED#2 (>L:INI_AUTOBRAKE_LEVEL)
INI320_BRAKES_AUTOBRAKES_OFF#0 (>L:INI_AUTOBRAKE_LEVEL)
INI320_SPOILERS_ARMED_TOGGLE#(L:INI_SPOILERS_ARMED) ! (>L:INI_SPOILERS_ARMED)
//IniBuilds/A320/ECAM
INI320_ECAM_ALL_PUSH#1 (>L:PUSH_ECAM_ALL)
INI320_ECAM_APU_PUSH#8 (>L:INI_ECAM_ACTIVE_PAGE)
INI320_ECAM_BLEED_PUSH#1 (>L:PUSH_ECAM_BLEED)
INI320_ECAM_CLR_PUSH#5 (>L:PUSH_ECAM_CLR) 1 (>L:ECAM_CURRENT_STATUS)
INI320_ECAM_COND_PUSH#1 (>L:PUSH_ECAM_COND)
INI320_ECAM_CRUISE_PUSH#12 (>L:INI_ECAM_ACTIVE_PAGE)
INI320_ECAM_DOOR_PUSH#1 (>L:PUSH_ECAM_DOOR)
INI320_ECAM_ELEC_PUSH#1 (>L:PUSH_ECAM_ELEC_AC)
INI320_ECAM_ENG_PUSH#1 (>L:PUSH_ECAM_ENG)
INI320_ECAM_FCTL_PUSH#1 (>L:PUSH_ECAM_FCTL)
INI320_ECAM_FUEL_PUSH#1 (>L:PUSH_ECAM_FUEL)
INI320_ECAM_HYD_PUSH#1 (>L:PUSH_ECAM_HYD)
INI320_ECAM_PRESS_PUSH#1 (>L:PUSH_ECAM_PRESS)
INI320_ECAM_RCL_PUSH#1 (>L:PUSH_ECAM_RCL)
INI320_ECAM_STS_PUSH#1 (>L:PUSH_ECAM_STS)
INI320_ECAM_TO_CONFIG_PUSH#1 (>L:PUSH_ECAM_TOCONFIG)
INI320_ECAM_WHEEL_PUSH#1 (>L:PUSH_ECAM_WHEEL)
//IniBuilds/A320/EFIS
EFIS_captain_ARPT_button_pressed#1 (>L:INI_EFIS_CPT_ARPT_BUTTON)
EFIS_RANGE_CAPT_10#(L:INI_map_range_capt_switch) 0 (>L:INI_map_range_capt_switch)
EFIS_RANGE_CAPT_160#(L:INI_map_range_capt_switch) 4 (>L:INI_map_range_capt_switch)
EFIS_RANGE_CAPT_20#(L:INI_map_range_capt_switch) 1 (>L:INI_map_range_capt_switch)
EFIS_RANGE_CAPT_320#(L:INI_map_range_capt_switch) 5 (>L:INI_map_range_capt_switch)
EFIS_RANGE_CAPT_40#(L:INI_map_range_capt_switch) 2 (>L:INI_map_range_capt_switch)
EFIS_RANGE_CAPT_80#(L:INI_map_range_capt_switch) 3 (>L:INI_map_range_capt_switch)
INI320_EFIS_ALTIMETER_CPT_PULL_COMMAND#1 (>L:INI_1_ALTIMETER_PULL_COMMAND)
INI320_EFIS_ALTIMETER_CPT_PUSH_COMMAND#1 (>L:INI_1_ALTIMETER_PUSH_COMMAND)
INI320_EFIS_ADF1_CAPT_ADF#0 (>L:INI_VOR_ADF1_CAPT_STATE)
INI320_EFIS_ADF1_CAPT_VOR#2 (>L:INI_VOR_ADF1_CAPT_STATE)
INI320_EFIS_ADF2_CAPT_ADF#0 (>L:INI_VOR_ADF2_CAPT_STATE)
INI320_EFIS_ADF2_CAPT_VOR#2 (>L:INI_VOR_ADF2_CAPT_STATE)
INI320_EFIS_ARPT_CAPT_BUTTON#1 (>L:INI_EFIS_CPT_ARPT_BUTTON)
INI320_EFIS_BARO_CPT_DECR#(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{ (L:XMLVAR_Baro_Selector_HPA_1) if{ 1 (A:KOHLSMAN SETTING MB:1, mbars) -- 16 * (>K:2:KOHLSMAN_SET) } els{ 1 (>K:KOHLSMAN_DEC) } }
INI320_EFIS_BARO_CPT_INCR#(L:XMLVAR_Baro1_Mode) 2 != (L:XMLVAR_Baro1_Mode) 3 != and if{ (L:XMLVAR_Baro_Selector_HPA_1) if{ 1 (A:KOHLSMAN SETTING MB:1, mbars) ++ 16 * (>K:2:KOHLSMAN_SET) } els{ 1 (>K:KOHLSMAN_INC) } }
INI320_EFIS_BARO_UNIT_SELECTOR_CPT_Toggle#(L:XMLVAR_Baro_Selector_HPA_1, Bool) ! (>L:XMLVAR_Baro_Selector_HPA_1)
INI320_EFIS_BARO_UNIT_SELECTOR_CPT_hPa#1 (>L:XMLVAR_Baro_Selector_HPA_1)
INI320_EFIS_BARO_UNIT_SELECTOR_CPT_in_Hg#0 (>L:XMLVAR_Baro_Selector_HPA_1)
INI320_EFIS_CSTR_CPT_BUTTON#1 (>L:INI_EFIS_CPT_CSTR_BUTTON)
INI320_EFIS_FD1_PUSH#(L:INI_FD1_ON, Bool) ! (>L:INI_FD1_ON)
INI320_EFIS_FD2_FO#(L:INI_FD2_ON, Bool) ! (>L:INI_FD2_ON)
INI320_EFIS_LS_CAPTAIN_PUSH#(L:INI_LS_CAPTAIN, Bool) ! (>L:INI_LS_CAPTAIN)
INI320_EFIS_MODE_CAPT_ARC#3 (>L:INI_MAP_MODE_CAPT_SWITCH) 
INI320_EFIS_MODE_CAPT_ILS#0 (>L:INI_MAP_MODE_CAPT_SWITCH)
INI320_EFIS_MODE_CAPT_PLAN#4 (>L:INI_MAP_MODE_CAPT_SWITCH) 
INI320_EFIS_MODE_CAPT_VOR#1 (>L:INI_MAP_MODE_CAPT_SWITCH)
INI320_EFIS_MODE_CPT_DEC#(L:INI_map_MODE_capt_switch) -- 0 max 5 min (>L:INI_map_MODE_capt_switch)
INI320_EFIS_MODE_CPT_INC#(L:INI_map_MODE_capt_switch) ++ 0 max 5 min (>L:INI_map_MODE_capt_switch)
INI320_EFIS_MODE_CPT_NAV#2 (>L:INI_MAP_MODE_CAPT_SWITCH) 
INI320_EFIS_NDB_CPT_BUTTON#1 (>L:INI_EFIS_CPT_NDB_BUTTON)
INI320_EFIS_RANGE_CAPT_DEC#(L:INI_map_range_capt_switch) -- 0 max 5 min (>L:INI_map_range_capt_switch)
INI320_EFIS_RANGE_CAPT_INCR#(L:INI_map_range_capt_switch) ++ 0 max 5 min (>L:INI_map_range_capt_switch)
INI320_EFIS_VOR_CPT_BUTTON#1 (>L:INI_EFIS_CPT_VOR_BUTTON)
INI320_EFIS_WPT_CPT_BUTTON#1 (>L:INI_EFIS_CPT_FIXES_BUTTON)
//IniBuilds/A320/Lights (exterior)
A320_Ovhd_Extlt_Strobe_Auto#1 (>L:INI_STROBE_LIGHT_SWITCH)
A320_Ovhd_Extlt_Strobe_Off#2 (>L:INI_STROBE_LIGHT_SWITCH)
A320_Ovhd_Extlt_Strobe_On#0 (>L:INI_STROBE_LIGHT_SWITCH)
//IniBuilds/A320/MCDU
Cpt_MCDU_0#1 (>L:INI_MCDU1_0)
Cpt_MCDU_1#1 (>L:INI_MCDU1_1)
Cpt_MCDU_2#1 (>L:INI_MCDU1_2)
Cpt_MCDU_3#1 (>L:INI_MCDU1_3)
Cpt_MCDU_4#1 (>L:INI_MCDU1_4)
Cpt_MCDU_5#1 (>L:INI_MCDU1_5)
Cpt_MCDU_6#1 (>L:INI_MCDU1_6)
Cpt_MCDU_7#1 (>L:INI_MCDU1_7)
Cpt_MCDU_8#1 (>L:INI_MCDU1_8)
Cpt_MCDU_9#1 (>L:INI_MCDU1_9)
Cpt_MCDU_A#1 (>L:INI_MCDU1_A)
Cpt_MCDU_AIRPROT#1 (>L:INI_MCDU1_AIRPROT)
Cpt_MCDU_ATC#1 (>L:INI_MCDU1_ATC)
Cpt_MCDU_B#1 (>L:INI_MCDU1_B)
Cpt_MCDU_BRT#0 (>L:INI_MCDU1_BRT_SWITCH)
Cpt_MCDU_BRT_DIM_RELEASE#1 (>L:INI_MCDU1_BRT_SWITCH)
Cpt_MCDU_C#1 (>L:INI_MCDU1_C)
Cpt_MCDU_CLR#1 (>L:INI_MCDU1_CLR)
Cpt_MCDU_D#1 (>L:INI_MCDU1_D)
Cpt_MCDU_DATA#1 (>L:INI_MCDU1_DATA)
Cpt_MCDU_DECIMAL#1 (>L:INI_MCDU1_DECIMAL)
Cpt_MCDU_DIM#2 (>L:INI_MCDU1_BRT_SWITCH)
Cpt_MCDU_DIR#1 (>L:INI_MCDU1_DIR)
Cpt_MCDU_DOWN#1 (>L:INI_MCDU1_DOWN)
Cpt_MCDU_E#1 (>L:INI_MCDU1_E)
Cpt_MCDU_F#1 (>L:INI_MCDU1_F)
Cpt_MCDU_FPLAN#1 (>L:INI_MCDU1_FPLAN)
Cpt_MCDU_FUEL#1 (>L:INI_MCDU1_FUEL)
Cpt_MCDU_G#1 (>L:INI_MCDU1_G)
Cpt_MCDU_H#1 (>L:INI_MCDU1_H)
Cpt_MCDU_I#1 (>L:INI_MCDU1_I)
Cpt_MCDU_INIT#1 (>L:INI_MCDU1_INIT)
Cpt_MCDU_J#1 (>L:INI_MCDU1_J)
Cpt_MCDU_K#1 (>L:INI_MCDU1_K)
Cpt_MCDU_L#1 (>L:INI_MCDU1_L)
Cpt_MCDU_LSK1L#1 (>L:INI_MCDU1_LSK1L)
Cpt_MCDU_LSK1R#1 (>L:INI_MCDU1_LSK1R)
Cpt_MCDU_LSK2L#1 (>L:INI_MCDU1_LSK2L)
Cpt_MCDU_LSK2R#1 (>L:INI_MCDU1_LSK2R)
Cpt_MCDU_LSK3L#1 (>L:INI_MCDU1_LSK3L)
Cpt_MCDU_LSK3R#1 (>L:INI_MCDU1_LSK3R)
Cpt_MCDU_LSK4L#1 (>L:INI_MCDU1_LSK4L)
Cpt_MCDU_LSK4R#1 (>L:INI_MCDU1_LSK4R)
Cpt_MCDU_LSK5L#1 (>L:INI_MCDU1_LSK5L)
Cpt_MCDU_LSK5R#1 (>L:INI_MCDU1_LSK5R)
Cpt_MCDU_LSK6L#1 (>L:INI_MCDU1_LSK6L)
Cpt_MCDU_LSK6R#1 (>L:INI_MCDU1_LSK6R)
Cpt_MCDU_M#1 (>L:INI_MCDU1_M)
Cpt_MCDU_MENU#1 (>L:INI_MCDU1_MENU)
Cpt_MCDU_N#1 (>L:INI_MCDU1_N)
Cpt_MCDU_NEXT#1 (>L:INI_MCDU1_NEXT)
Cpt_MCDU_O#1 (>L:INI_MCDU1_O)
Cpt_MCDU_OVERFLY#1 (>L:INI_MCDU1_OVERFLY)
Cpt_MCDU_P#1 (>L:INI_MCDU1_P)
Cpt_MCDU_PERF#1 (>L:INI_MCDU1_PERF)
Cpt_MCDU_PLUS#1 (>L:INI_MCDU1_PLUS)
Cpt_MCDU_PREV#1 (>L:INI_MCDU1_PREV)
Cpt_MCDU_PROG#1 (>L:INI_MCDU1_PROG)
Cpt_MCDU_Q#1 (>L:INI_MCDU1_Q)
Cpt_MCDU_R#1 (>L:INI_MCDU1_R)
Cpt_MCDU_RADNAV#1 (>L:INI_MCDU1_RADNAV)
Cpt_MCDU_S#1 (>L:INI_MCDU1_S)
Cpt_MCDU_SEC#1 (>L:INI_MCDU1_SEC)
Cpt_MCDU_SLASH#1 (>L:INI_MCDU1_SLASH)
Cpt_MCDU_SPACE#1 (>L:INI_MCDU1_SPACE)
Cpt_MCDU_T#1 (>L:INI_MCDU1_T)
Cpt_MCDU_U#1 (>L:INI_MCDU1_U)
Cpt_MCDU_UARROW#1 (>L:INI_MCDU1_UARROW)
Cpt_MCDU_V#1 (>L:INI_MCDU1_V)
Cpt_MCDU_W#1 (>L:INI_MCDU1_W)
Cpt_MCDU_X#1 (>L:INI_MCDU1_X)
Cpt_MCDU_Y#1 (>L:INI_MCDU1_Y)
Cpt_MCDU_Z#1 (>L:INI_MCDU1_Z)
Fo_MCDU_0#1 (>L:INI_MCDU2_0)
Fo_MCDU_1#1 (>L:INI_MCDU2_1)
Fo_MCDU_2#1 (>L:INI_MCDU2_2)
Fo_MCDU_3#1 (>L:INI_MCDU2_3)
Fo_MCDU_4#1 (>L:INI_MCDU2_4)
Fo_MCDU_5#1 (>L:INI_MCDU2_5)
Fo_MCDU_6#1 (>L:INI_MCDU2_6)
Fo_MCDU_7#1 (>L:INI_MCDU2_7)
Fo_MCDU_8#1 (>L:INI_MCDU2_8)
Fo_MCDU_9#1 (>L:INI_MCDU2_9)
Fo_MCDU_A#1 (>L:INI_MCDU2_A)
Fo_MCDU_AIRPROT#1 (>L:INI_MCDU2_AIRPROT)
Fo_MCDU_ATC#1 (>L:INI_MCDU2_ATC)
Fo_MCDU_B#1 (>L:INI_MCDU2_B)
Fo_MCDU_BRT#0 (>L:INI_MCDU2_BRT_SWITCH)
Fo_MCDU_BRT_DIM_RELEASE#1 (>L:INI_MCDU2_BRT_SWITCH)
Fo_MCDU_C#1 (>L:INI_MCDU2_C)
Fo_MCDU_CLR#1 (>L:INI_MCDU2_CLR)
Fo_MCDU_D#1 (>L:INI_MCDU2_D)
Fo_MCDU_DATA#1 (>L:INI_MCDU2_DATA)
Fo_MCDU_DECIMAL#1 (>L:INI_MCDU2_DECIMAL)
Fo_MCDU_DIM#2 (>L:INI_MCDU2_BRT_SWITCH)
Fo_MCDU_DIR#1 (>L:INI_MCDU2_DIR)
Fo_MCDU_DOWN#1 (>L:INI_MCDU2_DOWN)
Fo_MCDU_E#1 (>L:INI_MCDU2_E)
Fo_MCDU_F#1 (>L:INI_MCDU2_F)
Fo_MCDU_FPLAN#1 (>L:INI_MCDU2_FPLAN)
Fo_MCDU_FUEL#1 (>L:INI_MCDU2_FUEL)
Fo_MCDU_G#1 (>L:INI_MCDU2_G)
Fo_MCDU_H#1 (>L:INI_MCDU2_H)
Fo_MCDU_I#1 (>L:INI_MCDU2_I)
Fo_MCDU_INIT#1 (>L:INI_MCDU2_INIT)
Fo_MCDU_J#1 (>L:INI_MCDU2_J)
Fo_MCDU_K#1 (>L:INI_MCDU2_K)
Fo_MCDU_L#1 (>L:INI_MCDU2_L)
Fo_MCDU_LSK1L#1 (>L:INI_MCDU2_LSK1L)
Fo_MCDU_LSK1R#1 (>L:INI_MCDU2_LSK1R)
Fo_MCDU_LSK2L#1 (>L:INI_MCDU2_LSK2L)
Fo_MCDU_LSK2R#1 (>L:INI_MCDU2_LSK2R)
Fo_MCDU_LSK3L#1 (>L:INI_MCDU2_LSK3L)
Fo_MCDU_LSK3R#1 (>L:INI_MCDU2_LSK3R)
Fo_MCDU_LSK4L#1 (>L:INI_MCDU2_LSK4L)
Fo_MCDU_LSK4R#1 (>L:INI_MCDU2_LSK4R)
Fo_MCDU_LSK5L#1 (>L:INI_MCDU2_LSK5L)
Fo_MCDU_LSK5R#1 (>L:INI_MCDU2_LSK5R)
Fo_MCDU_LSK6L#1 (>L:INI_MCDU2_LSK6L)
Fo_MCDU_LSK6R#1 (>L:INI_MCDU2_LSK6R)
Fo_MCDU_M#1 (>L:INI_MCDU2_M)
Fo_MCDU_MENU#1 (>L:INI_MCDU2_MENU)
Fo_MCDU_N#1 (>L:INI_MCDU2_N)
Fo_MCDU_NEXT#1 (>L:INI_MCDU2_NEXT)
Fo_MCDU_O#1 (>L:INI_MCDU2_O)
Fo_MCDU_OVERFLY#1 (>L:INI_MCDU2_OVERFLY)
Fo_MCDU_P#1 (>L:INI_MCDU2_P)
Fo_MCDU_PERF#1 (>L:INI_MCDU2_PERF)
Fo_MCDU_PLUS#1 (>L:INI_MCDU2_PLUS)
Fo_MCDU_PREV#1 (>L:INI_MCDU2_PREV)
Fo_MCDU_PROG#1 (>L:INI_MCDU2_PROG)
Fo_MCDU_Q#1 (>L:INI_MCDU2_Q)
Fo_MCDU_R#1 (>L:INI_MCDU2_R)
Fo_MCDU_RADNAV#1 (>L:INI_MCDU2_RADNAV)
Fo_MCDU_S#1 (>L:INI_MCDU2_S)
Fo_MCDU_SEC#1 (>L:INI_MCDU2_SEC)
Fo_MCDU_SLASH#1 (>L:INI_MCDU2_SLASH)
Fo_MCDU_SPACE#1 (>L:INI_MCDU2_SPACE)
Fo_MCDU_T#1 (>L:INI_MCDU2_T)
Fo_MCDU_U#1 (>L:INI_MCDU2_U)
Fo_MCDU_UARROW#1 (>L:INI_MCDU2_UARROW)
Fo_MCDU_V#1 (>L:INI_MCDU2_V)
Fo_MCDU_W#1 (>L:INI_MCDU2_W)
Fo_MCDU_X#1 (>L:INI_MCDU2_X)
Fo_MCDU_Y#1 (>L:INI_MCDU2_Y)
Fo_MCDU_Z#1 (>L:INI_MCDU2_Z)
Cpt_MCDU_AIRPORT#1 (>L:INI_MCDU1_AIRPORT)
Fo_MCDU_AIRPORT#1 (>L:INI_MCDU2_AIRPORT)
//IniBuilds/A320/Warning
Master_Caution_reset_pressed#1 (>L:INI_MASTER_CAUTION_COMMAND)
Master_warning_pressed#1 (>L:INI_MASTER_WARNING_COMMAND)
//IniBuilds/A350 (2020)/ADIRS
ADIR_1_ATT#2 (>L:INI_IRS1_STATE)
ADIR_1_NAV#1 (>L:INI_IRS1_STATE)
ADIR_1_OFF#0 (>L:INI_IRS1_STATE)
ADIR_2_ATT#2 (>L:INI_IRS2_STATE)
ADIR_2_NAV#1 (>L:INI_IRS2_STATE)
ADIR_2_OFF#0 (>L:INI_IRS2_STATE)
ADIR_3_ATT#2 (>L:INI_IRS3_STATE)
ADIR_3_NAV#1 (>L:INI_IRS3_STATE)
ADIR_3_OFF#0 (>L:INI_IRS3_STATE)
IniBuilds_A350_ADR1_Off#0 (>L:INI_ADR1_BUTTON)
IniBuilds_A350_ADR1_On#1 (>L:INI_ADR1_BUTTON)
IniBuilds_A350_ADR1_Toggle#(L:INI_ADR1_BUTTON) ! (>L:INI_ADR1_BUTTON)
IniBuilds_A350_ADR2_Off#0 (>L:INI_ADR2_BUTTON)
IniBuilds_A350_ADR2_On#1 (>L:INI_ADR2_BUTTON)
IniBuilds_A350_ADR2_Toggle#(L:INI_ADR2_BUTTON) ! (>L:INI_ADR2_BUTTON)
IniBuilds_A350_ADR3_Off#0 (>L:INI_ADR3_BUTTON)
IniBuilds_A350_ADR3_On#1 (>L:INI_ADR3_BUTTON)
IniBuilds_A350_ADR3_Toggle#(L:INI_ADR3_BUTTON) ! (>L:INI_ADR3_BUTTON)
IniBuilds_A350_IR1_Off#0 (>L:INI_IR1_STATE)
IniBuilds_A350_IR1_On#1 (>L:INI_IR1_STATE)
IniBuilds_A350_IR1_Toggle#(L:INI_IR1_STATE) ! (>L:INI_IR1_STATE)
IniBuilds_A350_IR2_Off#0 (>L:INI_IR2_STATE)
IniBuilds_A350_IR2_On#1 (>L:INI_IR2_STATE)
IniBuilds_A350_IR2_Toggle#(L:INI_IR2_STATE) ! (>L:INI_IR2_STATE)
IniBuilds_A350_IR3_Off#0 (>L:INI_IR3_STATE)
IniBuilds_A350_IR3_On#1 (>L:INI_IR3_STATE)
IniBuilds_A350_IR3_Toggle#(L:INI_IR3_STATE) ! (>L:INI_IR3_STATE)
//IniBuilds/A350 (2020)/APU
IniBuilds_A350_APU_Master_Switch_Off#0 (>L:INI_APU_MASTER_SWITCH)
IniBuilds_A350_APU_Master_Switch_On#1 (>L:INI_APU_MASTER_SWITCH)
IniBuilds_A350_APU_Start_Switch_Off#0 (>L:INI_APU_START_BUTTON)
IniBuilds_A350_APU_Start_Switch_Toggle#(L:INI_APU_START_BUTTON) ! (>L:INI_APU_START_BUTTON)
//IniBuilds/A350 (2020)/Air Conditioning
IniBuilds_A350_AVNCS_EXTRACT_Switch_Off#0 (>L:INI_VENT_AVNCS_EXTRACT)
IniBuilds_A350_AVNCS_EXTRACT_Switch_On#1 (>L:INI_VENT_AVNCS_EXTRACT)
IniBuilds_A350_AVNCS_EXTRACT_Switch_Toggle#(L:INI_VENT_AVNCS_EXTRACT) ! (>L:INI_VENT_AVNCS_EXTRACT)
IniBuilds_A350_Aft_Cargo_Temp_Knob_Dec#(L:INI_TEMP_KNOB4) 5 - 0 max (>L:INI_TEMP_KNOB4)
IniBuilds_A350_Aft_Cargo_Temp_Knob_Inc#(L:INI_TEMP_KNOB4) 5 + 200 min (>L:INI_TEMP_KNOB4)
IniBuilds_A350_Aft_Isol_Valve_Switch_Off#0 (>L:INI_ISOL_VALVE_AFT_BUTTON)
IniBuilds_A350_Aft_Isol_Valve_Switch_On#1 (>L:INI_ISOL_VALVE_AFT_BUTTON)
IniBuilds_A350_Aft_Isol_Valve_Switch_Toggle#(L:INI_ISOL_VALVE_AFT_BUTTON) ! (>L:INI_ISOL_VALVE_AFT_BUTTON)
IniBuilds_A350_Air_X_Bleed_Auto#1 (>L:INI_AIR_X_BLEED)
IniBuilds_A350_Air_X_Bleed_Close#0 (>L:INI_AIR_X_BLEED)
IniBuilds_A350_Air_X_Bleed_Open#2 (>L:INI_AIR_X_BLEED)
IniBuilds_A350_Bulk_Isol_Valve_Switch_Off#0 (>L:INI_ISOL_VALVE_BULK_BUTTON)
IniBuilds_A350_Bulk_Isol_Valve_Switch_On#1 (>L:INI_ISOL_VALVE_BULK_BUTTON)
IniBuilds_A350_Bulk_Isol_Valve_Switch_Toggle#(L:INI_ISOL_VALVE_BULK_BUTTON) ! (>L:INI_ISOL_VALVE_BULK_BUTTON)
IniBuilds_A350_CABIN_FANS_Switch_Off#0 (>L:INI_VENT_CABIN_FANS)
IniBuilds_A350_CABIN_FANS_Switch_On#1 (>L:INI_VENT_CABIN_FANS)
IniBuilds_A350_CABIN_FANS_Switch_Toggle#(L:INI_VENT_CABIN_FANS) ! (>L:INI_VENT_CABIN_FANS)
IniBuilds_A350_COOLING_Switch_Off#0 (>L:INI_VENT_COOLING)
IniBuilds_A350_COOLING_Switch_On#1 (>L:INI_VENT_COOLING)
IniBuilds_A350_COOLING_Switch_Toggle#(L:INI_VENT_COOLING) ! (>L:INI_VENT_COOLING)
IniBuilds_A350_Cabin_Temp_Knob_Dec#(L:INI_TEMP_KNOB2) 5 - 0 max (>L:INI_TEMP_KNOB2)
IniBuilds_A350_Cabin_Temp_Knob_Inc#(L:INI_TEMP_KNOB2) 5 + 200 min (>L:INI_TEMP_KNOB2)
IniBuilds_A350_Cargo_Heater_Switch_Off#0 (>L:INI_CARGO_AIR_COND_HEATER)
IniBuilds_A350_Cargo_Heater_Switch_On#1 (>L:INI_CARGO_AIR_COND_HEATER)
IniBuilds_A350_Cargo_Heater_Switch_Toggle#(L:INI_CARGO_AIR_COND_HEATER) ! (>L:INI_CARGO_AIR_COND_HEATER)
IniBuilds_A350_Cockpit_Temp_Knob_Dec#(L:INI_TEMP_KNOB1) 5 - 0 max (>L:INI_TEMP_KNOB1)
IniBuilds_A350_Cockpit_Temp_Knob_Inc#(L:INI_TEMP_KNOB1) 5 + 100 min (>L:INI_TEMP_KNOB1)
IniBuilds_A350_Eng_1_Bleed_Air_Switch_Off#0 (>L:INI_AIR_BLEED_ENG1)
IniBuilds_A350_Eng_1_Bleed_Air_Switch_On#1 (>L:INI_AIR_BLEED_ENG1)
IniBuilds_A350_Eng_1_Bleed_Air_Switch_Toggle#(L:INI_AIR_BLEED_ENG1) ! (>L:INI_AIR_BLEED_ENG1)
IniBuilds_A350_Eng_1_Hot_Air_Switch_Off#0 (>L:INI_AIR_HOT_AIR1)
IniBuilds_A350_Eng_1_Hot_Air_Switch_On#1 (>L:INI_AIR_HOT_AIR1)
IniBuilds_A350_Eng_1_Hot_Air_Switch_Toggle#(L:INI_AIR_HOT_AIR1) ! (>L:INI_AIR_HOT_AIR1)
IniBuilds_A350_Eng_2_Bleed_Air_Switch_Off#0 (>L:INI_AIR_BLEED_ENG2)
IniBuilds_A350_Eng_2_Bleed_Air_Switch_On#1 (>L:INI_AIR_BLEED_ENG2)
IniBuilds_A350_Eng_2_Bleed_Air_Switch_Toggle#(L:INI_AIR_BLEED_ENG2) ! (>L:INI_AIR_BLEED_ENG2)
IniBuilds_A350_Eng_2_Hot_Air_Switch_Off#0 (>L:INI_AIR_HOT_AIR2)
IniBuilds_A350_Eng_2_Hot_Air_Switch_On#1 (>L:INI_AIR_HOT_AIR2)
IniBuilds_A350_Eng_2_Hot_Air_Switch_Toggle#(L:INI_AIR_HOT_AIR2) ! (>L:INI_AIR_HOT_AIR2)
IniBuilds_A350_Forward_Cargo_Temp_Knob_Dec#(L:INI_TEMP_KNOB3) 5 - 0 max (>L:INI_TEMP_KNOB3)
IniBuilds_A350_Forward_Cargo_Temp_Knob_Inc#(L:INI_TEMP_KNOB3) 5 + 100 min (>L:INI_TEMP_KNOB3)
IniBuilds_A350_Fwd_Isol_Valve_Switch_Off#0 (>L:INI_ISOL_VALVE_FWD_BUTTON)
IniBuilds_A350_Fwd_Isol_Valve_Switch_On#1 (>L:INI_ISOL_VALVE_FWD_BUTTON)
IniBuilds_A350_Fwd_Isol_Valve_Switch_Toggle#(L:INI_ISOL_VALVE_FWD_BUTTON) ! (>L:INI_ISOL_VALVE_FWD_BUTTON)
IniBuilds_A350_Pack_1_Switch_Off#0 (>L:INI_AIR_PACK1_BUTTON)
IniBuilds_A350_Pack_1_Switch_On#1 (>L:INI_AIR_PACK1_BUTTON)
IniBuilds_A350_Pack_1_Switch_Toggle#(L:INI_AIR_PACK1_BUTTON) ! (>L:INI_AIR_PACK1_BUTTON)
IniBuilds_A350_Pack_2_Switch_Off#0 (>L:INI_AIR_PACK2_BUTTON)
IniBuilds_A350_Pack_2_Switch_On#1 (>L:INI_AIR_PACK2_BUTTON)
IniBuilds_A350_Pack_2_Switch_Toggle#(L:INI_AIR_PACK2_BUTTON) ! (>L:INI_AIR_PACK2_BUTTON)
IniBuilds_A350_Pack_Flow_Switch_High#3 (>L:INI_AIR_FLOW_MODE)
IniBuilds_A350_Pack_Flow_Switch_Low#1 (>L:INI_AIR_FLOW_MODE)
IniBuilds_A350_Pack_Flow_Switch_Man#0 (>L:INI_AIR_FLOW_MODE)
IniBuilds_A350_Pack_Flow_Switch_Norm#2 (>L:INI_AIR_FLOW_MODE)
IniBuilds_A350_Ram_Air_Switch_Off#0 (>L:INI_RAM_AIR_STATE)
IniBuilds_A350_Ram_Air_Switch_On#1 (>L:INI_RAM_AIR_STATE)
IniBuilds_A350_Ram_Air_Switch_Toggle#(L:INI_RAM_AIR_STATE) ! (>L:INI_RAM_AIR_STATE)
IniBuilds_A350_SMOKE_IFEC_Switch_Off#0 (>L:INI_CAB_SMOKE_IFEC)
IniBuilds_A350_SMOKE_IFEC_Switch_On#1 (>L:INI_CAB_SMOKE_IFEC)
IniBuilds_A350_SMOKE_IFEC_Switch_Toggle#(L:INI_CAB_SMOKE_IFEC) ! (>L:INI_CAB_SMOKE_IFEC)
IniBuilds_A350_Windshield_Defog_Switch_Off#0 (>L:INI_AIR_WINDSHIELD_DEFOG)
IniBuilds_A350_Windshield_Defog_Switch_On#1 (>L:INI_AIR_WINDSHIELD_DEFOG)
IniBuilds_A350_Windshield_Defog_Switch_Toggle#(L:INI_AIR_WINDSHIELD_DEFOG) ! (>L:INI_AIR_WINDSHIELD_DEFOG)
//IniBuilds/A350 (2020)/Anti Ice
ENG1_Anti_Ice#(L:INI_ENG_ANTI_ICE1_STATE) ! (>L:INI_ENG_ANTI_ICE1_STATE)
ENG2_Anti_Ice#(L:INI_ENG_ANTI_ICE2_STATE) ! (>L:INI_ENG_ANTI_ICE2_STATE)
FCU_V_S_Knob_Dec#1 (>L:INI_VVI_DIAL_DN_COMMAND)
FCU_V_S_Knob_Inc#1 (>L:INI_VVI_DIAL_UP_COMMAND)
IniBuilds_A350_Eng_1_Anti_Ice_Switch_Off#0 (>L:INI_ENG_ANTI_ICE1_STATE)
IniBuilds_A350_Eng_1_Anti_Ice_Switch_On#1 (>L:INI_ENG_ANTI_ICE1_STATE)
IniBuilds_A350_Eng_2_Anti_Ice_Switch_Off#0 (>L:INI_ENG_ANTI_ICE2_STATE)
IniBuilds_A350_Eng_2_Anti_Ice_Switch_On#1 (>L:INI_ENG_ANTI_ICE2_STATE)
IniBuilds_A350_Window___Probe_Heat_Switch_Off#0 (>L:INI_PROBE_WINDOW_HEAT1_STATE)
IniBuilds_A350_Window___Probe_Heat_Switch_On#1 (>L:INI_PROBE_WINDOW_HEAT1_STATE)
IniBuilds_A350_Wing_Anti_Ice_Switch_Off#0 (>L:INI_WING_ANTI_ICE1_STATE)
IniBuilds_A350_Wing_Anti_Ice_Switch_On#1 (>L:INI_WING_ANTI_ICE1_STATE)
Probe_and_Window_Heat#(L:INI_PROBE_WINDOW_HEAT1_STATE) ! (>L:INI_PROBE_WINDOW_HEAT1_STATE)
Wing_Anti_Ice#(L:INI_WING_ANTI_ICE1_STATE) ! (>L:INI_WING_ANTI_ICE1_STATE)
//IniBuilds/A350 (2020)/Autopilot
EFIS_L_ADF1_OFF#0 (>L:INI_CPT_ADF1_ACTIVE)
EFIS_L_ADF1_ON#1 (>L:INI_CPT_ADF1_ACTIVE)
FCU_ALT_100_1000#1 (>L:INI_FCU_ALTITUDE_MODE_COMMAND)
FCU_ALT_Knob_Dec#1 (>L:INI_ALTITUDE_DIAL_DN_COMMAND)
FCU_ALT_Knob_Inc#1 (>L:INI_ALTITUDE_DIAL_UP_COMMAND)
FCU_ALT_Managed#1 (>L:INI_FCU_ALTITUDE_PUSH_COMMAND)
FCU_ALT_Selected#1 (>L:INI_FCU_ALTITUDE_PULL_COMMAND)
FCU_AP1_Button#1 (>L:INI_AP1_BUTTON)
FCU_AP2_Button#1 (>L:INI_AP2_BUTTON)
FCU_APPR_Button#1 (>L:AP7_BUTTON)
FCU_ATHR_Button#1 (>L:AP8_BUTTON)
FCU_FD#(L:INI_FD_ON) ! (>L:INI_FD_ON)
FCU_HDG_Knob_Dec#1 (>L:INI_HEADING_DIAL_DN_COMMAND)
FCU_HDG_Knob_Inc#1 (>L:INI_HEADING_DIAL_UP_COMMAND)
FCU_HDG_Managed#1 (>L:INI_FCU_MANAGED_HEADING_BUTTON)
FCU_HDG_Selected#1 (>L:INI_FCU_SELECTED_HEADING_BUTTON)
FCU_HDG_TRK_Button#1 (>L:INI_FCU_HDG_VS_COMMAND)
FCU_LOC_Button#1 (>L:AP6_BUTTON)
FCU_LS_Left#(L:INI_LS_CAPTAIN) ! (>L:INI_LS_CAPTAIN)
FCU_LS_Right#(L:INI_LS_FO) ! (>L:INI_LS_FO)
FCU_Meter_Button#(L:INI_FCU_METRIC_STATE) ! (>L:INI_FCU_METRIC_STATE)
FCU_SPD_Knob_Dec#1 (>L:INI_AIRSPEED_DIAL_DN_COMMAND)
FCU_SPD_Knob_Inc#1 (>L:INI_AIRSPEED_DIAL_UP_COMMAND)
FCU_SPD_Managed#1 (>L:INI_FCU_MANAGED_SPEED_BUTTON)
FCU_SPD_Selected#1 (>L:INI_FCU_SELECTED_SPEED_BUTTON)
FCU_V_S_Managed#1 (>L:INI_FCU_PUSH_COMMAND)
FCU_V_S_Selected#1 (>L:AP9_BUTTON)
FCU_VV_Left_Button#(L:INI_VV_LEFT) ! (>L:INI_VV_LEFT)
FCU_VV_Right_Button#(L:INI_VV_RIGHT) ! (>L:INI_VV_RIGHT)
IniBuilds_A350_FCU_FD_Off#0 (>L:INI_FD_ON)
IniBuilds_A350_FCU_FD_On#1 (>L:INI_FD_ON)
IniBuilds_A350_FCU_Metric_Display_Off#0 (>L:INI_FCU_METRIC_STATE)
IniBuilds_A350_FCU_Metric_Display_On#1 (>L:INI_FCU_METRIC_STATE)
IniBuilds_A350_FCU_North_Ref_Mag#0 (>L:INI_NORTH_REF_STATE)
IniBuilds_A350_FCU_North_Ref_True#1 (>L:INI_NORTH_REF_STATE)
IniBuilds_A350_FCU_North_ref_Toggle#(L:INI_NORTH_REF_STATE) ! (>L:INI_NORTH_REF_STATE)
SPD_MACH_Button#1 (>L:INI_SPD_MACH_BUTTON)
Sidestick_AP_Disconnect_Button#1 (>L:AUTOPILOT_OFF_REQ)
//IniBuilds/A350 (2020)/ECAM
IniBuilds_A350_ECAM_ABN_Button#1 (>L:INI_ECAM_ABN)
IniBuilds_A350_ECAM_APU_Button#1 (>L:INI_PUSH_ECAM_APU_RELEASE)
IniBuilds_A350_ECAM_Bleed_Button#1 (>L:PUSH_ECAM_BLEED)
IniBuilds_A350_ECAM_Clear_Button#1 (>L:PUSH_ECAM_CLR)
IniBuilds_A350_ECAM_Cond_Button#1 (>L:PUSH_ECAM_COND)
IniBuilds_A350_ECAM_DEFRD_Button#1 (>L:INI_ECAM_DEFRD)
IniBuilds_A350_ECAM_DISPCH_Button#1 (>L:INI_ECAM_DISPCH)
IniBuilds_A350_ECAM_Door_Button#1 (>L:PUSH_ECAM_DOOR)
IniBuilds_A350_ECAM_EL_DC_Button#1 (>L:PUSH_ECAM_ELEC_DC)
IniBuilds_A350_ECAM_Emer_Cancel_Button#1 (>L:PUSH_ECAM_EMER_CANCEL)
IniBuilds_A350_ECAM_Emer_Cancel_Guard_Close#0 (>L:INI_ECAM_EMER_CANCEL_GUARD)
IniBuilds_A350_ECAM_Emer_Cancel_Guard_Open#1 (>L:INI_ECAM_EMER_CANCEL_GUARD)
IniBuilds_A350_ECAM_Emer_Cancel_Guard_Toggle#(L:INI_ECAM_EMER_CANCEL_GUARD) ! (>L:INI_ECAM_EMER_CANCEL_GUARD)
IniBuilds_A350_ECAM_Eng_Button#1 (>L:PUSH_ECAM_ENG)
IniBuilds_A350_ECAM_F_Ctl_Button#1 (>L:PUSH_ECAM_FCTL)
IniBuilds_A350_ECAM_Fuel_Button#1 (>L:PUSH_ECAM_FUEL)
IniBuilds_A350_ECAM_Hyd_Button#1 (>L:PUSH_ECAM_HYD)
IniBuilds_A350_ECAM_Left_Scroll_Wheel_Down#1 (>L:INI_EXAM_WHEEL_L_MINUS_COMMAND)
IniBuilds_A350_ECAM_Left_Scroll_Wheel_Up#1 (>L:INI_EXAM_WHEEL_L_PLUS_COMMAND)
IniBuilds_A350_ECAM_Left_Tick_Button_Press#1 (>L:INI_ECAM_CHECKLIST_LEFT)
IniBuilds_A350_ECAM_Left_Tick_Button_Release#0 (>L:INI_ECAM_CHECKLIST_LEFT)
IniBuilds_A350_ECAM_MORE_Button#1 (>L:PUSH_ECAM_MORE)
IniBuilds_A350_ECAM_Press_Button#1 (>L:PUSH_ECAM_PRESS)
IniBuilds_A350_ECAM_RCL_ALL_Button_Press#1 (>L:INI_ECAM_RCL_ALL)
IniBuilds_A350_ECAM_RCL_ALL_Button_Release#0 (>L:INI_ECAM_RCL_ALL)
IniBuilds_A350_ECAM_RCL_Button#1 (>L:PUSH_ECAM_RCL)
IniBuilds_A350_ECAM_Right_Scroll_Wheel_Down#1 (>L:INI_EXAM_WHEEL_R_MINUS_COMMAND)
IniBuilds_A350_ECAM_Right_Scroll_Wheel_Up#1 (>L:INI_EXAM_WHEEL_R_PLUS_COMMAND)
IniBuilds_A350_ECAM_Right_Tick_Button_Press#1 (>L:INI_ECAM_CHECKLIST_RIGHT)
IniBuilds_A350_ECAM_Right_Tick_Button_Release#0 (>L:INI_ECAM_CHECKLIST_RIGHT)
IniBuilds_A350_ECAM_SD_Knob_Dec#1 (>L:INI_ECAM_SD_KNOB_DEC)
IniBuilds_A350_ECAM_SD_Knob_Inc#1 (>L:INI_ECAM_SD_KNOB_INC)
IniBuilds_A350_ECAM_SD_Knob_Push#1 (>L:INI_ECAM_SD_KNOB_PUSH)
IniBuilds_A350_ECAM_STS_Button#1 (>L:PUSH_ECAM_STS)
IniBuilds_A350_ECAM_TO_Config_Button_Press#1 (>L:PUSH_ECAM_TOCONFIG)
IniBuilds_A350_ECAM_TO_Config_Button_Release#0 (>L:PUSH_ECAM_TOCONFIG)
IniBuilds_A350_ECAM_Video_Button#1 (>L:INI_ECAM_VIDEO)
IniBuilds_A350_ECAM_Wheel_Button#1 (>L:PUSH_ECAM_WHEEL)
//IniBuilds/A350 (2020)/EFIS (left)
EFIS_L_ADF1_VOR1_Pushbutton#1 (>L:INI_EFIS_BSK_1_CPT)
EFIS_L_ADF2_OFF#0 (>L:INI_CPT_ADF2_ACTIVE)
EFIS_L_ADF2_ON#1 (>L:INI_CPT_ADF2_ACTIVE)
EFIS_L_ADF2_VOR2_Pushbutton#1 (>L:INI_EFIS_BSK_5_CPT)
EFIS_L_ARPT_Button#1 (>L:INI_EFIS_CPT_ARPT_BUTTON)
EFIS_L_Baro_DEC#1 (>L:INI_BARO1_DEC_COMMAND)
EFIS_L_Baro_INC#1 (>L:INI_BARO1_INC_COMMAND)
EFIS_L_Baro_Pull#1 (>L:INI_1_ALTIMETER_PULL_COMMAND)
EFIS_L_Baro_Push#1 (>L:INI_1_ALTIMETER_PUSH_COMMAND)
EFIS_L_CSTR_Button#1 (>L:INI_EFIS_CPT_CSTR_BUTTON)
EFIS_L_Map_Mode_Knob_Rotate_Left#(L:INI_MAP_MODE_CAPT_SWITCH) -- 0 max 4 min (>L:INI_MAP_MODE_CAPT_SWITCH)
EFIS_L_Map_Mode_Knob_Rotate_Right#(L:INI_MAP_MODE_CAPT_SWITCH) ++ 0 max 4 min (>L:INI_MAP_MODE_CAPT_SWITCH)
EFIS_L_ND_Mode_ARC#3 (>L:INI_MAP_MODE_CAPT_SWITCH)
EFIS_L_ND_Mode_LS#0 (>L:INI_MAP_MODE_CAPT_SWITCH)
EFIS_L_ND_Mode_NAV#2 (>L:INI_MAP_MODE_CAPT_SWITCH)
EFIS_L_ND_Mode_PLAN#4 (>L:INI_MAP_MODE_CAPT_SWITCH)
EFIS_L_ND_Mode_VOR#1 (>L:INI_MAP_MODE_CAPT_SWITCH)
EFIS_L_ND_Range_10#5 (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_160#9 (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_20#6 (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_320#10 (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_40#7 (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_640#11 (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_80#8 (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_DEC#(L:INI_MAP_RANGE_CAPT_SWITCH) -- 0 max 11 min (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_INC#(L:INI_MAP_RANGE_CAPT_SWITCH) ++ 0 max 11 min (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_ND_Range_Zoom_Stage_1#4 (>L:INI_MAP_RANGE_CAPT_SWITCH)
EFIS_L_NDB_Button#1 (>L:INI_EFIS_CPT_NDB_BUTTON)
EFIS_L_TERR_Pushbutton#1 (>L:INI_EFIS_BSK_3_CPT)
EFIS_L_TRAF_Pushbutton#1 (>L:INI_EFIS_BSK_4_CPT)
EFIS_L_VOR1_OFF#0 (>L:INI_CPT_VOR1_ACTIVE)
EFIS_L_VOR1_ON#1 (>L:INI_CPT_VOR1_ACTIVE)
EFIS_L_VOR2_OFF#0 (>L:INI_CPT_VOR2_ACTIVE)
EFIS_L_VOR2_ON#1 (>L:INI_CPT_VOR2_ACTIVE)
EFIS_L_VORD_Button#1 (>L:INI_EFIS_CPT_VOR_BUTTON)
EFIS_L_WPT_Button#1 (>L:INI_EFIS_CPT_FIXES_BUTTON)
EFIS_L_WX_Pushbutton#1 (>L:INI_EFIS_BSK_2_CPT)
EFIS_L_hPa_Switch#1 (>L:XMLVAR_BARO_Selector_HPA_1)
EFIS_L_inHg_Switch#0 (>L:XMLVAR_BARO_Selector_HPA_1)
//IniBuilds/A350 (2020)/EFIS (right)
EFIS_R_ADF1_OFF#0 (>L:INI_FO_ADF1_ACTIVE)
EFIS_R_ADF1_ON#1 (>L:INI_FO_ADF1_ACTIVE)
EFIS_R_ADF1_VOR1_Pushbutton#1 (>L:INI_EFIS_BSK_1_FO)
EFIS_R_ADF2_OFF#0 (>L:INI_FO_ADF2_ACTIVE)
EFIS_R_ADF2_ON#1 (>L:INI_FO_ADF2_ACTIVE)
EFIS_R_ADF2_VOR2_Pushbutton#1 (>L:INI_EFIS_BSK_5_FO)
EFIS_R_ARPT_Button#1 (>L:INI_EFIS_FO_ARPT_BUTTON)
EFIS_R_Baro_DEC#1 (>L:INI_BARO2_DEC_COMMAND)
EFIS_R_Baro_INC#1 (>L:INI_BARO2_INC_COMMAND)
EFIS_R_Baro_Pull#1 (>L:INI_2_ALTIMETER_PULL_COMMAND)
EFIS_R_Baro_Push#1 (>L:INI_2_ALTIMETER_PUSH_COMMAND)
EFIS_R_CSTR_Button#1 (>L:INI_EFIS_FO_CSTR_BUTTON)
EFIS_R_ND_Mode_ARC#3 (>L:INI_MAP_MODE_FO_SWITCH)
EFIS_R_ND_Mode_LS#0 (>L:INI_MAP_MODE_FO_SWITCH)
EFIS_R_ND_Mode_NAV#2 (>L:INI_MAP_MODE_FO_SWITCH)
EFIS_R_ND_Mode_PLAN#4 (>L:INI_MAP_MODE_FO_SWITCH)
EFIS_R_ND_Mode_VOR#1 (>L:INI_MAP_MODE_FO_SWITCH)
EFIS_R_ND_Range_10#5 (>L:INI_MAP_RANGE_FO_SWITCH)
EFIS_R_ND_Range_160#9 (>L:INI_MAP_RANGE_FO_SWITCH)
EFIS_R_ND_Range_20#6 (>L:INI_MAP_RANGE_FO_SWITCH)
EFIS_R_ND_Range_320#10 (>L:INI_MAP_RANGE_FO_SWITCH)
EFIS_R_ND_Range_40#7 (>L:INI_MAP_RANGE_FO_SWITCH)
EFIS_R_ND_Range_640#11 (>L:INI_MAP_RANGE_FO_SWITCH)
EFIS_R_ND_Range_80#8 (>L:INI_MAP_RANGE_FO_SWITCH)
EFIS_R_ND_Range_Zoom_Stage_1#4 (>L:INI_MAP_RANGE_FO_SWITCH)
EFIS_R_NDB_Button#1 (>L:INI_EFIS_FO_NDB_BUTTON)
EFIS_R_TERR_Pushbutton#1 (>L:INI_EFIS_BSK_3_FO)
EFIS_R_TRAF_Pushbutton#1 (>L:INI_EFIS_BSK_4_FO)
EFIS_R_VOR1_OFF#0 (>L:INI_FO_VOR1_ACTIVE)
EFIS_R_VOR1_ON#1 (>L:INI_FO_VOR1_ACTIVE)
EFIS_R_VOR2_OFF#0 (>L:INI_FO_VOR2_ACTIVE)
EFIS_R_VOR2_ON#1 (>L:INI_FO_VOR2_ACTIVE)
EFIS_R_VORD_Button#1 (>L:INI_EFIS_FO_VOR_BUTTON)
EFIS_R_WPT_Button#1 (>L:INI_EFIS_FO_FIXES_BUTTON)
EFIS_R_WX_Pushbutton#1 (>L:INI_EFIS_BSK_2_FO)
EFIS_R_hPa_Switch#1 (>L:XMLVAR_BARO_Selector_HPA_2)
EFIS_R_inHg_Switch#0 (>L:XMLVAR_BARO_Selector_HPA_2)
//IniBuilds/A350 (2020)/EFIS
IniBuilds_A350_CPT_EFIS_ATC_MSG_Press#0 (>L:INI_ATC_MSG)
IniBuilds_A350_CPT_EFIS_Chrono_Press#1 (>L:INI_CPT_CHRONO_BUTTON)
IniBuilds_A350_CPT_EFIS_LS_Off#0 (>L:INI_LS_CAPTAIN)
IniBuilds_A350_CPT_EFIS_LS_On#1 (>L:INI_LS_CAPTAIN)
IniBuilds_A350_CPT_EFIS_Master_Caution_Press#1 (>L:INI_MASTER_CAUTION_COMMAND)
IniBuilds_A350_CPT_EFIS_Master_Warning_Press#1 (>L:INI_MASTER_WARNING_COMMAND)
IniBuilds_A350_CPT_EFIS_VV_Off#0 (>L:INI_VV_LEFT)
IniBuilds_A350_CPT_EFIS_VV_On#1 (>L:INI_VV_LEFT)
IniBuilds_A350_CPT_Loudspeaker_Dec#(L:INI_LOUDSPEAKER_1) 5 - 0 max (>L:INI_LOUDSPEAKER_1)
IniBuilds_A350_CPT_Loudspeaker_Inc#(L:INI_LOUDSPEAKER_1) 5 + 100 min (>L:INI_LOUDSPEAKER_1)
IniBuilds_A350_FO_EFIS_ATC_MSG_Press#0 (>L:INI_ATC_MSG)
IniBuilds_A350_FO_EFIS_Chrono_Press#1 (>L:INI_FO_CHRONO_BUTTON)
IniBuilds_A350_FO_EFIS_LS_Off#0 (>L:INI_LS_FO)
IniBuilds_A350_FO_EFIS_LS_On#1 (>L:INI_LS_FO)
IniBuilds_A350_FO_EFIS_Master_Caution_Press#1 (>L:INI_MASTER_CAUTION_COMMAND)
IniBuilds_A350_FO_EFIS_Master_Warning_Press#1 (>L:INI_MASTER_WARNING_COMMAND)
IniBuilds_A350_FO_EFIS_VV_Off#0 (>L:INI_VV_RIGHT)
IniBuilds_A350_FO_EFIS_VV_On#1 (>L:INI_VV_RIGHT)
IniBuilds_A350_FO_Loudspeaker_Dec#(L:INI_LOUDSPEAKER_2) 5 - 0 max (>L:INI_LOUDSPEAKER_2)
IniBuilds_A350_FO_Loudspeaker_Inc#(L:INI_LOUDSPEAKER_2) 5 + 200 min (>L:INI_LOUDSPEAKER_2)
//IniBuilds/A350 (2020)/Electrical
APU_Bleed_Toogle#(L:INI_AIR_BLEED_APU) ! (>L:INI_AIR_BLEED_APU)
APU_Master_Toogle#(L:INI_APU_MASTER_SWITCH) ! (>L:INI_APU_MASTER_SWITCH)
APU_Start_Button#1 (>L:INI_APU_START_BUTTON)
BAT_1_Toogle#(L:INI_BATTERY_1_SWITCH) ! (>L:INI_BATTERY_1_SWITCH)
BAT_2_Toogle#(L:INI_BATTERY_2_SWITCH) ! (>L:INI_BATTERY_2_SWITCH)
BAT_EMER_1_Toogle#(L:INI_BATTERY_EMER1_SWITCH) ! (>L:INI_BATTERY_EMER1_SWITCH)
BAT_EMER_2_Toogle#(L:INI_BATTERY_EMER2_SWITCH) ! (>L:INI_BATTERY_EMER2_SWITCH)
External_Power_1_Toggle#(L:INI_GPU_AVAIL) 1 == if{ (L:INI_GEN_EXT_A_ONLINE) ! (>L:INI_GEN_EXT_A_ONLINE) }
External_Power_2_Toggle#(L:INI_GPU_AVAIL) 1 == if{ (L:INI_GEN_EXT_B_ONLINE) ! (>L:INI_GEN_EXT_B_ONLINE) }
IniBuilds_A350_Battery_1_Switch_Off#0 (>L:INI_BATTERY_1_SWITCH)
IniBuilds_A350_Battery_1_Switch_On#1 (>L:INI_BATTERY_1_SWITCH)
IniBuilds_A350_Battery_2_Switch_Off#0 (>L:INI_BATTERY_2_SWITCH)
IniBuilds_A350_Battery_2_Switch_On#1 (>L:INI_BATTERY_2_SWITCH)
IniBuilds_A350_Battery_Voltage_Display_1#3 (>L:INI_BATT_VOLTAGE_SELECTOR)
IniBuilds_A350_Battery_Voltage_Display_2#4 (>L:INI_BATT_VOLTAGE_SELECTOR)
IniBuilds_A350_Battery_Voltage_Display_Emer_1#1 (>L:INI_BATT_VOLTAGE_SELECTOR)
IniBuilds_A350_Battery_Voltage_Display_Emer_2#0 (>L:INI_BATT_VOLTAGE_SELECTOR)
IniBuilds_A350_Battery_Voltage_Display_Off#2 (>L:INI_BATT_VOLTAGE_SELECTOR)
IniBuilds_A350_Bus_Tie_Switch_Off#0 (>L:INI_BUS_TIE)
IniBuilds_A350_Bus_Tie_Switch_On#1 (>L:INI_BUS_TIE)
IniBuilds_A350_Bus_Tie_Switch_Toggle#(L:INI_BUS_TIE) ! (>L:INI_BUS_TIE)
IniBuilds_A350_Commercial_1_Switch_Off#0 (>L:INI_COMMERCIAL1_ON)
IniBuilds_A350_Commercial_1_Switch_On#1 (>L:INI_COMMERCIAL1_ON)
IniBuilds_A350_Commercial_1_Switch_Toggle#(L:INI_COMMERCIAL1_ON) ! (>L:INI_COMMERCIAL1_ON)
IniBuilds_A350_Commercial_2_Switch_Off#0 (>L:INI_COMMERCIAL2_ON)
IniBuilds_A350_Commercial_2_Switch_On#1 (>L:INI_COMMERCIAL2_ON)
IniBuilds_A350_Commercial_2_Switch_Toggle#(L:INI_COMMERCIAL2_ON) ! (>L:INI_COMMERCIAL2_ON)
IniBuilds_A350_Elm_Switch_Off#0 (>L:INI_ELEC_ELM)
IniBuilds_A350_Elm_Switch_On#1 (>L:INI_ELEC_ELM)
IniBuilds_A350_Elm_Switch_Toggle#(L:INI_ELEC_ELM) ! (>L:INI_ELEC_ELM)
IniBuilds_A350_Emer_Battery_1_Switch_Off#0 (>L:INI_BATTERY_EMER1_SWITCH)
IniBuilds_A350_Emer_Battery_1_Switch_On#1 (>L:INI_BATTERY_EMER1_SWITCH)
IniBuilds_A350_Emer_Battery_2_Switch_Off#0 (>L:INI_BATTERY_EMER2_SWITCH)
IniBuilds_A350_Emer_Battery_2_Switch_On#1 (>L:INI_BATTERY_EMER2_SWITCH)
IniBuilds_A350_Emer_Gen_Off#0 (>L:INI_EMER_ELEC_GEN_STATUS)
IniBuilds_A350_Emer_Gen_On#1 (>L:INI_EMER_ELEC_GEN_STATUS)
IniBuilds_A350_Emer_Gen_Toggle# (L:INI_EMER_ELEC_GEN_STATUS) ! (>L:INI_EMER_ELEC_GEN_STATUS)
IniBuilds_A350_Eng_1_Gen_A_GEN_Switch_Off#0 (>L:INI_GEN_1A_SWITCH)
IniBuilds_A350_Eng_1_Gen_A_GEN_Switch_On#1 (>L:INI_GEN_1A_SWITCH)
IniBuilds_A350_Eng_1_Gen_A_GEN_Switch_Toggle#(L:INI_GEN_1A_SWITCH) ! (>L:INI_GEN_1A_SWITCH)
IniBuilds_A350_Eng_1_Gen_A_IDG_Switch_Off#0 (>L:INI_GEN1A_IDG_STATE)
IniBuilds_A350_Eng_1_Gen_A_IDG_Switch_On#1 (>L:INI_GEN1A_IDG_STATE)
IniBuilds_A350_Eng_1_Gen_A_IDG_Switch_Toggle#(L:INI_GEN1A_IDG_STATE) ! (>L:INI_GEN1A_IDG_STATE)
IniBuilds_A350_Eng_1_Gen_B_GEN_Switch_Off#0 (>L:INI_GEN_1B_SWITCH)
IniBuilds_A350_Eng_1_Gen_B_GEN_Switch_On#1 (>L:INI_GEN_1B_SWITCH)
IniBuilds_A350_Eng_1_Gen_B_GEN_Switch_Toggle#(L:INI_GEN_1B_SWITCH) ! (>L:INI_GEN_1B_SWITCH)
IniBuilds_A350_Eng_1_Gen_B_IDG_Switch_Off#0 (>L:INI_GEN1B_IDG_STATE)
IniBuilds_A350_Eng_1_Gen_B_IDG_Switch_On#1 (>L:INI_GEN1B_IDG_STATE)
IniBuilds_A350_Eng_1_Gen_B_IDG_Switch_Toggle#(L:INI_GEN1B_IDG_STATE) ! (>L:INI_GEN1B_IDG_STATE)
IniBuilds_A350_Eng_2_Gen_A_GEN_Switch_Off#0 (>L:INI_GEN_1B_SWITCH)
IniBuilds_A350_Eng_2_Gen_A_GEN_Switch_On#1 (>L:INI_GEN_1B_SWITCH)
IniBuilds_A350_Eng_2_Gen_A_GEN_Switch_Toggle#(L:INI_GEN_1B_SWITCH) ! (>L:INI_GEN_1B_SWITCH)
IniBuilds_A350_Eng_2_Gen_A_IDG_Switch_Off#0 (>L:INI_GEN2A_IDG_STATE)
IniBuilds_A350_Eng_2_Gen_A_IDG_Switch_On#1 (>L:INI_GEN2A_IDG_STATE)
IniBuilds_A350_Eng_2_Gen_A_IDG_Switch_Toggle#(L:INI_GEN2A_IDG_STATE) ! (>L:INI_GEN2A_IDG_STATE)
IniBuilds_A350_Eng_2_Gen_B_GEN_Switch_Off#0 (>L:INI_GEN_2B_SWITCH)
IniBuilds_A350_Eng_2_Gen_B_GEN_Switch_On#1 (>L:INI_GEN_2B_SWITCH)
IniBuilds_A350_Eng_2_Gen_B_GEN_Switch_Toggle#(L:INI_GEN_2B_SWITCH) ! (>L:INI_GEN_2B_SWITCH)
IniBuilds_A350_Eng_2_Gen_B_IDG_Switch_Off#0 (>L:INI_GEN2B_IDG_STATE)
IniBuilds_A350_Eng_2_Gen_B_IDG_Switch_On#1 (>L:INI_GEN2B_IDG_STATE)
IniBuilds_A350_Eng_2_Gen_B_IDG_Switch_Toggle#(L:INI_GEN2B_IDG_STATE) ! (>L:INI_GEN2B_IDG_STATE)
IniBuilds_A350_Ext_Pwr_A_Switch_Off#0 (>L:INI_GEN_EXT_A_ONLINE)
IniBuilds_A350_Ext_Pwr_A_Switch_On#1 (>L:INI_GEN_EXT_A_ONLINE)
IniBuilds_A350_Ext_Pwr_B_Switch_Off#0 (>L:INI_GEN_EXT_B_ONLINE)
IniBuilds_A350_Ext_Pwr_B_Switch_On#1 (>L:INI_GEN_EXT_B_ONLINE)
IniBuilds_A350_Galley_Switch_Off#0 (>L:INI_GALLEY_CAB)
IniBuilds_A350_Galley_Switch_On#1 (>L:INI_GALLEY_CAB)
IniBuilds_A350_Galley_Switch_Toggle#(L:INI_GALLEY_CAB) ! (>L:INI_GALLEY_CAB)
IniBuilds_A350_Pax_Sys_Switch_Off#0 (>L:INI_ELEC_PAX_SYS)
IniBuilds_A350_Pax_Sys_Switch_On#1 (>L:INI_ELEC_PAX_SYS)
IniBuilds_A350_Pax_Sys_Switch_Toggle#(L:INI_ELEC_PAX_SYS) ! (>L:INI_ELEC_PAX_SYS)
IniBuilds_A350_RAT_Button#1 (>L:INI_RAT1_SWITCH)
IniBuilds_A350_Side_Isol_Switch_Off#0 (>L:INI_ELEC_SIDE_ISOL)
IniBuilds_A350_Side_Isol_Switch_On#1 (>L:INI_ELEC_SIDE_ISOL)
IniBuilds_A350_Side_Isol_Switch_Toggle#(L:INI_ELEC_SIDE_ISOL) ! (>L:INI_ELEC_SIDE_ISOL)
//IniBuilds/A350 (2020)/Engine
ENG_MODE_KNOB_IGNSTART#2 (>L:INI_IGNITION_KNOB)
ENG_MODE_KNOB_NORM#1 (>L:INI_IGNITION_KNOB)
//IniBuilds/A350 (2020)/Engines
IniBuilds_A350_Engine_1_Man_Start_Off#0 (>L:INI_ENG1_MAN_START)
IniBuilds_A350_Engine_1_Man_Start_On#0 (>L:INI_ENG1_MAN_START)
IniBuilds_A350_Engine_1_Man_Start_Toggle#(L:INI_ENG1_MAN_START) ! (>L:INI_ENG1_MAN_START)
IniBuilds_A350_Engine_2_Man_Start_Off#0 (>L:INI_ENG2_MAN_START)
IniBuilds_A350_Engine_2_Man_Start_On#1 (>L:INI_ENG2_MAN_START)
IniBuilds_A350_Engine_2_Man_Start_Toggle#(L:INI_ENG2_MAN_START) ! (>L:INI_ENG2_MAN_START)
IniBuilds_A350_Engine_Ignition_Crank#0 (>L:INI_IGNITION_KNOB)
//IniBuilds/A350 (2020)/Fire
A350_Fire_test_press#1 (>L:INI_FIRE_TEST)
A350_Fire_test_release#0 (>L:INI_FIRE_TEST)
IniBuilds_A350_APU_Agent_Discharge_Off#0 (>L:INI_FIRE_APU_AGENT_DISCH)
IniBuilds_A350_APU_Agent_Discharge_On#1 (>L:INI_FIRE_APU_AGENT_DISCH)
IniBuilds_A350_APU_Agent_Discharge_Toggle#(L:INI_FIRE_APU_AGENT_DISCH) ! (>L:INI_FIRE_APU_AGENT_DISCH)
IniBuilds_A350_APU_Fire_Handle_Off#0 (>L:INI_FIRE_APU_FIRE_PB)
IniBuilds_A350_APU_Fire_Handle_On#1 (>L:INI_FIRE_APU_FIRE_PB)
IniBuilds_A350_APU_Fire_Handle_Toggle#(L:INI_FIRE_APU_FIRE_PB) ! (>L:INI_FIRE_APU_FIRE_PB)
IniBuilds_A350_Cargo_Aft_Agent_Discharge_Off#0 (>L:INI_CARGO_SMOKE_AGENT_TO_AFT)
IniBuilds_A350_Cargo_Aft_Agent_Discharge_On#1 (>L:INI_CARGO_SMOKE_AGENT_TO_AFT)
IniBuilds_A350_Cargo_Aft_Agent_Discharge_Toggle#(L:INI_CARGO_SMOKE_AGENT_TO_AFT) ! (>L:INI_CARGO_SMOKE_AGENT_TO_AFT)
IniBuilds_A350_Cargo_Fwd_Agent_Discharge_Off#0 (>L:INI_CARGO_SMOKE_AGENT_TO_FWD)
IniBuilds_A350_Cargo_Fwd_Agent_Discharge_On#1 (>L:INI_CARGO_SMOKE_AGENT_TO_FWD)
IniBuilds_A350_Cargo_Fwd_Agent_Discharge_Toggle#(L:INI_CARGO_SMOKE_AGENT_TO_FWD) ! (>L:INI_CARGO_SMOKE_AGENT_TO_FWD)
IniBuilds_A350_Eng_1_Agent_1_Discharge_Off#0 (>L:INI_FIRE_ENG_1_AGENT_1_DISCH)
IniBuilds_A350_Eng_1_Agent_1_Discharge_On#1 (>L:INI_FIRE_ENG_1_AGENT_1_DISCH)
IniBuilds_A350_Eng_1_Agent_1_Discharge_Toggle#(L:INI_FIRE_ENG_1_AGENT_1_DISCH) ! (>L:INI_FIRE_ENG_1_AGENT_1_DISCH)
IniBuilds_A350_Eng_1_Agent_2_Discharge_Off#0 (>L:INI_FIRE_ENG_1_AGENT_2_DISCH)
IniBuilds_A350_Eng_1_Agent_2_Discharge_On#1 (>L:INI_FIRE_ENG_1_AGENT_2_DISCH)
IniBuilds_A350_Eng_1_Agent_2_Discharge_Toggle#(L:INI_FIRE_ENG_1_AGENT_2_DISCH) ! (>L:INI_FIRE_ENG_1_AGENT_2_DISCH)
IniBuilds_A350_Eng_1_Fire_Handle_Off#0 (>L:INI_FIRE_ENG_1_FIRE_PB)
IniBuilds_A350_Eng_1_Fire_Handle_On#1 (>L:INI_FIRE_ENG_1_FIRE_PB)
IniBuilds_A350_Eng_1_Fire_Handle_Toggle#(L:INI_FIRE_ENG_1_FIRE_PB) ! (>L:INI_FIRE_ENG_1_FIRE_PB)
IniBuilds_A350_Eng_2_Agent_1_Discharge_Off#0 (>L:INI_FIRE_ENG_2_AGENT_1_DISCH)
IniBuilds_A350_Eng_2_Agent_1_Discharge_On#1 (>L:INI_FIRE_ENG_2_AGENT_1_DISCH)
IniBuilds_A350_Eng_2_Agent_1_Discharge_Toggle#(L:INI_FIRE_ENG_2_AGENT_1_DISCH) ! (>L:INI_FIRE_ENG_2_AGENT_1_DISCH)
IniBuilds_A350_Eng_2_Agent_2_Discharge_Off#0 (>L:INI_FIRE_ENG_2_AGENT_2_DISCH)
IniBuilds_A350_Eng_2_Agent_2_Discharge_On#1 (>L:INI_FIRE_ENG_2_AGENT_2_DISCH)
IniBuilds_A350_Eng_2_Agent_2_Discharge_Toggle#(L:INI_FIRE_ENG_2_AGENT_2_DISCH) ! (>L:INI_FIRE_ENG_2_AGENT_2_DISCH)
IniBuilds_A350_Eng_2_Fire_Handle_Off#0 (>L:INI_FIRE_ENG_2_FIRE_PB)
IniBuilds_A350_Eng_2_Fire_Handle_On#1 (>L:INI_FIRE_ENG_2_FIRE_PB)
IniBuilds_A350_Eng_2_Fire_Handle_Toggle#(L:INI_FIRE_ENG_2_FIRE_PB) ! (>L:INI_FIRE_ENG_2_FIRE_PB)
IniBuilds_A350_Fire_Test_Toggle#(L:INI_FIRE_TEST) ! (>L:INI_FIRE_TEST)
//IniBuilds/A350 (2020)/Flight Controls
IniBuilds_A350_PRIM1_On#1 (>L:INI_PRIM1_STATUS)
IniBuilds_A350_PRIM1_Ovrd#0 (>L:INI_PRIM1_STATUS)
IniBuilds_A350_PRIM1_Toggle#(L:INI_PRIM1_STATUS) ! (>L:INI_PRIM1_STATUS)
IniBuilds_A350_PRIM2_On#1 (>L:INI_PRIM2_STATUS)
IniBuilds_A350_PRIM2_Ovrd#0 (>L:INI_PRIM2_STATUS)
IniBuilds_A350_PRIM2_Toggle#(L:INI_PRIM2_STATUS) ! (>L:INI_PRIM2_STATUS)
IniBuilds_A350_PRIM3_On#1 (>L:INI_PRIM3_STATUS)
IniBuilds_A350_PRIM3_Ovrd#0 (>L:INI_PRIM3_STATUS)
IniBuilds_A350_PRIM3_Toggle#(L:INI_PRIM3_STATUS) ! (>L:INI_PRIM3_STATUS)
IniBuilds_A350_Pitch_Trim_Left_Switch_Down#2 (>L:INI_PITCH_TRIM_LEFT)
IniBuilds_A350_Pitch_Trim_Left_Switch_Release#1 (>L:INI_PITCH_TRIM_LEFT)
IniBuilds_A350_Pitch_Trim_Left_Switch_Up#0 (>L:INI_PITCH_TRIM_LEFT)
IniBuilds_A350_Pitch_Trim_Right_Switch_Down#2 (>L:INI_PITCH_TRIM_RIGHT)
IniBuilds_A350_Pitch_Trim_Right_Switch_Release#1 (>L:INI_PITCH_TRIM_RIGHT)
IniBuilds_A350_Pitch_Trim_Right_Switch_Up#0 (>L:INI_PITCH_TRIM_RIGHT)
IniBuilds_A350_Rudder_Trim_Knob_Left#2 (>L:XMLVAR_RUDDERTRIM_SWITCH_1)
IniBuilds_A350_Rudder_Trim_Knob_Release#1 (>L:XMLVAR_RUDDERTRIM_SWITCH_1)
IniBuilds_A350_Rudder_Trim_Knob_Right#0 (>L:XMLVAR_RUDDERTRIM_SWITCH_1)
IniBuilds_A350_Rudder_Trim_Reset_Button#'INI.RUDDER_TRIM_RESET' (>F:KeyEvent)
IniBuilds_A350_SEC1_On#1 (>L:INI_SEC1_STATUS)
IniBuilds_A350_SEC1_Ovrd#0 (>L:INI_SEC1_STATUS)
IniBuilds_A350_SEC1_Toggle#(L:INI_SEC1_STATUS) ! (>L:INI_SEC1_STATUS)
IniBuilds_A350_SEC2_On#1 (>L:INI_SEC2_STATUS)
IniBuilds_A350_SEC2_Ovrd#0 (>L:INI_SEC2_STATUS)
IniBuilds_A350_SEC2_Toggle#(L:INI_SEC2_STATUS) ! (>L:INI_SEC2_STATUS)
IniBuilds_A350_Spoilers_Arm#INI.SPOILERS_ARM_ON' (>F:KeyEvent)
IniBuilds_A350_Spoilers_Disarm#INI.SPOILERS_ARM_OFF' (>F:KeyEvent)
//IniBuilds/A350 (2020)/Flight Instruments
IniBuilds_A350_DU_Master_Brightness_Dec#1 (>L:INI_CKPT_LT_DU_MASTER_BRT_DEC)
IniBuilds_A350_DU_Master_Brightness_Inc#1 (>L:INI_CKPT_LT_DU_MASTER_BRT_INC)
IniBuilds_A350_DU_Master_Brightness_Inhibit#0 (>L:INI_CKPT_LT_DU_MASTER_INHIBIT)
IniBuilds_A350_DU_Master_Brightness_On#1 (>L:INI_CKPT_LT_DU_MASTER_INHIBIT)
//IniBuilds/A350 (2020)/Fuel
A350_Ovhd_Center_TK_Pump_L_Toggle#(L:INI_CENTER_TANK_LEFT) ! (>L:INI_CENTER_TANK_LEFT)
A350_Ovhd_Center_TK_Pump_R_Toggle#(L:INI_CENTER_TANK_RIGHT) ! (>L:INI_CENTER_TANK_RIGHT)
A350_Ovhd_MAIN_Left_TK_Pump_Toggle#(L:INI_OUTER_TANK_LEFT) ! (>L:INI_OUTER_TANK_LEFT)
A350_Ovhd_MAIN_Right_TK_Pump_Toggle#(L:INI_INNER_TANK_RIGHT) ! (>L:INI_INNER_TANK_RIGHT)
A350_Ovhd_STBY_Left_TK_Pump_Toggle#(L:INI_INNER_TANK_LEFT) ! (>L:INI_INNER_TANK_LEFT)
A350_Ovhd_STBY_Right_TK_Pump_Toggle#(L:INI_OUTER_TANK_RIGHT) ! (>L:INI_OUTER_TANK_RIGHT)
ENG1_Fuel_Cutoff_Lever_OFF#0 (>L:INI_MIXTURE_RATIO1_HANDLE)
ENG1_Fuel_Cutoff_Lever_ON#1 (>L:INI_MIXTURE_RATIO1_HANDLE)
ENG1_Fuel_Cutoff_Lever_Toggle#(L:INI_MIXTURE_RATIO1_HANDLE) ! (>L:INI_MIXTURE_RATIO1_HANDLE)
ENG2_Fuel_Cutoff_Lever_OFF#0 (>L:INI_MIXTURE_RATIO2_HANDLE)
ENG2_Fuel_Cutoff_Lever_ON#1 (>L:INI_MIXTURE_RATIO2_HANDLE)
ENG2_Fuel_Cutoff_Lever_Toggle#(L:INI_MIXTURE_RATIO2_HANDLE) ! (>L:INI_MIXTURE_RATIO2_HANDLE)
IniBuilds_A350_Center_Left_Fuel_Pump_Off#0 (>L:INI_CENTER_TANK_LEFT)
IniBuilds_A350_Center_Left_Fuel_Pump_On#1 (>L:INI_CENTER_TANK_LEFT)
IniBuilds_A350_Center_Right_Fuel_Pump_Off#0 (>L:INI_CENTER_TANK_RIGHT)
IniBuilds_A350_Center_Right_Fuel_Pump_On#1 (>L:INI_CENTER_TANK_RIGHT)
IniBuilds_A350_Center_Tank_Feed_Man_Off#0 (>L:INI_FUEL_CTR_TANK_FEED_MAN)
IniBuilds_A350_Center_Tank_Feed_Man_On#1 (>L:INI_FUEL_CTR_TANK_FEED_MAN)
IniBuilds_A350_Center_Tank_Feed_Man_Toggle#(L:INI_FUEL_CTR_TANK_FEED_MAN) ! (>L:INI_FUEL_CTR_TANK_FEED_MAN)
IniBuilds_A350_Fuel_Crossfeed_1_Off#0 (>L:INI_XFEED_TRANSFER_ON)
IniBuilds_A350_Fuel_Crossfeed_1_On#1 (>L:INI_XFEED_TRANSFER_ON)
IniBuilds_A350_Fuel_Crossfeed_1_Toggle#(L:INI_XFEED_TRANSFER_ON) ! (>L:INI_XFEED_TRANSFER_ON)
IniBuilds_A350_Fuel_Crossfeed_2_Off#0 (>L:INI_XFEED_TRANSFER2_ON)
IniBuilds_A350_Fuel_Crossfeed_2_On#1 (>L:INI_XFEED_TRANSFER2_ON)
IniBuilds_A350_Fuel_Crossfeed_2_Toggle#(L:INI_XFEED_TRANSFER2_ON) ! (>L:INI_XFEED_TRANSFER2_ON)
IniBuilds_A350_Left_Main_Fuel_Pump_Off#0 (>L:INI_OUTER_TANK_LEFT)
IniBuilds_A350_Left_Main_Fuel_Pump_On#1 (>L:INI_OUTER_TANK_LEFT)
IniBuilds_A350_Left_Stby_Fuel_Pump_Off#0 (>L:INI_INNER_TANK_LEFT)
IniBuilds_A350_Left_Stby_Fuel_Pump_On#1 (>L:INI_INNER_TANK_LEFT)
IniBuilds_A350_Left_Tank_Transfer_Off#0 (>L:INI_FUEL_TANK_TRANSFER_LEFT)
IniBuilds_A350_Left_Tank_Transfer_On#1 (>L:INI_FUEL_TANK_TRANSFER_LEFT)
IniBuilds_A350_Left_Tank_Transfer_Toggle#(L:INI_FUEL_TANK_TRANSFER_LEFT) ! (>L:INI_FUEL_TANK_TRANSFER_LEFT)
IniBuilds_A350_Right_Main_Fuel_Pump_Off#0 (>L:INI_OUTER_TANK_RIGHT)
IniBuilds_A350_Right_Main_Fuel_Pump_On#1 (>L:INI_OUTER_TANK_RIGHT)
IniBuilds_A350_Right_Stby_Fuel_Pump_Off#0 (>L:INI_INNER_TANK_RIGHT)
IniBuilds_A350_Right_Stby_Fuel_Pump_On#1 (>L:INI_INNER_TANK_RIGHT)
IniBuilds_A350_Right_Tank_Transfer_Off#0 (>L:INI_FUEL_TANK_TRANSFER_RIGHT)
IniBuilds_A350_Right_Tank_Transfer_On#1 (>L:INI_FUEL_TANK_TRANSFER_RIGHT)
IniBuilds_A350_Right_Tank_Transfer_Toggle#(L:INI_FUEL_TANK_TRANSFER_RIGHT) ! (>L:INI_FUEL_TANK_TRANSFER_RIGHT)
//IniBuilds/A350 (2020)/Gear
A350_ANTI_SKID_Switch_OFF#0 (>L:INI_ANTISKID_SWITCH)
A350_ANTI_SKID_Switch_ON#1 (>L:INI_ANTISKID_SWITCH)
A350_AUTOBRAKE_ARM_Button_Press#1 (>L:INI_AUTOBRAKE_ARMED_CMD)
A350_AUTOBRAKE_BRAKE_ACTION_MODE_Selector_Toggle#(L:INI_RWY_COND_BRK_ACTION_MODE_SELECTOR) ! (>L:INI_RWY_COND_BRK_ACTION_MODE_SELECTOR)
A350_AUTOBRAKE_BRAKE_ACTION_SELECTOR_DEC#1 (>L:INI_RWY_COND_BRK_ACTION_SELECTOR_DEC)
A350_AUTOBRAKE_BRAKE_ACTION_SELECTOR_INC#1 (>L:INI_RWY_COND_BRK_ACTION_SELECTOR_INC) 
A350_BRAKE_FAN_Button_Press#(L:INI_BRAKE_FAN_ON) ! (>L:INI_BRAKE_FAN_ON)
Parking_Brake_Toggle#1 (>K:PARKING_BRAKES)
Toogle_Tiller_Pedal_Disconnect_Captain#(L:INI_TILLER_DISC) ! (>L:INI_TILLER_DISC)
//IniBuilds/A350 (2020)/Hydraulics
IniBuilds_A350_ACCU_ReInflate_Button_Press#1 (>L:INI_ACCU_REINFLATE)
IniBuilds_A350_ACCU_ReInflate_Button_Release#0 (>L:INI_ACCU_REINFLATE)
IniBuilds_A350_Eng_1_Green_Hydraulic_Pump_Off#0 (>L:INI_HYD_ENG1_GREEN_STATE)
IniBuilds_A350_Eng_1_Green_Hydraulic_Pump_On#1 (>L:INI_HYD_ENG1_GREEN_STATE)
IniBuilds_A350_Eng_1_Green_Hydraulic_Pump_Toggle#(L:INI_HYD_ENG1_GREEN_STATE) ! (>L:INI_HYD_ENG1_GREEN_STATE)
IniBuilds_A350_Eng_1_Green_Hydraulic_Supply_Off#0 (>L:INI_HYD_SUPPLY_ENG_1_GREEN)
IniBuilds_A350_Eng_1_Green_Hydraulic_Supply_On#1 (>L:INI_HYD_SUPPLY_ENG_1_GREEN)
IniBuilds_A350_Eng_1_Green_Hydraulic_Supply_Toggle#(L:INI_HYD_SUPPLY_ENG_1_GREEN) ! (>L:INI_HYD_SUPPLY_ENG_1_GREEN)
IniBuilds_A350_Eng_1_Yellow_Hydraulic_Pump_Off#0 (>L:INI_HYD_ENG1_YELLOW_STATE)
IniBuilds_A350_Eng_1_Yellow_Hydraulic_Pump_On#1 (>L:INI_HYD_ENG1_YELLOW_STATE)
IniBuilds_A350_Eng_1_Yellow_Hydraulic_Pump_Toggle#(L:INI_HYD_ENG1_YELLOW_STATE) ! (>L:INI_HYD_ENG1_YELLOW_STATE)
IniBuilds_A350_Eng_1_Yellow_Hydraulic_Supply_Off#0 (>L:INI_HYD_SUPPLY_ENG_1_YELLOW)
IniBuilds_A350_Eng_1_Yellow_Hydraulic_Supply_On#1 (>L:INI_HYD_SUPPLY_ENG_1_YELLOW)
IniBuilds_A350_Eng_1_Yellow_Hydraulic_Supply_Toggle#(L:INI_HYD_SUPPLY_ENG_1_YELLOW) ! (>L:INI_HYD_SUPPLY_ENG_1_YELLOW)
IniBuilds_A350_Eng_2_Green_Hydraulic_Pump_Off#0 (>L:INI_HYD_ENG2_GREEN_STATE)
IniBuilds_A350_Eng_2_Green_Hydraulic_Pump_On#1 (>L:INI_HYD_ENG2_GREEN_STATE)
IniBuilds_A350_Eng_2_Green_Hydraulic_Pump_Toggle#(L:INI_HYD_ENG2_GREEN_STATE) ! (>L:INI_HYD_ENG2_GREEN_STATE)
IniBuilds_A350_Eng_2_Green_Hydraulic_Supply_Off#0 (>L:INI_HYD_SUPPLY_ENG_2_GREEN)
IniBuilds_A350_Eng_2_Green_Hydraulic_Supply_On#1 (>L:INI_HYD_SUPPLY_ENG_2_GREEN)
IniBuilds_A350_Eng_2_Green_Hydraulic_Supply_Toggle#(L:INI_HYD_SUPPLY_ENG_2_GREEN) ! (>L:INI_HYD_SUPPLY_ENG_2_GREEN)
IniBuilds_A350_Eng_2_Yellow_Hydraulic_Pump_Off#0 (>L:INI_HYD_ENG2_YELLOW_STATE)
IniBuilds_A350_Eng_2_Yellow_Hydraulic_Pump_On#1 (>L:INI_HYD_ENG2_YELLOW_STATE)
IniBuilds_A350_Eng_2_Yellow_Hydraulic_Pump_Toggle#(L:INI_HYD_ENG2_YELLOW_STATE) ! (>L:INI_HYD_ENG2_YELLOW_STATE)
IniBuilds_A350_Eng_2_Yellow_Hydraulic_Supply_Off#0 (>L:INI_HYD_SUPPLY_ENG_2_YELLOW)
IniBuilds_A350_Eng_2_Yellow_Hydraulic_Supply_On#1 (>L:INI_HYD_SUPPLY_ENG_2_YELLOW)
IniBuilds_A350_Eng_2_Yellow_Hydraulic_Supply_Toggle#(L:INI_HYD_SUPPLY_ENG_2_YELLOW) ! (>L:INI_HYD_SUPPLY_ENG_2_YELLOW)
IniBuilds_A350_Hyd_Elec_1_Override_Auto#0 (>L:INI_HYD_ELEC1_OVERRIDE)
IniBuilds_A350_Hyd_Elec_1_Override_On#1 (>L:INI_HYD_ELEC1_OVERRIDE)
IniBuilds_A350_Hyd_Elec_1_Override_Toggle#(L:INI_HYD_ELEC1_OVERRIDE) ! (>L:INI_HYD_ELEC1_OVERRIDE)
IniBuilds_A350_Hyd_Elec_1_Pump_Auto#0 (>L:INI_HYD_ELEC1_STATE)
IniBuilds_A350_Hyd_Elec_1_Pump_Off#1 (>L:INI_HYD_ELEC1_STATE)
IniBuilds_A350_Hyd_Elec_1_Pump_Toggle#(L:INI_HYD_ELEC1_STATE) ! (>L:INI_HYD_ELEC1_STATE)
IniBuilds_A350_Hyd_Elec_2_Override_Auto#0 (>L:INI_HYD_ELEC2_OVERRIDE)
IniBuilds_A350_Hyd_Elec_2_Override_On#1 (>L:INI_HYD_ELEC2_OVERRIDE)
IniBuilds_A350_Hyd_Elec_2_Override_Toggle#(L:INI_HYD_ELEC2_OVERRIDE) ! (>L:INI_HYD_ELEC2_OVERRIDE)
IniBuilds_A350_Hyd_Elec_2_Pump_Auto#0 (>L:INI_HYD_ELEC2_STATE)
IniBuilds_A350_Hyd_Elec_2_Pump_Off#1 (>L:INI_HYD_ELEC2_STATE)
IniBuilds_A350_Hyd_Elec_2_Pump_Toggle#(L:INI_HYD_ELEC2_STATE) ! (>L:INI_HYD_ELEC2_STATE)
//IniBuilds/A350 (2020)/Lights
BEACON_Light_OFF#0 (>L:INI_LIGHTS_BEACON)
BEACON_Light_ON#1 (>L:INI_LIGHTS_BEACON)
FCU_DISPLAY_BRIGHTNESS_DEC#(L:INI_FCU_DISPLAY_BRT) 10 - 0 max (>L:INI_FCU_DISPLAY_BRT)
FCU_DISPLAY_BRIGHTNESS_INC#(L:INI_FCU_DISPLAY_BRT) 10 + 100 min (>L:INI_FCU_DISPLAY_BRT)
FCU_INTEG_LIGHT_INC#(L:INI_FCU_INTEG_BRT) 10 + 100 min (>L:INI_FCU_INTEG_BRT)
FCU_INTG_LIGHT_DEC#(L:INI_FCU_INTEG_BRT) 10 - 0 max (>L:INI_FCU_INTEG_BRT)
IniBuilds_A350_Ann_Lt_Switch_Brt#1 (>L:INI_ANNLT_SWITCH)
IniBuilds_A350_Ann_Lt_Switch_Dim#0 (>L:INI_ANNLT_SWITCH)
IniBuilds_A350_Ann_Lt_Switch_Test#2 (>L:INI_ANNLT_SWITCH)
IniBuilds_A350_Dome_Light_Dec#(L:INI_CKPT_LT_DOME) 5 - 0 max (>L:INI_CKPT_LT_DOME)
IniBuilds_A350_Dome_Light_Inc#(L:INI_CKPT_LT_DOME) 5 + 100 min (>L:INI_CKPT_LT_DOME)
IniBuilds_A350_Flood_Light_Dec#(L:INI_CKPT_LT_FLOOD) 5 - 0 max (>L:INI_CKPT_LT_FLOOD)
IniBuilds_A350_Flood_Light_Inc#(L:INI_CKPT_LT_FLOOD) 5 + 100 min (>L:INI_CKPT_LT_FLOOD)
IniBuilds_A350_Integ_Light_Dec#(L:INI_CKPT_LT_INTEG) 5 - 0 max (>L:INI_CKPT_LT_INTEG)
IniBuilds_A350_Integ_Light_Inc#(L:INI_CKPT_LT_INTEG) 5 + 100 min (>L:INI_CKPT_LT_INTEG)
IniBuilds_A350_Stby_Compass_Light_Switch_Ice_Ind#1 (>L:INI_LIGHTS_STBY_COMPASS)
IniBuilds_A350_Stby_Compass_Light_Switch_Off#0 (>L:INI_LIGHTS_STBY_COMPASS)
IniBuilds_A350_Stby_Compass_Light_Switch_Stby_Compass___Eye_Ref#2 (>L:INI_LIGHTS_STBY_COMPASS)
LANDING_Light_OFF#0 (>L:INI_LIGHTS_LANDING)
LANDING_Light_ON#1 (>L:INI_LIGHTS_LANDING)
LOGO_Light_AUTO#1 (>L:INI_LIGHTS_LOGO)
LOGO_Light_OFF#0 (>L:INI_LIGHTS_LOGO)
LOGO_Light_ON#2 (>L:INI_LIGHTS_LOGO)
NAV_Light_1#2 (>L:INI_LIGHTS_NAV)
NAV_Light_2#1 (>L:INI_LIGHTS_NAV)
NAV_Light_OFF#0 (>L:INI_LIGHTS_NAV)
NOSE_Light_OFF#0 (>L:INI_LIGHTS_NOSE)
NOSE_Light_T_O_#2 (>L:INI_LIGHTS_NOSE)
NOSE_Light_Taxi#1 (>L:INI_LIGHTS_NOSE)
STROBE_Light_AUTO#1 (>L:INI_LIGHTS_STROBE)
STROBE_Light_OFF#0 (>L:INI_LIGHTS_STROBE)
STROBE_Light_ON#2 (>L:INI_LIGHTS_STROBE)
WING_Light_OFF#0 (>L:INI_LIGHTS_WING)
WING_Light_ON#1 (>L:INI_LIGHTS_WING)
//IniBuilds/A350 (2020)/MCDU
A350_CDU_1_BTN__-#1 (>L:INI_MCDU1_PLUS)
A350_CDU_1_BTN_0#1 (>L:INI_MCDU1_0)
A350_CDU_1_BTN_1#1 (>L:INI_MCDU1_1)
A350_CDU_1_BTN_2#1 (>L:INI_MCDU1_2)
A350_CDU_1_BTN_3#1 (>L:INI_MCDU1_3)
A350_CDU_1_BTN_4#1 (>L:INI_MCDU1_4)
A350_CDU_1_BTN_5#1 (>L:INI_MCDU1_5)
A350_CDU_1_BTN_6#1 (>L:INI_MCDU1_6)
A350_CDU_1_BTN_7#1 (>L:INI_MCDU1_7)
A350_CDU_1_BTN_8#1 (>L:INI_MCDU1_8)
A350_CDU_1_BTN_9#1 (>L:INI_MCDU1_9)
A350_CDU_1_BTN_A#1 (>L:INI_MCDU1_A)
A350_CDU_1_BTN_ATC#1 (>L:INI_MCDU1_ATC)
A350_CDU_1_BTN_B#1 (>L:INI_MCDU1_B)
A350_CDU_1_BTN_C#1 (>L:INI_MCDU1_C)
A350_CDU_1_BTN_CLR#1 (>L:INI_MCDU1_CLR)
A350_CDU_1_BTN_CL_MENU#1 (>L:INI_MCDU1_CL_MENU)
A350_CDU_1_BTN_D#1 (>L:INI_MCDU1_D)
A350_CDU_1_BTN_DECIMAL#1 (>L:INI_MCDU1_DECIMAL)
A350_CDU_1_BTN_DIR#1 (>L:INI_MCDU1_DIR_TO)
A350_CDU_1_BTN_DOWN#1 (>L:INI_MCDU1_DOWN)
A350_CDU_1_BTN_E#1 (>L:INI_MCDU1_E)
A350_CDU_1_BTN_ENTER#1 (>L:INI_MCDU1_ENTER)
A350_CDU_1_BTN_ESC#1 (>L:INI_MCDU1_ESC)
A350_CDU_1_BTN_F#1 (>L:INI_MCDU1_F)
A350_CDU_1_BTN_F-PLAN#1 (>L:INI_MCDU1_FPLAN)
A350_CDU_1_BTN_G#1 (>L:INI_MCDU1_G)
A350_CDU_1_BTN_H#1 (>L:INI_MCDU1_H)
A350_CDU_1_BTN_I#1 (>L:INI_MCDU1_I)
A350_CDU_1_BTN_INIT#1 (>L:INI_MCDU1_INIT)
A350_CDU_1_BTN_J#1 (>L:INI_MCDU1_J)
A350_CDU_1_BTN_K#1 (>L:INI_MCDU1_K)
A350_CDU_1_BTN_L#1 (>L:INI_MCDU1_L)
A350_CDU_1_BTN_LEFT#1 (>L:INI_MCDU1_LEFT)
A350_CDU_1_BTN_M#1 (>L:INI_MCDU1_M)
A350_CDU_1_BTN_N#1 (>L:INI_MCDU1_N)
A350_CDU_1_BTN_NAV_AID#1 (>L:INI_MCDU1_RADNAV)
A350_CDU_1_BTN_NOTEPAD#1 (>L:INI_MCDU1_NOTEPAD)
A350_CDU_1_BTN_O#1 (>L:INI_MCDU1_O)
A350_CDU_1_BTN_P#1 (>L:INI_MCDU1_P)
A350_CDU_1_BTN_PERF#1 (>L:INI_MCDU1_PERF)
A350_CDU_1_BTN_Q#1 (>L:INI_MCDU1_Q)
A350_CDU_1_BTN_R#1 (>L:INI_MCDU1_R)
A350_CDU_1_BTN_RIGHT#1 (>L:INI_MCDU1_RIGHT)
A350_CDU_1_BTN_S#1 (>L:INI_MCDU1_S)
A350_CDU_1_BTN_SEC_INDEX#1 (>L:INI_MCDU1_SEC)
A350_CDU_1_BTN_SLASH#1 (>L:INI_MCDU1_SLASH)
A350_CDU_1_BTN_SPACE#1 (>L:INI_MCDU1_SPACE)
A350_CDU_1_BTN_SURV#1 (>L:INI_MCDU1_SURV)
A350_CDU_1_BTN_T#1 (>L:INI_MCDU1_T)
A350_CDU_1_BTN_U#1 (>L:INI_MCDU1_U)
A350_CDU_1_BTN_UP#1 (>L:INI_MCDU1_UP)
A350_CDU_1_BTN_V#1 (>L:INI_MCDU1_V)
A350_CDU_1_BTN_W#1 (>L:INI_MCDU1_W)
A350_CDU_1_BTN_X#1 (>L:INI_MCDU1_X)
A350_CDU_1_BTN_Y#1 (>L:INI_MCDU1_Y)
A350_CDU_1_BTN_Z#1 (>L:INI_MCDU1_Z)
IniBuilds_A350_CPT_MCDU_BACKSPACE_Key#1 (>L:INI_MCDU1_BACKSPACE)
IniBuilds_A350_CPT_MCDU_DEST_Key#1 (>L:INI_MCDU1_DEST)
IniBuilds_A350_CPT_MCDU_MAILBOX_Key#1 (>L:INI_MCDU1_MAILBOX)
IniBuilds_A350_CPT_MCDU_MFD_Key#1 (>L:INI_MCDU1_MFD)
IniBuilds_A350_CPT_MCDU_ND_Key#1 (>L:INI_MCDU1_ND)
IniBuilds_A350_CPT_MCDU_OIS_Key#1 (>L:INI_MCDU1_OIS)
IniBuilds_A350_CPT_MCDU_Scroll_Wheel_Down#1 (>L:INI_MCDU1_SCROLL_DOWN)
IniBuilds_A350_CPT_MCDU_Scroll_Wheel_Up#1 (>L:INI_MCDU1_SCROLL_UP)
IniBuilds_A350_FO_KCCU___-_Key#1 (>L:INI_MCDU2_PLUS)
IniBuilds_A350_FO_KCCU_0_Key#1 (>L:INI_MCDU2_0)
IniBuilds_A350_FO_KCCU_1_Key#1 (>L:INI_MCDU2_1)
IniBuilds_A350_FO_KCCU_2_Key#1 (>L:INI_MCDU2_2)
IniBuilds_A350_FO_KCCU_3_Key#1 (>L:INI_MCDU2_3)
IniBuilds_A350_FO_KCCU_4_Key#1 (>L:INI_MCDU2_4)
IniBuilds_A350_FO_KCCU_5_Key#1 (>L:INI_MCDU2_5)
IniBuilds_A350_FO_KCCU_6_Key#1 (>L:INI_MCDU2_6)
IniBuilds_A350_FO_KCCU_7_Key#1 (>L:INI_MCDU2_7)
IniBuilds_A350_FO_KCCU_8_Key#1 (>L:INI_MCDU2_8)
IniBuilds_A350_FO_KCCU_9_Key#1 (>L:INI_MCDU2_9)
IniBuilds_A350_FO_KCCU_A_Key#1 (>L:INI_MCDU2_A)
IniBuilds_A350_FO_KCCU_ATC_COM_Key#1 (>L:INI_MCDU2_ATC)
IniBuilds_A350_FO_KCCU_B_Key#1 (>L:INI_MCDU2_B)
IniBuilds_A350_FO_KCCU_BACKSPACE_Key#1 (>L:INI_MCDU2_BACKSPACE)
IniBuilds_A350_FO_KCCU_C_Key#1 (>L:INI_MCDU2_C)
IniBuilds_A350_FO_KCCU_C_L_MENU_Key#1 (>L:INI_MCDU2_CL_MENU)
IniBuilds_A350_FO_KCCU_CLR_Key#1 (>L:INI_MCDU2_CLR)
IniBuilds_A350_FO_KCCU_D_Key#1 (>L:INI_MCDU2_D)
IniBuilds_A350_FO_KCCU_DECIMAL_Key#1 (>L:INI_MCDU2_DECIMAL)
IniBuilds_A350_FO_KCCU_DEST_Key#1 (>L:INI_MCDU2_DEST)
IniBuilds_A350_FO_KCCU_DIR_Key#1 (>L:INI_MCDU2_DIR_TO)
IniBuilds_A350_FO_KCCU_Down_Arrow_Key#1 (>L:INI_MCDU2_DOWN)
IniBuilds_A350_FO_KCCU_E_Key#1 (>L:INI_MCDU2_E)
IniBuilds_A350_FO_KCCU_ESC_Key#1 (>L:INI_MCDU2_ESC)
IniBuilds_A350_FO_KCCU_F_Key#1 (>L:INI_MCDU2_F)
IniBuilds_A350_FO_KCCU_F-PLN_Key#1 (>L:INI_MCDU2_FPLAN)
IniBuilds_A350_FO_KCCU_G_Key#1 (>L:INI_MCDU2_G)
IniBuilds_A350_FO_KCCU_H_Key#1 (>L:INI_MCDU2_H)
IniBuilds_A350_FO_KCCU_I_Key#1 (>L:INI_MCDU2_I)
IniBuilds_A350_FO_KCCU_INIT_Key#1 (>L:INI_MCDU2_INIT)
IniBuilds_A350_FO_KCCU_J_Key#1 (>L:INI_MCDU2_J)
IniBuilds_A350_FO_KCCU_K_Key#1 (>L:INI_MCDU2_K)
IniBuilds_A350_FO_KCCU_L_Key#1 (>L:INI_MCDU2_L)
IniBuilds_A350_FO_KCCU_Left_Arrow_Key#1 (>L:INI_MCDU2_LEFT)
IniBuilds_A350_FO_KCCU_M_Key#1 (>L:INI_MCDU2_M)
IniBuilds_A350_FO_KCCU_MAILBOX_Key#1 (>L:INI_MCDU2_MAILBOX)
IniBuilds_A350_FO_KCCU_MFD_Key#1 (>L:INI_MCDU2_MFD)
IniBuilds_A350_FO_KCCU_N_Key#1 (>L:INI_MCDU2_N)
IniBuilds_A350_FO_KCCU_NAV_AID_Key#1 (>L:INI_MCDU2_RADNAV)
IniBuilds_A350_FO_KCCU_ND_Key#1 (>L:INI_MCDU2_ND)
IniBuilds_A350_FO_KCCU_NOTEPAD_Key#1 (>L:INI_MCDU2_NOTEPAD)
IniBuilds_A350_FO_KCCU_O_Key#1 (>L:INI_MCDU2_O)
IniBuilds_A350_FO_KCCU_OIS_Key#1 (>L:INI_MCDU2_OIS)
IniBuilds_A350_FO_KCCU_P_Key#1 (>L:INI_MCDU2_P)
IniBuilds_A350_FO_KCCU_PERF_Key#1 (>L:INI_MCDU2_PERF)
IniBuilds_A350_FO_KCCU_Q_Key#1 (>L:INI_MCDU2_Q)
IniBuilds_A350_FO_KCCU_R_Key#1 (>L:INI_MCDU2_R)
IniBuilds_A350_FO_KCCU_Right_Arrow_Key#1 (>L:INI_MCDU2_RIGHT)
IniBuilds_A350_FO_KCCU_S_Key#1 (>L:INI_MCDU2_S)
IniBuilds_A350_FO_KCCU_SEC_Key#1 (>L:INI_MCDU2_SEC)
IniBuilds_A350_FO_KCCU_SLASH_Key#1 (>L:INI_MCDU2_SLASH)
IniBuilds_A350_FO_KCCU_SPACE_Key#1 (>L:INI_MCDU2_SPACE)
IniBuilds_A350_FO_KCCU_SURV_Key#1 (>L:INI_MCDU2_SURV)
IniBuilds_A350_FO_KCCU_Scroll_Wheel_Down#1 (>L:INI_MCDU2_SCROLL_DOWN)
IniBuilds_A350_FO_KCCU_Scroll_Wheel_Up#1 (>L:INI_MCDU2_SCROLL_UP)
IniBuilds_A350_FO_KCCU_T_Key#1 (>L:INI_MCDU2_T)
IniBuilds_A350_FO_KCCU_U_Key#1 (>L:INI_MCDU2_U)
IniBuilds_A350_FO_KCCU_Up_Arrow_Key#1 (>L:INI_MCDU2_UP)
IniBuilds_A350_FO_KCCU_V_Key#1 (>L:INI_MCDU2_V)
IniBuilds_A350_FO_KCCU_W_Key#1 (>L:INI_MCDU2_W)
IniBuilds_A350_FO_KCCU_X_Key#1 (>L:INI_MCDU2_X)
IniBuilds_A350_FO_KCCU_Y_Key#1 (>L:INI_MCDU2_Y)
IniBuilds_A350_FO_KCCU_Z_Key#1 (>L:INI_MCDU2_Z)
//IniBuilds/A350 (2020)/Miscellaneous
All_Calls_Press#1 (>L:INI_CALLS_ALL)
All_Calls_Release#0 (>L:INI_CALLS_ALL)
IniBuilds_A350_Calls_AFT_Button_Press#1 (>L:INI_CALLS_AFT)
IniBuilds_A350_Calls_AFT_Button_Release#0 (>L:INI_CALLS_AFT)
IniBuilds_A350_Calls_CAB_REST_Button_Press#1 (>L:INI_CALLS_CAB_REST)
IniBuilds_A350_Calls_CAB_REST_Button_Release#0 (>L:INI_CALLS_CAB_REST)
IniBuilds_A350_Calls_EXIT_Button_Press#1 (>L:INI_CALLS_EXIT)
IniBuilds_A350_Calls_EXIT_Button_Release#0 (>L:INI_CALLS_EXIT)
IniBuilds_A350_Calls_FLT_REST_Button_Press#1 (>L:INI_CALLS_FLT_REST)
IniBuilds_A350_Calls_FLT_REST_Button_Release#0 (>L:INI_CALLS_FLT_REST)
IniBuilds_A350_Calls_FWD_Button_Press#1 (>L:INI_CALLS_FWD)
IniBuilds_A350_Calls_FWD_Button_Release#0 (>L:INI_CALLS_FWD)
IniBuilds_A350_Calls_MID_Button_Press#1 (>L:INI_CALLS_MID)
IniBuilds_A350_Calls_MID_Button_Release#0 (>L:INI_CALLS_MID)
IniBuilds_A350_Calls_PURS_Button_Press#1 (>L:INI_CALLS_PURS)
IniBuilds_A350_Calls_PURS_Button_Release#0 (>L:INI_CALLS_PURS)
IniBuilds_A350_Gnd_Ctl_Off#0 (>L:INI_GND_CTL)
IniBuilds_A350_Gnd_Ctl_On#1 (>L:INI_GND_CTL)
IniBuilds_A350_Gnd_Ctl_Toggle#(L:INI_GND_CTL) ! (>L:INI_GND_CTL)
IniBuilds_A350_Gravity_Gear_Cover_Close#0 (>L:INI_GRAVITY_GEAR_COVER)
IniBuilds_A350_Gravity_Gear_Cover_Open#1 (>L:INI_GRAVITY_GEAR_COVER)
IniBuilds_A350_Gravity_Gear_Cover_Toggle#(L:INI_GRAVITY_GEAR_COVER) ! (>L:INI_GRAVITY_GEAR_COVER)
IniBuilds_A350_Gravity_Gear_Guard_1_Latch#0 (>L:INI_GRAVITY_GEAR_GUARD_1)
IniBuilds_A350_Gravity_Gear_Guard_1_Toggle#(L:INI_GRAVITY_GEAR_GUARD_1) ! (>L:INI_GRAVITY_GEAR_GUARD_1)
IniBuilds_A350_Gravity_Gear_Guard_1_Unlatch#1 (>L:INI_GRAVITY_GEAR_GUARD_1)
IniBuilds_A350_Gravity_Gear_Guard_2_Latch#0 (>L:INI_GRAVITY_GEAR_GUARD_2)
IniBuilds_A350_Gravity_Gear_Guard_2_Toggle#(L:INI_GRAVITY_GEAR_GUARD_2) ! (>L:INI_GRAVITY_GEAR_GUARD_2)
IniBuilds_A350_Gravity_Gear_Guard_2_Unlatch#1 (>L:INI_GRAVITY_GEAR_GUARD_2)
IniBuilds_A350_Gravity_Gear_Handle_Down#0 (>L:INI_GRAVITY_GEAR_HANDLE_STATE)
IniBuilds_A350_Gravity_Gear_Handle_Off#1 (>L:INI_GRAVITY_GEAR_HANDLE_STATE)
IniBuilds_A350_Gravity_Gear_Handle_Reset#2 (>L:INI_GRAVITY_GEAR_HANDLE_STATE)
IniBuilds_A350_Left_Wiper_Switch_FAST#5 (>L:INI_WIPER_SWITCH_LEFT)
IniBuilds_A350_Left_Wiper_Switch_INTMT_FAST#2 (>L:INI_WIPER_SWITCH_LEFT)
IniBuilds_A350_Left_Wiper_Switch_INTMT_MEDIUM#1 (>L:INI_WIPER_SWITCH_LEFT)
IniBuilds_A350_Left_Wiper_Switch_INTMT_SLOW#0 (>L:INI_WIPER_SWITCH_LEFT)
IniBuilds_A350_Left_Wiper_Switch_OFF#3 (>L:INI_WIPER_SWITCH_LEFT)
IniBuilds_A350_Left_Wiper_Switch_SLOW#4 (>L:INI_WIPER_SWITCH_LEFT)
IniBuilds_A350_OIS_Cab_Data_Switch_Off#0 (>L:INI_OIS_CAB_DATA)
IniBuilds_A350_OIS_Cab_Data_Switch_On#1 (>L:INI_OIS_CAB_DATA)
IniBuilds_A350_OIS_Cab_Data_Switch_Toggle#(L:INI_OIS_CAB_DATA) ! (>L:INI_OIS_CAB_DATA)
IniBuilds_A350_OIS_Gatelink_Switch_Off#0 (>L:INI_OIS_GATELINK)
IniBuilds_A350_OIS_Gatelink_Switch_On#1 (>L:INI_OIS_GATELINK)
IniBuilds_A350_OIS_Gatelink_Switch_Toggle#(L:INI_OIS_GATELINK) ! (>L:INI_OIS_GATELINK)
IniBuilds_A350_OIS_To_Avncs_Switch_Off#0 (>L:INI_OIS_TO_ANVCS)
IniBuilds_A350_OIS_To_Avncs_Switch_On#1 (>L:INI_OIS_TO_ANVCS)
IniBuilds_A350_OIS_To_Avncs_Switch_Toggle#(L:INI_OIS_TO_ANVCS) ! (>L:INI_OIS_TO_ANVCS)
IniBuilds_A350_Right_Wiper_Switch_FAST#5 (>L:INI_WIPER_SWITCH_RIGHT)
IniBuilds_A350_Right_Wiper_Switch_INTMT_FAST#2 (>L:INI_WIPER_SWITCH_RIGHT)
IniBuilds_A350_Right_Wiper_Switch_INTMT_MEDIUM#1 (>L:INI_WIPER_SWITCH_RIGHT)
IniBuilds_A350_Right_Wiper_Switch_INTMT_SLOW#0 (>L:INI_WIPER_SWITCH_RIGHT)
IniBuilds_A350_Right_Wiper_Switch_OFF#3 (>L:INI_WIPER_SWITCH_RIGHT)
IniBuilds_A350_Right_Wiper_Switch_SLOW#4 (>L:INI_WIPER_SWITCH_RIGHT)
IniBuilds_A350_SURV_Row_Rop_Switch_Off#0 (>L:INI_SURV_ROW_ROP)
IniBuilds_A350_SURV_Row_Rop_Switch_On#1 (>L:INI_SURV_ROW_ROP)
IniBuilds_A350_SURV_Row_Rop_Switch_Toggle#(L:INI_SURV_ROW_ROP) ! (>L:INI_SURV_ROW_ROP)
IniBuilds_A350_SURV_TO_Surv_Switch_Off#0 (>L:INI_SURV_TO_SURV)
IniBuilds_A350_SURV_TO_Surv_Switch_On#1 (>L:INI_SURV_TO_SURV)
IniBuilds_A350_SURV_TO_Surv_Switch_Toggle#(L:INI_SURV_TO_SURV) ! (>L:INI_SURV_TO_SURV)
//IniBuilds/A350 (2020)/Navigation
IniBuilds_A350_TCAS_Mode_STBY#0 (>L:INI_tcas_mode_pedestal)
IniBuilds_A350_TCAS_Mode_TA_ONLY#3 (>L:INI_tcas_mode_pedestal)
IniBuilds_A350_TCAS_Mode_TA_RA#2 (>L:INI_tcas_mode_pedestal)
IniBuilds_A350_TCAS_Traffic_Position_ABV#2 (>L:INI_tcas_mode)
IniBuilds_A350_TCAS_Traffic_Position_BLW#0 (>L:INI_tcas_mode)
IniBuilds_A350_TCAS_Traffic_Position_NORM#1 (>L:INI_tcas_mode)
IniBuilds_A350_XPDR_System_1#(L:INI_XPDR_SYS) 1 == if{ -1 (>L:INI_XPDR_SYS) } els{ 1 (>L:INI_XPDR_SYS) }
IniBuilds_A350_XPDR_System_2#(L:INI_XPDR_SYS) 2 == if{ -1 (>L:INI_XPDR_SYS) } els{ 2 (>L:INI_XPDR_SYS)
//IniBuilds/A350 (2020)/Overhead Panel
HUD_-_Head_Up_Display_CPT__COVER_removed#0 (>L:INI_HUD_COVER_LEFT)
HUD_-_Head_Up_Display_CPT_COVER_inserted#1 (>L:INI_HUD_COVER_LEFT)
HUD_-_Head_Up_Display_CPT_closed#0 (>L:INI_HUD_LEFT_STATE)
HUD_-_Head_Up_Display_CPT_open#1 (>L:INI_HUD_LEFT_STATE) 
HUD_-_Head_Up_Display_FO_COVER_inserted#1 (>L:INI_HUD_COVER_RIGHT) 
HUD_-_Head_Up_Display_FO_COVER_removed#0 (>L:INI_HUD_COVER_RIGHT) 
HUD_-_Head_Up_Display_FO_closed#0 (>L:INI_HUD_RIGHT_STATE) 
HUD_-_Head_Up_Display_FO_open#1 (>L:INI_HUD_RIGHT_STATE) 
//IniBuilds/A350 (2020)/Pressurization
IniBuilds_A350_Cabin_Press_Altitude_Target_Dec#1 (>L:INI_CABIN_PRESS_ALTITUDE_TARGET_DEC)
IniBuilds_A350_Cabin_Press_Altitude_Target_Inc#1 (>L:INI_CABIN_PRESS_ALTITUDE_TARGET_INC)
IniBuilds_A350_Cabin_Press_Mode_Switch_Auto#0 (>L:INI_CABIN_PRESS_ALTITUDE_MODE)
IniBuilds_A350_Cabin_Press_Mode_Switch_Man#1 (>L:INI_CABIN_PRESS_ALTITUDE_MODE)
IniBuilds_A350_Cabin_Press_Mode_Switch_Toggle#(L:INI_CABIN_PRESS_ALTITUDE_MODE) ! (>L:INI_CABIN_PRESS_ALTITUDE_MODE)
IniBuilds_A350_Cabin_Press_VS_Mode_Switch_Auto#0 (>L:INI_CABIN_PRESS_VS_MODE)
IniBuilds_A350_Cabin_Press_VS_Mode_Switch_Man#1 (>L:INI_CABIN_PRESS_VS_MODE)
IniBuilds_A350_Cabin_Press_VS_Mode_Switch_Toggle#(L:INI_CABIN_PRESS_VS_MODE) ! (>L:INI_CABIN_PRESS_VS_MODE)
IniBuilds_A350_Cabin_Press_VS_Target_Dec#1 (>L:INI_CABIN_PRESS_VS_TARGET_DEC)
IniBuilds_A350_Cabin_Press_VS_Target_Inc#1 (>L:INI_CABIN_PRESS_VS_TARGET_INC)
IniBuilds_A350_Ditching_Switch_Off#0 (>L:INI_DITCHING_STATE)
IniBuilds_A350_Ditching_Switch_On#1 (>L:INI_DITCHING_STATE)
IniBuilds_A350_Ditching_Switch_Toggle#(L:INI_DITCHING_STATE) ! (>L:INI_DITCHING_STATE)
//IniBuilds/A350 (2020)/Radar
IniBuilds_A350_Left_WXR_Elev_Dec#1 (>L:INI_WXR_ELEV_LEFT_DN)
IniBuilds_A350_Left_WXR_Elev_Inc#1 (>L:INI_WXR_ELEV_LEFT_UP)
IniBuilds_A350_Left_WXR_Elev_Pull#1 (>L:INI_WXR_ELEV_LEFT_PULL)
IniBuilds_A350_Left_WXR_Elev_Push#1 (>L:INI_WXR_ELEV_LEFT_PUSH)
IniBuilds_A350_Left_WXR_Gain_Dec#1 (>L:INI_WXR_GAIN_LEFT_DN)
IniBuilds_A350_Left_WXR_Gain_Inc#1 (>L:INI_WXR_GAIN_LEFT_UP)
IniBuilds_A350_Left_WXR_Gain_Pull#1 (>L:INI_WXR_GAIN_LEFT_PULL)
IniBuilds_A350_Left_WXR_Gain_Push#1 (>L:INI_WXR_GAIN_LEFT_PUSH)
IniBuilds_A350_Left_WXR_VD_Azim_Dec#1 (>L:INI_WXR_VD_AZIM_LEFT_DN)
IniBuilds_A350_Left_WXR_VD_Azim_Inc#1 (>L:INI_WXR_VD_AZIM_LEFT_UP)
IniBuilds_A350_Left_WXR_VD_Azim_Pull#1 (>L:INI_WXR_VD_AZIM_LEFT_PULL)
IniBuilds_A350_Left_WXR_VD_Azim_Push#1 (>L:INI_WXR_VD_AZIM_LEFT_PUSH)
IniBuilds_A350_Right_WXR_Elev_Dec#1 (>L:INI_WXR_ELEV_RIGHT_DN)
IniBuilds_A350_Right_WXR_Elev_Inc#1 (>L:INI_WXR_ELEV_RIGHT_UP)
IniBuilds_A350_Right_WXR_Elev_Pull#1 (>L:INI_WXR_ELEV_RIGHT_PULL)
IniBuilds_A350_Right_WXR_Elev_Push#1 (>L:INI_WXR_ELEV_RIGHT_PUSH)
IniBuilds_A350_Right_WXR_Gain_Inc#1 (>L:INI_WXR_GAIN_RIGHT_UP)
IniBuilds_A350_Right_WXR_Gain_Pull#1 (>L:INI_WXR_GAIN_RIGHT_PULL)
IniBuilds_A350_Right_WXR_Gain_Push#1 (>L:INI_WXR_GAIN_RIGHT_PUSH)
IniBuilds_A350_Right_WXR_VD_Azim_Dec#1 (>L:INI_WXR_VD_AZIM_RIGHT_DN)
IniBuilds_A350_Right_WXR_VD_Azim_Inc#1 (>L:INI_WXR_VD_AZIM_RIGHT_UP)
IniBuilds_A350_Right_WXR_VD_Azim_Pull#1 (>L:INI_WXR_VD_AZIM_RIGHT_PULL)
IniBuilds_A350_Right_WXR_VD_Azim_Push#1 (>L:INI_WXR_VD_AZIM_RIGHT_PUSH)
IniBuilds_A350_WXR_System_1#(L:INI_WXR_SYS) 1 == if{ -1 (>L:INI_WXR_SYS) } els{ 1 (>L:INI_WXR_SYS) }
IniBuilds_A350_WXR_System_2#(L:INI_WXR_SYS) 2 == if{ -1 (>L:INI_WXR_SYS) } els{ 2 (>L:INI_WXR_SYS) }
//IniBuilds/A350 (2020)/Radio
IniBuilds_A350_BACKUP_RMP_0_Key#1 (>L:RMP_OVHD_NUM_0_KEY)
IniBuilds_A350_BACKUP_RMP_1_Key#1 (>L:RMP_OVHD_NUM_1_KEY)
IniBuilds_A350_BACKUP_RMP_2_Key#1 (>L:RMP_OVHD_NUM_3_KEY)
IniBuilds_A350_BACKUP_RMP_3_Key#1 (>L:RMP_OVHD_NUM_3_KEY)
IniBuilds_A350_BACKUP_RMP_4_Key#1 (>L:RMP_OVHD_NUM_4_KEY)
IniBuilds_A350_BACKUP_RMP_5_Key#1 (>L:RMP_OVHD_NUM_5_KEY)
IniBuilds_A350_BACKUP_RMP_6_Key#1 (>L:RMP_OVHD_NUM_6_KEY)
IniBuilds_A350_BACKUP_RMP_7_Key#1 (>L:RMP_OVHD_NUM_7_KEY)
IniBuilds_A350_BACKUP_RMP_8_Key#1 (>L:RMP_OVHD_NUM_8_KEY)
IniBuilds_A350_BACKUP_RMP_9_Key#1 (>L:RMP_OVHD_NUM_9_KEY)
IniBuilds_A350_BACKUP_RMP_Brightness_Dec#(L:INI_POTENTIOMETER_93) 5 - 0 max (>L:INI_POTENTIOMETER_93)
IniBuilds_A350_BACKUP_RMP_Brightness_Inc#(L:INI_POTENTIOMETER_93) 5 + 100 min (>L:INI_POTENTIOMETER_93)
IniBuilds_A350_BACKUP_RMP_CAB_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 11 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 11 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_CAB_Receive_Off#0 (>L:INI_RMP3_11_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_CAB_Receive_On#1 (>L:INI_RMP3_11_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_CAB_Receive_Toggle#(L:INI_RMP3_11_RECEIVE_SEL) ! (>L:INI_RMP3_11_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_CAB_Volume_Dec#(L:INI_RMP3_11_VOLUME) 5 - 0 max (>L:INI_RMP3_11_VOLUME)
IniBuilds_A350_BACKUP_RMP_CAB_Volume_Inc#(L:INI_RMP3_11_VOLUME) 5 + 100 min (>L:INI_RMP3_11_VOLUME)
IniBuilds_A350_BACKUP_RMP_HF_Key#1 (>L:RMP_OVHD_HF_KEY)
IniBuilds_A350_BACKUP_RMP_HF1_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 4 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 4 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_HF1_Receive_Off#0 (>L:INI_RMP3_4_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_HF1_Receive_On#1 (>L:INI_RMP3_4_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_HF1_Receive_Toggle#(L:INI_RMP3_4_RECEIVE_SEL) ! (>L:INI_RMP3_4_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_HF1_Volume_Dec#(L:INI_RMP3_4_VOLUME) 5 - 0 max (>L:INI_RMP3_4_VOLUME)
IniBuilds_A350_BACKUP_RMP_HF1_Volume_Inc#(L:INI_RMP3_4_VOLUME) 5 + 100 min (>L:INI_RMP3_4_VOLUME)
IniBuilds_A350_BACKUP_RMP_HF2_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 5 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 5 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_HF2_Receive_Off#0 (>L:INI_RMP3_5_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_HF2_Receive_On#1 (>L:INI_RMP3_5_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_HF2_Receive_Toggle#(L:INI_RMP3_5_RECEIVE_SEL) ! (>L:INI_RMP3_5_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_HF2_Volume_Dec#(L:INI_RMP3_5_VOLUME) 5 - 0 max (>L:INI_RMP3_5_VOLUME)
IniBuilds_A350_BACKUP_RMP_HF2_Volume_Inc#(L:INI_RMP3_5_VOLUME) 5 + 100 min (>L:INI_RMP3_5_VOLUME)
IniBuilds_A350_BACKUP_RMP_INT_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 8 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 8 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_INT_Receive_Off#0 (>L:INI_RMP3_8_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_INT_Receive_On#1 (>L:INI_RMP3_8_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_INT_Receive_Toggle#(L:INI_RMP3_8_RECEIVE_SEL) ! (>L:INI_RMP3_8_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_INT_Volume_Dec#(L:INI_RMP3_8_VOLUME) 5 - 0 max (>L:INI_RMP3_8_VOLUME)
IniBuilds_A350_BACKUP_RMP_INT_Volume_Inc#(L:INI_RMP3_8_VOLUME) 5 + 100 min (>L:INI_RMP3_8_VOLUME)
IniBuilds_A350_BACKUP_RMP_LSK_1_Key#1 (>L:RMP_OVHD_LSK_1_KEY)
IniBuilds_A350_BACKUP_RMP_LSK_2_Key#1 (>L:RMP_OVHD_LSK_3_KEY)
IniBuilds_A350_BACKUP_RMP_LSK_3_Key#1 (>L:RMP_OVHD_LSK_3_KEY)
IniBuilds_A350_BACKUP_RMP_MENU_Key#1 (>L:RMP_OVHD_MENU_KEY)
IniBuilds_A350_BACKUP_RMP_MSG_CLR_Key#1 (>L:RMP_OVHD_CLR_INOVHD_KEY)
IniBuilds_A350_BACKUP_RMP_NAV_Key#1 (>L:RMP_OVHD_NAV_KEY)
IniBuilds_A350_BACKUP_RMP_Nav_Mode_ADF1#0 (>L:INI_RMP_RAD_NAV_MODE_3)
IniBuilds_A350_BACKUP_RMP_Nav_Mode_ADF2#1 (>L:INI_RMP_RAD_NAV_MODE_3)
IniBuilds_A350_BACKUP_RMP_Nav_Mode_LS#2 (>L:INI_RMP_RAD_NAV_MODE_3)
IniBuilds_A350_BACKUP_RMP_Nav_Mode_MKR#5 (>L:INI_RMP_RAD_NAV_MODE_3)
IniBuilds_A350_BACKUP_RMP_Nav_Mode_VOR1#3 (>L:INI_RMP_RAD_NAV_MODE_3)
IniBuilds_A350_BACKUP_RMP_Nav_Mode_VOR2#4 (>L:INI_RMP_RAD_NAV_MODE_3)
IniBuilds_A350_BACKUP_RMP_PA_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 9 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 9 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_PA_Receive_Off#0 (>L:INI_RMP3_9_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_PA_Receive_On#1 (>L:INI_RMP3_9_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_PA_Receive_Toggle#(L:INI_RMP3_9_RECEIVE_SEL) ! (>L:INI_RMP3_9_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_PA_Volume_Dec#(L:INI_RMP3_9_VOLUME) 5 - 0 max (>L:INI_RMP3_9_VOLUME)
IniBuilds_A350_BACKUP_RMP_PA_Volume_Inc#(L:INI_RMP3_9_VOLUME) 5 + 100 min (>L:INI_RMP3_9_VOLUME)
IniBuilds_A350_BACKUP_RMP_RSK_1_Key#1 (>L:RMP_OVHD_RSK_1_KEY)
IniBuilds_A350_BACKUP_RMP_RSK_2_Key#1 (>L:RMP_OVHD_RSK_3_KEY)
IniBuilds_A350_BACKUP_RMP_RSK_3_Key#1 (>L:RMP_OVHD_RSK_3_KEY)
IniBuilds_A350_BACKUP_RMP_RST_Key#1 (>L:RMP_OVHD_RST_KEY)
IniBuilds_A350_BACKUP_RMP_SQWK_Key#1 (>L:RMP_OVHD_SQWK_KEY)
IniBuilds_A350_BACKUP_RMP_TEL_Key#1 (>L:RMP_OVHD_TEL_KEY)
IniBuilds_A350_BACKUP_RMP_TEL1_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 6 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 6 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_TEL1_Receive_Off#0 (>L:INI_RMP3_6_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_TEL1_Receive_On#1 (>L:INI_RMP3_6_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_TEL1_Receive_Toggle#(L:INI_RMP3_6_RECEIVE_SEL) ! (>L:INI_RMP3_6_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_TEL1_Volume_Dec#(L:INI_RMP3_6_VOLUME) 5 - 0 max (>L:INI_RMP3_6_VOLUME)
IniBuilds_A350_BACKUP_RMP_TEL1_Volume_Inc#(L:INI_RMP3_6_VOLUME) 5 + 100 min (>L:INI_RMP3_6_VOLUME)
IniBuilds_A350_BACKUP_RMP_TEL2_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 7 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 7 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_TEL2_Receive_Off#0 (>L:INI_RMP3_7_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_TEL2_Receive_On#1 (>L:INI_RMP3_7_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_TEL2_Receive_Toggle#(L:INI_RMP3_7_RECEIVE_SEL) ! (>L:INI_RMP3_7_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_TEL2_Volume_Dec#(L:INI_RMP3_7_VOLUME) 5 - 0 max (>L:INI_RMP3_7_VOLUME)
IniBuilds_A350_BACKUP_RMP_TEL2_Volume_Inc#(L:INI_RMP3_7_VOLUME) 5 + 100 min (>L:INI_RMP3_7_VOLUME)
IniBuilds_A350_BACKUP_RMP_VHF_Key#1 (>L:RMP_OVHD_VHF_KEY)
IniBuilds_A350_BACKUP_RMP_VHF1_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 1 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 1 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_VHF1_Receive_Off#0 (>L:INI_RMP3_1_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF1_Receive_On#1 (>L:INI_RMP3_1_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF1_Receive_Toggle#(L:INI_RMP3_1_RECEIVE_SEL) ! (>L:INI_RMP3_1_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF1_Volume_Dec#(L:INI_RMP3_1_VOLUME) 5 - 0 max (>L:INI_RMP3_1_VOLUME)
IniBuilds_A350_BACKUP_RMP_VHF1_Volume_Inc#(L:INI_RMP3_1_VOLUME) 5 + 100 min (>L:INI_RMP3_1_VOLUME)
IniBuilds_A350_BACKUP_RMP_VHF2_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 2 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 2 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_VHF2_Receive_Off#0 (>L:INI_RMP3_3_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF2_Receive_On#1 (>L:INI_RMP3_3_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF2_Receive_Toggle#(L:INI_RMP3_3_RECEIVE_SEL) ! (>L:INI_RMP3_3_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF2_Volume_Dec#(L:INI_RMP3_3_VOLUME) 5 - 0 max (>L:INI_RMP3_3_VOLUME)
IniBuilds_A350_BACKUP_RMP_VHF2_Volume_Inc#(L:INI_RMP3_3_VOLUME) 5 + 100 min (>L:INI_RMP3_3_VOLUME)
IniBuilds_A350_BACKUP_RMP_VHF3_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 3 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 3 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_VHF3_Receive_Off#0 (>L:INI_RMP3_3_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF3_Receive_On#1 (>L:INI_RMP3_3_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF3_Receive_Toggle#(L:INI_RMP3_3_RECEIVE_SEL) ! (>L:INI_RMP3_3_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VHF3_Volume_Dec#(L:INI_RMP3_3_VOLUME) 5 - 0 max (>L:INI_RMP3_3_VOLUME)
IniBuilds_A350_BACKUP_RMP_VHF3_Volume_Inc#(L:INI_RMP3_3_VOLUME) 5 + 100 min (>L:INI_RMP3_3_VOLUME)
IniBuilds_A350_BACKUP_RMP_VOICE_Key#(L:INI_RMP3_TRANSMIT_CHANNEL, Number) 10 == if{ 0 (>L:INI_RMP3_TRANSMIT_CHANNEL) } els{ 10 (>L:INI_RMP3_TRANSMIT_CHANNEL) }
IniBuilds_A350_BACKUP_RMP_VOICE_Receive_Off#0 (>L:INI_RMP3_10_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VOICE_Receive_On#1 (>L:INI_RMP3_10_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VOICE_Receive_Toggle#(L:INI_RMP3_10_RECEIVE_SEL) ! (>L:INI_RMP3_10_RECEIVE_SEL)
IniBuilds_A350_BACKUP_RMP_VOICE_Volume_Dec#(L:INI_RMP3_10_VOLUME) 5 - 0 max (>L:INI_RMP3_10_VOLUME)
IniBuilds_A350_BACKUP_RMP_VOICE_Volume_Inc#(L:INI_RMP3_10_VOLUME) 5 + 100 min (>L:INI_RMP3_10_VOLUME)
IniBuilds_A350_CPT_RMP_0_Key#1 (>L:RMP_CPT_NUM_0_KEY)
IniBuilds_A350_CPT_RMP_1_Key#1 (>L:RMP_CPT_NUM_1_KEY)
IniBuilds_A350_CPT_RMP_3_Key#1 (>L:RMP_CPT_NUM_3_KEY)
IniBuilds_A350_CPT_RMP_4_Key#1 (>L:RMP_CPT_NUM_4_KEY)
IniBuilds_A350_CPT_RMP_5_Key#1 (>L:RMP_CPT_NUM_5_KEY)
IniBuilds_A350_CPT_RMP_6_Key#1 (>L:RMP_CPT_NUM_6_KEY)
IniBuilds_A350_CPT_RMP_7_Key#1 (>L:RMP_CPT_NUM_7_KEY)
IniBuilds_A350_CPT_RMP_8_Key#1 (>L:RMP_CPT_NUM_8_KEY)
IniBuilds_A350_CPT_RMP_9_Key#1 (>L:RMP_CPT_NUM_9_KEY)
IniBuilds_A350_CPT_RMP_Brightness_Dec#(L:INI_POTENTIOMETER_93) 5 - 0 max (>L:INI_POTENTIOMETER_93)
IniBuilds_A350_CPT_RMP_Brightness_Inc#(L:INI_POTENTIOMETER_93) 5 + 100 min (>L:INI_POTENTIOMETER_93)
IniBuilds_A350_CPT_RMP_CAB_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 11 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 11 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_CAB_Receive_Off#0 (>L:INI_RMP1_11_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_CAB_Receive_On#1 (>L:INI_RMP1_11_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_CAB_Receive_Toggle#(L:INI_RMP1_11_RECEIVE_SEL) ! (>L:INI_RMP1_11_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_CAB_Volume_Dec#(L:INI_RMP1_11_VOLUME) 5 - 0 max (>L:INI_RMP1_11_VOLUME)
IniBuilds_A350_CPT_RMP_CAB_Volume_Inc#(L:INI_RMP1_11_VOLUME) 5 + 100 min (>L:INI_RMP1_11_VOLUME)
IniBuilds_A350_CPT_RMP_HF_Key#1 (>L:RMP_CPT_HF_KEY)
IniBuilds_A350_CPT_RMP_HF1_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 4 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 4 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_HF1_Receive_Off#0 (>L:INI_RMP1_4_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_HF1_Receive_On#1 (>L:INI_RMP1_4_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_HF1_Receive_Toggle#(L:INI_RMP1_4_RECEIVE_SEL) ! (>L:INI_RMP1_4_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_HF1_Volume_Dec#(L:INI_RMP1_4_VOLUME) 5 - 0 max (>L:INI_RMP1_4_VOLUME)
IniBuilds_A350_CPT_RMP_HF1_Volume_Inc#(L:INI_RMP1_4_VOLUME) 5 + 100 min (>L:INI_RMP1_4_VOLUME)
IniBuilds_A350_CPT_RMP_HF2_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 5 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 5 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_HF2_Receive_Off#0 (>L:INI_RMP1_5_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_HF2_Receive_On#1 (>L:INI_RMP1_5_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_HF2_Receive_Toggle#(L:INI_RMP1_5_RECEIVE_SEL) ! (>L:INI_RMP1_5_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_HF2_Volume_Dec#(L:INI_RMP1_5_VOLUME) 5 - 0 max (>L:INI_RMP1_5_VOLUME)
IniBuilds_A350_CPT_RMP_HF2_Volume_Inc#(L:INI_RMP1_5_VOLUME) 5 + 100 min (>L:INI_RMP1_5_VOLUME)
IniBuilds_A350_CPT_RMP_INT_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 8 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 8 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_INT_Receive_Off#0 (>L:INI_RMP1_8_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_INT_Receive_On#1 (>L:INI_RMP1_8_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_INT_Receive_Toggle#(L:INI_RMP1_8_RECEIVE_SEL) ! (>L:INI_RMP1_8_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_INT_Volume_Dec#(L:INI_RMP1_8_VOLUME) 5 - 0 max (>L:INI_RMP1_8_VOLUME)
IniBuilds_A350_CPT_RMP_INT_Volume_Inc#(L:INI_RMP1_8_VOLUME) 5 + 100 min (>L:INI_RMP1_8_VOLUME)
IniBuilds_A350_CPT_RMP_LSK_3_Key#1 (>L:RMP_CPT_LSK_3_KEY)
IniBuilds_A350_CPT_RMP_MENU_Key#1 (>L:RMP_CPT_MENU_KEY)
IniBuilds_A350_CPT_RMP_MSG_CLR_Key#1 (>L:RMP_CPT_CLR_INFO_KEY)
IniBuilds_A350_CPT_RMP_NAV_Key#1 (>L:RMP_CPT_NAV_KEY)
IniBuilds_A350_CPT_RMP_Nav_Mode_ADF1#0 (>L:INI_RMP_RAD_NAV_MODE_1)
IniBuilds_A350_CPT_RMP_Nav_Mode_ADF2#1 (>L:INI_RMP_RAD_NAV_MODE_1)
IniBuilds_A350_CPT_RMP_Nav_Mode_LS#2 (>L:INI_RMP_RAD_NAV_MODE_1)
IniBuilds_A350_CPT_RMP_Nav_Mode_MKR#5 (>L:INI_RMP_RAD_NAV_MODE_1)
IniBuilds_A350_CPT_RMP_Nav_Mode_VOR1#3 (>L:INI_RMP_RAD_NAV_MODE_1)
IniBuilds_A350_CPT_RMP_Nav_Mode_VOR2#4 (>L:INI_RMP_RAD_NAV_MODE_1)
IniBuilds_A350_CPT_RMP_PA_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 9 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 9 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_PA_Receive_Off#0 (>L:INI_RMP1_9_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_PA_Receive_On#1 (>L:INI_RMP1_9_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_PA_Receive_Toggle#(L:INI_RMP1_9_RECEIVE_SEL) ! (>L:INI_RMP1_9_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_PA_Volume_Dec#(L:INI_RMP1_9_VOLUME) 5 - 0 max (>L:INI_RMP1_9_VOLUME)
IniBuilds_A350_CPT_RMP_PA_Volume_Inc#(L:INI_RMP1_9_VOLUME) 5 + 100 min (>L:INI_RMP1_9_VOLUME)
IniBuilds_A350_CPT_RMP_RSK_3_Key#1 (>L:RMP_CPT_RSK_3_KEY)
IniBuilds_A350_CPT_RMP_RST_Key#1 (>L:RMP_CPT_RST_KEY)
IniBuilds_A350_CPT_RMP_TEL_Key#1 (>L:RMP_CPT_TEL_KEY)
IniBuilds_A350_CPT_RMP_TEL1_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 6 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 6 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_TEL1_Receive_Off#0 (>L:INI_RMP1_6_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_TEL1_Receive_On#1 (>L:INI_RMP1_6_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_TEL1_Receive_Toggle#(L:INI_RMP1_6_RECEIVE_SEL) ! (>L:INI_RMP1_6_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_TEL1_Volume_Dec#(L:INI_RMP1_6_VOLUME) 5 - 0 max (>L:INI_RMP1_6_VOLUME)
IniBuilds_A350_CPT_RMP_TEL1_Volume_Inc#(L:INI_RMP1_6_VOLUME) 5 + 100 min (>L:INI_RMP1_6_VOLUME)
IniBuilds_A350_CPT_RMP_TEL2_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 7 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 7 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_TEL2_Receive_Off#0 (>L:INI_RMP1_7_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_TEL2_Receive_On#1 (>L:INI_RMP1_7_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_TEL2_Receive_Toggle#(L:INI_RMP1_7_RECEIVE_SEL) ! (>L:INI_RMP1_7_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_TEL2_Volume_Dec#(L:INI_RMP1_7_VOLUME) 5 - 0 max (>L:INI_RMP1_7_VOLUME)
IniBuilds_A350_CPT_RMP_TEL2_Volume_Inc#(L:INI_RMP1_7_VOLUME) 5 + 100 min (>L:INI_RMP1_7_VOLUME)
IniBuilds_A350_CPT_RMP_VHF1_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 1 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 1 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_VHF1_Receive_Off#0 (>L:INI_RMP1_1_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF1_Receive_On#1 (>L:INI_RMP1_1_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF1_Receive_Toggle#(L:INI_RMP1_1_RECEIVE_SEL) ! (>L:INI_RMP1_1_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF1_Volume_Dec#(L:INI_RMP1_1_VOLUME) 5 - 0 max (>L:INI_RMP1_1_VOLUME)
IniBuilds_A350_CPT_RMP_VHF1_Volume_Inc#(L:INI_RMP1_1_VOLUME) 5 + 100 min (>L:INI_RMP1_1_VOLUME)
IniBuilds_A350_CPT_RMP_VHF2_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 2 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 2 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_VHF2_Receive_Off#0 (>L:INI_RMP1_2_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF2_Receive_On#1 (>L:INI_RMP1_2_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF2_Receive_Toggle#(L:INI_RMP1_2_RECEIVE_SEL) ! (>L:INI_RMP1_2_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF2_Volume_Dec#(L:INI_RMP1_2_VOLUME) 5 - 0 max (>L:INI_RMP1_2_VOLUME)
IniBuilds_A350_CPT_RMP_VHF2_Volume_Inc#(L:INI_RMP1_2_VOLUME) 5 + 100 min (>L:INI_RMP1_2_VOLUME)
IniBuilds_A350_CPT_RMP_VHF3_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 3 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 3 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_VHF3_Receive_Off#0 (>L:INI_RMP1_3_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF3_Receive_On#1 (>L:INI_RMP1_3_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF3_Receive_Toggle#(L:INI_RMP1_3_RECEIVE_SEL) ! (>L:INI_RMP1_3_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VHF3_Volume_Dec#(L:INI_RMP1_3_VOLUME) 5 - 0 max (>L:INI_RMP1_3_VOLUME)
IniBuilds_A350_CPT_RMP_VHF3_Volume_Inc#(L:INI_RMP1_3_VOLUME) 5 + 100 min (>L:INI_RMP1_3_VOLUME)
IniBuilds_A350_CPT_RMP_VOICE_Key#(L:INI_RMP1_TRANSMIT_CHANNEL, Number) 10 == if{ 0 (>L:INI_RMP1_TRANSMIT_CHANNEL) } els{ 10 (>L:INI_RMP1_TRANSMIT_CHANNEL) }
IniBuilds_A350_CPT_RMP_VOICE_Receive_Off#0 (>L:INI_RMP1_10_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VOICE_Receive_On#1 (>L:INI_RMP1_10_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VOICE_Receive_Toggle#(L:INI_RMP1_10_RECEIVE_SEL) ! (>L:INI_RMP1_10_RECEIVE_SEL)
IniBuilds_A350_CPT_RMP_VOICE_Volume_Dec#(L:INI_RMP1_10_VOLUME) 5 - 0 max (>L:INI_RMP1_10_VOLUME)
IniBuilds_A350_CPT_RMP_VOICE_Volume_Inc#(L:INI_RMP1_10_VOLUME) 5 + 100 min (>L:INI_RMP1_10_VOLUME)
IniBuilds_A350_FO_RMP_0_Key#1 (>L:RMP_FO_NUM_0_KEY)
IniBuilds_A350_FO_RMP_1_Key#1 (>L:RMP_FO_NUM_1_KEY)
IniBuilds_A350_FO_RMP_2_Key#1 (>L:RMP_FO_NUM_2_KEY)
IniBuilds_A350_FO_RMP_3_Key#1 (>L:RMP_FO_NUM_3_KEY)
IniBuilds_A350_FO_RMP_4_Key#1 (>L:RMP_FO_NUM_4_KEY)
IniBuilds_A350_FO_RMP_5_Key#1 (>L:RMP_FO_NUM_5_KEY)
IniBuilds_A350_FO_RMP_6_Key#1 (>L:RMP_FO_NUM_6_KEY)
IniBuilds_A350_FO_RMP_7_Key#1 (>L:RMP_FO_NUM_7_KEY)
IniBuilds_A350_FO_RMP_8_Key#1 (>L:RMP_FO_NUM_8_KEY)
IniBuilds_A350_FO_RMP_9_Key#1 (>L:RMP_FO_NUM_9_KEY)
IniBuilds_A350_FO_RMP_Brightness_Dec#(L:INI_POTENTIOMETER_93) 5 - 0 max (>L:INI_POTENTIOMETER_93)
IniBuilds_A350_FO_RMP_Brightness_Inc#(L:INI_POTENTIOMETER_93) 5 + 100 min (>L:INI_POTENTIOMETER_93)
IniBuilds_A350_FO_RMP_CAB_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 11 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 11 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_CAB_Receive_Off#0 (>L:INI_RMP2_11_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_CAB_Receive_On#1 (>L:INI_RMP2_11_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_CAB_Receive_Toggle#(L:INI_RMP2_11_RECEIVE_SEL) ! (>L:INI_RMP2_11_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_CAB_Volume_Dec#(L:INI_RMP2_11_VOLUME) 5 - 0 max (>L:INI_RMP2_11_VOLUME)
IniBuilds_A350_FO_RMP_CAB_Volume_Inc#(L:INI_RMP2_11_VOLUME) 5 + 100 min (>L:INI_RMP2_11_VOLUME)
IniBuilds_A350_FO_RMP_HF_Key#1 (>L:RMP_FO_HF_KEY)
IniBuilds_A350_FO_RMP_HF1_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 4 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 4 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_HF1_Receive_Off#0 (>L:INI_RMP2_4_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_HF1_Receive_On#1 (>L:INI_RMP2_4_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_HF1_Receive_Toggle#(L:INI_RMP2_4_RECEIVE_SEL) ! (>L:INI_RMP2_4_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_HF1_Volume_Dec#(L:INI_RMP2_4_VOLUME) 5 - 0 max (>L:INI_RMP2_4_VOLUME)
IniBuilds_A350_FO_RMP_HF1_Volume_Inc#(L:INI_RMP2_4_VOLUME) 5 + 100 min (>L:INI_RMP2_4_VOLUME)
IniBuilds_A350_FO_RMP_HF2_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 5 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 5 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_HF2_Receive_Off#0 (>L:INI_RMP2_5_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_HF2_Receive_On#1 (>L:INI_RMP2_5_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_HF2_Receive_Toggle#(L:INI_RMP2_5_RECEIVE_SEL) ! (>L:INI_RMP2_5_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_HF2_Volume_Dec#(L:INI_RMP2_5_VOLUME) 5 - 0 max (>L:INI_RMP2_5_VOLUME)
IniBuilds_A350_FO_RMP_HF2_Volume_Inc#(L:INI_RMP2_5_VOLUME) 5 + 100 min (>L:INI_RMP2_5_VOLUME)
IniBuilds_A350_FO_RMP_INT_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 8 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 8 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_INT_Receive_Off#0 (>L:INI_RMP2_8_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_INT_Receive_On#1 (>L:INI_RMP2_8_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_INT_Receive_Toggle#(L:INI_RMP2_8_RECEIVE_SEL) ! (>L:INI_RMP2_8_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_INT_Volume_Dec#(L:INI_RMP2_8_VOLUME) 5 - 0 max (>L:INI_RMP2_8_VOLUME)
IniBuilds_A350_FO_RMP_INT_Volume_Inc#(L:INI_RMP2_8_VOLUME) 5 + 100 min (>L:INI_RMP2_8_VOLUME)
IniBuilds_A350_FO_RMP_LSK_1_Key#1 (>L:RMP_FO_LSK_1_KEY)
IniBuilds_A350_FO_RMP_LSK_2_Key#1 (>L:RMP_FO_LSK_2_KEY)
IniBuilds_A350_FO_RMP_LSK_3_Key#1 (>L:RMP_FO_LSK_3_KEY)
IniBuilds_A350_FO_RMP_MENU_Key#1 (>L:RMP_FO_MENU_KEY)
IniBuilds_A350_FO_RMP_MSG_CLR_Key#1 (>L:RMP_FO_CLR_INFO_KEY)
IniBuilds_A350_FO_RMP_NAV_Key#1 (>L:RMP_FO_NAV_KEY)
IniBuilds_A350_FO_RMP_Nav_Mode_ADF1#0 (>L:INI_RMP_RAD_NAV_MODE_2)
IniBuilds_A350_FO_RMP_Nav_Mode_ADF2#1 (>L:INI_RMP_RAD_NAV_MODE_2)
IniBuilds_A350_FO_RMP_Nav_Mode_LS#2 (>L:INI_RMP_RAD_NAV_MODE_2)
IniBuilds_A350_FO_RMP_Nav_Mode_MKR#5 (>L:INI_RMP_RAD_NAV_MODE_2)
IniBuilds_A350_FO_RMP_Nav_Mode_VOR1#3 (>L:INI_RMP_RAD_NAV_MODE_2)
IniBuilds_A350_FO_RMP_Nav_Mode_VOR2#4 (>L:INI_RMP_RAD_NAV_MODE_2)
IniBuilds_A350_FO_RMP_PA_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 9 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 9 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_PA_Receive_Off#0 (>L:INI_RMP2_9_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_PA_Receive_On#1 (>L:INI_RMP2_9_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_PA_Receive_Toggle#(L:INI_RMP2_9_RECEIVE_SEL) ! (>L:INI_RMP2_9_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_PA_Volume_Dec#(L:INI_RMP2_9_VOLUME) 5 - 0 max (>L:INI_RMP2_9_VOLUME)
IniBuilds_A350_FO_RMP_PA_Volume_Inc#(L:INI_RMP2_9_VOLUME) 5 + 100 min (>L:INI_RMP2_9_VOLUME)
IniBuilds_A350_FO_RMP_RSK_1_Key#1 (>L:RMP_FO_RSK_1_KEY)
IniBuilds_A350_FO_RMP_RSK_2_Key#1 (>L:RMP_FO_RSK_2_KEY)
IniBuilds_A350_FO_RMP_RSK_3_Key#1 (>L:RMP_FO_RSK_3_KEY)
IniBuilds_A350_FO_RMP_RST_Key#1 (>L:RMP_FO_RST_KEY)
IniBuilds_A350_FO_RMP_SQWK_Key#1 (>L:RMP_FO_SQWK_KEY)
IniBuilds_A350_FO_RMP_TEL_Key#1 (>L:RMP_FO_TEL_KEY)
IniBuilds_A350_FO_RMP_TEL1_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 6 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 6 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_TEL1_Receive_Off#0 (>L:INI_RMP2_6_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_TEL1_Receive_On#1 (>L:INI_RMP2_6_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_TEL1_Receive_Toggle#(L:INI_RMP2_6_RECEIVE_SEL) ! (>L:INI_RMP2_6_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_TEL1_Volume_Dec#(L:INI_RMP2_6_VOLUME) 5 - 0 max (>L:INI_RMP2_6_VOLUME)
IniBuilds_A350_FO_RMP_TEL1_Volume_Inc#(L:INI_RMP2_6_VOLUME) 5 + 100 min (>L:INI_RMP2_6_VOLUME)
IniBuilds_A350_FO_RMP_TEL2_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 7 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 7 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_TEL2_Receive_Off#0 (>L:INI_RMP2_7_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_TEL2_Receive_On#1 (>L:INI_RMP2_7_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_TEL2_Receive_Toggle#(L:INI_RMP2_7_RECEIVE_SEL) ! (>L:INI_RMP2_7_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_TEL2_Volume_Dec#(L:INI_RMP2_7_VOLUME) 5 - 0 max (>L:INI_RMP2_7_VOLUME)
IniBuilds_A350_FO_RMP_TEL2_Volume_Inc#(L:INI_RMP2_7_VOLUME) 5 + 100 min (>L:INI_RMP2_7_VOLUME)
IniBuilds_A350_FO_RMP_VHF_Key#1 (>L:RMP_FO_VHF_KEY)
IniBuilds_A350_FO_RMP_VHF1_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 1 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 1 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_VHF1_Receive_Off#0 (>L:INI_RMP2_1_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF1_Receive_On#1 (>L:INI_RMP2_1_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF1_Receive_Toggle#(L:INI_RMP2_1_RECEIVE_SEL) ! (>L:INI_RMP2_1_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF1_Volume_Dec#(L:INI_RMP2_1_VOLUME) 5 - 0 max (>L:INI_RMP2_1_VOLUME)
IniBuilds_A350_FO_RMP_VHF1_Volume_Inc#(L:INI_RMP2_1_VOLUME) 5 + 100 min (>L:INI_RMP2_1_VOLUME)
IniBuilds_A350_FO_RMP_VHF2_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 2 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 2 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_VHF2_Receive_Off#0 (>L:INI_RMP2_2_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF2_Receive_On#1 (>L:INI_RMP2_2_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF2_Receive_Toggle#(L:INI_RMP2_2_RECEIVE_SEL) ! (>L:INI_RMP2_2_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF2_Volume_Dec#(L:INI_RMP2_2_VOLUME) 5 - 0 max (>L:INI_RMP2_2_VOLUME)
IniBuilds_A350_FO_RMP_VHF2_Volume_Inc#(L:INI_RMP2_2_VOLUME) 5 + 100 min (>L:INI_RMP2_2_VOLUME)
IniBuilds_A350_FO_RMP_VHF3_Receive_Off#0 (>L:INI_RMP2_3_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF3_Receive_On#1 (>L:INI_RMP2_3_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF3_Receive_Toggle#(L:INI_RMP2_3_RECEIVE_SEL) ! (>L:INI_RMP2_3_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VHF3_Volume_Dec#(L:INI_RMP2_3_VOLUME) 5 - 0 max (>L:INI_RMP2_3_VOLUME)
IniBuilds_A350_FO_RMP_VHF3_Volume_Inc#(L:INI_RMP2_3_VOLUME) 5 + 100 min (>L:INI_RMP2_3_VOLUME)
IniBuilds_A350_FO_RMP_VOICE_Key#(L:INI_RMP2_TRANSMIT_CHANNEL, Number) 10 == if{ 0 (>L:INI_RMP2_TRANSMIT_CHANNEL) } els{ 10 (>L:INI_RMP2_TRANSMIT_CHANNEL) }
IniBuilds_A350_FO_RMP_VOICE_Receive_Off#0 (>L:INI_RMP2_10_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VOICE_Receive_On#1 (>L:INI_RMP2_10_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VOICE_Receive_Toggle#(L:INI_RMP2_10_RECEIVE_SEL) ! (>L:INI_RMP2_10_RECEIVE_SEL)
IniBuilds_A350_FO_RMP_VOICE_Volume_Dec#(L:INI_RMP2_10_VOLUME) 5 - 0 max (>L:INI_RMP2_10_VOLUME)
IniBuilds_A350_FO_RMP_VOICE_Volume_Inc#(L:INI_RMP2_10_VOLUME) 5 + 100 min (>L:INI_RMP2_10_VOLUME)
//IniBuilds/A350 (2020)/Radios
COM1_Selection_Captain#1 (>L:RMP_CPT_RSK_1_KEY)
COM2_Selection_Captain#1 (>L:RMP_CPT_RSK_2_KEY)
Frequency_Swap_COM1#1 (>L:RMP_CPT_LSK_1_KEY)
Frequency_Swap_COM2#1 (>L:RMP_CPT_LSK_2_KEY)
Numbers_captain_side_RMP#1 (>L:RMP_CPT_NUM_2_KEY)
SQWK_Button_Captain_RMP#1 (>L:RMP_CPT_SQWK_KEY)
Set_COM_frequency_first_3_digits_by_decrease_rotary_knob#(>K:COM_RADIO_WHOLE_DEC)
Set_COM_frequency_first_3_digits_by_increase_rotary_knob#(>K:COM_RADIO_WHOLE_INC)
Set_COM_frequency_last__3_digits_by_decrease_rotary_knob#(>K:COM_RADIO_FRACT_DEC)
Set_COM_frequency_last_3_digits_by_increase_rotary_knob#(>K:COM_RADIO_FRACT_INC)
VHF_Button_Captain_RMP#1 (>L:RMP_CPT_VHF_KEY)
//IniBuilds/A350 (2020)/Safety
Crew_Supply_Toggle#(L:INI_CREW_SUPPLY) ! (>L:INI_CREW_SUPPLY)
IniBuilds_A350_Cockpit_Door_Switch_Lock#0 (>L:INI_CKPT_DOOR)
IniBuilds_A350_Cockpit_Door_Switch_Norm#1 (>L:INI_CKPT_DOOR)
IniBuilds_A350_Cockpit_Door_Switch_Unlock#2 (>L:INI_CKPT_DOOR)
IniBuilds_A350_Crew_Supply_Off#0 (>L:INI_CREW_SUPPLY)
IniBuilds_A350_Crew_Supply_On#1 (>L:INI_CREW_SUPPLY)
IniBuilds_A350_ELT_Switch_Arm#1 (>L:INI_ELT_SWITCH)
IniBuilds_A350_ELT_Switch_Guard_Close#0 (>L:INI_ELT_SWITCH_GUARD)
IniBuilds_A350_ELT_Switch_Guard_Open#1 (>L:INI_ELT_SWITCH_GUARD)
IniBuilds_A350_ELT_Switch_On#2 (>L:INI_ELT_SWITCH)
IniBuilds_A350_ELT_Switch_Test_Reset#0 (>L:INI_ELT_SWITCH)
IniBuilds_A350_EVAC_Selector_Switch_CAPT#0 (>L:INI_EVAC_SELECTOR_SWITCH)
IniBuilds_A350_EVAC_Selector_Switch_CAPT___PURS#1 (>L:INI_EVAC_SELECTOR_SWITCH)
IniBuilds_A350_Emer_Decent_Button#1 (>L:INI_EMER_DESCENT_REQ)
IniBuilds_A350_Emer_Exit_Switch_Arm#1 (>L:INI_EMER_EXIT_SWITCH)
IniBuilds_A350_Emer_Exit_Switch_Off#0 (>L:INI_EMER_EXIT_SWITCH)
IniBuilds_A350_Emer_Exit_Switch_On#2 (>L:INI_EMER_EXIT_SWITCH)
IniBuilds_A350_Evac_Command_Off#0 (>L:INI_EVAC_STATE)
IniBuilds_A350_Evac_Command_On#1 (>L:INI_EVAC_STATE)
IniBuilds_A350_Evac_Command_Toggle#(L:INI_EVAC_STATE) ! (>L:INI_EVAC_STATE)
IniBuilds_A350_Evac_Horn_Off_Button_Press#1 (>L:INI_EVAC_HORN_OFF_BUTTON)
IniBuilds_A350_Evac_Horn_Off_Button_Release#0 (>L:INI_EVAC_HORN_OFF_BUTTON)
No_Mobile_AUTO#1 (>L:INI_SIGNS_NO_MOBILE)
No_Mobile_OFF#0 (>L:INI_SIGNS_NO_MOBILE)
No_Mobile_ON#2 (>L:INI_SIGNS_NO_MOBILE)
No_Smkg_No_PED_AUTO#1 (>L:INI_NO_SMOKING_SWITCH)
No_Smkg_No_PED_OFF#0 (>L:INI_NO_SMOKING_SWITCH)
No_Smkg_No_PED_ON#2 (>L:INI_NO_SMOKING_SWITCH)
Seatbelts_Switch_AUTO#1 (>L:INI_SEATBELTS_SWITCH)
Seatbelts_Switch_OFF#0 (>L:INI_SEATBELTS_SWITCH)
Seatbelts_Switch_ON#2 (>L:INI_SEATBELTS_SWITCH)
//IniBuilds/A350 (2020)/Warning
IniBuilds_A350_GPWS_GS_Mode_Off#0 (>L:INI_GPWS_GS_STATE)
IniBuilds_A350_GPWS_GS_Mode_On#1 (>L:INI_GPWS_GS_STATE)
//IniBuilds/A350 (2024)/APU
APU#APU_STARTER
//IniBuilds/A350 (2024)/Autopilot
A350_Autopilot_sample_input#1 (>B:some name)
Captain_Sidestick_Autopilot_Disconnect#1 (>L:AUTOPILOT_OFF_REQ, 0)
FCU_ALT_Button#1 (>L:INI_FCU_LEVEL_OFF_COMMAND)
FCU_APP_Button#1 (>L:AP7_BUTTON)
FCU_FD_Button#(L:INI_FD_ON) ! (>L:INI_FD_ON)
FCU_LOC_Button#1 (>L:AP6_BUTTON)
//IniBuilds/A350 (2024)/ECAM
ECAM_CHECKLIST_L#1 (>L:INI_ECAM_CHECKLIST_LEFT)
ECAM_WHEEL_L_MINUS#1 (>L:INI_ECAM_WHEEL_L_MINUS_COMMAND)
ECAM_WHEEL_L_PLUS#1 (>L:INI_ECAM_WHEEL_L_PLUS_COMMAND)
T_O_Config#1 (>L:PUSH_ECAM_TOCONFIG)
//IniBuilds/A350 (2024)/Electrical
External_Power_1_Toggle#(L:INI_GEN_EXT_A_ONLINE) ! (>L:INI_GEN_EXT_A_ONLINE)
External_Power_2_Toggle#(L:INI_GEN_EXT_B_ONLINE) ! (>L:INI_GEN_EXT_B_ONLINE)
//IniBuilds/A350 (2024)/Radio
Com1_Radio_toggle#B:AIRLINER_RMP_ADK1_1
FCU_METER_Button#(L:INI_FCU_METRIC_STATE) ! (>L:INI_FCU_METRIC_STATE)
FCU_SPD_MACH_Button#1 (>L:INI_SPD_MACH_BUTTON)
FCU_TRK_FPA_Button#1 (>L:INI_FCU_HDG_VS_COMMAND)
//IniBuilds/A400M/Autopilot
Altitude_Managed_push#1 (>B:INSTRUMENT_FCU_ROTARY_ALT_PUSH_MODE)
Altitude_Selected_pull#1 (>B:INSTRUMENT_FCU_ROTARY_ALT_PULL_Set)
Autopilot_OFF_AP1_push#1 (>B:AIRLINER_FCU_AP1_PUSH)
Speed_Managed_push_#1 (>B:INSTRUMENT_FCU_ROTARY_SPEED_PUSH_Set)
Speed_Selected_pull#1 (>B:INSTRUMENT_FCU_ROTARY_SPEED_PULL_Set)
//IniBuilds/A400M/Brakes
Parking_Brake_OFF#0 (>B:LANDING_GEAR_PARKINGBRAKE_Set)
Parking_Brake_ON#1 (>B:LANDING_GEAR_PARKINGBRAKE_Set)
//IniBuilds/A400M/EFIS
Map_Range_Decrease#1 (>B:AIRLINER_CPT_EFIS_R_KNOB_SMALL_Dec)
Map_Range_Increase#1 (>B:AIRLINER_CPT_EFIS_R_KNOB_SMALL_Inc)
//IniBuilds/AN225/Electrical
AN225_ELEC_BATTERY_1_TOGGLE#(L:AN225_BATT1_SWITCH) ! (>L:AN225_BATT1_SWITCH)
AN225_ELEC_BATTERY_2_TOGGLE#(L:AN225_BATT2_SWITCH) ! (>L:AN225_BATT2_SWITCH)
AN225_ELEC_BATTERY_3_TOGGLE#(L:AN225_BATT3_SWITCH) ! (>L:AN225_BATT3_SWITCH)
AN225_ELEC_BATTERY_3_TOGGLE#(L:AN225_BATT3_SWITCH) ! (>L:AN225_BATT3_SWITCH)
AN225_ELEC_BATTERY_4_TOGGLE#(L:AN225_BATT4_SWITCH) ! (>L:AN225_BATT4_SWITCH)
AN225_ELEC_BATTERY_5_TOGGLE#(L:AN225_BATT5_SWITCH) ! (>L:AN225_BATT5_SWITCH)
AN225_ELEC_GENERATOR_1_TOGGLE#(L:AN225_ENG1_GEN_ON) ! (>L:AN225_ENG1_GEN_ON)
AN225_ELEC_GENERATOR_2_TOGGLE#(L:AN225_ENG2_GEN_ON) ! (>L:AN225_ENG2_GEN_ON)
AN225_ELEC_GENERATOR_3_TOGGLE#(L:AN225_ENG3_GEN_ON) ! (>L:AN225_ENG3_GEN_ON)
AN225_ELEC_GENERATOR_4_TOGGLE#(L:AN225_ENG4_GEN_ON) ! (>L:AN225_ENG4_GEN_ON)
AN225_ELEC_RECTIFIER_1_TOGGLE#AN225_ENG1_GEN_BUS_TOGGLE
AN225_ELEC_RECTIFIER_2_TOGGLE#(L:AN225_ENG2_GEN_BUS_TOGGLE) ! (>L:AN225_ENG2_GEN_BUS_TOGGLE)
AN225_ELEC_RECTIFIER_3_TOGGLE#(L:AN225_ENG3_GEN_BUS_TOGGLE) ! (>L:AN225_ENG3_GEN_BUS_TOGGLE)
AN225_ELEC_RECTIFIER_4_TOGGLE#(L:AN225_ENG4_GEN_BUS_TOGGLE) ! (>L:AN225_ENG4_GEN_BUS_TOGGLE)
AN225_ELEC_TRANSFORMER_1_TOGGLE#(L:AN225_TR1_STATUS) ! (>L:AN225_TR1_STATUS)
AN225_ELEC_TRANSFORMER_2_TOGGLE#(L:AN225_TR2_STATUS) ! (>L:AN225_TR2_STATUS)
AN225_ELEC_TRANSFORMER_3_TOGGLE#(L:AN225_TR3_STATUS) ! (>L:AN225_TR3_STATUS)
AN225_ELEC_TRANSFORMER_4_TOGGLE#(L:AN225_TR4_STATUS) ! (>L:AN225_TR4_STATUS)
//JPLogistics/Cessna 152/Interaction
Open_Pilot_Door#(L:C152X_DOOR_PILOT, 0) ! (>L:C152X_DOOR_PILOT, 1) (L:C152X_DOOR_PILOT, 1) ! (>L:C152X_DOOR_PILOT, 0)
//JPLogistics/Cessna 152X/Flight Instrumentation
C152X_DME_Power_Toggle#(L:C152X_DME_POWER) ! (>L:C152X_DME_POWER)
Old_Transponder_Power#(L:C152X_XPNDR_KNOB, Number) 0 == if{ 3 (>L:C152X_XPNDR_KNOB, Number) } els{ 0 (>L:C152X_XPNDR_KNOB, Number) }
//JPLogistics/Cessna 152X/Interaction
C152X-Copilot-Window-toggle#(L:C152X_COPILOT_WINDOW, Number) 0 == if{ 16384 (>L:C152X_COPILOT_WINDOW, Number) } els{ 0 (>L:C152X_COPILOT_WINDOW, Number) }
C152X-Copilot-door-toggle#(L:C152X_DOOR_COPILOT, Number) ! (>L:C152X_DOOR_COPILOT, Number)
C152X-Pilot-Door-toggle#(L:C152X_DOOR_PILOT, Number) ! (>L:C152X_DOOR_PILOT, Number)
C152X-Pilot-Window-toggle#(L:C152X_PILOT_WINDOW, Number) 0 == if{ 16384 (>L:C152X_PILOT_WINDOW, Number) } els{ 0 (>L:C152X_PILOT_WINDOW, Number) }
C152X-visor-copilot-axis-down#(L:C152X-visor-copilot-axis) 16384 max 0 min (>A:LIGHT LOGO:5, Number)
C152X-visor-copilot-toggle#(L:C152X_COPILOT_VISOR, Number) 0 == if{ 16384 (>L:C152X_COPILOT_VISOR, Number) } els{ 0 (>L:C152X_COPILOT_VISOR, Number) }
C152X-visor-pilot-toggle#(L:C152X_PILOT_VISOR, Number) 0 == if{ 16384 (>L:C152X_PILOT_VISOR, Number) } els{ 0 (>L:C152X_PILOT_VISOR, Number) }
C152X-window-copilot-handle-toggle#(L:C152X_WINDOW_HANDLE_Copilot, Number) ! (>L:C152X_WINDOW_HANDLE_Copilot, Number)
C152X-window-pilot-handle-toggle#(L:C152X_WINDOW_HANDLE_Pilot, Number) ! (>L:C152X_WINDOW_HANDLE_Pilot, Number)
//Just Flight/AnalogBaron/Gear
LANDING_GAR_LEVER#p0 0 max 1 min s0 (>K:GEAR_SET) 10 (>L:LANDING_GEAR_Gear)
//Just Flight/Avro RJ/Autopilot
_Right_Flight_Director_Toggle_Press#1 (>L:MCP_FD_R_switch)
Auto_Pilot_1#1 (>L:MCP_Mode_NAV1)
Auto_Throttle_Toggle_Press#1 (>L:MCP_AT_switch)
Auto_Throttle_Toggle_Release#0 (>L:MCP_AT_switch)
Autopilot_2#1 (>L:MCP_Mode_NAV2)
Autopilot_ALT_HOLD_Button#1 (>L:MCP_Mode_ALT)
Autopilot_APP_Button#1 (>L:MCP_Mode_APP)
Autopilot_Alt_Sel_Decrement#(L:MCP_Alt_sel_knob) -- (>L:MCP_Alt_sel_knob)
Autopilot_Alt_Sel_Increment#(L:MCP_Alt_sel_knob) ++ (>L:MCP_Alt_sel_knob)
Autopilot_Altitude_Sel_Decrement#(L:MCP_Alt_sel_knob)--(>L:MCP_Alt_sel_knob)
Autopilot_Altitude_Sel_Increment#(L:MCP_Alt_sel_knob)++(>L:MCP_Alt_sel_knob)
Autopilot_C_O_Button#1 (>L:MCP_Mode_CO)
Autopilot_FLCH_Button#1 (>L:MCP_Mode_LvlChg)
Autopilot_HDG_Button#1 (>L:MCP_Mode_HDG)
Autopilot_HDG_Decrement#(L:MCP_HDG_sel) -- (>L:MCP_HDG_sel)
Autopilot_HDG_Increment#(L:MCP_HDG_sel) ++ (>L:MCP_HDG_sel)
Autopilot_THRUST_Button#1 (>L:MCP_Mode_Thrust)
Autopilot_VOR_LOC_Button#1 (>L:MCP_Mode_VL)
Autopilot_VS_Button#1 (>L:MCP_Mode_VS)
IAS_MACH_SELECTOR_-_INCREASE#(L:MCP_Speed_sel_inc) -- (>L:MCP_Speed_sel_inc)
LNAV_Button#1 (>L:MCP_Mode_LNAV)
Left_Course_Sel_Decrement#(L:MCP_CRS1_sel) -- (>L:MCP_CRS1_sel)
Left_Course_Sel_Increment#(L:MCP_CRS1_sel) ++ (>L:MCP_CRS1_sel)
Left_Flight_Director_Toggle_Press#1 (>L:MCP_FD_L_switch)
Left_Flight_Director_Toggle_Release#0 (>L:MCP_FD_L_switch)
Right_Course_Decrement#(L:MCP_CRS2_sel)--(>L:MCP_CRS2_sel)
Right_Course_Increment#(L:MCP_CRS2_sel)++(>L:MCP_CRS2_sel)
Right_Flight_Director_Toggle_Release#0 (>L:MCP_FD_R_switch)
Speed_Increase#(L:MCP_Spd_sel_knob) ++ (>L:MCP_Spd_sel_knob)
Speed_Selctor_Decrease#(L:MCP_Speed_sel_dec) ++ (>L:MCP_Speed_sel_dec)
Speed_Selector_Increase#(L:MCP_speed_sel_inc) ++ (>L:MCP_Speed_sel_inc)
VNAV_Button#1 (>L:MCP_Mode_VNAV)
//Just Flight/Avro RJ/EFIS (left)
L_NAV_FORMAT_Arc#1 (>L:PED_FWD_L_NAV_Format)
L_NAV_FORMAT_Map#2 (>L:PED_FWD_L_NAV_Format)
L_NAV_FORMAT_Plan#3 (>L:PED_FWD_L_NAV_Format)
L_NAV_FORMAT_Rose#0 (>L:PED_FWD_L_NAV_Format)
L_NAV_Range_10#0 (>L:PED_FWD_L_NAV_Range)
L_NAV_Range_160#4 (>L:PED_FWD_L_NAV_Range)
L_NAV_Range_20#1 (>L:PED_FWD_L_NAV_Range)
L_NAV_Range_320#5 (>L:PED_FWD_L_NAV_Range)
L_NAV_Range_40#2 (>L:PED_FWD_L_NAV_Range)
L_NAV_Range_80#3 (>L:PED_FWD_L_NAV_Range)
L_ND_ARPT#(L:JF_RJ_ND_L_arpt) ++ 2 % (>L:JF_RJ_ND_L_arpt)
L_ND_DATA#(L:JF_RJ_ND_L_data) ++ 5 % (>L:JF_RJ_ND_L_data)
L_ND_GRP#(L:JF_RJ_ND_L_grp) ++ 2 % (>L:JF_RJ_ND_L_grp)
L_ND_NAID#(L:JF_RJ_ND_L_naid) ++ 2 % (>L:JF_RJ_ND_L_naid)
L_ND_NAV_FORMAT_dec#(L:PED_FWD_L_NAV_Format) -- 0 max (>L:PED_FWD_L_NAV_Format)
L_ND_NAV_FORMAT_inc#(L:PED_FWD_L_NAV_Format) ++ 3 min (>L:PED_FWD_L_NAV_Format)
L_ND_Range_dec#(L:PED_FWD_L_NAV_Range) -- 0 max (>L:PED_FWD_L_NAV_Range)
L_ND_Range_inc#(L:PED_FWD_L_NAV_Range) ++ 5 min (>L:PED_FWD_L_NAV_Range)
//Just Flight/Avro RJ/FMS
JF_RJ_FMS_PLUS_MINUS_Key#1 (>L:GNLU910_L_FMS_PlusMinus)
JF_RJ_FMS_SLASH_Key#1 (>L:GNLU910_L_FMS_Div)
JF_RJ_LEFT__FMS_DOT_Key#1 (>L:GNLU910_L_FMS_Dot)
JF_RJ_LEFT__FMS_Key_1#1 (>L:GNLU910_L_FMS_1)
JF_RJ_LEFT_FMS_A_Key#1 (>L:GNLU910_L_FMS_A)
JF_RJ_LEFT_FMS_B_Key#1 (>L:GNLU910_L_FMS_B)
JF_RJ_LEFT_FMS_C_Key#1 (>L:GNLU910_L_FMS_C)
JF_RJ_LEFT_FMS_CLR_Key#1 (>L:GNLU910_L_FMS_Clr)
JF_RJ_LEFT_FMS_D_Key#1 (>L:GNLU910_L_FMS_D)
JF_RJ_LEFT_FMS_DEL_Key#1 (>L:GNLU910_L_FMS_Del)
JF_RJ_LEFT_FMS_DEP_ARR#1 (>L:GNLU910_L_FMS_DepArr)
JF_RJ_LEFT_FMS_E_Key#1 (>L:GNLU910_L_FMS_E)
JF_RJ_LEFT_FMS_EXEC_BUTTON#1 (>L:GNLU910_L_FMS_Exec)
JF_RJ_LEFT_FMS_F_Key#1 (>L:GNLU910_L_FMS_F)
JF_RJ_LEFT_FMS_FIX#1 (>L:GNLU910_L_FMS_Fix)
JF_RJ_LEFT_FMS_G_Key#1 (>L:GNLU910_L_FMS_G)
JF_RJ_LEFT_FMS_H_Key#1 (>L:GNLU910_L_FMS_H)
JF_RJ_LEFT_FMS_HOLD#1 (>L:GNLU910_L_FMS_hold)
JF_RJ_LEFT_FMS_I_Key#1 (>L:GNLU910_L_FMS_I)
JF_RJ_LEFT_FMS_INIT_REF#1 (>L:GNLU910_L_FMS_InitRef)
JF_RJ_LEFT_FMS_J_Key#1 (>L:GNLU910_L_FMS_J)
JF_RJ_LEFT_FMS_K_Key#1 (>L:GNLU910_L_FMS_K)
JF_RJ_LEFT_FMS_Key_2#1 (>L:GNLU910_L_FMS_2)
JF_RJ_LEFT_FMS_Key_3#1 (>L:GNLU910_L_FMS_3)
JF_RJ_LEFT_FMS_Key_4#1 (>L:GNLU910_L_FMS_4)
JF_RJ_LEFT_FMS_Key_5#1 (>L:GNLU910_L_FMS_5)
JF_RJ_LEFT_FMS_Key_6#1 (>L:GNLU910_L_FMS_6)
JF_RJ_LEFT_FMS_Key_7#1 (>L:GNLU910_L_FMS_7)
JF_RJ_LEFT_FMS_Key_8#1 (>L:GNLU910_L_FMS_8)
JF_RJ_LEFT_FMS_Key_9#1 (>L:GNLU910_L_FMS_9)
JF_RJ_LEFT_FMS_Key_ZERO#1 (>L:GNLU910_L_FMS_0)
JF_RJ_LEFT_FMS_L_Key#1 (>L:GNLU910_L_FMS_L)
JF_RJ_LEFT_FMS_LEGS#1 (>L:GNLU910_L_FMS_Legs)
JF_RJ_LEFT_FMS_LSK_1L#1 (>L:GNLU910_L_FMS_Lsk_1L)
JF_RJ_LEFT_FMS_LSK_1R#1 (>L:GNLU910_L_FMS_Lsk_1R)
JF_RJ_LEFT_FMS_LSK_2L#1 (>L:GNLU910_L_FMS_Lsk_2L)
JF_RJ_LEFT_FMS_LSK_3L#1 (>L:GNLU910_L_FMS_Lsk_3L)
JF_RJ_LEFT_FMS_LSK_4L#1 (>L:GNLU910_L_FMS_Lsk_4L)
JF_RJ_LEFT_FMS_LSK_4R#1 (>L:GNLU910_L_FMS_Lsk_4R)
JF_RJ_LEFT_FMS_LSK_5L#1 (>L:GNLU910_L_FMS_Lsk_5L)
JF_RJ_LEFT_FMS_LSK_6L#1 (>L:GNLU910_L_FMS_Lsk_6L)
JF_RJ_LEFT_FMS_LSK_6R#1 (>L:GNLU910_L_FMS_Lsk_6R)
JF_RJ_LEFT_FMS_LSK_R2#1 (>L:GNLU910_L_FMS_Lsk_2R)
JF_RJ_LEFT_FMS_LSK_R3#1 (>L:GNLU910_L_FMS_Lsk_3R)
JF_RJ_LEFT_FMS_LSK_R5#1 (>L:GNLU910_L_FMS_Lsk_5R)
JF_RJ_LEFT_FMS_M_Key#1 (>L:GNLU910_L_FMS_M)
JF_RJ_LEFT_FMS_MENU#1 (>L:GNLU910_L_FMS_menu)
JF_RJ_LEFT_FMS_N_Key#1 (>L:GNLU910_L_FMS_N)
JF_RJ_LEFT_FMS_NAV_RAD#1 (>L:GNLU910_L_FMS_NavRad)
JF_RJ_LEFT_FMS_NEXT_PAGE#2 (>L:GNLU910_L_FMS_PrvNxt) (>L:PED_FWD_L_FMS_Next)
JF_RJ_LEFT_FMS_O_Key#1 (>L:GNLU910_L_FMS_O)
JF_RJ_LEFT_FMS_P_Key#1 (>L:GNLU910_L_FMS_P)
JF_RJ_LEFT_FMS_PREV_PAGE#(>L:GNLU910_L_FMS_PrvNxt) (>L:PED_FWD_L_FMS_Prev)
JF_RJ_LEFT_FMS_PROG#1 (>L:GNLU910_L_FMS_Prog)
JF_RJ_LEFT_FMS_Q_Key#1 (>L:GNLU910_L_FMS_Q)
JF_RJ_LEFT_FMS_R_Key#1 (>L:GNLU910_L_FMS_R)
JF_RJ_LEFT_FMS_RTE#1 (>L:GNLU910_L_FMS_Rte)
JF_RJ_LEFT_FMS_S_Key#1 (>L:GNLU910_L_FMS_S)
JF_RJ_LEFT_FMS_SP_Key#1 (>L:GNLU910_L_FMS_Sp)
JF_RJ_LEFT_FMS_T_Key#1 (>L:GNLU910_L_FMS_T)
JF_RJ_LEFT_FMS_U_Key#1 (>L:GNLU910_L_FMS_U)
JF_RJ_LEFT_FMS_V_Key#1 (>L:GNLU910_L_FMS_V)
JF_RJ_LEFT_FMS_VNAV#1 (>L:GNLU910_L_FMS_Vnav)
JF_RJ_LEFT_FMS_W_Key#1 (>L:GNLU910_L_FMS_W)
JF_RJ_LEFT_FMS_X_Key#1 (>L:GNLU910_L_FMS_X)
JF_RJ_LEFT_FMS_Y_Key#1 (>L:GNLU910_L_FMS_Y)
JF_RJ_LEFT_FMS_Z_Key#1 (>L:GNLU910_L_FMS_Z)
//Just Flight/Avro Vulcan/Avionics
VLC_TACAN_Left_Dec#(L:TACAN_Code_Sel_Dig1,enum) -- (>L:TACAN_Code_Sel_Dig1,enum) (L:TACAN_Code_Sel_Dig1,enum) 0 < if{ 12 (>L:TACAN_Code_Sel_Dig1,enum) }
VLC_TACAN_Left_Inc#(L:TACAN_Code_Sel_Dig1,enum) ++ 12 % (>L:TACAN_Code_Sel_Dig1,enum)
VLC_TACAN_Right_Dec#(L:TACAN_Code_Sel_Dig2,enum) -- (>L:TACAN_Code_Sel_Dig2,enum) (L:TACAN_Code_Sel_Dig2,enum) 0 < if{ 9 (>L:TACAN_Code_Sel_Dig2,enum) }
VLC_TACAN_Right_Inc#(L:TACAN_Code_Sel_Dig2,enum) ++ 9 % (>L:TACAN_Code_Sel_Dig2,enum)
VLC_TACAN_Switch_XY#(L:TACAN_XY_Switch) ! (>L:TACAN_XY_Switch,enum)
//Just Flight/Avro Vulcan/Engines
Engine_1_Start_Button#1 (>L:PORT_CONSOLE_START_Eng1_IsDown)
Engine_2_Start_Button#1 (>L:PORT_CONSOLE_START_Eng2_IsDown)
Engine_3_Start_Button#1 (>L:PORT_CONSOLE_START_Eng3_IsDown)
Engine_4_Start_Button#1 (>L:PORT_CONSOLE_START_Eng4_IsDown)
//Just Flight/BAE146/Autopilot
Autopilot_ALT_ARM_Button#1 (>L:MCP_ALT_arm)
Autopilot_ALT_Button#1 (>L:MCP_Mode_ALT)
Autopilot_ALT_SEL_Decrement#(L:MCP_Alt_sel_knob) -- (>L:MCP_Alt_sel_knob)
Autopilot_ALT_SEL_Encoder#(L:MCP_Alt_sel_knob, enum) -- (>L:MCP_Alt_sel_knob, enum) (L:MCP_Alt_sel_knob, enum) 0 < if{ 99 (>MCP_Alt_sel_knob, enum) }
Autopilot_ALT_SEL_Increment#(L:MCP_Alt_sel_knob) ++ (>L:MCP_Alt_sel_knob)
Autopilot_BLOC_Button#1 (>L:MCP_Mode_BLOC)
Autopilot_GSL_Button#1 (>L:MCP_Mode_GSL)
Autopilot_HDG_Button#1 (>L:MCP_Mode_HDG)
Autopilot_IAS_Button#1 (>L:MCP_Mode_IAS)
Autopilot_LNAV_Button#1 (>L:MCP_Mode_LNAV)
Autopilot_MACH_Button#1 (>L:MCP_Mode_MACH)
Autopilot_TURB_Button#1 (>L:MCP_Mode_TURB)
Autopilot_V_L_Button#1 (>L:MCP_Mode_VL)
Autopilot_VNAV_Button#1 (>L:MCP_Mode_VNAV)
Autopilot_VS_Button#1 (>L:MCP_Mode_VS)
Toogle_AP_Sync_Button#(>K:TOGGLE_AFTERBURNER)
//Just Flight/BAE146/Autothrust System
TMS_Disconnect_Button_Left_Lever_#1 (>L:PED_MID_TMS_disc_L)
TMS_Disconnect_Button_Right_Lever#1 (>L:PED_MID_TMS_disc_R)
TMS_Power_Switch#1 (>L:R_TMS_Pwr)
TMS_Ctrl_Switch#1 (>L:R_TMS_Ctrl)
TMS_Desc_Switch#1 (>L:R_TMS_Desc)
TMS_Eng1_Switch#1 (>L:R_TMS_Eng1)
TMS_Eng2_Switch#1 (>L:R_TMS_Eng2)
TMS_Eng3_Switch#1 (>L:R_TMS_Eng3)
TMS_Eng4_Switch#1 (>L:R_TMS_Eng4)
TMS_Mct_Switch#1 (>L:R_TMS_Mct)
TMS_Mstr_Switch#1 (>L:R_TMS_Mstr)
TMS_Sync_Switch#1 (>L:R_TMS_Sync)
TMS_Tgt_Switch#1 (>L:R_TMS_Tgt)
TMS_To_Switch#1 (>L:R_TMS_To)
//Just Flight/BAE146/Electrical
OVHD_APU_OFF#0 (>L:OVHD_APU_StartStop, bool)
OVHD_APU_ON#1 (>L:OVHD_APU_StartStop, bool)
OVHD_Batterie_1#1 (>L:OVHD_ELEC_Batt1_on)
OVHD_Batterie_2#1 (>L:OVHD_ELEC_Batt2_on)
//Just Flight/BAE146/Engine
OVHD_ENG_StartMaster_OFF#0 (>L:OVHD_ENG_StartSel)
OVHD_ENG_StartMaster_ON#1 (>L:OVHD_ENG_StartMaster)
OVHD_ENG_StartMaster_TOGGLE#(L:OVHD_ENG_StartMaster, Number) ! (>L:OVHD_ENG_StartMaster)
OVHD_ENG_StartSel_1#0 (>L:OVHD_ENG_StartSel)
OVHD_ENG_StartSel_2#1 (>L:OVHD_ENG_StartSel)
OVHD_ENG_StartSel_3#3 (>L:OVHD_ENG_StartSel)
OVHD_ENG_StartSel_4#4 (>L:OVHD_ENG_StartSel)
OVHD_ENG_StartSel_Off#2 (>L:OVHD_ENG_StartSel)
//Just Flight/BAE146/FMS
FMS_System#Same Inputs like CJ4
UNS-1_ENTER_-_Left_unit#1 (>L:PED_FWD_L_FMS_ENTER)
UNS-1_Next_page_-_Left_unit#1 (>L:PED_FWD_L_FMS_NEXT)
UNS-1_Previous_page_-_Left_unit#1 (>L:PED_FWD_L_FMS_PREV)
//Just Flight/BAE146/Flight Instrumentation
HSI_RNAV_Mode_off#0 (>L:L_MISC_HSI_mode, bool)
HSI_RNAV_Mode_on#1 (>L:L_MISC_HSI_mode, bool)
Left_ASI_knob_bug_Decrease#(L:L_ASI_Bug_knob) -- (>L:L_ASI_Bug_knob)
Left_ASI_knob_bug_Increase#(L:L_ASI_Bug_knob) ++ (>L:L_ASI_Bug_knob)
//Just Flight/BAE146/Radio
Transponder_TCAS_Mode_select_knob_ABV#5 (>L:PED_AFT_XPDR_MODE)
Transponder_TCAS_Mode_select_knob_ALT_OFF#1 (>L:PED_AFT_XPDR_MODE)
Transponder_TCAS_Mode_select_knob_BLW#6 (>L:PED_AFT_XPDR_MODE)
Transponder_TCAS_Mode_select_knob_STBY#0 (>L:PED_AFT_XPDR_MODE)
Transponder_TCAS_Mode_select_knob_TA#3 (>L:PED_AFT_XPDR_MODE)
Transponder_TCAS_Mode_select_knob_TA_RA#4 (>L:PED_AFT_XPDR_MODE)
Transponder_TCAS_Mode_select_knob_XPNDR#2 (>L:PED_AFT_XPDR_MODE)
//Just Flight/BAE146/Warning
Master_Warning_System_-_Amber_Button#1 (>L:L_COAMING_MWS_Amber)
Master_Warning_System_-_Red_Button#1 (>L:L_COAMING_MWS_Red)
//Just Flight/C208 Caravan/Anti-Ice
A_ICE_PITOT_HEAT_1-2_OFF#1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1) 2 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_2)
A_ICE_PITOT_HEAT_1-2_ON#1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1) 2 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_2)
PROPELLER_DEICE_MODE#0 (>L:var_propDeiceMode)
Windshield_MODE#0 (>L:var_windshieldDeiceMode)
//Just Flight/C208 Caravan/Autopilot
AP_LNAV_MODE__BENDIX_KAP_140_#(>K:AP_NAV1_HOLD)
AP_Master_TOGGLE#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) if{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } (A:AUTOPILOT MASTER, bool) ! if{ (H:Generic_Autopilot_Manual_Off) } }
AP_V_S_DN_BUTTON__KAP_140_#(>H:KAP140_Push_DN)
AP_V_S_UP_BUTTON__KAP_140_#(>H:KAP140_Push_UP)
GPS_NAV_Autopilot_Source_TOGGLE#(>K:TOGGLE_GPS_DRIVES_NAV1)
//Just Flight/C208 Caravan/Electrical
Starter_-_Motor#1 (>K:1:STARTER1_SET) 0 (>K:1:TURBINE_IGNITION_SWITCH_SET1)
Starter_-_OFF#0 (>A:TURB ENG IGNITION SWITCH EX1:1, Enum) 0 (>L:XMLVAR_Ignition)
Starter_-_Start#2 (>K:1:STARTER1_SET) 1 (>K:1:TURBINE_IGNITION_SWITCH_SET1)
//Just Flight/C208 Caravan/Flight Controls
FUEL_Condition_Lever#1 (>K:SET_FUEL_VALVE_ENG1) 
FUEL_Tanks_Selector_Both_ON#1 (>K:FUEL_SELECTOR_SET)
//Just Flight/C208 Caravan/Fuel
FUEL_Tanks_Selector_Both_OFF#0 (>K:FUEL_SELECTOR_SET)
Fuel_Boost_MODE#1 (>K:ELECT_FUEL_PUMP1_SET)
//Just Flight/C208 Caravan/Light
Cabin_Light_OFF#0 (>K:2:CABIN_LIGHTS_SET)
Cabin_Light_ON#1 (>K:2:CABIN_LIGHTS_SET)
Circuit_Breakers_Light_Decr#(A:LIGHT POTENTIOMETER:8, Percent) 1 - 0 max 8 (>K:2:LIGHT_POTENTIOMETER_SET)
Circuit_Breakers_Light_Incr#1 (>K:2:Glareshield_LIGHTS_SET) (A:LIGHT POTENTIOMETER:8, Percent) 1 + 100 min 8 (>K:2:LIGHT_POTENTIOMETER_SET)
Copilot_instrument_Decr#(A:LIGHT POTENTIOMETER:3, Percent) 1 - 0 max 3 (>K:2:LIGHT_POTENTIOMETER_SET)
Copilot_instrument_Incr#1 (>K:2:Panel_LIGHTS_SET) (A:LIGHT POTENTIOMETER:3, Percent) 1 + 100 min 3 (>K:2:LIGHT_POTENTIOMETER_SET)
Engine_Instruments_Light_Decr#(A:LIGHT POTENTIOMETER:4, Percent) 1 - 0 max 4 (>K:2:LIGHT_POTENTIOMETER_SET)
Engine_Instruments_Light_Incr#1 (>K:2:Panel_LIGHTS_SET) (A:LIGHT POTENTIOMETER:4, Percent) 1 + 100 min 4 (>K:2:LIGHT_POTENTIOMETER_SET)
Pedestal_Flood_Light_Decr#(A:LIGHT POTENTIOMETER:7, Percent) 1 - 0 max 7 (>K:2:LIGHT_POTENTIOMETER_SET)
Pedestal_Flood_Light_Incr#1 (>K:2:Glareshield_LIGHTS_SET) (A:LIGHT POTENTIOMETER:7, Percent) 1 + 100 min 7 (>K:2:LIGHT_POTENTIOMETER_SET)
Pilot_instrument_Decr#(A:LIGHT POTENTIOMETER:2, Percent) 1 - 0 max 2 (>K:2:LIGHT_POTENTIOMETER_SET)
Pilot_instrument_Incr#1 (>K:2:Panel_LIGHTS_SET) (A:LIGHT POTENTIOMETER:2, Percent) 1 + 100 min 2 (>K:2:LIGHT_POTENTIOMETER_SET)
Radio_Panels_Backlight_Decr#(A:LIGHT POTENTIOMETER:9, Percent) 1 - 0 max 9 (>K:2:LIGHT_POTENTIOMETER_SET)
Radio_Panels_Backlight_Incr#1 (>K:2:Panel_LIGHTS_SET) (A:LIGHT POTENTIOMETER:9, Percent) 1 + 100 min 9 (>K:2:LIGHT_POTENTIOMETER_SET)
//Just Flight/C208 Caravan/Lights
Beacon_Light_OFF#0 (>K:BEACON_LIGHTS_SET)
Beacon_Light_ON#1 (>K:BEACON_LIGHTS_SET)
NAV_Lights_OFF#0 (>K:2:NAV_LIGHTS_SET)
NAV_Lights_ON#1 (>K:2:NAV_LIGHTS_SET)
Strobes_Lights_OFF#0 (>K:2:STROBES_SET)
Strobes_Lights_ON#1 (>K:2:STROBES_SET)
//Just Flight/F28 Professional/Autopilot
Autopilot_ALT_Button#(L:AP_PRESELECT_3_BUTTON) ! (>L:AP_PRESELECT_3_BUTTON)
Autopilot_AP_Switch#(L:F28_PED_AP_SWITCH) ! (>L:F28_PED_AP_SWITCH)
Autopilot_BEAM_Button#(L:F28_MCP_BEAM_Button) ! (>L:F28_MCP_BEAM_Button)
Autopilot_GLIDE_Button#(L:F28_MCP_GLIDE_Button) ! (>L:F28_MCP_GLIDE_Button)
Autopilot_HDG_Button#1 (>L:F28_MCP_HEADING_Button)
Autopilot_VS_Button#(L:AP_PRESELECT_4_BUTTON) ! (>L:AP_PRESELECT_4_BUTTON)
//Just Flight/F28 Professional/Avionics
HDG_Knob_Decrease#(L:FWD_HSI_Hdg_Knob,enum) -- 0 max (>L:FWD_HSI_Hdg_Knob,enum) (>K:HEADING_BUG_DEC) (L:FWD_HSI_Hdg_Knob,enum) 0 == if{ 100 (>L:FWD_HSI_Hdg_Knob,enum) }
HDG_Knob_Increase#(L:FWD_HSI_Hdg_Knob,enum) ++ 100 min (>L:FWD_HSI_Hdg_Knob,enum) (>K:HEADING_BUG_INC) (L:FWD_HSI_Hdg_Knob,enum) 100 == if{ 0 (>L:FWD_HSI_Hdg_Knob,enum) }
NAV1_Base_Knob_Decrease#1 (>L:F28_MCP_NAV-1_BASE-ROTARY_SWITCH_DEC)
NAV1_Base_Knob_Increase#1 (>L:F28_MCP_NAV-1_BASE-ROTARY_SWITCH_INC)
NAV1_Middle_Knob_Decrease#1 (>L:F28_MCP_NAV-1_MID-ROTARY_SWITCH_DEC)
NAV1_Middle_Knob_Increase#1 (>L:F28_MCP_NAV-1_MID-ROTARY_SWITCH_INC)
NAV2_Base_Knob_Decrease#1 (>L:F28_MCP_NAV-2_BASE-ROTARY_SWITCH_DEC)
NAV2_Base_Knob_Increase#1 (>L:F28_MCP_NAV-2_BASE-ROTARY_SWITCH_INC)
NAV2_Middle_Knob_Decrease#1 (>L:F28_MCP_NAV-2_MID-ROTARY_SWITCH_DEC)
NAV2_Middle_Knob_Increase#1 (>L:F28_MCP_NAV-2_MID-ROTARY_SWITCH_INC)
//Just Flight/F28 Professional/Backlights and flood lights
F28_Red_Dome_Toggle#(L:F28_PED_Lights_Toggle_Red-Dome_Switch, Number) 2 == if{ 0 (>L:F28_PED_Lights_Toggle_Red-Dome_Switch, Number) } els{ (L:F28_PED_Lights_Toggle_Red-Dome_Switch, Number) 1 + (>L:F28_PED_Lights_Toggle_Red-Dome_Switch, Number) }
//Just Flight/F28 Professional/EFIS
BARO_Decrease#1 (>K:KOHLSMAN_DEC)
BARO_Increase#1 (>K:KOHLSMAN_INC)
//Just Flight/F28 Professional/Engine and FADEC System
F28_TTC_Toggle#(L:F28_PED_TCC_R_Toggle_Switch, Number) 0 == if{ 1 (>L:F28_PED_TCC_R_Toggle_Switch, Number) 1 (>L:F28_PED_TCC_L_Toggle_Switch, Number) } els{ 0 (>L:F28_PED_TCC_R_Toggle_Switch, Number) 0 (>L:F28_PED_TCC_L_Toggle_Switch, Number) } 
//Just Flight/F28 Professional/Flight Instrumentation
CRS1_Knob_Decrease#1 (>L:F28_MCP_CRS-1_ROTARY_SWITCH_DEC)
CRS1_Knob_Increase#1 (>L:F28_MCP_CRS-1_ROTARY_SWITCH_INC)
CRS2_Knob_Decrease#1 (>L:F28_MCP_CRS-2_ROTARY_SWITCH_DEC)
CRS2_Knob_Increase#1 (>L:F28_MCP_CRS-2_ROTARY_SWITCH_INC)
//Just Flight/F28 Professional/Radio
COM1_Bottom_Knob_Decrease#1 (>L:F28_PED_COM1_TUNE-BOTTOM_ROTARY_KNOB_DEC)
COM1_Bottom_Knob_Increase#1 (>L:F28_PED_COM1_TUNE-BOTTOM_ROTARY_KNOB_INC)
COM1_Top_Knob_Decrease#1 (>L:F28_PED_COM1_TUNE-TOP_ROTARY_KNOB_DEC)
COM1_Top_Knob_Increase#1 (>L:F28_PED_COM1_TUNE-TOP_ROTARY_KNOB_INC)
COM2_Bottom_Knob_Increase#1 (>L:F28_PED_COM2_TUNE-BOTTOM_ROTARY_KNOB_INC)
COM2_Top_Knob_Decrease#1 (>L:F28_PED_COM2_TUNE-TOP_ROTARY_KNOB_DEC)
COM2_Top_Knob_Increase#1 (>L:F28_PED_COM2_TUNE-TOP_ROTARY_KNOB_INC)
XPDR_Left_Bottom_Knob_Decrease#1 (>L:F28_PED_ATC-L-BOTTOM_ROTARY_SWITCH_DEC)
XPDR_Left_Bottom_Knob_Increase#1 (>L:F28_PED_ATC-L-BOTTOM_ROTARY_SWITCH_INC)
XPDR_Left_Top_Knob_Decrease#1 (>L:F28_PED_ATC-L-TOP_ROTARY_SWITCH_DEC)
XPDR_Left_Top_Knob_Increase#1 (>L:F28_PED_ATC-L-TOP_ROTARY_SWITCH_INC)
XPDR_Right_Bottom_Knob_Decrease#1 (>L:F28_PED_ATC-R-BOTTOM_ROTARY_SWITCH_DEC)
XPDR_Right_Bottom_Knob_Increase#1 (>L:F28_PED_ATC-R-BOTTOM_ROTARY_SWITCH_INC)
XPDR_Right_Top_Knob_Decrease#1 (>L:F28_PED_ATC-R-TOP_ROTARY_SWITCH_DEC)
XPDR_Right_Top_Knob_Increase#1 (>L:F28_PED_ATC-R-TOP_ROTARY_SWITCH_INC)
//Just Flight/Hawk T1/Anti-Ice
HT1_FWD_LEFT_PitotHeat_Off#0 (>L:FWD_LEFT_PitotHeat)
HT1_FWD_LEFT_PitotHeat_On#1 (>L:FWD_LEFT_PitotHeat)
//Just Flight/Hawk T1/Avionics
HT1_FWD_KNEE_Erect_Press#1 (>L:FWD_KNEE_Erect_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_KNEE_Erect_MinReleaseTime)
HT1_FWD_KNEE_Erect_Release#0 (>L:FWD_KNEE_Erect_IsDown) (L:FWD_KNEE_Erect_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_KNEE_Erect_LeftLeaveToRun) }
HT1_FWD_KNEE_HSI_Mode_DG#1 (>L:FWD_KNEE_HSI_Mode)
HT1_FWD_KNEE_HSI_Mode_Off#0 (>L:FWD_KNEE_HSI_Mode)
HT1_FWD_KNEE_HSI_Mode_SLV#2 (>L:FWD_KNEE_HSI_Mode)
HT1_FWD_KNEE_Hdg_Push#1 (L:FWD_KNEE_Hdg_Push,bool)
HT1_FWD_KNEE_Hdg_Set_Dec#(L:FWD_KNEE_Hdg_Set,enum) -- (>L:FWD_KNEE_Hdg_Set,enum) (L:FWD_KNEE_Hdg_Set,enum) 0 < if{ (99 (>L:FWD_KNEE_Hdg_Set) }
HT1_FWD_KNEE_Hdg_Set_Inc#(L:FWD_KNEE_Hdg_Set,enum) ++ 100 % (>L:FWD_KNEE_Hdg_Set,enum)
HT1_FWD_KNEE_Lat_Dec#(L:FWD_KNEE_Lat,enum) -- 0 max (>L:FWD_KNEE_Lat,enum)
HT1_FWD_KNEE_Lat_Inc#(L:FWD_KNEE_Lat,enum) ++ 90 min (>L:FWD_KNEE_Lat,enum)
HT1_FWD_RIGHT_IFF_Dig1_Down#2 (>L:FWD_RIGHT_IFF_Dig1)
HT1_FWD_RIGHT_IFF_Dig1_Release#1 (>L:FWD_RIGHT_IFF_Dig1)
HT1_FWD_RIGHT_IFF_Dig1_Up#0 (>L:FWD_RIGHT_IFF_Dig1)
HT1_FWD_RIGHT_IFF_Dig2_Down#2 (>L:FWD_RIGHT_IFF_Dig2)
HT1_FWD_RIGHT_IFF_Dig2_Release#1 (>L:FWD_RIGHT_IFF_Dig2)
HT1_FWD_RIGHT_IFF_Dig2_Up#0 (>L:FWD_RIGHT_IFF_Dig2)
HT1_FWD_RIGHT_IFF_Dig3_Down#2 (>L:FWD_RIGHT_IFF_Dig3)
HT1_FWD_RIGHT_IFF_Dig3_Release#1 (>L:FWD_RIGHT_IFF_Dig3)
HT1_FWD_RIGHT_IFF_Dig3_Up#0 (>L:FWD_RIGHT_IFF_Dig3)
HT1_FWD_RIGHT_IFF_Dig4_Down#2 (>L:FWD_RIGHT_IFF_Dig4)
HT1_FWD_RIGHT_IFF_Dig4_Release#1 (>L:FWD_RIGHT_IFF_Dig4)
HT1_FWD_RIGHT_IFF_Dig4_Up#0 (>L:FWD_RIGHT_IFF_Dig4)
HT1_FWD_RIGHT_IFF_Func_Down#2 (>L:FWD_RIGHT_IFF_Func)
HT1_FWD_RIGHT_IFF_Func_Release#1 (>L:FWD_RIGHT_IFF_Func)
HT1_FWD_RIGHT_IFF_Func_Up#0 (>L:FWD_RIGHT_IFF_Func)
HT1_FWD_RIGHT_IFF_Ident_Press#1 (>L:FWD_RIGHT_IFF_Ident_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_IFF_Ident_MinReleaseTime)
HT1_FWD_RIGHT_IFF_Ident_Release#0 (>L:FWD_RIGHT_IFF_Ident_IsDown) (L:FWD_RIGHT_IFF_Ident_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_IFF_Ident_LeftLeaveToRun) }
HT1_FWD_RIGHT_IFF_LR_Center#1 (>L:FWD_RIGHT_IFF_LR)
HT1_FWD_RIGHT_IFF_LR_L#0 (>L:FWD_RIGHT_IFF_LR)
HT1_FWD_RIGHT_IFF_LR_R#2 (>L:FWD_RIGHT_IFF_LR)
HT1_FWD_RIGHT_IFF_M1_Auto#1 (>L:FWD_RIGHT_IFF_M1)
HT1_FWD_RIGHT_IFF_M1_M1#0 (>L:FWD_RIGHT_IFF_M1)
HT1_FWD_RIGHT_IFF_M1_Out#2 (>L:FWD_RIGHT_IFF_M1)
HT1_FWD_RIGHT_IFF_M2_M2#1 (>L:FWD_RIGHT_IFF_M2)
HT1_FWD_RIGHT_IFF_M2_Out#0 (>L:FWD_RIGHT_IFF_M2)
HT1_FWD_RIGHT_IFF_M3A_Auto#1 (>L:FWD_RIGHT_IFF_M3A)
HT1_FWD_RIGHT_IFF_M3A_M3A#0 (>L:FWD_RIGHT_IFF_M3A)
HT1_FWD_RIGHT_IFF_M3A_Out#2 (>L:FWD_RIGHT_IFF_M3A)
HT1_FWD_RIGHT_IFF_M5_M5#1 (>L:FWD_RIGHT_IFF_M5)
HT1_FWD_RIGHT_IFF_M5_Out#0 (>L:FWD_RIGHT_IFF_M5)
HT1_FWD_RIGHT_IFF_MC_MC#0 (>L:FWD_RIGHT_IFF_MC)
HT1_FWD_RIGHT_IFF_MC_MCS#1 (>L:FWD_RIGHT_IFF_MC)
HT1_FWD_RIGHT_IFF_MC_Out#2 (>L:FWD_RIGHT_IFF_MC)
HT1_FWD_RIGHT_IFF_MS_MS#1 (>L:FWD_RIGHT_IFF_MS)
HT1_FWD_RIGHT_IFF_MS_Out#0 (>L:FWD_RIGHT_IFF_MS)
HT1_FWD_RIGHT_IFF_Master_Norm#2 (>L:FWD_RIGHT_IFF_Master)
HT1_FWD_RIGHT_IFF_Master_PullEmer#5 (>L:FWD_RIGHT_IFF_Master)
HT1_FWD_RIGHT_IFF_Master_PullOff#0 (>L:FWD_RIGHT_IFF_Master)
HT1_FWD_RIGHT_IFF_Master_Stby#1 (>L:FWD_RIGHT_IFF_Master)
HT1_FWD_RIGHT_IFF_Master_TA#3 (>L:FWD_RIGHT_IFF_Master)
HT1_FWD_RIGHT_IFF_Master_TARA#4 (>L:FWD_RIGHT_IFF_Master)
HT1_FWD_RIGHT_IFF_Mode4_4A#2 (>L:FWD_RIGHT_IFF_Mode4)
HT1_FWD_RIGHT_IFF_Mode4_4B#3 (>L:FWD_RIGHT_IFF_Mode4)
HT1_FWD_RIGHT_IFF_Mode4_Hold#0 (>L:FWD_RIGHT_IFF_Mode4)
HT1_FWD_RIGHT_IFF_Mode4_PullErase#4 (>L:FWD_RIGHT_IFF_Mode4)
HT1_FWD_RIGHT_IFF_Mode4_PullOut#1 (>L:FWD_RIGHT_IFF_Mode4)
HT1_FWD_RIGHT_IFF_Test_Press#1 (>L:FWD_RIGHT_IFF_Test_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_IFF_Test_MinReleaseTime)
HT1_FWD_RIGHT_IFF_Test_Release#0 (>L:FWD_RIGHT_IFF_Test_IsDown) (L:FWD_RIGHT_IFF_Test_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_IFF_Test_LeftLeaveToRun) }
HT1_FWD_RIGHT_ILS_Dig1_Dec#(L:FWD_RIGHT_ILS_Dig1,enum) -- 0 max (>L:FWD_RIGHT_ILS_Dig1,enum)
HT1_FWD_RIGHT_ILS_Dig1_Inc#(L:FWD_RIGHT_ILS_Dig1,enum) ++ 1 min (>L:FWD_RIGHT_ILS_Dig1,enum)
HT1_FWD_RIGHT_ILS_Dig2_Dec#(L:FWD_RIGHT_ILS_Dig2,enum) -- 0 max (>L:FWD_RIGHT_ILS_Dig2,enum)
HT1_FWD_RIGHT_ILS_Dig2_Inc#(L:FWD_RIGHT_ILS_Dig2,enum) ++ 9 min (>L:FWD_RIGHT_ILS_Dig2,enum)
HT1_FWD_RIGHT_ILS_Dig3_Dec#(L:FWD_RIGHT_ILS_Dig3,enum) -- 0 max (>L:FWD_RIGHT_ILS_Dig3,enum)
HT1_FWD_RIGHT_ILS_Dig3_Inc#(L:FWD_RIGHT_ILS_Dig3,enum) ++ 9 min (>L:FWD_RIGHT_ILS_Dig3,enum)
HT1_FWD_RIGHT_ILS_Dig4_Dec#(L:FWD_RIGHT_ILS_Dig4,enum) -- 0 max (>L:FWD_RIGHT_ILS_Dig4,enum)
HT1_FWD_RIGHT_ILS_Dig4_Inc#(L:FWD_RIGHT_ILS_Dig4,enum) ++ 1 min (>L:FWD_RIGHT_ILS_Dig4,enum)
HT1_FWD_RIGHT_ILS_Mode_Dec#(L:FWD_RIGHT_ILS_Mode,enum) -- 0 max (>L:FWD_RIGHT_ILS_Mode,enum)
HT1_FWD_RIGHT_ILS_Mode_ILS#2 (>L:FWD_RIGHT_ILS_Mode,enum)
HT1_FWD_RIGHT_ILS_Mode_Inc#(L:FWD_RIGHT_ILS_Mode,enum) ++ 2 min (>L:FWD_RIGHT_ILS_Mode,enum)
HT1_FWD_RIGHT_ILS_Mode_Off#1 (>L:FWD_RIGHT_ILS_Mode,enum)
HT1_FWD_RIGHT_ILS_Mode_VOR#0 (>L:FWD_RIGHT_ILS_Mode,enum)
HT1_FWD_RIGHT_TACAN_Left_Dec#(L:FWD_RIGHT_TACAN_Left,enum) -- (>L:FWD_RIGHT_TACAN_Left,enum) (L:FWD_RIGHT_TACAN_Left,enum) 0 < if{ 99 (>L:FWD_RIGHT_TACAN_Left,enum) }
HT1_FWD_RIGHT_TACAN_Left_Inc#(L:FWD_RIGHT_TACAN_Left,enum) ++ 100 % (>L:FWD_RIGHT_TACAN_Left,enum)
HT1_FWD_RIGHT_TACAN_Mode_Dec#(L:FWD_RIGHT_TACAN_Mode,enum) -- 0 max (>L:FWD_RIGHT_TACAN_Mode,enum)
HT1_FWD_RIGHT_TACAN_Mode_Inc#(L:FWD_RIGHT_TACAN_Mode,enum) ++ 2 min (>L:FWD_RIGHT_TACAN_Mode,enum)
HT1_FWD_RIGHT_TACAN_Mode_Off#0 (>L:FWD_RIGHT_TACAN_Mode,enum)
HT1_FWD_RIGHT_TACAN_Mode_RX#1 (>L:FWD_RIGHT_TACAN_Mode,enum)
HT1_FWD_RIGHT_TACAN_Mode_TXRX#2 (>L:FWD_RIGHT_TACAN_Mode,enum)
HT1_FWD_RIGHT_TACAN_Right_Dec#(L:FWD_RIGHT_TACAN_Right,enum) -- (>L:FWD_RIGHT_TACAN_Right,enum) (L:FWD_RIGHT_TACAN_Right,enum) 0 < if{ 99 (>L:FWD_RIGHT_TACAN_Right,enum) }
HT1_FWD_RIGHT_TACAN_Right_Inc#(L:FWD_RIGHT_TACAN_Right,enum) ++ 100 % (>L:FWD_RIGHT_TACAN_Right,enum)
HT1_FWD_RIGHT_TACAN_XY_Dec#(L:FWD_RIGHT_TACAN_XY,enum) -- (>L:FWD_RIGHT_TACAN_XY,enum) (L:FWD_RIGHT_TACAN_XY,enum) 0 < if{ 99 (>L:FWD_RIGHT_TACAN_XY,enum) }
HT1_FWD_RIGHT_TACAN_XY_Inc#(L:FWD_RIGHT_TACAN_XY,enum) ++ 100 % (>L:FWD_RIGHT_TACAN_XY,enum)
HT1_FWD_RIGHT_TACAN_XY_Toggle#(L:FWD_RIGHT_TACAN_XY) ! (>L:FWD_RIGHT_TACAN_XY,enum)
HT1_FWD_Sight_depression_Dec#(L:FWD_Sight_depression,enum) -- 0 max (>L:FWD_Sight_depression,enum) 
HT1_FWD_Sight_depression_Inc#(L:FWD_Sight_depression,enum) ++ 100 min (>L:FWD_Sight_depression,enum) 
HT1_FWD_Sight_drift_Dec#(L:FWD_Sight_drift,enum) -- 0 max (>L:FWD_Sight_drift,enum)
HT1_FWD_Sight_drift_Inc#(L:FWD_Sight_drift,enum) ++ 100 min (>L:FWD_Sight_drift,enum)
HT1_FWD_Sight_mode_B#5 (>L:FWD_Sight_mode)
HT1_FWD_Sight_mode_Dec#(L:FWD_Sight_mode) -- 0 max (>L:FWD_Sight_mode)
HT1_FWD_Sight_mode_G#3 (>L:FWD_Sight_mode)
HT1_FWD_Sight_mode_GA#1 (>L:FWD_Sight_mode)
HT1_FWD_Sight_mode_Inc#(L:FWD_Sight_mode) ++ 6 min (>L:FWD_Sight_mode)
HT1_FWD_Sight_mode_M#2 (>L:FWD_Sight_mode)
HT1_FWD_Sight_mode_Off#0 (>L:FWD_Sight_mode)
HT1_FWD_Sight_mode_R#4 (>L:FWD_Sight_mode)
HT1_FWD_Sight_mode_S#6 (>L:FWD_Sight_mode)
//Just Flight/Hawk T1/Controls
HT1_FWD_KNEE_RudderLock_Toggle#(L:FWD_KNEE_RudderLock,bool) ! (>L:FWD_KNEE_RudderLock,bool)
HT1_FWD_LEFT_AileronTrim_1_Left#0 (>L:FWD_LEFT_AileronTrim_1)
HT1_FWD_LEFT_AileronTrim_1_Release#1 (>L:FWD_LEFT_AileronTrim_1)
HT1_FWD_LEFT_AileronTrim_1_Right#2 (>L:FWD_LEFT_AileronTrim_1)
HT1_FWD_LEFT_AileronTrim_2_Left#0 (>L:FWD_LEFT_AileronTrim_2)
HT1_FWD_LEFT_AileronTrim_2_Release#1 (>L:FWD_LEFT_AileronTrim_2)
HT1_FWD_LEFT_AileronTrim_2_Right#2 (>L:FWD_LEFT_AileronTrim_2)
HT1_FWD_LEFT_Airbrake_Dec#2 (>L:FWD_LEFT_AirBrake)
HT1_FWD_LEFT_Airbrake_Inc#0 (>L:FWD_LEFT_AirBrake)
HT1_FWD_LEFT_Airbrake_Release#1 (>L:FWD_LEFT_AirBrake)
HT1_FWD_LEFT_FlapSel_Down#2 (>L:FWD_LEFT_FlapSel)
HT1_FWD_LEFT_FlapSel_Mid#1 (>L:FWD_LEFT_FlapSel)
HT1_FWD_LEFT_FlapSel_Up#0 (>L:FWD_LEFT_FlapSel)
HT1_FWD_LEFT_RudderTrim_Left#0 (>L:FWD_LEFT_RudderTrim)
HT1_FWD_LEFT_RudderTrim_Release#1 (>L:FWD_LEFT_RudderTrim)
HT1_FWD_LEFT_RudderTrim_Right#2 (>L:FWD_LEFT_RudderTrim)
HT1_FWD_LEFT_TailTrim_Cover_Close#0 (>L:FWD_LEFT_TailTrim_Cover)
HT1_FWD_LEFT_TailTrim_Cover_Open#1 (>L:FWD_LEFT_TailTrim_Cover)
HT1_FWD_LEFT_TailTrim_Switch_Down#2 (>L:FWD_LEFT_TailTrim_Switch)
HT1_FWD_LEFT_TailTrim_Switch_Release#1 (>L:FWD_LEFT_TailTrim_Switch)
HT1_FWD_LEFT_TailTrim_Switch_Up#0 (>L:FWD_LEFT_TailTrim_Switch)
HT1_FWD_STICK_Trim_Dec#2 (L:FWD_STICK_Trim)
HT1_FWD_STICK_Trim_Inc#0 (L:FWD_STICK_Trim)
HT1_FWD_STICK_Trim_Release#1 (L:FWD_STICK_Trim)
//Just Flight/Hawk T1/Electrical
HT1_FWD_LEFT_AC3Reset_Press#1 (>L:FWD_LEFT_AC3Reset_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_AC3Reset_MinReleaseTime)
HT1_FWD_LEFT_AC3Reset_Release#0 (>L:FWD_LEFT_AC3Reset_IsDown) (L:FWD_LEFT_AC3Reset_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_AC3Reset_LeftLeaveToRun) }
HT1_FWD_LEFT_Batt1_Off#0 (>L:FWD_LEFT_Batt1)
HT1_FWD_LEFT_Batt1_On#1 (>L:FWD_LEFT_Batt1)
HT1_FWD_LEFT_Batt2_Off#0 (>L:FWD_LEFT_Batt2)
HT1_FWD_LEFT_Batt2_On#1 (>L:FWD_LEFT_Batt2)
//Just Flight/Hawk T1/Engines
HT1_FWD_LEFT_EngStart_Off#2 (>L:FWD_LEFT_EngStart)
HT1_FWD_LEFT_EngStart_On#1 (>L:FWD_LEFT_EngStart)
HT1_FWD_LEFT_EngStart_Start#0 (>L:FWD_LEFT_EngStart)
HT1_FWD_LEFT_Ignition_off#0 (>L:FWD_LEFT_Ignition)
HT1_FWD_LEFT_Ignition_on#1 (>L:FWD_LEFT_Ignition)
HT1_FWD_LEFT_ThrottleRelight_Press#1 (>L:FWD_LEFT_ThrottleRelight_IsDown) (E:SIMULATION TIME, seconds) 1 + (>L:FWD_LEFT_ThrottleRelight_MinReleaseTime) 1 (>L:FWD_LEFT_ThrottleRelight_LC,bool)
HT1_FWD_LEFT_ThrottleRelight_Release#0 (>L:FWD_LEFT_ThrottleRelight_IsDown) (L:FWD_LEFT_ThrottleRelight_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_ThrottleRelight_LeftLeaveToRun) }
//Just Flight/Hawk T1/Flight Instrumentation
HT1_FWD_DGI_Knob_Pull#1 (>L:FWD_DGI_Knob_Pull,bool)
HT1_FWD_DGI_Knob_Push#1 (>L:FWD_DGI_Knob_Push,bool)
HT1_FWD_DGI_Knob_Set_Dec#(L:FWD_DGI_Knob_Set,enum) -- (>L:FWD_DGI_Knob_Set,enum) (L:FWD_DGI_Knob_Set,enum) 0 < if{ 99 (>L:FWD_DGI_Knob_Set,enum) }
HT1_FWD_DGI_Knob_Set_Inc#(L:FWD_DGI_Knob_Set,enum) ++ 100 % (>L:FWD_DGI_Knob_Set,enum)
HT1_FWD_Gmeter_Push_Press#1 (>L:FWD_Gmeter_Push_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_Gmeter_Push_MinReleaseTime)
HT1_FWD_Gmeter_Push_Release#0 (>L:FWD_Gmeter_Push_IsDown) (L:FWD_Gmeter_Push_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_Gmeter_Push_LeftLeaveToRun) }
HT1_FWD_HSI_Crs_Knob_Dec#(L:FWD_HSI_Crs_Knob,enum) -- (>L:FWD_HSI_Crs_Knob,enum) (L:FWD_HSI_Crs_Knob,enum) 0 < if{ 99 (>L:FWD_HSI_Crs_Knob,enum) }
HT1_FWD_HSI_Crs_Knob_Inc#(L:FWD_HSI_Crs_Knob,enum) ++ 100 % (>L:FWD_HSI_Crs_Knob,enum)
HT1_FWD_HSI_Hdg_Knob_Dec#(L:FWD_HSI_Hdg_Knob,enum) -- 0 max (>L:FWD_HSI_Hdg_Knob,enum) (>K:HEADING_BUG_DEC) (L:FWD_HSI_Hdg_Knob,enum) 0 == if{ 100 (>L:FWD_HSI_Hdg_Knob,enum) }
HT1_FWD_HSI_Hdg_Knob_Inc#(L:FWD_HSI_Hdg_Knob,enum) ++ 100 min (>L:FWD_HSI_Hdg_Knob,enum) (>K:HEADING_BUG_INC) (L:FWD_HSI_Hdg_Knob,enum) 100 == if{ 0 (>L:FWD_HSI_Hdg_Knob,enum) }
HT1_FWD_LEFT_Altimeter_Release#0 (>L:FWD_LEFT_Altimeter_IsDown) (L:FWD_LEFT_Altimeter_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_Altimeter_LeftLeaveToRun) }
HT1_FWD_LEFT_Altimeter_Test#1 (>L:FWD_LEFT_Altimeter_IsDown) (E:SIMULATION TIME, seconds) 1 + (>L:FWD_LEFT_Altimeter_MinReleaseTime)
HT1_FWD_Stby_Inst_Pwr_Batt#1 (>L:FWD_Stby_Inst_Pwr, bool)
HT1_FWD_Stby_Inst_Pwr_Normal#0 (>L:FWD_Stby_Inst_Pwr, bool)
HT1_FWD_ALT_Baro_Dec#(L:FWD_ALT_Baro,enum) -- 0 max (>L:FWD_ALT_Baro,enum) (>K:KOHLSMAN_DEC) (L:FWD_ALT_Baro,enum) 0 == if{ 100 (>L:FWD_ALT_Baro,enum) }
HT1_FWD_ALT_Baro_Inc#(L:FWD_ALT_Baro,enum) ++ 100 min (>L:FWD_ALT_Baro,enum) (>K:KOHLSMAN_INC) (L:FWD_ALT_Baro,enum) 100 == if{ 0 (>L:FWD_ALT_Baro,enum) }
HT1_FWD_STBY_ALT_Baro_Dec#(L:FWD_STBY_ALT_Baro,enum) -- 0 max (>L:FWD_STBY_ALT_Baro,enum) 2 (>K:KOHLSMAN_DEC) (L:FWD_STBY_ALT_Baro,enum) 0 == if{ 100 (>L:FWD_STBY_ALT_Baro,enum) }
HT1_FWD_STBY_ALT_Baro_Inc#(L:FWD_STBY_ALT_Baro,enum) ++ 100 min (>L:FWD_STBY_ALT_Baro,enum) 2 (>K:KOHLSMAN_INC) (L:FWD_STBY_ALT_Baro,enum) 100 == if{ 0 (>L:FWD_STBY_ALT_Baro,enum) }
//Just Flight/Hawk T1/Fuel
HT1_FWD_LEFT_FuelFlow_Off#0 (>L:FWD_LEFT_FuelFlow)
HT1_FWD_LEFT_FuelFlow_On#1 (>L:FWD_LEFT_FuelFlow)
HT1_FWD_LEFT_FuelPump_Off#0 (>L:FWD_LEFT_FuelPump)
HT1_FWD_LEFT_FuelPump_On#1 (>L:FWD_LEFT_FuelPump)
//Just Flight/Hawk T1/Gear
HT1_FWD_LEFT_AntiSkid_Off#0 (>L:FWD_LEFT_AntiSkid)
HT1_FWD_LEFT_AntiSkid_On#1 (>L:FWD_LEFT_AntiSkid)
HT1_FWD_LEFT_Gear_Down_Press#(L:FWD_LEFT_Gear_Down) ! (>L:FWD_LEFT_Gear_Down)
HT1_FWD_LEFT_Gear_Up_Press#(L:FWD_LEFT_Gear_Up) ! (>L:FWD_LEFT_Gear_Up)
//Just Flight/Hawk T1/Hydraulic
HT1_FWD_LEFT_HydReset_Press#1 (>L:FWD_LEFT_HydReset_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_HydReset_MinReleaseTime)
HT1_FWD_LEFT_HydReset_Release#0 (>L:FWD_LEFT_HydReset_IsDown) (L:FWD_LEFT_HydReset_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_HydReset_LeftLeaveToRun) }
//Just Flight/Hawk T1/Lights
HT1_FWD_Land_Taxi_Down#0 (>L:FWD_MAIN_LdgTaxi)
HT1_FWD_Land_Taxi_Up#1 (>L:FWD_MAIN_LdgTaxi)
HT1_FWD_RIGHT_Lights_Anticol_Lower_Off#1 (>L:FWD_RIGHT_Lights_AntiCol_Lower)
HT1_FWD_RIGHT_Lights_Anticol_Lower_Red#2 (>L:FWD_RIGHT_Lights_AntiCol_Lower)
HT1_FWD_RIGHT_Lights_Anticol_Lower_White#0 (>L:FWD_RIGHT_Lights_AntiCol_Lower)
HT1_FWD_RIGHT_Lights_Anticol_Upper_Off#1 (>L:FWD_RIGHT_Lights_AntiCol_Upper)
HT1_FWD_RIGHT_Lights_Anticol_Upper_Red#2 (>L:FWD_RIGHT_Lights_AntiCol_Upper)
HT1_FWD_RIGHT_Lights_Anticol_Upper_White#0 (>L:FWD_RIGHT_Lights_AntiCol_Upper)
HT1_FWD_RIGHT_Lights_Centre_Dec#(L:FWD_RIGHT_Lights_Centre, enum) -- 0 max (>L:FWD_RIGHT_Lights_Centre, enum) 
HT1_FWD_RIGHT_Lights_Centre_Inc#(L:FWD_RIGHT_Lights_Centre, enum) ++ 10 min (>L:FWD_RIGHT_Lights_Centre, enum) 
HT1_FWD_RIGHT_Lights_Compass_Off#0 (>L:FWD_RIGHT_Lights_Compass,bool)
HT1_FWD_RIGHT_Lights_Compass_On#1 (>L:FWD_RIGHT_Lights_Compass,bool)
HT1_FWD_RIGHT_Lights_Emer_Off#0 (>L:FWD_RIGHT_Lights_Emer,bool)
HT1_FWD_RIGHT_Lights_Emer_On#1 (>L:FWD_RIGHT_Lights_Emer,bool)
HT1_FWD_RIGHT_Lights_Nav_Down#0 (>L:FWD_RIGHT_Lights_Nav,bool)
HT1_FWD_RIGHT_Lights_Nav_Up#1 (>L:FWD_RIGHT_Lights_Nav,bool)
HT1_FWD_RIGHT_Lights_Panel_Off#0 (>L:FWD_RIGHT_Lights_Panel,bool)
HT1_FWD_RIGHT_Lights_Panel_On#1 (>L:FWD_RIGHT_Lights_Panel,bool)
HT1_FWD_RIGHT_Lights_Port_Dec#(L:FWD_RIGHT_Lights_Port, enum) -- 0 max (>L:FWD_RIGHT_Lights_Port, enum) 
HT1_FWD_RIGHT_Lights_Port_Inc#(L:FWD_RIGHT_Lights_Port, enum) ++ 10 min (>L:FWD_RIGHT_Lights_Port, enum) 
HT1_FWD_RIGHT_Lights_Stbd_Dec#(L:FWD_RIGHT_Lights_Stbd, enum) -- 0 max (>L:FWD_RIGHT_Lights_Stbd, enum) 
HT1_FWD_RIGHT_Lights_Stbd_Inc#(L:FWD_RIGHT_Lights_Stbd, enum) ++ 10 min (>L:FWD_RIGHT_Lights_Stbd, enum) 
//Just Flight/Hawk T1/Miscellaneous
HT1_FWD_LEFT_FreqCard_Toggle#(L:FWD_LEFT_FreqCard) ! (>L:FWD_LEFT_FreqCard)
HT1_FWD_LEFT_Stopwatch_Click#(L:FWD_LEFT_Stopwatch,bool) ! (>L:FWD_LEFT_Stopwatch,bool)
HT1_FWD_LEFT_Stopwatch_Knob_Push#1 (>L:FWD_LEFT_Stopwatch_push,bool)
HT1_FWD_LEFT_Stopwatch_Knob_Release#0 (>L:FWD_LEFT_Stopwatch_push,bool)
HT1_FWD_LEFT_Stopwatch_Reset_Push#1 (>L:FWD_LEFT_Stopwatch_Reset_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_Stopwatch_Reset_MinReleaseTime)
HT1_FWD_LEFT_Stopwatch_Reset_Release#0 (>L:FWD_LEFT_Stopwatch_Reset_IsDown) (L:FWD_LEFT_Stopwatch_Reset_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_Stopwatch_Reset_LeftLeaveToRun) }
HT1_FWD_MISC_MapLight_Left_Toggle#(L:FWD_MISC_MapLight_Left,bool) ! (>L:FWD_MISC_MapLight_Left,bool)
HT1_FWD_MISC_MapLight_Right_Toggle#(L:FWD_MISC_MapLight_Right,bool) ! (>L:FWD_MISC_MapLight_Right,bool)
HT1_FWD_RIGHT_Air_Mode_Dec#(L:FWD_RIGHT_Air_Mode,enum) -- 0 max (>L:FWD_RIGHT_Air_Mode,enum)
HT1_FWD_RIGHT_Air_Mode_Inc#(L:FWD_RIGHT_Air_Mode,enum) ++ 3 min (>L:FWD_RIGHT_Air_Mode,enum)
HT1_FWD_RIGHT_Air_Temp_Dec#(L:FWD_RIGHT_Air_Temp,enum) -- (>L:FWD_RIGHT_Air_Temp,enum) (L:FWD_RIGHT_Air_Temp,enum) 0 < if{ 99 (>L:FWD_RIGHT_Air_Temp,enum) }
HT1_FWD_RIGHT_Air_Temp_Inc#(L:FWD_RIGHT_Air_Temp,enum) ++ 100 % (>L:FWD_RIGHT_Air_Temp,enum)
HT1_FWD_RIGHT_Airbrake_Test_Off#0 (>L:FWD_RIGHT_Airbrake_Test)
HT1_FWD_RIGHT_Airbrake_Test_On#1 (>L:FWD_RIGHT_Airbrake_Test)
HT1_FWD_RIGHT_FreqCard_Toggle#(L:FWD_RIGHT_FreqCard) ! (>L:FWD_RIGHT_FreqCard)
HT1_FWD_RIGHT_Oxygen_Toggle#(L:FWD_RIGHT_Oxygen) ! (>L:FWD_RIGHT_Oxygen)
HT1_FWD_RIGHT_Seat_Lower#0 (>L:FWD_RIGHT_Seat)
HT1_FWD_RIGHT_Seat_Raise#2 (>L:FWD_RIGHT_Seat)
HT1_FWD_STICK_Camera_Press#1 (>L:FWD_STICK_Camera_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_STICK_Camera_MinReleaseTime)
HT1_FWD_STICK_Camera_Release#0 (>L:FWD_STICK_Camera_IsDown) (L:FWD_STICK_Camera_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_STICK_Camera_LeftLeaveToRun) }
HT1_RA_L_Smoke_Blue_Select#1 (>L:RA_smoke_blue_LC,bool)
HT1_RA_L_Smoke_Red_Select#1 (>L:RA_smoke_red_LC,bool)
HT1_RA_L_Smoke_White_Select#1 (>L:RA_smoke_white_LC,bool)
HT1_RA_R_Smoke_Blue_Select#1 (>L:RA_smoke_blue_LC,bool)
HT1_RA_R_Smoke_Red_Select#1 (>L:RA_smoke_red_LC,bool)
HT1_RA_R_Smoke_White_Select#1 (>L:RA_smoke_white_LC,bool)
HT1_RA_Smoke_Switch_Off#0 (L:FWD_RA_Smoke,bool)
HT1_RA_Smoke_Switch_On#1 (L:FWD_RA_Smoke,bool)
HT1_SHARED_Canopy_Handle_Toggle#(L:SHARED_Canopy_Handle) ! (>L:SHARED_Canopy_Handle)
//Just Flight/Hawk T1/Navigation
HT1_FWD_GPS_Brt_Press#1 (>L:FWD_GPS_Brt_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Brt_MinReleaseTime) 1 (>L:GPS_Brt_LC,bool)
HT1_FWD_GPS_Brt_Release#0 (>L:FWD_GPS_Brt_IsDown) (L:FWD_GPS_Brt_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Brt_LeftLeaveToRun) }
HT1_FWD_GPS_Func_1_Press#1 (>L:FWD_GPS_Func_1_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_1_MinReleaseTime) (>H:INSTRUMENT_PUSH_NRST)
HT1_FWD_GPS_Func_1_Release#0 (>L:FWD_GPS_Func_1_IsDown) (L:FWD_GPS_Func_1_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_1_LeftLeaveToRun) }
HT1_FWD_GPS_Func_2_Press#1 (>L:FWD_GPS_Func_2_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_2_MinReleaseTime) (>H:INSTRUMENT_PUSH_DIRECTION)
HT1_FWD_GPS_Func_2_Release#0 (>L:FWD_GPS_Func_2_IsDown) (L:FWD_GPS_Func_2_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_2_LeftLeaveToRun) }
HT1_FWD_GPS_Func_3_Press#1 (>L:FWD_GPS_Func_3_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_3_MinReleaseTime) (>H:INSTRUMENT_PUSH_MENU)
HT1_FWD_GPS_Func_3_Release#0 (>L:FWD_GPS_Func_3_IsDown) (L:FWD_GPS_Func_3_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_3_LeftLeaveToRun) }
HT1_FWD_GPS_Func_4_Press#1 (>L:FWD_GPS_Func_4_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_4_MinReleaseTime) (>H:INSTRUMENT_PUSH_RETURN)
HT1_FWD_GPS_Func_4_Release#0 (>L:FWD_GPS_Func_4_IsDown) (L:FWD_GPS_Func_4_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_4_LeftLeaveToRun) }
HT1_FWD_GPS_Func_5_Press#1 (>L:FWD_GPS_Func_5_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Func_5_MinReleaseTime) (>H:INSTRUMENT_PUSH_RETURN_LONG)
HT1_FWD_GPS_Func_5_Release#0 (>L:FWD_GPS_Func_5_IsDown) (L:FWD_GPS_Func_5_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Func_5_LeftLeaveToRun) }
HT1_FWD_GPS_Power_Press#1 (>L:FWD_GPS_Power_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_GPS_Power_MinReleaseTime) 1 (>L:GPS_Pwr_LC,bool)
HT1_FWD_GPS_Power_Release#0 (>L:FWD_GPS_Power_IsDown) (L:FWD_GPS_Power_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_GPS_Power_LeftLeaveToRun) }
HT1_FWD_MAIN_ILS_Marker_Press#1 (>L:FWD_MAIN_ILS_Marker_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_MAIN_ILS_Marker_MinReleaseTime)
HT1_FWD_MAIN_ILS_Marker_Release#0 (>L:FWD_MAIN_ILS_Marker_IsDown) (L:FWD_MAIN_ILS_Marker_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_ILS_Marker_LeftLeaveToRun) }
//Just Flight/Hawk T1/Radio
HT1_FWD_LEFT_AltPTT_Push#1 (>L:FWD_LEFT_AltPTT_IsDown) (E:SIMULATION TIME,seconds) 1 + (>L:FWD_LEFT_AltPTT_MinReleaseTime)
HT1_FWD_LEFT_AltPTT_Release#0 (>L:FWD_LEFT_AltPTT_IsDown) (L:FWD_LEFT_AltPTT_MinReleaseTime) (E:SIMULATION TIME,seconds) < if{ } els{ 1 (>L:FWD_LEFT_AltPTT_LeftLeaveToRun) }
HT1_FWD_LEFT_RadioMute_Off#0 (>L:FWD_LEFT_RadioMute)
HT1_FWD_LEFT_RadioMute_On#1 (>L:FWD_LEFT_RadioMute)
HT1_FWD_LEFT_ThrottleTransmit_Press#1 (>L:FWD_LEFT_ThrottleTransmit_IsDown) (E:SIMULATION TIME, seconds) 1 + (>L:FWD_LEFT_ThrottleTransmit_MinReleaseTime)
HT1_FWD_LEFT_ThrottleTransmit_Release#0 (>L:FWD_LEFT_ThrottleTransmit_IsDown) (L:FWD_LEFT_ThrottleTransmit_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_LEFT_ThrottleTransmit_LeftLeaveToRun) }
HT1_FWD_LEFT_UHF_A#2 (>L:FWD_LEFT_UHF)
HT1_FWD_LEFT_UHF_Main#1 (>L:FWD_LEFT_UHF)
HT1_FWD_LEFT_UHF_Stby#0 (>L:FWD_LEFT_UHF)
HT1_FWD_MAIN_UHF_Pwr_Batt#1 (>L:FWD_MAIN_UHF_Pwr)
HT1_FWD_MAIN_UHF_Pwr_Normal#0 (>L:FWD_MAIN_UHF_Pwr)
HT1_FWD_RIGHT_CCS_Fail#1 (>L:FWD_RIGHT_CCS_NormFail)
HT1_FWD_RIGHT_CCS_Ic_Dec#(L:FWD_RIGHT_CCS_Ic,enum) -- 10 min (>L:FWD_RIGHT_CCS_Ic,enum)
HT1_FWD_RIGHT_CCS_Ic_Inc#(L:FWD_RIGHT_CCS_Ic,enum) ++ 0 max (>L:FWD_RIGHT_CCS_Ic,enum)
HT1_FWD_RIGHT_CCS_Ils_Off#0 (>L:FWD_RIGHT_CCS_Ils)
HT1_FWD_RIGHT_CCS_Ils_On#1 (>L:FWD_RIGHT_CCS_Ils)
HT1_FWD_RIGHT_CCS_Norm#0 (>L:FWD_RIGHT_CCS_NormFail)
HT1_FWD_RIGHT_CCS_Ptt_Alt#1 (>L:FWD_RIGHT_CCS_Ptt)
HT1_FWD_RIGHT_CCS_Ptt_Norm#0 (>L:FWD_RIGHT_CCS_Ptt)
HT1_FWD_RIGHT_CCS_Rx_Dec#(L:FWD_RIGHT_CCS_Rx,enum) -- 10 min (>L:FWD_RIGHT_CCS_Rx,enum)
HT1_FWD_RIGHT_CCS_Rx_Inc#(L:FWD_RIGHT_CCS_Rx,enum) ++ 0 max (>L:FWD_RIGHT_CCS_Rx,enum)
HT1_FWD_RIGHT_CCS_Sel_Uhf#1 (>L:FWD_RIGHT_CCS_Sel)
HT1_FWD_RIGHT_CCS_Sel_Vhf#0 (>L:FWD_RIGHT_CCS_Sel)
HT1_FWD_RIGHT_CCS_Tacan_Off#0 (>L:FWD_RIGHT_CCS_Tacan)
HT1_FWD_RIGHT_CCS_Tacan_On#1 (>L:FWD_RIGHT_CCS_Tacan)
HT1_FWD_RIGHT_CCS_Uhf_Off#0 (>L:FWD_RIGHT_CCS_Uhf)
HT1_FWD_RIGHT_CCS_Uhf_On#1 (>L:FWD_RIGHT_CCS_Uhf)
HT1_FWD_RIGHT_CCS_Vhf_Off#0 (>L:FWD_RIGHT_CCS_Vhf)
HT1_FWD_RIGHT_CCS_Vhf_On#1 (>L:FWD_RIGHT_CCS_Vhf)
HT1_FWD_RIGHT_VHF_Ant_Lower#0 (>L:FWD_RIGHT_VHF_Ant)
HT1_FWD_RIGHT_VHF_Ant_Upper#1 (>L:FWD_RIGHT_VHF_Ant)
HT1_FWD_RIGHT_VHF_Brt_Dec#2 (L:FWD_RIGHT_VHF_Brt)
HT1_FWD_RIGHT_VHF_Brt_Inc#0 (L:FWD_RIGHT_VHF_Brt)
HT1_FWD_RIGHT_VHF_Brt_Release#1 (L:FWD_RIGHT_VHF_Brt)
HT1_FWD_RIGHT_VHF_Enter_Press#1 (>L:FWD_RIGHT_VHF_Enter_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_VHF_Enter_MinReleaseTime)
HT1_FWD_RIGHT_VHF_Enter_Release#0 (>L:FWD_RIGHT_VHF_Enter_IsDown) (L:FWD_RIGHT_VHF_Enter_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_VHF_Enter_LeftLeaveToRun) }
HT1_FWD_RIGHT_VHF_Frq_Mode_121#4 (>L:FWD_RIGHT_VHF_Frq_Mode)
HT1_FWD_RIGHT_VHF_Frq_Mode_243#5 (>L:FWD_RIGHT_VHF_Frq_Mode)
HT1_FWD_RIGHT_VHF_Frq_Mode_ECCM#2 (>L:FWD_RIGHT_VHF_Frq_Mode)
HT1_FWD_RIGHT_VHF_Frq_Mode_MAN#1 (>L:FWD_RIGHT_VHF_Frq_Mode)
HT1_FWD_RIGHT_VHF_Frq_Mode_MAR#3 (>L:FWD_RIGHT_VHF_Frq_Mode)
HT1_FWD_RIGHT_VHF_Frq_Mode_PRST#0 (>L:FWD_RIGHT_VHF_Frq_Mode)
HT1_FWD_RIGHT_VHF_Menu_Press#1 (>L:FWD_RIGHT_VHF_Menu_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_VHF_Menu_MinReleaseTime)
HT1_FWD_RIGHT_VHF_Menu_Release#0 (>L:FWD_RIGHT_VHF_Menu_IsDown) (L:FWD_RIGHT_VHF_Menu_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_VHF_Menu_LeftLeaveToRun) }
HT1_FWD_RIGHT_VHF_NavSel_Down#2 (L:FWD_RIGHT_VHF_NavSel)
HT1_FWD_RIGHT_VHF_NavSel_Release#1 (L:FWD_RIGHT_VHF_NavSel)
HT1_FWD_RIGHT_VHF_NavSel_Up#0 (L:FWD_RIGHT_VHF_NavSel)
HT1_FWD_RIGHT_VHF_OP_Mode_ARF#3 (>L:FWD_RIGHT_VHF_OP_Mode)
HT1_FWD_RIGHT_VHF_OP_Mode_OFF#0 (>L:FWD_RIGHT_VHF_OP_Mode)
HT1_FWD_RIGHT_VHF_OP_Mode_TEST#4 (>L:FWD_RIGHT_VHF_OP_Mode)
HT1_FWD_RIGHT_VHF_OP_Mode_TR#2 (>L:FWD_RIGHT_VHF_OP_Mode)
HT1_FWD_RIGHT_VHF_OP_Mode_TRG#1 (>L:FWD_RIGHT_VHF_OP_Mode)
HT1_FWD_RIGHT_VHF_OP_Mode_ZERO#5 (>L:FWD_RIGHT_VHF_OP_Mode)
HT1_FWD_RIGHT_VHF_Ptt_Off#0 (>L:FWD_RIGHT_VHF_Ptt)
HT1_FWD_RIGHT_VHF_Ptt_On#1 (>L:FWD_RIGHT_VHF_Ptt)
HT1_FWD_RIGHT_VHF_Sel_1_Dec#(L:FWD_RIGHT_VHF_Sel_1,enum) -- (>L:FWD_RIGHT_VHF_Sel_1,enum) (L:FWD_RIGHT_VHF_Sel_1,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_1,enum) }
HT1_FWD_RIGHT_VHF_Sel_1_Inc#(L:FWD_RIGHT_VHF_Sel_1,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_1,enum)
HT1_FWD_RIGHT_VHF_Sel_2_Dec#(L:FWD_RIGHT_VHF_Sel_2,enum) -- (>L:FWD_RIGHT_VHF_Sel_2,enum) (L:FWD_RIGHT_VHF_Sel_2,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_2,enum) }
HT1_FWD_RIGHT_VHF_Sel_2_Inc#(L:FWD_RIGHT_VHF_Sel_2,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_2,enum)
HT1_FWD_RIGHT_VHF_Sel_3_Dec#(L:FWD_RIGHT_VHF_Sel_3,enum) -- (>L:FWD_RIGHT_VHF_Sel_3,enum) (L:FWD_RIGHT_VHF_Sel_3,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_3,enum) }
HT1_FWD_RIGHT_VHF_Sel_3_Inc#(L:FWD_RIGHT_VHF_Sel_3,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_3,enum)
HT1_FWD_RIGHT_VHF_Sel_4_Dec#(L:FWD_RIGHT_VHF_Sel_4,enum) -- (>L:FWD_RIGHT_VHF_Sel_4,enum) (L:FWD_RIGHT_VHF_Sel_4,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_4,enum) }
HT1_FWD_RIGHT_VHF_Sel_4_Inc#(L:FWD_RIGHT_VHF_Sel_4,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_4,enum)
HT1_FWD_RIGHT_VHF_Sel_5_Dec#(L:FWD_RIGHT_VHF_Sel_5,enum) -- (>L:FWD_RIGHT_VHF_Sel_5,enum) (L:FWD_RIGHT_VHF_Sel_5,enum) 0 < if{ 99 (>L:FWD_RIGHT_VHF_Sel_5,enum) }
HT1_FWD_RIGHT_VHF_Sel_5_Inc#(L:FWD_RIGHT_VHF_Sel_5,enum) ++ 100 % (>L:FWD_RIGHT_VHF_Sel_5,enum)
HT1_FWD_RIGHT_VHF_Squelch_Press#1 (>L:FWD_RIGHT_VHF_Squelch_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_RIGHT_VHF_Squelch_MinReleaseTime)
HT1_FWD_RIGHT_VHF_Squelch_Release#0 (>L:FWD_RIGHT_VHF_Squelch_IsDown) (L:FWD_RIGHT_VHF_Squelch_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_RIGHT_VHF_Squelch_LeftLeaveToRun) }
HT1_FWD_RIGHT_VHF_Vol_Down#2 (L:FWD_RIGHT_VHF_Vol)
HT1_FWD_RIGHT_VHF_Vol_Release#1 (L:FWD_RIGHT_VHF_Vol)
HT1_FWD_RIGHT_VHF_Vol_Up#0 (L:FWD_RIGHT_VHF_Vol)
HT1_FWD_STICK_MuteButton_Press#1 (>L:FWD_STICK_MuteButton_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_STICK_MuteButton_MinReleaseTime)
HT1_FWD_STICK_MuteButton_Release#0 (>L:FWD_STICK_MuteButton_IsDown) (L:FWD_STICK_MuteButton_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_STICK_MuteButton_LeftLeaveToRun) }
HT1_FWD_UHF_Dig1_Dec#(L:FWD_UHF_Dig1, enum) -- 0 max (>L:FWD_UHF_Dig1, enum)
HT1_FWD_UHF_Dig1_Inc#(L:FWD_UHF_Dig1, enum) ++ 9 min (>L:FWD_UHF_Dig1, enum)
HT1_FWD_UHF_Dig2_Dec#(L:FWD_UHF_Dig2, enum) -- 0 max (>L:FWD_UHF_Dig2, enum)
HT1_FWD_UHF_Dig2_Inc#(L:FWD_UHF_Dig2, enum) ++ 9 min (>L:FWD_UHF_Dig2, enum)
HT1_FWD_UHF_Dig3_Dec#(L:FWD_UHF_Dig3, enum) -- 0 max (>L:FWD_UHF_Dig3, enum)
HT1_FWD_UHF_Dig3_Inc#(L:FWD_UHF_Dig3, enum) ++ 9 min (>L:FWD_UHF_Dig3, enum)
HT1_FWD_UHF_Dig4_Dec#(L:FWD_UHF_Dig4, enum) -- 0 max (>L:FWD_UHF_Dig4, enum)
HT1_FWD_UHF_Dig4_Inc#(L:FWD_UHF_Dig4, enum) ++ 9 min (>L:FWD_UHF_Dig4, enum)
HT1_FWD_UHF_Dig5_Dec#(L:FWD_UHF_Dig5, enum) -- 0 max (>L:FWD_UHF_Dig5, enum)
HT1_FWD_UHF_Dig5_Inc#(L:FWD_UHF_Dig5, enum) ++ 3 min (>L:FWD_UHF_Dig5, enum)
HT1_FWD_UHF_Mode_ADF#3 (>L:FWD_UHF_Mode)
HT1_FWD_UHF_Mode_Both#2 (>L:FWD_UHF_Mode)
HT1_FWD_UHF_Mode_Main#1 (>L:FWD_UHF_Mode)
HT1_FWD_UHF_Mode_Off#0 (>L:FWD_UHF_Mode)
HT1_FWD_UHF_Preset_Sel_Dec#(L:FWD_UHF_Preset_Sel, enum) -- 1 max (>L:FWD_UHF_Preset_Sel, enum)
HT1_FWD_UHF_Preset_Sel_Inc#(L:FWD_UHF_Preset_Sel, enum) ++ 20 min (>L:FWD_UHF_Preset_Sel, enum)
HT1_FWD_UHF_Squelch_Off#0 (>L:FWD_UHF_Squelch)
HT1_FWD_UHF_Squelch_On#1 (>L:FWD_UHF_Squelch)
HT1_FWD_UHF_Store#1 (>L:FWD_UHF_Store,bool)
HT1_FWD_UHF_Tone_Press#1 (>L:FWD_UHF_Tone_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_UHF_Tone_MinReleaseTime)
HT1_FWD_UHF_Tone_Release#0 (>L:FWD_UHF_Tone_IsDown) (L:FWD_UHF_Tone_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_UHF_Tone_LeftLeaveToRun) }
HT1_FWD_UHF_Trans_Guard#2 (>L:FWD_UHF_Trans)
HT1_FWD_UHF_Trans_Manual#0 (>L:FWD_UHF_Trans)
HT1_FWD_UHF_Trans_Preset#1 (>L:FWD_UHF_Trans)
HT1_FWD_UHF_Vol_Dec#(L:FWD_UHF_Vol,enum) -- 0 max (>L:FWD_UHF_Vol,enum)
HT1_FWD_UHF_Vol_Inc#(L:FWD_UHF_Vol,enum) ++ 10 min (>L:FWD_UHF_Vol,enum)
//Just Flight/Hawk T1/Safety
HT1_FWD_LEFT_FlapStby_Button#1 (>L:FWD_LEFT_FlapStby_Button_LC,bool)
HT1_FWD_LEFT_FlapStby_Handle#1 (>L:FWD_LEFT_FlapStby_Handle_LC,bool)
HT1_FWD_LEFT_GearStby_Button#1 (>L:FWD_LEFT_GearStby_Button_LC,bool)
HT1_FWD_LEFT_GearStby_Handle#1 (>L:FWD_LEFT_GearStby_Handle_LC,bool)
HT1_FWD_MAIN_CWP_FireExt_Press#1 (>L:FWD_MAIN_CWP_FireExt_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_MAIN_CWP_FireExt_MinReleaseTime)
HT1_FWD_MAIN_CWP_FireExt_Release#0 (>L:FWD_MAIN_CWP_FireExt_IsDown) (L:FWD_MAIN_CWP_FireExt_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_CWP_FireExt_LeftLeaveToRun) }
HT1_FWD_MAIN_CWP_Test_Cover_Toggle#(L:FWD_MAIN_CWP_Test_Cover) ! (>L:FWD_MAIN_CWP_Test_Cover)
HT1_FWD_MAIN_CWP_Test_Press#1 (>L:FWD_MAIN_CWP_Test_Switch_IsDown) (E:SIMULATION TIME, seconds) 1 + (>L:FWD_MAIN_CWP_Test_Switch_MinReleaseTime)
HT1_FWD_MAIN_CWP_Test_Release#0 (>L:FWD_MAIN_CWP_Test_Switch_IsDown) (L:FWD_MAIN_CWP_Test_Switch_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_CWP_Test_Switch_LeftLeaveToRun) }
//Just Flight/Hawk T1/Warning System
HT1_FWD_MAIN_CWS_Reset_L_Press#1 (>L:FWD_MAIN_CWS_Reset_L_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_MAIN_CWS_Reset_L_MinReleaseTime)
HT1_FWD_MAIN_CWS_Reset_L_Release#0 (>L:FWD_MAIN_CWS_Reset_L_IsDown) (L:FWD_MAIN_CWS_Reset_L_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_CWS_Reset_L_LeftLeaveToRun) }
HT1_FWD_MAIN_CWS_Reset_R_Press#1 (>L:FWD_MAIN_CWS_Reset_R_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_LEFT_MAIN_CWS_Reset_R_MinReleaseTime)
HT1_FWD_MAIN_CWS_Reset_R_Release#0 (>L:FWD_MAIN_CWS_Reset_R_IsDown) (L:FWD_MAIN_CWS_Reset_R_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_MAIN_CWS_Reset_R_LeftLeaveToRun) }
//Just Flight/Hawk T1/Weapons
HT1_FWD_AIM9_AAM_Press#1 (>L:FWD_AIM9_AAM_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_AIM9_AAM_MinReleaseTime)
HT1_FWD_AIM9_AAM_Release#0 (>L:FWD_AIM9_AAM_IsDown) (L:FWD_AIM9_AAM_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_AIM9_AAM_LeftLeaveToRun) }
HT1_FWD_AIM9_Coolant_Off#1 (>L:FWD_AIM9_Coolant)
HT1_FWD_AIM9_Coolant_On#0 (>L:FWD_AIM9_Coolant)
HT1_FWD_AIM9_Coolant_Test#2 (>L:FWD_AIM9_Coolant)
HT1_FWD_AIM9_Jet_Guard_Toggle#(L:FWD_AIM9_Jettison_Cover) ! (>L:FWD_AIM9_Jettison_Cover)
HT1_FWD_AIM9_Jettison_Press#1 (>L:FWD_AIM9_Jettison_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_AIM9_Jettison_MinReleaseTime)
HT1_FWD_AIM9_Jettison_Release#0 (>L:FWD_AIM9_Jettison_IsDown) (L:FWD_AIM9_Jettison_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_AIM9_Jettison_LeftLeaveToRun) }
HT1_FWD_AIM9_Mode_BS#0 (>L:FWD_AIM9_Mode)
HT1_FWD_AIM9_Mode_Scan#1 (>L:FWD_AIM9_Mode)
HT1_FWD_AIM9_Reject_Press#1 (>L:FWD_AIM9_Reject_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_AIM9_Reject_MinReleaseTime)
HT1_FWD_AIM9_Reject_Release#0 (>L:FWD_AIM9_Reject_IsDown) (L:FWD_AIM9_Reject_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_AIM9_Reject_LeftLeaveToRun) }
HT1_FWD_AIM9_Test_Press#1 (>L:FWD_AIM9_Test_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_AIM9_Test_MinReleaseTime)
HT1_FWD_AIM9_Test_Release#0 (>L:FWD_AIM9_Test_IsDown) (L:FWD_AIM9_Test_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_AIM9_Test_LeftLeaveToRun) }
HT1_FWD_AIM9_Vol_Dec#(L:FWD_AIM9_Vol,enum) -- 0 max (>L:FWD_AIM9_Vol,enum)
HT1_FWD_AIM9_Vol_Inc#(L:FWD_AIM9_Vol,enum) ++ 20 min (>L:FWD_AIM9_Vol,enum)
HT1_FWD_MAIN_Weapons_Safe_Lock#0 (>L:FWD_MAIN_Weapons_Safe,bool)
HT1_FWD_MAIN_Weapons_Safe_Unlock#1 (>L:FWD_MAIN_Weapons_Safe,bool)
HT1_FWD_STICK_BombRel_Cover_Toggle#(L:FWD_STICK_BombRel_Cover,bool) ! (>L:FWD_STICK_BombRel_Cover,bool)
HT1_FWD_STICK_BombRel_Press#1 (>L:FWD_STICK_BombRel_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_STICK_BombRel_MinReleaseTime)
HT1_FWD_STICK_BombRel_Release#0 (>L:FWD_STICK_BombRel_IsDown) (L:FWD_STICK_BombRel_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_STICK_BombRel_LeftLeaveToRun) }
HT1_FWD_STICK_Trigger_Press#1 (>L:FWD_STICK_Trigger_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_STICK_Trigger_MinReleaseTime)
HT1_FWD_STICK_Trigger_Release#0 (>L:FWD_STICK_Trigger_IsDown) (L:FWD_STICK_Trigger_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_STICK_Trigger_LeftLeaveToRun) }
HT1_FWD_Sight_Brt_Dec#(L:FWD_Sight_brt,enum) ++ 20 min (>L:FWD_Sight_brt,enum)
HT1_FWD_Sight_Brt_Inc#(L:FWD_Sight_brt,enum) -- 0 max (>L:FWD_Sight_brt,enum)
HT1_FWD_Weapons_Fuzing_N#0 (>L:FWD_Weapons_Fuzing)
HT1_FWD_Weapons_Fuzing_NT#1 (>L:FWD_Weapons_Fuzing)
HT1_FWD_Weapons_Fuzing_T#2 (>L:FWD_Weapons_Fuzing)
HT1_FWD_Weapons_Gun_Off#0 (>L:FWD_Weapons_Gun)
HT1_FWD_Weapons_Gun_On#1 (>L:FWD_Weapons_Gun)
HT1_FWD_Weapons_Jettison_Press#1 (>L:FWD_Weapons_Jettison_IsDown) (E:SIMULATION TIME, seconds) 0.4 + (>L:FWD_Weapons_Jettison_MinReleaseTime)
HT1_FWD_Weapons_Jettison_Release#0 (>L:FWD_Weapons_Jettison_IsDown) (L:FWD_Weapons_Jettison_MinReleaseTime) (E:SIMULATION TIME, seconds) < if{ } els{ 1 (>L:FWD_Weapons_Jettison_LeftLeaveToRun) }
HT1_FWD_Weapons_Pylon_port_Off#0 (>L:FWD_Weapons_Pylon_port)
HT1_FWD_Weapons_Pylon_port_On#1 (>L:FWD_Weapons_Pylon_port)
HT1_FWD_Weapons_Pylon_stbd_Off#0 (>L:FWD_Weapons_Pylon_stbd)
HT1_FWD_Weapons_Pylon_stbd_On#1 (>L:FWD_Weapons_Pylon_stbd)
HT1_FWD_Weapons_Select_B#3 (>L:FWD_Weapons_Select)
HT1_FWD_Weapons_Select_Off#0 (>L:FWD_Weapons_Select)
HT1_FWD_Weapons_Select_PB#2 (>L:FWD_Weapons_Select)
HT1_FWD_Weapons_Select_RP#1 (>L:FWD_Weapons_Select)
HT1_FWD_Weapons_Select_Toggle#(L:FWD_Weapons_Select) ++ 4 % (>L:FWD_Weapons_Select)
//Just Flight/PA28 Warrior II/Anti-Ice
PA-28-161_Pitot_Heat_Off#0 (>L:CENTRE_LOWER_pitotheat)
PA-28-161_Pitot_Heat_On#1 (>L:CENTRE_LOWER_pitotheat)
//Just Flight/PA28 Warrior II/Autopilot
PA-28-161_Autopilot_APR#1 (>L:AUTOPILOT_apr)
PA-28-161_Autopilot_Altitude_Hold#1 (>L:AUTOPILOT_alt)
PA-28-161_Autopilot_HDG#1 (>L:AUTOPILOT_hdg)
PA-28-161_Autopilot_NAV# 1 (>L:AUTOPILOT_nav)
PA-28-161_Autopilot_Off#2 (>L:AUTOPILOT_onoff)
PA-28-161_Autopilot_On#0 (>L:AUTOPILOT_onoff)
PA-28-161_Autopilot_REV#1 (>L:AUTOPILOT_rev)
PA-28-161_Autopilot_TEST_Release#0 (>L:AUTOPILOT_test_isdown)
PA-28-161_Autopilot_TEST_press#1 (>L:AUTOPILOT_test_isdown)
PA-28-161_Autopilot_VS_Hold#1 (>L:AUTOPILOT_vs)
//Just Flight/PA28 Warrior II/Avionics
PA-28-161_DME_use_NAV_1#0 (>L:RIGHT_MISC_DME_NAV)
PA-28-161_DME_use_NAV_2#1 (>L:RIGHT_MISC_DME_NAV)
PA-28-161_GPS_Mode#1 (>L:LEFT_MISC_NAVGPS)
PA-28-161_KN_62A_FREQ#1 (>L:KN62_MODE_KNOB)
PA-28-161_KN_62A_GS_T#2 (>L:KN62_MODE_KNOB)
PA-28-161_KN_62A_Inner_Knob_Dec#(L:KN62_INNER_KNOB) -- (>L:KN62_INNER_KNOB)
PA-28-161_KN_62A_Inner_Knob_Inc#(L:KN62_INNER_KNOB) ++ (>L:KN62_INNER_KNOB)
PA-28-161_KN_62A_Inner_Knob_Press#(L:KN62_INNER_KNOB_PUSH) ! (>L:KN62_INNER_KNOB_PUSH)
PA-28-161_KN_62A_Off#0 (>L:KN62_POWER)
PA-28-161_KN_62A_On#1 (>L:KN62_POWER)
PA-28-161_KN_62A_Outer_Knob_Dec#(L:KN62_OUTER_KNOB) -- (>L:KN62_OUTER_KNOB)
PA-28-161_KN_62A_Outer_Knob_Inc#(L:KN62_OUTER_KNOB) ++ (>L:KN62_OUTER_KNOB)
PA-28-161_KN_62A_RMT#0 (>L:KN62_MODE_KNOB)
PA-28-161_KR_85_ADF#1 (>L:KR85_mode_knob)
PA-28-161_KR_85_ANT#2 (>L:KR85_mode_knob)
PA-28-161_KR_85_BFO#3 (>L:KR85_mode_knob)
PA-28-161_KR_85_Left_Knob_Dec#(L:KR85_LEFT_KNOB) -- (>L:KR85_LEFT_KNOB)
PA-28-161_KR_85_Left_Knob_Inc#(L:KR85_LEFT_KNOB) ++ (>L:KR85_LEFT_KNOB)
PA-28-161_KR_85_OFF#0 (>L:KR85_mode_knob)
PA-28-161_KR_85_Right_Inner_Knob_Dec#(L:KR85_RIGHT_INNER_KNOB) -- (>L:KR85_RIGHT_INNER_KNOB)
PA-28-161_KR_85_Right_Inner_Knob_Inc#(L:KR85_RIGHT_INNER_KNOB) ++ (>L:KR85_RIGHT_INNER_KNOB)
PA-28-161_KR_85_Right_Outer_Knob_Dec#(L:KR85_RIGHT_OUTER_KNOB) -- (>L:KR85_RIGHT_OUTER_KNOB)
PA-28-161_KR_85_Right_Outer_Knob_Inc#(L:KR85_RIGHT_OUTER_KNOB) ++ (>L:KR85_RIGHT_OUTER_KNOB)
PA-28-161_KR_85_Vol_Dec#(L:KR85_VOL_KNOB) 1 - 0 max (>L:KR85_VOL_KNOB)
PA-28-161_KR_85_Vol_Inc#(L:KR85_VOL_KNOB) 1 + 10 min (>L:KR85_VOL_KNOB)
PA-28-161_NAV_mode_#0 (>L:LEFT_MISC_NAVGPS)
PA-28-161_Nav_Select_Switch__Centre_Position#1 (>L:AUTOPILOT_NAV_SWITCH)
PA-28-161_Nav_Select_Switch__Select_Nav_1#0 (>L:AUTOPILOT_NAV_SWITCH)
PA-28-161_Nav_Select_Switch__Select_Nav_2#2 (>L:AUTOPILOT_NAV_SWITCH)
//Just Flight/PA28 Warrior II/Electrical
PA-28-161_Alternator_Off#0 (>L:CENTRE_LOWER_alt)
PA-28-161_Alternator_On#1 (>L:CENTRE_LOWER_alt)
PA-28-161_Avionics_Off#0 (>L:RIGHT_LOWER_avionics_pwr)
PA-28-161_Avionics_On#1 (>L:RIGHT_LOWER_avionics_pwr)
PA-28-161_Battery_Off#0 (>L:CENTRE_LOWER_bat)
PA-28-161_Battery_On#1 (>L:CENTRE_LOWER_bat)
//Just Flight/PA28 Warrior II/Engine
PA-28-161_Carb_Heat_Off#(>K:ANTI_ICE_OFF)
PA-28-161_Carb_Heat_On#(>K:ANTI_ICE_ON)
PA-28-161_Magneto_Both#(>K:MAGNETO_BOTH)
PA-28-161_Magneto_L#(>K:MAGNETO_LEFT)
PA-28-161_Magneto_Off#(>K:MAGNETO_OFF)
PA-28-161_Magneto_R#(>K:MAGNETO_RIGHT)
PA-28-161_Magneto_Start#(A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:SET_STARTER1_HELD) }
//Just Flight/PA28 Warrior II/Environment
PA-28-161_Cabin_Fan_Hi#0 (>L:RIGHT_LOWER_FAN)
PA-28-161_Cabin_Fan_Lo#2 (>L:RIGHT_LOWER_FAN)
PA-28-161_Cabin_Fan_Off#1 (>L:RIGHT_LOWER_FAN)
//Just Flight/PA28 Warrior II/Fuel
PA-28-161_Engine_Primer_Pull#1 (>L:LEFT_LOWER_PRIME)
PA-28-161_Engine_Primer_Push#0 (>L:LEFT_LOWER_PRIME)
PA-28-161_Fuel_Pump_Off#0 (>L:CENTRE_LOWER_fuelpump) 
PA-28-161_Fuel_Pump_On#1 (>L:CENTRE_LOWER_fuelpump) 
PA-28-161_Fuel_Tank_Selector_Left#1 (>L:LEFT_MISC_FUEL_SEL)
PA-28-161_Fuel_Tank_Selector_Off#0 (>L:LEFT_MISC_FUEL_SEL)
PA-28-161_Fuel_Tank_Selector_Right#2 (>L:LEFT_MISC_FUEL_SEL)
//Just Flight/PA28 Warrior II/Gear
PA-28-161_Parking_Brakes_Off#0 (>K:PARKING_BRAKE_SET)
PA-28-161_Parking_Brakes_On#1 (>K:PARKING_BRAKE_SET)
//Just Flight/PA28 Warrior II/Lights
PA-28-161_Anti_Col_Light_Off#0 (>L:CENTRE_LOWER_anticol_light)
PA-28-161_Anti_Col_Light_On#1 (>L:CENTRE_LOWER_anticol_light)
PA-28-161_Landing_Light_Off#0 (>L:CENTRE_LOWER_ldg_light)
PA-28-161_Landing_Light_On#1 (>L:CENTRE_LOWER_ldg_light)
//Just Flight/PA28 Warrior II/Miscellaneous
PA-28-161_EFB_Off#0 (>L:RIGHT_MISC_ICOMM)
PA-28-161_EFB_On#1 (>L:RIGHT_MISC_ICOMM)
//Just Flight/PA28 Warrior II/Warning System
PA-28-161_Annunciator_Light_Test_Press#1 (>L:LEFT_MISC_PRESS_TEST_ISDOWN)
PA-28-161_Annunciator_Light_Test_Release#0 (>L:LEFT_MISC_PRESS_TEST_ISDOWN)
//Just Flight/PA38 Tomahawk/Anti-Ice
Carb_Heat_Off#0 (>L:RIGHT_LOWER_carbheat)
Carb_Heat_On#100 (>L:RIGHT_LOWER_carbheat)
Pitot_Heat_Off#0 (>L:LEFT_MISC_pitotheat)
Pitot_Heat_On#1 (>L:LEFT_MISC_pitotheat)
//Just Flight/PA38 Tomahawk/Fuel
Fuel_Pump_Off#0 (>L:LEFT_MISC_fuelpump)
Fuel_Pump_On#1 (>L:LEFT_MISC_fuelpump)
//Just Flight/PA38 Tomahawk/Gear
Parking_Brake_Toggle#(>K:PARKING_BRAKES)
//Just Flight/PA38 Tomahawk/Lights
Anti_Collision_Lights_Off#0 (>L:LEFT_MISC_anticol_light)
Anti_Collision_Lights_On#1 (>L:LEFT_MISC_anticol_light)
Landing_Light_Off#0 (>L:LEFT_MISC_ldg_light)
Landing_Light_On#1 (>L:LEFT_MISC_ldg_light)
//Just Flight/Piper Arrow III/Anti-Ice
PITOT_HEAT_SWITCH#(L:CENTRE_LOWER_pitotheat) ! (>L:CENTRE_LOWER_pitotheat)
//Just Flight/Piper Arrow III/Autopilot
AUTOPILOT_HDG_Mode_ON_PRESS#2 (>L:AUTOPILOT_mode)
AUTOPILOT_LOC_NORM_Mode_ON_PRESS#3 (>L:AUTOPILOT_mode)
AUTOPILOT_LOC_REV_Mode_ON_PRESS#4 (>L:AUTOPILOT_mode)
AUTOPILOT_Nav_Mode_ON_PRESS#0 (>L:AUTOPILOT_mode)
AUTOPILOT_Omni_Mode_ON_PRESS#1 (>L:AUTOPILOT_mode)
AUTOPILOT_alt_ON_PRESS#1 (>L:AUTOPILOT_alt)
AUTOPILOT_hdg_OFF_PRESS#0 (>L:AUTOPILOT_hdg)
AUTOPILOT_hdg_ON_PRESS#1 (>L:AUTOPILOT_hdg)
AUTOPILOT_navgps_ON_PRESS#1 (>L:AUTOPILOT_navgps)
AUTOPILOT_off#0 (>L:AUTOPILOT_onoff)
AUTOPILOT_on#1 (>L:AUTOPILOT_onoff)
AUTOPILOT_HSI_HDG_BUG_DEC#(L:HSI_heading_knob, enum) -- 0 max (>L:HSI_heading_knob, enum) (L:HSI_heading_knob, enum) 0 == if{ 100 (>L:HSI_heading_knob, enum) }
AUTOPILOT_HSI_HDG_BUG_INC#(L:HSI_heading_knob, enum) ++ 100 min (>L:HSI_heading_knob, enum) (L:HSI_heading_knob, enum) 100 == if{ 0 (>L:HSI_heading_knob, enum) }
AutoPilot_Mode_Decrease#(L:AUTOPILOT_mode) -- (>L:AUTOPILOT_mode)
AutoPilot_Mode_Increase#(L:AUTOPILOT_mode) ++ (>L:AUTOPILOT_mode)
NAV_GPS_SELECTOR_SW#(L:LEFT_MISC_navgps) ! (>L:LEFT_MISC_navgps)
PA28_AUTOPILOT_TOGGLE#(L:AUTOPILOT_onoff,bool) ! (>L:AUTOPILOT_onoff,bool)
//Just Flight/Piper Arrow III/EFIS
ALT_baro_knob_left#(L:ALTIMETER_baro_knob, enum) ++ 100 min (>L:ALTIMETER_baro_knob, enum) (>K:KOHLSMAN_INC) (L:ALTIMETER_baro_knob, enum) 100 == if{ 0 (>L:ALTIMETER_baro_knob, enum) }
ALT_baro_knob_right#(L:ALTIMETER_baro_knob, enum) -- 0 max (>L:ALTIMETER_baro_knob, enum) (>K:KOHLSMAN_DEC) (L:ALTIMETER_baro_knob, enum) 0 == if{ 100 (>L:ALTIMETER_baro_knob, enum) }
//Just Flight/Piper Arrow III/Electrical
_Circuit_Breaker_-ON#1 (>L:CIRCUIT_BREAKERS_autopilot, bool) 
CENTRE_LOWER_bat_ON_PRESS#1 (>L:CENTRE_LOWER_bat)
CENTRE_LOWER_bat_ON_RELEASE#0 (>L:CENTRE_LOWER_bat)
Center_Lower_Alternator_ON#1 (>L:CENTRE_LOWER_alt)
Center_Lower_Alternator_OFF#0 (>L:CENTRE_LOWER_alt)
//Just Flight/Piper Arrow III/Engines
EGT_knob_left#(L:RIGHT_LOWER_egt_knob, enum) ++ 100 % (>L:RIGHT_LOWER_egt_knob, enum)
EGT_knob_right#(L:RIGHT_LOWER_egt_knob, enum) -- (>L:RIGHT_LOWER_egt_knob, enum) (L:RIGHT_LOWER_egt_knob, enum) 0 < if{ 99 (>L:RIGHT_LOWER_egt_knob, enum) }
THROTTLE_QUADRANT_mixture_lock_ON_PRESS#1 (>L:THROTTLE_QUADRANT_mixture_lock)
THROTTLE_QUADRANT_mixture_lock_ON_RELEASE#0 (>L:THROTTLE_QUADRANT_mixture_lock)
//Just Flight/Piper Arrow III/Environment
Electronic_Flight_Board#1 (>L:EFB_On_Switch) (L:EFB_On, bool) ! (>L:EFB_On, bool)
Left_hand_window_latch#(>L:LEFT_MISC_window_latch,bool) 
Lower_Door_latch_unlock#1 (>L:DOOR_lower_latch) 
Open_the_Right_hand_door#(>L:DOOR_door,bool)
Open_the_left_hand_window#1 (>L:LEFT_MISC_window_LC,bool) 
Upper_Door_latch_unlatch#1 (>L:DOOR_upper_latch)
//Just Flight/Piper Arrow III/Fuel
FUEL_PRIMER_SWITCH#(L:LEFT_MISC_prime_IsDown) ! (>L:LEFT_MISC_prime_IsDown)
FUEL_TANK_SELECTOR_SWITCH#(L:LEFT_MISC_fuel_sel) ++ 3 % (>L:LEFT_MISC_fuel_sel) }
FUEL_PUMP_SELECTOR_SWITCH#(L:CENTRE_LOWER_fuelpump) 0 == if{ 1 (>L:CENTRE_LOWER_fuelpump) } els{ (L:CENTRE_LOWER_fuelpump) 1 == if{ 2 (>L:CENTRE_LOWER_fuelpump) } els{ (L:CENTRE_LOWER_fuelpump) 2 == if{ 0 (>L:CENTRE_LOWER_fuelpump) }
//Just Flight/Piper Arrow III/Gear
Emergency_gear_down#0 (>L:LOWER_emergency_gear)
Emergency_gear_off#1 (>L:LOWER_emergency_gear)
Emergency_gear_on#2 (>L:LOWER_emergency_gear)
LANDING_GEAR_SWITCH#(L:LDG_GEAR_lever) ! (>L:LDG_GEAR_lever)
PARKING_BRAKE_SWITCH#(>K:PARKING_BRAKES)
//Just Flight/Piper Arrow III/Lights
ANT_COL_LIGHT_SWITCH#(L:CENTRE_LOWER_anticol_light) ! (>L:CENTRE_LOWER_anticol_light)
LANDING_LIGHT_SWITCH#(L:CENTRE_LOWER_ldg_light) ! (>L:CENTRE_LOWER_ldg_light)
PA28_LIGHTS_CABIN_DEC#(L:LIGHTING_CABIN_0) 5 - 0 max s0 (>L:LIGHTING_CABIN_0) l0 10 (>K:2:LIGHT_POTENTIOMETER_SET) 
PA28_LIGHTS_CABIN_INC#(L:LIGHTING_CABIN_0) 5 + 100 min s0 (>L:LIGHTING_CABIN_0) l0 10 (>K:2:LIGHT_POTENTIOMETER_SET)
ROT_BCN_LIGHT_SWITCH#(L:CENTRE_LOWER_bcn_light) ! (>L:CENTRE_LOWER_bcn_light)
//Just Flight/Piper Arrow III/Miscellaneous
Timer_mode#Press = 1 (>L:YOKE_mode) Release = 0 (>L:YOKE_mode)
PA28_GLARESHIELD_VISOR_TOGGLE#(L:JF_Visor_Position_1) 0 == if{ 100 } els{ 0 } (>L:JF_Visor_Position_1)
//Just Flight/Piper Arrow III/Radio
DME_Input_to_NAV2#0 (>L:RIGHT_MISC_dme_nav, Number)
DME_input_to_NAV1#1 (>L:RIGHT_MISC_dme_nav, Number)
GNS530_COM_RADIO_VOLUME_DEC#(K:COM1_VOLUME_SET) ++ (>K:COM1_VOLUME_SET)
GNS530_COM_RADIO_VOLUME_INC#(K:COM1_VOLUME_SET) -- (>K:COM1_VOLUME_SET)
GNS530_NAV_RADIO_VOLUME_DEC#(K:NAV1_VOLUME_SET_EX1) ++ (>K:NAV1_VOLUME_SET_EX1)
GNS530_NAV_RADIO_VOLUME_INC#(K:NAV1_VOLUME_SET_EX1) -- (>K:NAV1_VOLUME_SET_EX1)
GNS530_COM_RADIO_VOLUME_POTENTIOMETER#@ 10.23 / 0 max 100 min (>K:COM1_VOLUME_SET)
GNS530_NAV_RADIO_VOLUME_POTENTIOMETER#@ 10.23 / 0 max 100 min (>K:NAV1_VOLUME_SET_EX1)
KR85_ADF_MODE_KNOB_DEC#(L:KR85_mode_knob) 0 > if{ 1 if{ (L:KR85_mode_knob) 1 - (>L:KR85_mode_knob) } }
KR85_ADF_MODE_KNOB_INC#(L:KR85_mode_knob) 3 < if{ 1 if{ (L:KR85_mode_knob) 1 + (>L:KR85_mode_knob) } }
KT76_XPNDR_MODE_ON-LEFT#(L:KT76_mode_knob) -- 0 max (>L:KT76_mode_knob)
KT76_XPNDR_MODE_ON-RIGHT#(L:KT76_mode_knob) ++ 4 min (>L:KT76_mode_knob)
KX170B_COM1_RADIO_VOLUME_DEC#(L:KX170_COMM1_vol_knob) 0 > if{ (L:KX170_COMM1_vol_knob) -- (>L:KX170_COMM1_vol_knob) }
KX170B_COM1_RADIO_VOLUME_INC#(L:KX170_COMM1_vol_knob) 10 < if{ (L:KX170_COMM1_vol_knob) ++ (>L:KX170_COMM1_vol_knob) }
KX170B_NAV1_RADIO_VOLUME_DEC#(L:KX170_NAV1_vol_knob) 0 > if{ (L:KX170_NAV1_vol_knob) -- (>L:KX170_NAV1_vol_knob) }
KX170B_NAV1_RADIO_VOLUME_INC#(L:KX170_NAV1_vol_knob) 10 < if{ (L:KX170_NAV1_vol_knob) ++ (>L:KX170_NAV1_vol_knob) }
KX170_COM1_OFF_ON_SWITCH#(L:KX170_COMM1_offon) ! (>L:KX170_COMM1_offon)
KX170_COMM1_inner_knob_left#(L:KX170_COMM1_inner_knob, enum) ++ 100 % (>L:KX170_COMM1_inner_knob, enum)
KX170_COMM1_inner_knob_right#(L:KX170_COMM1_inner_knob, enum) -- (>L:KX170_COMM1_inner_knob, enum) (L:KX170_COMM1_inner_knob, enum) 0 < if{ 99 (>L:KX170_COMM1_inner_knob, enum) }
KX170_COMM1_outer_knob_left#(L:KX170_COMM1_outer_knob, enum) ++ 100 % (>L:KX170_COMM1_outer_knob, enum)
KX170_COMM1_outer_knob_right#(L:KX170_COMM1_outer_knob, enum) -- (>L:KX170_COMM1_outer_knob, enum) (L:KX170_COMM1_outer_knob, enum) 0 < if{ 99 (>L:KX170_COMM1_outer_knob, enum) }
KX170_NAV1_OFF_ON_SWITCH#(L:KX170_NAV1_offon) ! (>L:KX170_NAV1_offon)
KX170_NAV1_inner_knob_left#(L:KX170_NAV1_inner_knob, enum) ++ 100 % (>L:KX170_NAV1_inner_knob, enum)
KX170_NAV1_inner_knob_right#(L:KX170_NAV1_inner_knob, enum) -- (>L:KX170_NAV1_inner_knob, enum) (L:KX170_NAV1_inner_knob, enum) 0 < if{ 99 (>L:KX170_NAV1_inner_knob, enum) }
KX170_NAV1_outer_knob_left#(L:KX170_NAV1_outer_knob, enum) ++ 100 % (>L:KX170_NAV1_outer_knob, enum)
KX170_NAV1_outer_knob_right#(L:KX170_NAV1_outer_knob, enum) -- (>L:KX170_NAV1_outer_knob, enum) (L:KX170_NAV1_outer_knob, enum) 0 < if{ 99 (>L:KX170_NAV1_outer_knob, enum) }
KX175B_COM2_RADIO_VOLUME_DEC#(L:KX175_COMM2_vol_knob) 0 > if{ (L:KX175_COMM2_vol_knob) -- (>L:KX175_COMM2_vol_knob) }
KX175B_COM2_RADIO_VOLUME_INC#(L:KX175_COMM2_vol_knob) 10 < if{ (L:KX175_COMM2_vol_knob) ++ (>L:KX175_COMM2_vol_knob) }
KX175B_NAV2_RADIO_VOLUME_DEC#(L:KX175_NAV2_vol_knob) 0 > if{ (L:KX175_NAV2_vol_knob) -- (>L:KX175_NAV2_vol_knob) }
KX175B_NAV2_RADIO_VOLUME_INC#(L:KX175_NAV2_vol_knob) 10 < if{ (L:KX175_NAV2_vol_knob) ++ (>L:KX175_NAV2_vol_knob) }
KX175_COM2_OFF_ON_SWITCH#(L:KX175_COMM2_offon) ! (>L:KX175_COMM2_offon)
KX175_COMM2_inner_knob_left#(L:KX175_COMM2_inner_knob, enum) ++ 100 % (>L:KX175_COMM2_inner_knob, enum)
KX175_COMM2_inner_knob_right#(L:KX175_COMM2_inner_knob, enum) -- (>L:KX175_COMM2_inner_knob, enum) (L:KX175_COMM2_inner_knob, enum) 0 < if{ 99 (>L:KX175_COMM2_inner_knob, enum) }
KX175_COMM2_outer_knob_left#(L:KX175_COMM2_outer_knob, enum) ++ 100 % (>L:KX175_COMM2_outer_knob, enum)
KX175_COMM2_outer_knob_right#(L:KX175_COMM2_outer_knob, enum) -- (>L:KX175_COMM2_outer_knob, enum) (L:KX175_COMM2_outer_knob, enum) 0 < if{ 99 (>L:KX175_COMM2_outer_knob, enum) }
KX175_NAV2_OFF_ON_SWITCH#(L:KX175_NAV2_offon) ! (>L:KX175_NAV2_offon)
KX175_NAV2_inner_knob_left#(L:KX175_NAV2_inner_knob, enum) ++ 100 % (>L:KX175_NAV2_inner_knob, enum)
KX175_NAV2_inner_knob_right#(L:KX175_NAV2_inner_knob, enum) -- (>L:KX175_NAV2_inner_knob, enum) (L:KX175_NAV2_inner_knob, enum) 0 < if{ 99 (>L:KX175_NAV2_inner_knob, enum) }
KX175_NAV2_outer_knob_left#(L:KX175_NAV2_outer_knob, enum) ++ 100 % (>L:KX175_NAV2_outer_knob, enum)
KX175_NAV2_outer_knob_right#(L:KX175_NAV2_outer_knob, enum) -- (>L:KX175_NAV2_outer_knob, enum) (L:KX175_NAV2_outer_knob, enum) 0 < if{ 99 (>L:KX175_NAV2_outer_knob, enum) }
//Just Flight/Stearman PT17/Miscellaneous
PT17_Smoke_Toggle#(L:Smoke Visibility) ! (>L:Smoke Visibility)
//Leonardo/MadDog MD-82/APU
LEONARDO_MADDOG_APU_AIR_COND_COLDER#16777216 2 * 69830 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_MASTER_OFF#16777216 0 * 69831 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_MASTER_RUN#16777216 1 * 69831 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_MASTER_START#16777216 2 * 69831 + (>L:maddogEventIDParam,number)
//Leonardo/MadDog MD-82/Autopilot
CRS_NAV1_ENC_DEC#16384 2 + (>L:NAV1_event,number)
CRS_NAV1_ENC_INC#8192 2 + (>L:NAV1_event,number)
MD82_FGCP_ALTHOLD_SWITCH#536870912 18 + (>L:fgcp_event, number)
MD82_FGCP_ALT_DEC_KNOB#8192 23 + (>L:fgcp_event,number)
MD82_FGCP_ALT_INC_KNOB#16384 23 + (>L:fgcp_event,number)
MD82_FGCP_ALT_KNOB_DEC#8192 23 + (>L:fgcp_event,number)
MD82_FGCP_ALT_KNOB_INC#16384 23 + (>L:fgcp_event,number)
MD82_FGCP_ALT_KNOB_PULL#536870912 23 + (>L:fgcp_event,number)
MD82_FGCP_ALT_KNOB_PUSH_100_FEET_STEPS_ON_PRESS#2147483648 23 + (>L:fgcp_event,number)
MD82_FGCP_ALT_KNOB_PUSH_100_FEET_STEPS_ON_RELEASE#524288 23 + (>L:fgcp_event,number)
MD82_FGCP_ALT_SWITCH#536870912 23 + (>L:fgcp_event,number)
MD82_FGCP_AP_MACH_SEL_SWITCH#536870912 4 + (>L:fgcp_event, number)
MD82_FGCP_AP_SPEED_SWITCH#536870912 3 + (>L:fgcp_event, number)
MD82_FGCP_AUTOLAND_SWITCH#536870912 11 + (>L:fgcp_event, number)
MD82_FGCP_BANK_KNOB_DEC#8192 12 + (>L:fgcp_event,number)
MD82_FGCP_BANK_KNOB_INC#16384 12 + (>L:fgcp_event,number)
MD82_FGCP_EPR_LIM_SWITCH#536870912 5 + (>L:fgcp_event, number)
MD82_FGCP_FMS_OVRD_SWITCH#536870912 2 + (>L:fgcp_event, number)
MD82_FGCP_HDG_DEC_KNOB#8192 13 + (>L:fgcp_event,number)
MD82_FGCP_HDG_INC_KNOB#16384 13 + (>L:fgcp_event,number)
MD82_FGCP_HDG_KNOB_DEC#8192 13 + (>L:fgcp_event,number)
MD82_FGCP_HDG_KNOB_INC#16384 13 + (>L:fgcp_event,number)
MD82_FGCP_HDG_KNOB_PULL#536870912 13 + (>L:fgcp_event,number) 
MD82_FGCP_HDG_PULL_KNOB#536870912 13 + (>L:fgcp_event,number)
MD82_FGCP_HDG_PUSH_KNOB#2147483648 13 + (>L:fgcp_event,number)
MD82_FGCP_IASMACH_SWITCH#536870912 16 + (>L:fgcp_event, number)
MD82_FGCP_ILS_SWITCH#536870912 10 + (>L:fgcp_event, number)
MD82_FGCP_NAV1_CRS_DEC_KNOB#8192 2 + (>L:NAV1_event,number)
MD82_FGCP_NAV1_CRS_INC_KNOB#16384 2 + (>L:NAV1_event,number)
MD82_FGCP_NAV_SWITCH#536870912 8 + (>L:fgcp_event, number)
MD82_FGCP_SPDSEL_SWITCH#536870912 6 + (>L:fgcp_event,number)
MD82_FGCP_SPD_DEC_KNOB#8192 6 + (>L:fgcp_event,number)
MD82_FGCP_SPD_INC_KNOB#16384 6 + (>L:fgcp_event,number)
MD82_FGCP_SPD_KNOB_DEC#8192 6 + (>L:fgcp_event,number)
MD82_FGCP_SPD_KNOB_INC#16384 6 + (>L:fgcp_event,number)
MD82_FGCP_SPD_KNOB_PUSH#536870912 6 + (>L:fgcp_event,number)
MD82_FGCP_VERTSPD_DEC_KNOB#16384 14 + (>L:fgcp_event,number)
MD82_FGCP_VERTSPD_INC_KNOB#8192 14 + (>L:fgcp_event,number)
MD82_FGCP_VERTSPD_SWITCH#536870912 15 + (>L:fgcp_event, number)
MD82_FGCP_VNAV_SWITCH#536870912 17 + (>L:fgcp_event, number)
MD82_FGCP_VOR_LOC_SWITCH#536870912 9 + (>L:fgcp_event, number)
MD82_FGCP_VS_KNOB_DEC#16384 14 + (>L:fgcp_event,number)
MD82_FGCP_VS_KNOB_INC#8192 14 + (>L:fgcp_event,number)
MD_82_CM1_FD_SWITCH#536870912 0 + (>L:fgcp_event,number)
MD_82_CM2_FD_SWITCH#536870912 1 + (>L:fgcp_event,number)
MD_82_FGCP_AP_AUTOTHROTTLE_SWITCH#536870912 7 + (>L:fgcp_event, number)
MD_82_VC_FGCP_AP_ENGAGE_SWITCH#536870912 19 + (>L:fgcp_event, number)
MD_82_YOKE_AP_DISC#536870912 8 + (>L:cockpit_event,number)
//Leonardo/MadDog MD-82/Autothrust System
MD82_PED_THROTTLE1_SWITCH#536870912 9 + (>L:pedestal_event,number)
MD82_PED_THROTTLE2_SWITCH##536870912 28 + (>L:pedestal_event,number)
//Leonardo/MadDog MD-82/EFIS
ALT_BARO_INC#16384 0 + (>L:CM1_alt_event,number) 
Baro_ALT_DEC#8192 0 + (>L:CM1_alt_event, number)
MD82_MFD1_Range_Decrease#8192 3 + (>L:CM1_lateral_event)
MD82_MFD1_Range_Increase#16384 3 + (>L:CM1_lateral_event)
MD82_MFD2_Range_Decrease#8192 3 + (>L:CM2_lateral_event)
MD82_MFD2_Range_Increase#16384 3 + (>L:CM2_lateral_event)
//Leonardo/MadDog MD-82/Electrical
LEONARDO_MADDOG_APU_AIR_OFF#16777216 0 * 69830 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_AIR_ON#16777216 1 * 69830 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_FIRE_AGENT_1_DISCH#16777216 1 * 69827 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_FIRE_AGENT_1_OFF#16777216 0 * 69827 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_FIRE_AGENT_2_DISCH#16777216 1 * 69828 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_FIRE_AGENT_2_OFF#16777216 0 * 69828 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_APU_FIRE_CONT_NORM#16777216 0 * 69829 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_EMER_PWR_OFF#16777216 0 * 69835 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_EMER_PWR_ON#16777216 1 * 69835 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_EXT_PWR_L_BUS_OFF#16777216 0 * 69822 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_EXT_PWR_L_BUS_ON#16777216 1 * 69822 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_EXT_PWR_R_BUS_OFF#16777216 0 * 69823 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_EXT_PWR_R_BUS_ON#16777216 1 * 69823 + (>L:maddogEventIDParam,number)
MD_82_OVHD_APU_LEFT_BUS_SWITCH#536870912 34 + (>L:overhead_event,number)
MD_82_OVHD_APU_RIGHT_BUS_SWITCH#536870912 35 + (>L:overhead_event,number)
MD_82_OVHD_BATTERY_SWITCH#536870912 42 + (>L:overhead_event,number)
MD_82_OVHD_EXT_POWER_LEFT_BUS_SWITCH#536870912 36 + (>L:overhead_event,number)
MD_82_OVHD_EXT_POWER_RIGHT_BUS_SWITCH#536870912 37 + (>L:overhead_event,number)
//Leonardo/MadDog MD-82/Engine
LEONARDO_MADDOG_ENG_IGN_BOTH#16777216 3 * 69837 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_ENG_IGN_OFF#16777216 1 * 69837 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_ENG_IGN_OVRD#16777216 4 * 69837 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_ENG_IGN_SYS_A#16777216 0 * 69837 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_ENG_IGN_SYS_B#16777216 2 * 69837 + (>L:maddogEventIDParam,number)
//Leonardo/MadDog MD-82/FMS
LFMC_LSKL1#536870912 1 + (>L:CM1_FMS_event) 
LFMC_LSKL2#536870912 2 + (>L:CM1_FMS_event) 
LFMC_LSKL3#536870912 3 + (>L:CM1_FMS_event) 
LFMC_LSKL4#536870912 4 + (>L:CM1_FMS_event) 
LFMC_LSKL5#536870912 5 + (>L:CM1_FMS_event) 
LFMC_LSKL6#536870912 6 + (>L:CM1_FMS_event) 
LFMC_LSKR1#536870912 7 + (>L:CM1_FMS_event) 
LFMC_LSKR2#536870912 8 + (>L:CM1_FMS_event) 
LFMC_LSKR3#536870912 9 + (>L:CM1_FMS_event) 
LFMC_LSKR5#536870912 11 + (>L:CM1_FMS_event)
LFMC_LSKR6#536870912 12 + (>L:CM1_FMS_event)
LFMS_CLB#536870912 17 + (>L:CM1_FMS_event) 
LFMS_CRZ#536870912 18 + (>L:CM1_FMS_event) 
LFMS_DEP_ARR#536870912 25 + (>L:CM1_FMS_event) 
LFMS_DES#536870912 19 + (>L:CM1_FMS_event) 
LFMS_DIR_INTC#536870912 14 + (>L:CM1_FMS_event) 
LFMS_EXEC#536870912 28 + (>L:CM1_FMS_event) 
LFMS_FIX#536870912 24 + (>L:CM1_FMS_event) 
LFMS_HOLD#536870912 26 + (>L:CM1_FMS_event) 
LFMS_INIT_REF#536870912 13 + (>L:CM1_FMS_event) 
LFMS_LEGS#536870912 16 + (>L:CM1_FMS_event) 
LFMS_MENU#536870912 23 + (>L:CM1_FMS_event) 
LFMS_NEXT_PAGE#536870912 22 + (>L:CM1_FMS_event) 
LFMS_NUM_A#536870912 41 + (>L:CM1_FMS_event)
LFMS_NUM_B#536870912 42 + (>L:CM1_FMS_event)
LFMS_NUM_C#536870912 43 + (>L:CM1_FMS_event)
LFMS_NUM_CLR#536870912 70 + (>L:CM1_FMS_event)
LFMS_NUM_D#536870912 44 + (>L:CM1_FMS_event)
LFMS_NUM_DEL#536870912 68 + (>L:CM1_FMS_event)
LFMS_NUM_E#536870912 45 + (>L:CM1_FMS_event)
LFMS_NUM_F#536870912 46 + (>L:CM1_FMS_event)
LFMS_NUM_G#536870912 47 + (>L:CM1_FMS_event)
LFMS_NUM_H#536870912 48 + (>L:CM1_FMS_event)
LFMS_NUM_I#536870912 49 + (>L:CM1_FMS_event)
LFMS_NUM_J#536870912 50 + (>L:CM1_FMS_event)
LFMS_NUM_K#536870912 51 + (>L:CM1_FMS_event)
LFMS_NUM_L#536870912 52 + (>L:CM1_FMS_event)
LFMS_NUM_M#536870912 53 + (>L:CM1_FMS_event)
LFMS_NUM_N#536870912 54 + (>L:CM1_FMS_event)
LFMS_NUM_O#536870912 55 + (>L:CM1_FMS_event)
LFMS_NUM_P#536870912 56 + (>L:CM1_FMS_event)
LFMS_NUM_Q#536870912 57 + (>L:CM1_FMS_event)
LFMS_NUM_R#536870912 58 + (>L:CM1_FMS_event)
LFMS_NUM_S#536870912 59 + (>L:CM1_FMS_event)
LFMS_NUM_SLASH#536870912 69 + (>L:CM1_FMS_event)
LFMS_NUM_SPACE#536870912 67 + (>L:CM1_FMS_event)
LFMS_NUM_T#536870912 60 + (>L:CM1_FMS_event)
LFMS_NUM_U#536870912 61 + (>L:CM1_FMS_event)
LFMS_NUM_V#536870912 62 + (>L:CM1_FMS_event)
LFMS_NUM_W#536870912 63 + (>L:CM1_FMS_event)
LFMS_NUM_X#536870912 64 + (>L:CM1_FMS_event)
LFMS_NUM_Y#536870912 65 + (>L:CM1_FMS_event)
LFMS_NUM_Z#536870912 66 + (>L:CM1_FMS_event)
LFMS_NUM0#536870912 39 + (>L:CM1_FMS_event)
LFMS_NUM1#536870912 29 + (>L:CM1_FMS_event)
LFMS_NUM2#536870912 30 + (>L:CM1_FMS_event)
LFMS_NUM3#536870912 31 + (>L:CM1_FMS_event)
LFMS_NUM4#536870912 32 + (>L:CM1_FMS_event)
LFMS_NUM5#536870912 33 + (>L:CM1_FMS_event)
LFMS_NUM6#536870912 34 + (>L:CM1_FMS_event)
LFMS_NUM7#536870912 35 + (>L:CM1_FMS_event)
LFMS_NUM8#536870912 36 + (>L:CM1_FMS_event)
LFMS_NUM9#536870912 37 + (>L:CM1_FMS_event)
LFMS_NUMDOT#536870912 38 + (>L:CM1_FMS_event)
LFMS_NUMMINPLUS#536870912 40 + (>L:CM1_FMS_event)
LFMS_PREV_PAGE#536870912 21 + (>L:CM1_FMS_event) 
LFMS_PROG#536870912 27 + (>L:CM1_FMS_event) 
LFMS_RTE#536870912 15 + (>L:CM1_FMS_event) 
LFMS_LSKR4#536870912 10 + (>L:CM1_FMS_event)
//Leonardo/MadDog MD-82/Fire Protection
LEONARDO_MADDOG_APU_FIRE_OFF___AGENT_ARM#16777216 1 * 69829 + (>L:maddogEventIDParam,number)
//Leonardo/MadDog MD-82/Fuel
MD82_Ovhd_Eng_L_Start_Switch_Guard_Toggle#536870912 4 + (>L:overhead_event,number)
MD82_Ovhd_Eng_L_Start_Switch_Toggle#536870912 5 + (>L:overhead_event, number)
MD82_Ovhd_Eng_R_Start_Switch_Guard_Toggle#536870912 6 + (>L:overhead_event,number)
MD82_Ovhd_Eng_R_Start_Switch_Toggle#536870912 7 + (>L:overhead_event, number)
MD82_Ovhd_L_Fuel_Heat_On_#536870912 2 + (>L:overhead_event,number)
MD82_Ovhd_R_Fuel_Heat_On#536870912 3 + (>L:overhead_event,number)
MD82_Ovhd_Start_Pump_Off#(L:ovhd_start_pump_switch1) 1 == if{ 536870912 0 + (>L:overhead_event,number) }
MD82_Ovhd_Start_Pump_On#(L:ovhd_start_pump_switch1) 0 == if{ 536870912 0 + (>L:overhead_event,number) }
MD82_Ovhd_Start_Pump_Toggle#536870912 0 + (>L:overhead_event,number) 
MD82_PED_FUELCUT_LEVER1_OFF#2147483648 11 + (>L:pedestal_event,number)
MD82_PED_FUELCUT_LEVER1_ON#536870912 11 + (>L:pedestal_event,number)
MD82_PED_FUELCUT_LEVER2_OFF#2147483648 12 + (>L:pedestal_event,number)
MD82_PED_FUELCUT_LEVER2_ON#536870912 12 + (>L:pedestal_event,number)
//Leonardo/MadDog MD-82/Gear
MD82_PED_GEAR_HORN_SW_PUSH#536870912 17 + (>L:pedestal_event,number)
MD82_PED_GEAR_HORN_SW_RELEASE#131072 17 + (>L:pedestal_event,number)
MD_82_VC_PARKING_BRAKE_OFF#(L:vc_parking_brake_knob, bool) if{ 536870912 1 + (>L:cockpit_event,number) }
MD_82_VC_PARKING_BRAKE_ON#(L:vc_parking_brake_knob, bool) ! if{ 536870912 1 + (>L:cockpit_event,number) }
MD_82_VC_PARKING_BRAKE_SWITCH#536870912 1 + (>L:cockpit_event,number)
//Leonardo/MadDog MD-82/Hydraulics
LEONARDO_MADDOG_HYD_PUMP_AUX_OFF#16777216 0 * 69787 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_AUX_ON#16777216 1 * 69787 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_AUX_OVRD#16777216 2 * 69787 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_L_HI#16777216 2 * 69785 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_L_LOW#16777216 1 * 69785 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_L_OFF#16777216 0 * 69785 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_R_HI#16777216 2 * 69786 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_R_LOW#16777216 1 * 69786 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_R_OFF#16777216 0 * 69786 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_TRANS_OFF#16777216 0 * 69788 + (>L:maddogEventIDParam,number)
LEONARDO_MADDOG_HYD_PUMP_TRANS_ON#16777216 1 * 69788 + (>L:maddogEventIDParam,number)
//Leonardo/MadDog MD-82/Lights
MD82_Anti_Collision_lights_Toggle#536870912 6 + (>L:ext_lights_event,number)
MD82_CM1_NOSELIGHT_SWITCH_DN#8192 2 + (>L:ext_lights_event,number)
MD82_CM1_NOSELIGHT_SWITCH_UP#16384 2 + (>L:ext_lights_event,number)
MD82_CM1_WINGLIGHTL_SWITCH_DN#536870912 0 + (>L:ext_lights_event,number)
MD82_CM1_WINGLIGHTL_SWITCH_UP#2147483648 0 + (>L:ext_lights_event,number)
MD82_CM1_WINGLIGHTR_SWITCH_DN#536870912 1 + (>L:ext_lights_event,number)
MD82_CM1_WINGLIGHTR_SWITCH_UP#2147483648 1 + (>L:ext_lights_event,number)
MD82_CM2_STROBE_SWITCH1_DN#536870912 7 + (>L:ext_lights_event,number)
MD82_CM2_STROBE_SWITCH1_UP#2147483648 7 + (>L:ext_lights_event,number)
MD82_OVHD_FLOOD_SWITCH_ALT#536870912 90 + (>L:overhead_event,number) } 
MD82_OVHD_FLOOD_SWITCH_OFF#2147483648 90 + (>L:overhead_event,number)
MD82_OVHD_FLOOD_SWITCH_ON#(L:ovhd_ckpt_flood_switch1, enum) 2 == if{ 2147483648 90 + (>L:overhead_event,number) } (L:ovhd_ckpt_flood_switch1, enum) 0 == if{ 536870912 90 + (>L:overhead_event,number) }
//Leonardo/MadDog MD-82/Radio
VHF1_Knob1_DEC#16384 11 + (>L:radio_event,number)
VHF1_Knob1_INC#8192 11 + (>L:radio_event,number)
VHF1_Knob2_DEC#16384 12 + (>L:radio_event,number)
VHF1_Knob2_INC#8192 12 + (>L:radio_event,number)
//LivToAir/CJ3+/Anti Ice
Alcohol_off#0 (>L:Switch_Alcohol_Windshield, bool)
Alcohol_on#1 (>L:Switch_Alcohol_Windshield, bool)
Anti_Coll_Light_off#0 (>L:AntiColl_Light_Switch)
Anti_Coll_Light_on#1 (>L:AntiColl_Light_Switch)
Eng_R_only#0 (>L:Switch_R_Deice)
Eng1_only_#0 (>L:Switch_L_Deice)
Pitot_1_off#0 (>L:Switch_Pitot_1)
Pitot_1_on#1 (>L:Switch_Pitot_1)
Pitot_2_off#0 (>L:Switch_Pitot_2)
Pitot_2_on#1 (>L:Switch_Pitot_2)
Pressurization_Dump_Cover_CLOSE#0 (>L:Pressurization_Dump_Cover)
Pressurization_Dump_Cover_OPEN#1 (>L:Pressurization_Dump_Cover)
Pressurization_Dump_Switch_OFF#0 (>L:Pressurization_Dump_Switch)
Pressurization_Dump_Switch_ON#1 (>L:Pressurization_Dump_Switch)
Pressurization_NORM#0 (>L:Pressurization_Switch)
Pressurization_STBY#1 (>L:Pressurization_Switch)
Tail_Auto#100 (>L:Switch_Tail_Deice)
Tail_manual#0 (>L:Switch_Tail_Deice)
Tail_off#50 (>L:Switch_Tail_Deice)
Temperature_Select_COLD#0 (>L:Temperature_Select_HotCold)
Temperature_Select_HOT#100 (>L:Temperature_Select_HotCold)
Temperature_Select_MANUAL#50 (>L:Temperature_Select_HotCold)
Temperature_Select_Mode_MANUAL#1 (>L:Temperture_Select_Mode)
Temperature_Select_Mode_NORM#0 (>L:Temperture_Select_Mode)
Windshield_Bleed_HI#100 (>L:Switch_Bleed_Windshield)
Windshield_Bleed_LOW#0 (>L:Switch_Bleed_Windshield)
Windshield_Bleed_OFF#50 (>L:Switch_Bleed_Windshield)
Wing_Xflow_off#0 (>L:Switch_Xflow)
Wing_Xflow_on#1 (>L:Switch_Xflow)
Wing_Eng_L_off#50 (>L:Switch_L_Deice)
Wing_Eng_L_on#100 (>L:Switch_L_Deice)
Wing_Eng_R_off#50 (>L:Switch_R_Deice)
Wing_Eng_R_on#100 (>L:Switch_R_Deice)
//LivToAir/CJ3+/BRAKES
Speed_Brake_Extend#1 (>L:SPOILERS_HANDLE_POSITION)
Speed_Brake_Retract#0 (>L:SPOILERS_HANDLE_POSITION)
//LivToAir/CJ3+/Electrical
Battery_Emer_off#(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 0 (>L:XMLVAR_Essential_bus_on)
Battery_Emer_on#(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 1 (>L:XMLVAR_Essential_bus_on)
Battery_Master_off#(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
Battery_Master_on#(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
Dispatch_Switch_off#0 (>L:Dispatch_Switch, bool)
Dispatch_Switch_on#1 (>L:Dispatch_Switch, bool)
Dispatch_Switch_on#1 (>L:Dispatch_Switch, bool)
Generator_1_off#1 (>K:ALTERNATOR_OFF) 
Generator_1_on#1 (>K:ALTERNATOR_ON) 
Generator_2_off#2 (>K:ALTERNATOR_OFF) 
Generator_2_on#2 (>K:ALTERNATOR_ON) 
//LivToAir/CJ3+/Fuel
Engine_1_Cut_Off#1 (>L:ENG1_Shutdown)
Engine_1_Idle#0 (>L:ENG1_Shutdown)
Engine_2_Cut_Off#1 (>L:ENG2_Shutdown)
Engine_2_Idle#0 (>L:ENG2_Shutdown)
//LivToAir/CJ3+/Lights (exterior)
Anti_Coll_Light_off#0 (>L:AntiColl_Light_Switch, bool)
Anti_Coll_Light_on#1 (>L:AntiColl_Light_Switch, bool)
Landing_Light_off#50 (>L:LandingTaxi_Light_Switch, number) 1 (>K:LANDING_LIGHTS_OFF) 0 1 (>K:2:LIGHT_POTENTIOMETER_SET)
Landing_Light_on#100 (>L:LandingTaxi_Light_Switch, number) 1 (>K:LANDING_LIGHTS_ON) 100 1 (>K:2:LIGHT_POTENTIOMETER_SET)
Taxi_Light_off#50 (>L:LandingTaxi_Light_Switch, number) 1 (>K:LANDING_LIGHTS_OFF) 0 1 (>K:2:LIGHT_POTENTIOMETER_SET)
Taxi_Light_on#0 (>L:LandingTaxi_Light_Switch, number) 1 (>K:LANDING_LIGHTS_ON) 40 1 (>K:2:LIGHT_POTENTIOMETER_SET)
Wing_Insp_Light_off#0 (>L:WingInp_Light_Switch, bool)
Wing_Insp_Light_on#1 (>L:WingInp_Light_Switch, bool)
//LivToAir/CJ3+/Lights (interior)
Emer_Light_Arm#100 (>L:ELECTRICAL_Switch_emerLights, number)
Emer_Light_off#50 (>L:ELECTRICAL_Switch_emerLights, number)
Emer_Light_on#0 (>L:ELECTRICAL_Switch_emerLights, number)
//LivToAir/CJ3+/Main instrument panel
STBY_Display_Test#0 (>L:STBY_FLY_DISPLAY_Switch, number) 0 (>K: BATTERY3_SET)
STBY_FLT_Display_off#50 (>L:STBY_FLY_DISPLAY_Switch, number) 0 (>K: BATTERY3_SET)
STBY_FLT_Display_on#100 (>L:STBY_FLY_DISPLAY_Switch, number) 1 (>K: BATTERY3_SET)
//LivToAir/CJ3+/Pressurization
Pressurization_Airsource_Knop_Air_Source_Both#60 (>L:Pressurization_AirSource_Knob)
Pressurization_Airsource_Knop_EMER#100 (>L:Pressurization_AirSource_Knob)
Pressurization_Airsource_Knop_Fresh_Air#20 (>L:Pressurization_AirSource_Knob)
Pressurization_Airsource_Knop_L#40 (>L:Pressurization_AirSource_Knob)
Pressurization_Airsource_Knop_OFF#0 (>L:Pressurization_AirSource_Knob)
Pressurization_Airsource_Knop_R#80 (>L:Pressurization_AirSource_Knob)
//LivToAir/CJ3+/Safety
ELT_off#1 (>K:ELT_OFF)
ELT_on#1 (>K:ELT_ON)
Pax_Safety_OFF#50 (>L:SeatBelt_Light_Switch)
Pax_Safety_ON#100 (>L:SeatBelt_Light_Switch)
Seat_Belt_ON#0 (>L:SeatBelt_Light_Switch)
//MGharib/HondaJet HA420/Autopilot
HA420_AP_AFC_Servo_Pitch_push#(L:AFCPITCH Pushed,bool) ! (>L:AFCPITCH Pushed,bool)
HA420_AP_AFC_Servo_Roll_push#(L:AFCROLL Pushed,bool) ! (>L:AFCROLL Pushed,bool)
HA420_AP_AFC_Servo_Yaw_push#(L:AFCYAW Pushed,bool) ! (>L:AFCYAW Pushed,bool)
HA420_AP_CRS1_Knob_Dec#(A:NAV OBS:1, degree) -- dnor (>K:VOR1_SET)
HA420_AP_CRS1_Knob_Push#(A:HEADING INDICATOR, degrees) (>K:VOR1_SET)
HA420_AP_CRS2_Knob_Dec#(A:NAV OBS:2, degree) -- dnor (>K:VOR2_SET)
HA420_AP_CRS2_Knob_Push#(A:HEADING INDICATOR, degrees) (>K:VOR2_SET)
HA420_AP_FD1_button_push#(>K:TOGGLE_FLIGHT_DIRECTOR)
HA420_AP_HDG_SEL_Knob_Dec#1 (>K:HEADING_BUG_DEC)
HA420_AP_HDG_SEL_Knob_Inc#1 (>K:HEADING_BUG_INC)
HA420_AP_HDG_SEL_Knob_Push#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
HA420_AP_VS_Wheel_Down#(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (L:XMLVAR_AirSpeedIsInMach) if{ (A:AUTOPILOT MACH HOLD VAR, number) 1 + 0 max (>K:AP_MACH_VAR_SET) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 + 0 max (>K:AP_SPD_VAR_SET) } } els{ (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{ 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT PITCH HOLD, Bool) if{ (A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 + 25 / 1 min -1 max 16384 * (>K:AP_PITCH_REF_SET) } } } 
HA420_AP_APR_Button_Push#(>K:AP_APR_HOLD)
HA420_AP_BANK_Button_Push#(A:AUTOPILOT MAX BANK ID, number) 0 == if{ 1 (>K:AP_MAX_BANK_SET) } els{ 0 (>K:AP_MAX_BANK_SET) }
HA420_AP_CPL_Button_Push#(L:CPL Pushed,bool) ! (>L:CPL Pushed,bool)
HA420_AP_FLC_Button_Push#(>K:FLIGHT_LEVEL_CHANGE)
HA420_AP_HDG_Button_Push#(>K:AP_HDG_HOLD)
HA420_AP_Master_Button_Push#(>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) }
HA420_AP_NAV_Button_Push#(>K:AP_NAV1_HOLD)
HA420_AP_SPD_SEL_Knob_Dec#(L:XMLVAR_SpeedIsManuallySet) if{ (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MACH_VAR_DEC) } els{ (>K:AP_SPD_VAR_DEC) } }
HA420_AP_SPD_SEL_Knob_Inc#(L:XMLVAR_SpeedIsManuallySet) if{ (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) if{ (>K:AP_MACH_VAR_INC) } els{ (>K:AP_SPD_VAR_INC) } }
HA420_AP_SPD_SEL_Knob_Push#(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE) (A:AUTOPILOT MANAGED SPEED IN MACH, Bool) (>L:XMLVAR_AirSpeedIsInMach)
HA420_AP__VS_Wheel_Up#(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (L:XMLVAR_AirSpeedIsInMach) if{ (A:AUTOPILOT MACH HOLD VAR, number) 1 - 0 max (>K:AP_MACH_VAR_SET) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 - 0 max (>K:AP_SPD_VAR_SET) } } els{ (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{ 1 (A:AUTOPILOT VERTICAL HOLD VAR:1, feet per minute) 100 - (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ (A:AUTOPILOT PITCH HOLD, Bool) if{ (A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 - 25 / 1 min -1 max 16384 * (>K:AP_PITCH_REF_SET) } } } 
HA420_AP_ALT_HOLD_BUTTON#(>K:AP_ALT_HOLD)
HA420_AP_ALT_SEL_KNOB_DEC#0 100 (>K:2:AP_ALT_VAR_DEC)
HA420_AP_ALT_SEL_KNOB_INC#0 100 (>K:2:AP_ALT_VAR_INC)
HA420_AP_AT__CSC__BUTTON#(L:CSC Pushed,bool) ! (>L:CSC Pushed)
HA420_AP_CO_BUTTON#(>K:AP_MANAGED_SPEED_IN_MACH_TOGGLE) (L:XMLVAR_AirSpeedIsInMach,bool) ! (>L:XMLVAR_AirSpeedIsInMach)
HA420_AP_CRS1_Knob_Inc#(A:NAV OBS:1, degree) ++ dnor (>K:VOR1_SET)
HA420_AP_CRS2_Knob_Inc#(A:NAV OBS:2, degree) ++ dnor (>K:VOR2_SET)
HA420_AP_FMS_MAN_Knob_FMS#0 (>L:HJET_THROTTLE_MAN, bool)
HA420_AP_FMS_MAN_Knob_MAN#1 (>L:HJET_THROTTLE_MAN, bool)
HA420_AP_HEADING_KNOB_DEC#1 (>K:HEADING_BUG_DEC)
HA420_AP_HEADING_KNOB_INC#1 (>K:HEADING_BUG_INC)
HA420_AP_SPEED_BUTTON#(L:FLC_Pushed,bool) ! (>L:FLC_Pushed)
HA420_AP_SPEED_KNOB_DEC#(>K:AP_SPD_VAR_DEC)
HA420_AP_SPEED_KNOB_INC#(>K:AP_SPD_VAR_INC)
HA420_AP_VNV_Button_Push#(L:XMLVAR_VNAVButtonValue) ! (>L:XMLVAR_VNAVButtonValue)
HA420_AP_VS_BUTTON#(L:VS_Pushed,bool) ! (>L:VS_Pushed)
HA420_AP_VS_Button_Push#(>K:AP_VS_HOLD)
HA420_AP_VS_KNOB_DEC#(A:AUTOPILOT VERTICAL HOLD VAR, feet/minute) 100 - (>K:AP_VS_SET)
HA420_AP_VS_KNOB_INC#(>K:AP_VS_VAR_INC)
HA420_AP_YD_Button_Push#(>K:YAW_DAMPER_TOGGLE)
//MGharib/HondaJet HA420/Avionics
HA420_G3000_MFD1_Softkey_1#(>H:AS3000_MFD_SOFTKEYS_1)
HA420_G3000_MFD1_Softkey_10#(>H:AS3000_MFD_SOFTKEYS_10)
HA420_G3000_MFD1_Softkey_11#(>H:AS3000_MFD_SOFTKEYS_11)
HA420_G3000_MFD1_Softkey_12#(>H:AS3000_MFD_SOFTKEYS_12)
HA420_G3000_MFD1_Softkey_2#(>H:AS3000_MFD_SOFTKEYS_2)
HA420_G3000_MFD1_Softkey_3#(>H:AS3000_MFD_SOFTKEYS_3)
HA420_G3000_MFD1_Softkey_4#(>H:AS3000_MFD_SOFTKEYS_4)
HA420_G3000_MFD1_Softkey_5#(>H:AS3000_MFD_SOFTKEYS_5)
HA420_G3000_MFD1_Softkey_6#(>H:AS3000_MFD_SOFTKEYS_6)
HA420_G3000_MFD1_Softkey_7#(>H:AS3000_MFD_SOFTKEYS_7)
HA420_G3000_MFD1_Softkey_8#(>H:AS3000_MFD_SOFTKEYS_8)
HA420_G3000_MFD1_Softkey_9#(>H:AS3000_MFD_SOFTKEYS_9)
HA420_G3000_PFD2_Softkey_1#(>H:AS3000_PFD_2_SOFTKEYS_1)
HA420_G3000_PFD2_Softkey_10#(>H:AS3000_PFD_2_SOFTKEYS_10)
HA420_G3000_PFD2_Softkey_11#(>H:AS3000_PFD_2_SOFTKEYS_11)
HA420_G3000_PFD2_Softkey_12#(>H:AS3000_PFD_2_SOFTKEYS_12)
HA420_G3000_PFD2_Softkey_2#(>H:AS3000_PFD_2_SOFTKEYS_2)
HA420_G3000_PFD2_Softkey_3#(>H:AS3000_PFD_2_SOFTKEYS_3)
HA420_G3000_PFD2_Softkey_4#(>H:AS3000_PFD_2_SOFTKEYS_4)
HA420_G3000_PFD2_Softkey_5#(>H:AS3000_PFD_2_SOFTKEYS_5)
HA420_G3000_PFD2_Softkey_6#(>H:AS3000_PFD_2_SOFTKEYS_6)
HA420_G3000_PFD2_Softkey_7#(>H:AS3000_PFD_2_SOFTKEYS_7)
HA420_G3000_PFD2_Softkey_8#(>H:AS3000_PFD_2_SOFTKEYS_8)
HA420_G3000_PFD2_Softkey_9#(>H:AS3000_PFD_2_SOFTKEYS_9)
HA420_TSC_L_Left_Large_Knob_Dec#(>H:AS3000_TSC_Vertical_2_TopKnob_Large_DEC)
HA420_TSC_L_Left_Large_Knob_Inc#(>H:AS3000_TSC_Vertical_2_TopKnob_Large_INC)
HA420_TSC_L_Left_Large_Knob_Push#(>H:AS3000_TSC_Vertical_2_TopKnob_Large_Push)
HA420_TSC_L_Mid_Small_Knob_Dec#(>H:AS3000_TSC_Vertical_2_TopKnob_Small_DEC)
HA420_TSC_L_Mid_Small_Knob_Inc#(>H:AS3000_TSC_Vertical_2_TopKnob_Small_INC)
HA420_TSC_L_Right_Inner_Knob_Dec#(>H:AS3000_TSC_Vertical_2_BottomKnob_Small_DEC)
HA420_TSC_L_Right_Inner_Knob_Inc#(>H:AS3000_TSC_Vertical_2_BottomKnob_Small_INC)
HA420_TSC_L_Right_Inner_Knob_Push#(>H:AS3000_TSC_Vertical_2_BottomKnob_Push)
HA420_TSC_R_Right_Inner_Knob_Dec#(>H:gauges_ha420_sys_Checklist_scoll_up)
HA420_TSC_R_Right_Inner_Knob_Inc#(>H:gauges_ha420_sys_Checklist_scoll_down)
HA420_TSC_R_Right_Inner_Knob_Push#(E:SIMULATION TIME,second) 2 + (>L:mf_PressTime) 
HA420_TSC_R_Right_Inner_Knob_Release#(L:mf_PressTime) 0 > if{ (E:SIMULATION TIME,second) (L:mf_PressTime) < if{ (>H:gauges_ha420_sys_Checklist_enter) } els{ (>H:gauges_ha420_sys_Checklist_Longenter) } } 0 (>L:mf_PressTime)
HA420_L_Right_Outer_Knob_CCW#H:AS3000_TSC_Vertical_2_RightKnob_Large_DEC
HA420_L_Right_Outer_Knob_CW#H:AS3000_TSC_Vertical_2_RightKnob_Large_INC
HA420_Left_Joystick_Down#H:AS3000_TSC_Vertical_2_Joystick_Down
HA420_Left_Joystick_Left#H:AS3000_TSC_Vertical_2_Joystick_Left
HA420_Left_Joystick_Right#H:AS3000_TSC_Vertical_2_Joystick_Right
HA420_Left_Joystick_Up#H:AS3000_TSC_Vertical_2_Joystick_Up
HA420_TSC_L_Range_Zoom_Dec#(>H:AS3000_TSC_Vertical_2_Joystick_DEC) 
HA420_TSC_L_Range_Zoom_Inc#(>H:AS3000_TSC_Vertical_2_Joystick_INC) 
HA420_TSC_R_Range_Zoom_Dec#(>H:AS3000_TSC_Vertical_1_Joystick_DEC) 
HA420_TSC_R_Range_Zoom_Inc#(>H:AS3000_TSC_Vertical_1_Joystick_INC) 
HA420_G3000_PFD1_Softkey_1#(>H:AS3000_PFD_1_SOFTKEYS_1)
HA420_G3000_PFD1_Softkey_10#(>H:AS3000_PFD_1_SOFTKEYS_10)
HA420_G3000_PFD1_Softkey_11#(>H:AS3000_PFD_1_SOFTKEYS_11)
HA420_G3000_PFD1_Softkey_12#(>H:AS3000_PFD_1_SOFTKEYS_12)
HA420_G3000_PFD1_Softkey_2#(>H:AS3000_PFD_1_SOFTKEYS_2)
HA420_G3000_PFD1_Softkey_3#(>H:AS3000_PFD_1_SOFTKEYS_3)
HA420_G3000_PFD1_Softkey_4#(>H:AS3000_PFD_1_SOFTKEYS_4)
HA420_G3000_PFD1_Softkey_5#(>H:AS3000_PFD_1_SOFTKEYS_5)
HA420_G3000_PFD1_Softkey_6#(>H:AS3000_PFD_1_SOFTKEYS_6)
HA420_G3000_PFD1_Softkey_7#(>H:AS3000_PFD_1_SOFTKEYS_7)
HA420_G3000_PFD1_Softkey_8#(>H:AS3000_PFD_1_SOFTKEYS_8)
HA420_G3000_PFD1_Softkey_9#(>H:AS3000_PFD_1_SOFTKEYS_9)
HA420_TSC_L_Mid_Small_Knob_Push#(>H:AS3000_TSC_Horizontal_2_Softkey_2)
//MGharib/HondaJet HA420/Electrical
HA420_ELEC_Battery_Master_Button_Press#(L:BM Pushed, Bool) ! (>L:BM Pushed, Bool)
HA420_ELEC_Bus_Tie_Button_Press#(L:BTIE Pushed, Bool) ! (>L:BTIE Pushed, Bool)
HA420_ELEC_Cabin_Power_Button_Press#(L:CPOW Pushed, Bool) ! (>L:CPOW Pushed, Bool)
HA420_ELEC_External_Power_Button_Press#(L:GPOW Pushed, Bool) ! (>L:GPOW Pushed, Bool)
HA420_ELEC_Generator_L_Button_Press#(L:GENL Pushed, Bool) ! (>L:GENL Pushed, Bool)
HA420_ELEC_Generator_R_Button_Press#(L:GENR Pushed, Bool) ! (>L:GENR Pushed, Bool)
//Microsoft/737 Max 2024/Annunciator Panel
ANNUNCIATION_AP_DISENGAGE_1_PUSH#(>B:ANNUNCIATION_AP_DISENGAGE_1_PUSH)
ANNUNCIATION_AP_DISENGAGE_2_PUSH#(>B:ANNUNCIATION_AP_DISENGAGE_2_PUSH)
ANNUNCIATION_AT_DISENGAGE_1_PUSH#(>B:ANNUNCIATION_AT_DISENGAGE_1_PUSH)
ANNUNCIATION_AT_DISENGAGE_2_PUSH#(>B:ANNUNCIATION_AT_DISENGAGE_2_PUSH)
ANNUNCIATION_FMC_LIGHT_1_PUSH#(>B:ANNUNCIATION_FMC_LIGHT_1_PUSH)
ANNUNCIATION_FMC_LIGHT_2_PUSH#(>B:ANNUNCIATION_FMC_LIGHT_2_PUSH)
//Microsoft/737 Max 2024/Autopilot
CC_CHANGEOVER_PUSH#(>B:FCC_CHANGEOVER_PUSH)
FCC_ALTITUDE_INTERVENTION_PUSH#(>B:FCC_ALTITUDE_INTERVENTION_PUSH)
FCC_ALTITUDE_SEL_Dec#1 (>B:FCC_ALTITUDE_SEL_Dec)
FCC_ALTITUDE_SEL_Inc#1 (>B:FCC_ALTITUDE_SEL_Inc)
FCC_ALT_HLD_PUSH#(>B:FCC_ALT_HLD_PUSH)
FCC_ALT_HLD_PUSH#(>B:FCC_ALT_HLD_PUSH)
FCC_APP_PUSH#(>B:FCC_APP_PUSH)
FCC_AUTOTHROTTLE_ARMED#(>B:FCC_AUTOTHROTTLE_ARMED)
FCC_AUTOTHROTTLE_OFF#(>B:FCC_AUTOTHROTTLE_OFF)
FCC_CMD_1_PUSH#(>B:FCC_CMD_1_PUSH)
FCC_CMD_2_PUSH#(>B:FCC_CMD_2_PUSH)
FCC_COURSE_1_Dec#1 (>B:FCC_COURSE_1_Dec)
FCC_COURSE_1_Inc#1 (>B:FCC_COURSE_1_Inc)
FCC_CWS_1_PUSH#(>B:FCC_CWS_1_PUSH)
FCC_CWS_2_PUSH#(>B:FCC_CWS_2_PUSH)
FCC_DISENGAGE_TOGGLE#(>B:FCC_DISENGAGE_TOGGLE)
FCC_FD_1_OFF#(>B:FCC_FD_1_OFF)
FCC_FD_1_ON#(>B:FCC_FD_1_ON)
FCC_HDG_SEL_PUSH#(>B:FCC_HDG_SEL_PUSH)
FCC_HEADING_SEL_Dec#1 (>B:FCC_HEADING_SEL_Dec)
FCC_HEADING_SEL_Inc#1 (>B:FCC_HEADING_SEL_Inc)
FCC_LNAV_PUSH#(>B:FCC_LNAV_PUSH)
FCC_LVL_CHG_PUSH#(>B:FCC_LVL_CHG_PUSH)
FCC_N1_PUSH#(>B:FCC_N1_PUSH)
FCC_SPEED_INTERVENTION_PUSH#(>B:FCC_SPEED_INTERVENTION_PUSH)
FCC_SPEED_PUSH#(>B:FCC_SPEED_PUSH)
FCC_SPEED_SEL_Dec#1 (>B:FCC_SPEED_SEL_Dec)
FCC_SPEED_SEL_Inc#1 (>B:FCC_SPEED_SEL_Inc)
FCC_VERTICAL_SPEED_SEL_Dec#1 (>B:FCC_VERTICAL_SPEED_SEL_Dec)
FCC_VERTICAL_SPEED_SEL_Inc#1 (>B:FCC_VERTICAL_SPEED_SEL_Inc)
FCC_VNAV_PUSH#(>B:FCC_VNAV_PUSH)
FCC_VOR_LOC_PUSH#(>B:FCC_VOR_LOC_PUSH)
FCC_VS_PUSH#(>B:FCC_VS_PUSH)
//Microsoft/737 Max 2024/Brakes
FWD_PDSTL_AUTOBRAKE_AB_1#(>B:FWD_PDSTL_AUTOBRAKE_AB_1)
FWD_PDSTL_AUTOBRAKE_AB_2#(>B:FWD_PDSTL_AUTOBRAKE_AB_2)
FWD_PDSTL_AUTOBRAKE_AB_3#(>B:FWD_PDSTL_AUTOBRAKE_AB_3)
FWD_PDSTL_AUTOBRAKE_AB_MAX#(>B:FWD_PDSTL_AUTOBRAKE_AB_MAX)
FWD_PDSTL_AUTOBRAKE_OFF#(>B:FWD_PDSTL_AUTOBRAKE_OFF)
FWD_PDSTL_AUTOBRAKE_RTO#(>B:FWD_PDSTL_AUTOBRAKE_RTO)
LANDING_PARKING_BRAKE_ON#(>B:LANDING_PARKING_BRAKE_ON)
LANDING_PARKING_BRAKE_RELEASED#(>B:LANDING_PARKING_BRAKE_RELEASED)
LANDING_PARKING_BRAKE_Set#(>B:LANDING_PARKING_BRAKE_Set)
LANDING_PARKING_BRAKE_TOGGLE#(>B:LANDING_PARKING_BRAKE_TOGGLE)
//Microsoft/737 Max 2024/Efis
EFIS_ARPT_1_PUSH#(>B:EFIS_ARPT_1_PUSH)
EFIS_BARO_1_Dec#1 (>B:EFIS_BARO_1_Dec)
EFIS_BARO_1_Inc#1 (>B:EFIS_BARO_1_Inc)
EFIS_BARO_STD_1_PUSH#(>B:EFIS_BARO_STD_1_PUSH)
EFIS_BARO_UNIT_1_TOGGLE#(>B:EFIS_BARO_UNIT_1_TOGGLE)
EFIS_DATA_1_PUSH#(>B:EFIS_DATA_1_PUSH)
EFIS_FPV_1_PUSH#(>B:EFIS_FPV_1_PUSH)
EFIS_MINS_1_Dec#1 (>B:EFIS_MINS_1_Dec)
EFIS_MINS_1_Inc#1 (>B:EFIS_MINS_1_Inc)
EFIS_MINS_REF_1_TOGGLE#(>B:EFIS_MINS_REF_1_TOGGLE)
EFIS_MODE_1_APP#(>B:EFIS_MODE_1_APP)
EFIS_MODE_1_MAP#(>B:EFIS_MODE_1_MAP)
EFIS_MODE_1_PLN#(>B:EFIS_MODE_1_PLN)
EFIS_MODE_1_VOR#(>B:EFIS_MODE_1_VOR)
EFIS_MTRS_1_PUSH#(>B:EFIS_MTRS_1_PUSH)
EFIS_POS_1_PUSH#(>B:EFIS_POS_1_PUSH)
EFIS_RANGE_1_RANGE_10#(>B:EFIS_RANGE_1_RANGE_1)
EFIS_RANGE_1_RANGE_160#(>B:EFIS_RANGE_1_RANGE_5)
EFIS_RANGE_1_RANGE_20#(>B:EFIS_RANGE_1_RANGE_2)
EFIS_RANGE_1_RANGE_320#(>B:EFIS_RANGE_1_RANGE_6)
EFIS_RANGE_1_RANGE_40#(>B:EFIS_RANGE_1_RANGE_3)
EFIS_RANGE_1_RANGE_5#(>B:EFIS_RANGE_1_RANGE_0)
EFIS_RANGE_1_RANGE_640#(>B:EFIS_RANGE_1_RANGE_7)
EFIS_RANGE_1_RANGE_80#(>B:EFIS_RANGE_1_RANGE_4)
EFIS_RST_1_PUSH#(>B:EFIS_RST_1_PUSH)
EFIS_STA_1_PUSH#(>B:EFIS_STA_1_PUSH)
EFIS_TERR_1_PUSH#(>B:EFIS_TERR_1_PUSH)
EFIS_VOR_ADF_1_1_ADF#(>B:EFIS_VOR_ADF_1_1_ADF)
EFIS_VOR_ADF_1_1_VOR#(>B:EFIS_VOR_ADF_1_1_VOR)
EFIS_VOR_ADF_2_1_ADF#(>B:EFIS_VOR_ADF_2_1_ADF)
EFIS_VOR_ADF_2_1_VOR#(>B:EFIS_VOR_ADF_2_1_VOR)
EFIS_WPT_1_PUSH#(>B:EFIS_WPT_1_PUSH)
EFIS_WXR_1_PUSH#(>B:EFIS_WXR_1_PUSH)
//Microsoft/737 Max 2024/Gear
LANDING_GEARS_DOWN#(>B:LANDING_GEARS_DOWN)
LANDING_GEARS_Set#(>B:LANDING_GEARS_Set)
LANDING_GEARS_TOGGLE#(>B:LANDING_GEARS_TOGGLE)
LANDING_GEARS_UP#(>B:LANDING_GEARS_UP)
//Microsoft/737 Max 2024/Lights (exterior)
LIGHTING_LANDING_LIGHT_FIXED_L_OFF#(>B:LIGHTING_LANDING_LIGHT_FIXED_L_OFF)
LIGHTING_LANDING_LIGHT_FIXED_L_ON#(>B:LIGHTING_LANDING_LIGHT_FIXED_L_ON)
LIGHTING_LANDING_LIGHT_FIXED_L_TOGGLE#(>B:LIGHTING_LANDING_LIGHT_FIXED_L_TOGGLE)
LIGHTING_LANDING_LIGHT_FIXED_R_OFF#(>B:LIGHTING_LANDING_LIGHT_FIXED_R_OFF)
LIGHTING_LANDING_LIGHT_FIXED_R_ON#(>B:LIGHTING_LANDING_LIGHT_FIXED_R_ON)
LIGHTING_LANDING_LIGHT_FIXED_R_TOGGLE#(>B:LIGHTING_LANDING_LIGHT_FIXED_R_TOGGLE)
LIGHTING_RUNWAY_TURNOFF_LIGHT_L_OFF#(>B:LIGHTING_RUNWAY_TURNOFF_LIGHT_L_OFF)
LIGHTING_RUNWAY_TURNOFF_LIGHT_L_ON#(>B:LIGHTING_RUNWAY_TURNOFF_LIGHT_L_ON)
LIGHTING_RUNWAY_TURNOFF_LIGHT_L_TOGGLE#(>B:LIGHTING_RUNWAY_TURNOFF_LIGHT_L_TOGGLE)
LIGHTING_RUNWAY_TURNOFF_LIGHT_R_OFF#(>B:LIGHTING_RUNWAY_TURNOFF_LIGHT_R_OFF)
LIGHTING_RUNWAY_TURNOFF_LIGHT_R_ON#(>B:LIGHTING_RUNWAY_TURNOFF_LIGHT_R_ON)
LIGHTING_RUNWAY_TURNOFF_LIGHT_R_TOGGLE#(>B:LIGHTING_RUNWAY_TURNOFF_LIGHT_R_TOGGLE)
LIGHTING_TAXI_LIGHT_GEAR_AUTO#(>B:LIGHTING_TAXI_LIGHT_GEAR_AUTO)
LIGHTING_TAXI_LIGHT_GEAR_OFF#(>B:LIGHTING_TAXI_LIGHT_GEAR_OFF)
LIGHTING_TAXI_LIGHT_GEAR_TOGGLE#(>B:LIGHTING_TAXI_LIGHT_GEAR_TOGGLE)
//Microsoft/737 Max 2024/Overhead Electrical
COMMON_ELECTRICAL_BATTERY_COVER_CLOSED#(>B:COMMON_ELECTRICAL_BATTERY_COVER_CLOSED)
COMMON_ELECTRICAL_BATTERY_COVER_OPEN#(>B:COMMON_ELECTRICAL_BATTERY_COVER_OPEN)
COMMON_ELECTRICAL_BATTERY_COVER_TOGGLE#(>B:COMMON_ELECTRICAL_BATTERY_COVER_TOGGLE)
ELECTRICAL_AC_METERS_APU_GEN#(>B:ELECTRICAL_AC_METERS_APU_GEN)
ELECTRICAL_AC_METERS_Dec#1 (>B:ELECTRICAL_AC_METERS_Dec)
ELECTRICAL_AC_METERS_GEN_1#(>B:ELECTRICAL_AC_METERS_GEN_1)
ELECTRICAL_AC_METERS_GEN_2#(>B:ELECTRICAL_AC_METERS_GEN_2)
ELECTRICAL_AC_METERS_GRD_PWR#(>B:ELECTRICAL_AC_METERS_GRD_PWR)
ELECTRICAL_AC_METERS_INV#(>B:ELECTRICAL_AC_METERS_INV)
ELECTRICAL_AC_METERS_Inc#1 (>B:ELECTRICAL_AC_METERS_Inc)
ELECTRICAL_AC_METERS_STBY_PWR#(>B:ELECTRICAL_AC_METERS_STBY_PWR)
ELECTRICAL_AC_METERS_TEST#(>B:ELECTRICAL_AC_METERS_TEST)
ELECTRICAL_APU_GENERATOR_1_NEUTRAL#(>B:ELECTRICAL_APU_GENERATOR_1_NEUTRAL)
ELECTRICAL_APU_GENERATOR_1_OFF#(>B:ELECTRICAL_APU_GENERATOR_1_OFF)
ELECTRICAL_APU_GENERATOR_1_ON#(>B:ELECTRICAL_APU_GENERATOR_1_ON)
ELECTRICAL_APU_GENERATOR_2_NEUTRAL#(>B:ELECTRICAL_APU_GENERATOR_2_NEUTRAL)
ELECTRICAL_APU_GENERATOR_2_OFF#(>B:ELECTRICAL_APU_GENERATOR_2_OFF)
ELECTRICAL_APU_GENERATOR_2_ON#(>B:ELECTRICAL_APU_GENERATOR_2_ON)
ELECTRICAL_BATTERY_OFF#(>B:ELECTRICAL_BATTERY_OFF)
ELECTRICAL_BATTERY_ON#(>B:ELECTRICAL_BATTERY_ON)
ELECTRICAL_BATTERY_TOGGLE#(>B:ELECTRICAL_BATTERY_TOGGLE)
ELECTRICAL_CAB_UTIL_OFF#(>B:ELECTRICAL_CAB_UTIL_OFF)
ELECTRICAL_CAB_UTIL_ON#(>B:ELECTRICAL_CAB_UTIL_ON)
ELECTRICAL_CAB_UTIL_TOGGLE#(>B:ELECTRICAL_CAB_UTIL_TOGGLE)
ELECTRICAL_DC_METERS_AUX_BAT#(>B:ELECTRICAL_DC_METERS_AUX_BAT)
ELECTRICAL_DC_METERS_BAT#(>B:ELECTRICAL_DC_METERS_BAT)
ELECTRICAL_DC_METERS_BAT_BUS#(>B:ELECTRICAL_DC_METERS_BAT_BUS)
ELECTRICAL_DC_METERS_Dec#1 (>B:ELECTRICAL_DC_METERS_Dec)
ELECTRICAL_DC_METERS_Inc#1 (>B:ELECTRICAL_DC_METERS_Inc)
ELECTRICAL_DC_METERS_STBY_PWR#(>B:ELECTRICAL_DC_METERS_STBY_PWR)
ELECTRICAL_DC_METERS_TEST#(>B:ELECTRICAL_DC_METERS_TEST)
ELECTRICAL_DC_METERS_TR_1#(>B:ELECTRICAL_DC_METERS_TR_1)
ELECTRICAL_DC_METERS_TR_2#(>B:ELECTRICAL_DC_METERS_TR_2)
ELECTRICAL_DC_METERS_TR_3#(>B:ELECTRICAL_DC_METERS_TR_3)
ELECTRICAL_GENERATOR_1_NEUTRAL#(>B:ELECTRICAL_GENERATOR_1_NEUTRAL)
ELECTRICAL_GENERATOR_1_OFF#(>B:ELECTRICAL_GENERATOR_1_OFF)
ELECTRICAL_GENERATOR_1_ON#(>B:ELECTRICAL_GENERATOR_1_ON)
ELECTRICAL_GENERATOR_2_NEUTRAL#(>B:ELECTRICAL_GENERATOR_2_NEUTRAL)
ELECTRICAL_GENERATOR_2_OFF#(>B:ELECTRICAL_GENERATOR_2_OFF)
ELECTRICAL_GENERATOR_2_ON#(>B:ELECTRICAL_GENERATOR_2_ON)
ELECTRICAL_IFE_PASS_OFF#(>B:ELECTRICAL_IFE_PASS_OFF)
ELECTRICAL_IFE_PASS_ON#(>B:ELECTRICAL_IFE_PASS_ON)
ELECTRICAL_IFE_PASS_TOGGLE#(>B:ELECTRICAL_IFE_PASS_TOGGLE)
//Microsoft/737 Max 2024/Overhead Engine
ENGINE_APU_OFF#(>B:ENGINE_APU_OFF)
ENGINE_APU_ON#(>B:ENGINE_APU_ON)
ENGINE_APU_START#(>B:ENGINE_APU_START)
ENGINE_IGNITION_1_CONTINUOUS#(>B:ENGINE_IGNITION_1_CONTINUOUS)
ENGINE_IGNITION_1_FLIGHT#(>B:ENGINE_IGNITION_1_FLIGHT)
ENGINE_IGNITION_1_GROUND#(>B:ENGINE_IGNITION_1_GROUND)
ENGINE_IGNITION_1_OFF#(>B:ENGINE_IGNITION_1_OFF)
ENGINE_IGNITION_2_CONTINUOUS#(>B:ENGINE_IGNITION_2_CONTINUOUS)
ENGINE_IGNITION_2_FLIGHT#(>B:ENGINE_IGNITION_2_FLIGHT)
ENGINE_IGNITION_2_GROUND#(>B:ENGINE_IGNITION_2_GROUND)
ENGINE_IGNITION_2_OFF#(>B:ENGINE_IGNITION_2_OFF)
ENGINE_TOGA_1_PUSH#(>B:ENGINE_TOGA_1_PUSH)
ENGINE_TOGA_2_PUSH#(>B:ENGINE_TOGA_2_PUSH)
//Microsoft/737 Max 2024/Overhead Panel
AFT_OVHD_DOME_LIGHT_BRT#(>B:AFT_OVHD_DOME_LIGHT_BRT)
AFT_OVHD_DOME_LIGHT_DIM#(>B:AFT_OVHD_DOME_LIGHT_DIM) 
AFT_OVHD_DOME_LIGHT_OFF#(>B:AFT_OVHD_DOME_LIGHT_OFF)
AFT_OVHD_DSPL_SEL_Dec#1 (>B:AFT_OVHD_DSPL_SEL_Dec)
AFT_OVHD_DSPL_SEL_Inc#1 (>B:AFT_OVHD_DSPL_SEL_Inc)
AFT_OVHD_ISDU_BRT_Dec#1 (>B:AFT_OVHD_ISDU_BRT_Dec)
AFT_OVHD_ISDU_BRT_Inc#1 (>B:AFT_OVHD_ISDU_BRT_Inc)
AFT_OVHD_L_IRS_ALIGN#(>B:AFT_OVHD_L_IRS_ALIGN)
AFT_OVHD_L_IRS_ATT#(>B:AFT_OVHD_L_IRS_ATT)
AFT_OVHD_L_IRS_NAV#(>B:AFT_OVHD_L_IRS_NAV)
AFT_OVHD_L_IRS_OFF#(>B:AFT_OVHD_L_IRS_OFF) 
AFT_OVHD_MACH_AIRSPEED_TEST_1_PUSH_#(>B:AFT_OVHD_MACH_AIRSPEED_TEST_1_PUSH)
AFT_OVHD_MACH_AIRSPEED_TEST_2_PUSH#(>B:AFT_OVHD_MACH_AIRSPEED_TEST_2_PUSH)
AFT_OVHD_R_IRS_ALIGN#(>B:AFT_OVHD_R_IRS_ALIGN)
AFT_OVHD_R_IRS_ATT#(>B:AFT_OVHD_R_IRS_ATT)
AFT_OVHD_R_IRS_NAV#(>B:AFT_OVHD_R_IRS_NAV)
AFT_OVHD_R_IRS_OFF#(>B:AFT_OVHD_R_IRS_OFF)
AFT_OVHD_STALL_WARNING_1_PUSH#(>B:AFT_OVHD_STALL_WARNING_1_PUSH)
AFT_OVHD_STALL_WARNING_2_PUSH#(>B:AFT_OVHD_STALL_WARNING_2_PUSH)
FLT_CONTROLS_PANEL_YAW_DAMPER_OFF#(>B:FLT_CONTROLS_PANEL_YAW_DAMPER_OFF)
FLT_CONTROLS_PANEL_YAW_DAMPER_ON#(>B:FLT_CONTROLS_PANEL_YAW_DAMPER_ON)
FLT_CONTROLS_PANEL_YAW_DAMPER_TOGGLE#(>B:FLT_CONTROLS_PANEL_YAW_DAMPER_TOGGLE)
FUEL_PUMP_AFT_1_OFF#(>B:FUEL_PUMP_AFT_1_OFF)
FUEL_PUMP_AFT_1_ON#(>B:FUEL_PUMP_AFT_1_ON)
FUEL_PUMP_AFT_1_TOGGLE#(>B:FUEL_PUMP_AFT_1_TOGGLE)
FUEL_PUMP_AFT_2_OFF#(>B:FUEL_PUMP_AFT_2_OFF)
FUEL_PUMP_AFT_2_ON#(>B:FUEL_PUMP_AFT_2_ON)
FUEL_PUMP_AFT_2_TOGGLE#(>B:FUEL_PUMP_AFT_2_TOGGLE)
FUEL_PUMP_CTR_L_OFF#(>B:FUEL_PUMP_CTR_L_OFF)
FUEL_PUMP_CTR_L_ON#(>B:FUEL_PUMP_CTR_L_ON)
FUEL_PUMP_CTR_L_TOGGLE#(>B:FUEL_PUMP_CTR_L_TOGGLE)
FUEL_PUMP_CTR_R_OFF#(>B:FUEL_PUMP_CTR_R_OFF)
FUEL_PUMP_CTR_R_ON#(>B:FUEL_PUMP_CTR_R_ON)
FUEL_PUMP_CTR_R_TOGGLE#(>B:FUEL_PUMP_CTR_R_TOGGLE)
FUEL_PUMP_FWD_1_OFF#(>B:FUEL_PUMP_FWD_1_OFF)
FUEL_PUMP_FWD_1_ON#(>B:FUEL_PUMP_FWD_1_ON)
FUEL_PUMP_FWD_1_TOGGLE#(>B:FUEL_PUMP_FWD_1_TOGGLE)
FUEL_PUMP_FWD_2_OFF#(>B:FUEL_PUMP_FWD_2_OFF)
FUEL_PUMP_FWD_2_ON#(>B:FUEL_PUMP_FWD_2_ON)
FUEL_PUMP_FWD_2_TOGGLE#(>B:FUEL_PUMP_FWD_2_TOGGLE)
PANEL_BRIGHT_CIRCUIT_BREAKER_LIGHT_Dec#1 (>B:PANEL_BRIGHT_CIRCUIT_BREAKER_LIGHT_Dec)
PANEL_BRIGHT_CIRCUIT_BREAKER_LIGHT_Inc#1 (>B:PANEL_BRIGHT_CIRCUIT_BREAKER_LIGHT_Inc)
PANEL_BRIGHT_PANEL_LIGHT_Dec#1 (>B:PANEL_BRIGHT_PANEL_LIGHT_Dec)
PANEL_BRIGHT_PANEL_LIGHT_Inc#1 (>B:PANEL_BRIGHT_PANEL_LIGHT_Inc)
//Microsoft/737 Max 2024/Warning
ANNUNCIATION_FIRE_WARN_1_PUSH#(>B:ANNUNCIATION_FIRE_WARN_1_PUSH)
ANNUNCIATION_FIRE_WARN_2_PUSH#(>B:ANNUNCIATION_FIRE_WARN_2_PUSH)
ANNUNCIATION_MASTER_CAUTION_1_PUSH#(>B:ANNUNCIATION_MASTER_CAUTION_1_PUSH)
ANNUNCIATION_MASTER_CAUTION_2_PUSH#(>B:ANNUNCIATION_MASTER_CAUTION_2_PUSH)
//Microsoft/737-MAX/Autopilot
Bank_Angle_Limit__-_10_Degrees#4 (>K:AP_MAX_BANK_SET)
Bank_Angle_Limit__-_15_Degrees#3 (>K:AP_MAX_BANK_SET)
Bank_Angle_Limit__-_20_Degrees#2 (>K:AP_MAX_BANK_SET)
Bank_Angle_Limit__-_25_Degrees#1 (>K:AP_MAX_BANK_SET)
Bank_Angle_Limit__-_30_Degrees#0 (>K:AP_MAX_BANK_SET)
//Microsoft/A320 (2024)/Autopilot
ALT_units_-_100#(L:__FCU_ALT_UNITSIsPressed) if{ 1 (>L:INI_FCU_ALTITUDE_MODE_COMMAND) }
ALT_units_-_1000#(L:__FCU_ALT_UNITSIsPressed) ! if{ 1 (>L:INI_FCU_ALTITUDE_MODE_COMMAND) }
ALTINC_100#(L:INI_ALTITUDE_STATE) (>L:INI_FCU_ALTITUDE_MODE_COMMAND)
ALTINC_1000#(L:INI_ALTITUDE_STATE) ! (>L:INI_FCU_ALTITUDE_MODE_COMMAND)
//Microsoft/ATR 42-600, ATR 72-600/Air Conditioning and Pressurization
MSATR_ABLD_ENG_1_BLEED_BUTTON_PRESS#(L:MSATR_ABLD_ENG1_BLEED) ! (>L:MSATR_ABLD_ENG1_BLEED)
MSATR_ABLD_ENG_2_BLEED_BUTTON_PRESS#(L:MSATR_ABLD_ENG2_BLEED) ! (>L:MSATR_ABLD_ENG2_BLEED)
MSATR_ABLD_PACK_1_VALVE_BUTTON_PRESS#(L:MSATR_ABLD_PACK1) ! (>L:MSATR_ABLD_PACK1)
MSATR_ABLD_PACK_2_VALVE_BUTTON_PRESS#(L:MSATR_ABLD_PACK2) ! (>L:MSATR_ABLD_PACK2)
MSATR_ABLD_RAM_AIR_BUTTON_PRESS#(>L:MSATR_ABLD_RAM_AIR) ! (>L:MSATR_ABLD_RAM_AIR)
MSATR_AIRCOND_CABIN_TEMP_KNOB_DEC#(L:MSATR_AIRC_CABIN_TEMP_KNOB) 5 - 0 max (>L:MSATR_AIRC_CABIN_TEMP_KNOB)
MSATR_AIRCOND_CABIN_TEMP_KNOB_INC#(L:MSATR_AIRC_CABIN_TEMP_KNOB) 5 + 100 min (>L:MSATR_AIRC_CABIN_TEMP_KNOB)
MSATR_AIRCOND_CABIN_TEMP_SEL_PRESS#(L:MSATR_AIRC_CABIN_TEMP_MODE) ! (>L:MSATR_AIRC_CABIN_TEMP_MODE)
MSATR_AIRCOND_COMPT_SEL_CABIN#1 (>L:MSATR_AIRC_COMPT_SEL)
MSATR_AIRCOND_COMPT_SEL_FLT_COMPT#0 (>L:MSATR_AIRC_COMPT_SEL)
MSATR_AIRCOND_COMPT_SEL_TOGGLE#(L:MSATR_AIRC_COMPT_SEL) ! (>L:MSATR_AIRC_COMPT_SEL)
MSATR_AIRCOND_COMPT_TEMP_KNOB_DEC#(L:MSATR_AIRC_COMPT_TEMP_KNOB) 5 - 0 max (>L:MSATR_AIRC_COMPT_TEMP_KNOB)
MSATR_AIRCOND_COMPT_TEMP_KNOB_INC#(L:MSATR_AIRC_COMPT_TEMP_KNOB) 5 + 100 min (>L:MSATR_AIRC_COMPT_TEMP_KNOB)
MSATR_AIRCOND_COMPT_TEMP_SEL_PRESS#(L:MSATR_AIRC_COMPT_TEMP_MODE) ! (>L:MSATR_AIRC_COMPT_TEMP_MODE)
MSATR_AIRCOND_FLOW_SEL_PRESS#(L:MSATR_AIRC_FLOW_SEL) ! (>L:MSATR_AIRC_FLOW_SEL)
MSATR_AIRCOND_RECIRC_FAN_1_PRESS#(L:MSATR_AIRC_RECIRC1) ! (>L:MSATR_AIRC_RECIRC1)
MSATR_AIRCOND_RECIRC_FAN_2_PRESS#(L:MSATR_AIRC_RECIRC2) ! (>L:MSATR_AIRC_RECIRC2)
MSATR_AVIONICS_VENT_AUTO# 1 (>L:MSATR_OVBD_VALVE_SWITCH)
MSATR_AVIONICS_VENT_FULL_CLOSE# 0 (>L:MSATR_OVBD_VALVE_SWITCH)
MSATR_AVIONICS_VENT_FULL_OPEN# 2 (>L:MSATR_OVBD_VALVE_SWITCH)
MSATR_CABIN_PRESSURE_DEC#(L:MSATR_CPRS_CAB_RATE) 5 - 0 max (>L:MSATR_CPRS_CAB_RATE)
MSATR_CABIN_PRESSURE_DITCH_OFF#0 (>L:MSATR_CPRS_DITCH)
MSATR_CABIN_PRESSURE_DITCH_ON#1 (>L:MSATR_CPRS_DITCH)
MSATR_CABIN_PRESSURE_DITCH_TOGGLE#(L:MSATR_CPRS_DITCH) ! (>L:MSATR_CPRS_DITCH)
MSATR_CABIN_PRESSURE_DUMP__OFF#0 (>L:MSATR_CPRS_DUMP)
MSATR_CABIN_PRESSURE_DUMP_ON#1 (>L:MSATR_CPRS_DUMP)
MSATR_CABIN_PRESSURE_DUMP_TOGGLE#(L:MSATR_CPRS_DUMP) ! (>L:MSATR_CPRS_DUMP)
MSATR_CABIN_PRESSURE_INC#(L:MSATR_CPRS_CAB_RATE) 5 + 100 min (>L:MSATR_CPRS_CAB_RATE)
MSATR_CABIN_PRESSURE_LANDING_ELEV_MAN_SET_DEC#(L:MSATR_CPRS_LDG_ALT, number) 5 - 0 max (>L:MSATR_CPRS_LDG_ALT) (L:MSATR_CPRS_LDG_ALT_DELTA) -- (>L:MSATR_CPRS_LDG_ALT_DELTA)
MSATR_CABIN_PRESSURE_LANDING_ELEV_MAN_SET_INC#(L:MSATR_CPRS_LDG_ALT, number) 5 + 100 max (>L:MSATR_CPRS_LDG_ALT) (L:MSATR_CPRS_LDG_ALT_DELTA) ++ (>L:MSATR_CPRS_LDG_ALT_DELTA)
MSATR_CABIN_PRESSURE_MODE_MAN#1 (>L:MSATR_CPRS_MODE)
MSATR_CABIN_PRESSURE_MODE_OFF#0 (>L:MSATR_CPRS_MODE)
MSATR_CABIN_PRESSURE_MODE_TOGGLE#(L:MSATR_CPRS_MODE) ! (>L:MSATR_CPRS_MODE)
MSATR_CABIN_PRESSURE_OUTFLOW_BKUP#1 (>L:MSATR_CPRS_OUTFLOW)
MSATR_CABIN_PRESSURE_OUTFLOW_NORM#0 (>L:MSATR_CPRS_OUTFLOW)
MSATR_CABIN_PRESSURE_OUTFLOW_TOGGLE#(L:MSATR_CPRS_OUTFLOW) ! (>L:MSATR_CPRS_OUTFLOW)
MSATR_CABIN_PRESSURE_SOURCE_SELECT_AUTO#0 (>L:MSATR_CPRS_SRCSEL)
MSATR_CABIN_PRESSURE_SOURCE_SELECT_MANUAL#1 (>L:MSATR_CPRS_SRCSEL)
MSATR_CABIN_PRESSURE_SOURCE_SELECT_TOGGLE#(L:MSATR_CPRS_SRCSEL) ! (>L:MSATR_CPRS_SRCSEL)
MSATR_CABIN_TEMPERATURE_AUTO-MAN_SEL_SWITCH#(L:MSATR_AIRC_CABIN_TEMP_MODE) ! (>L:MSATR_AIRC_CABIN_TEMP_MODE)
MSATR_CABIN_TEMPERATURE_ENCODER_DEC#(L:MSATR_AIRC_CABIN_TEMP_KNOB) 5 - 0 max (>L:MSATR_AIRC_CABIN_TEMP_KNOB)
MSATR_CABIN_TEMPERATURE_ENCODER_INC#(L:MSATR_AIRC_CABIN_TEMP_KNOB) 5 + 100 min (>L:MSATR_AIRC_CABIN_TEMP_KNOB)
MSATR_COMPT_SEL_FLT_-_CABIN_SWITCH#(L:MSATR_AIRC_COMPT_SEL) ! (>L:MSATR_AIRC_COMPT_SEL)
MSATR_FGCP_AUTOPILOT_FD2_BUTTON#(L:MSATR_FGCP_FD2) ! (>L:MSATR_FGCP_FD2)
MSATR_FLT_COMPT_TEMPERATURE_AUTO-MAN_SEL_SWITCH#(L:MSATR_AIRC_COMPT_TEMP_MODE) ! (>L:MSATR_AIRC_COMPT_TEMP_MODE)
MSATR_FLT_COMPT_TEMPERATURE_ENCODER_DEC#(L:MSATR_AIRC_COMPT_TEMP_KNOB) 5 - 0 max (>L:MSATR_AIRC_COMPT_TEMP_KNOB)
MSATR_FLT_COMPT_TEMPERATURE_ENCODER_INC#(L:MSATR_AIRC_COMPT_TEMP_KNOB) 5 + 100 min (>L:MSATR_AIRC_COMPT_TEMP_KNOB)
MSATR_OXYGEN_MAIN_SUPPLY_PRESS#(L:MSATR_OXY_MAIN) ! (>L:MSATR_OXY_MAIN) 
MSATR_OXYGEN_PAX_SUPPLY_PRESS#(L:MSATR_OXY_PAX) ! (>L:MSATR_OXY_PAX) 
MSATR_RECIRC_FAN_1_SWITCH#(L:MSATR_AIRC_RECIRC1) ! (>L:MSATR_AIRC_RECIRC1)
MSATR_RECIRC_FAN_2_SWITCH#(L:MSATR_AIRC_RECIRC2) ! (>L:MSATR_AIRC_RECIRC2)
MSATR_VENT_EXHAUST_MODE_PRESS#(L:MSATR_VENT_EXHAUST_MODE) ! (>L:MSATR_VENT_EXHAUST_MODE)
//Microsoft/ATR 42-600, ATR 72-600/Anti-Ice
MSATR_ANTI_ICING_AIL___R_ELEV_PRESS#(L:MSATR_AICE_AIL_AICE) ! (>L:MSATR_AICE_AIL_AICE)
MSATR_ANTI_ICING_MODE_SEL_AUTO_BUTTON_PRESS#(L:MSATR_AICE_MODE_AUTO) ! (>L:MSATR_AICE_MODE_AUTO) 
MSATR_ANTI_ICING_PROP_1_BUTTON_PRESS#(L:MSATR_AICE_PROP1_AICE) ! (>L:MSATR_AICE_PROP1_AICE)
MSATR_ANTI_ICING_PROP_2_BUTTON_PRESS#(L:MSATR_AICE_PROP2_AICE) ! (>L:MSATR_AICE_PROP2_AICE)
MSATR_ANTI_ICING_PROP_MODE_SEL_BUTTON_PRESS#(L:MSATR_AICE_PROP_AICE_MODE) ! (>L:MSATR_AICE_PROP_AICE_MODE)
MSATR_ANTI_ICING_RUD___L_ELEV_PRESS#(L:MSATR_AICE_RUD_AICE) ! (>L:MSATR_AICE_RUD_AICE) 
MSATR_ANTI_ICING_SIDE_WINDOWS_BUTTON_PRESS#(L:MSATR_AICE_SIDE_WND) ! (>L:MSATR_AICE_SIDE_WND)
MSATR_DE_ICING_AFR_AIR_BLEED_BUTTON_PRESS#(L:MSATR_AICE_FRAME_BLEED) ! (>L:MSATR_AICE_FRAME_BLEED)
MSATR_DE_ICING_AIRFRAME_BUTTON_PRESS#(L:MSATR_AICE_FRAME_DEICE) ! (>L:MSATR_AICE_FRAME_DEICE)
MSATR_DE_ICING_ENG_1_BUTTON_PRESS#(L:MSATR_AICE_ENG1_DEICE) ! (>L:MSATR_AICE_ENG1_DEICE) 
MSATR_DE_ICING_ENG_2_BUTTON_PRESS#(L:MSATR_AICE_ENG2_DEICE) ! (>L:MSATR_AICE_ENG2_DEICE) 
MSATR_DE_ICING_MODE_SEL_OVRD_BUTTON_PRESS#(L:MSATR_AICE_DEICE_OVRD) ! (>L:MSATR_AICE_DEICE_OVRD) 
MSATR_DE_ICING_SAT_20_BUTTON_PRESS#(L:MSATR_AICE_DEICE_MODE) ! (>L:MSATR_AICE_DEICE_MODE) 
MSATR_ICE_BUTTON_PRESS#(L:MSATR_AICE_ICE) ! (>L:MSATR_AICE_ICE)
MSATR_ICE_TEST_BUTTON_PRESS#1 (>L:MSATR_ICE_TEST)
MSATR_ICE_TEST_BUTTON_RELEASE#0 (>L:MSATR_ICE_TEST)
MSATR_PROBES_HTG_CAPT_BUTTON_PRESS#(L:MSATR_AICE_PROBES_CPT) ! (>L:MSATR_AICE_PROBES_CPT)
MSATR_PROBES_HTG_FO_BUTTON_PRESS#(L:MSATR_AICE_PROBES_FO) ! (>L:MSATR_AICE_PROBES_FO)
MSATR_PROBES_HTG_STBY_BUTTON_PRESS#(L:MSATR_AICE_PROBES_STBY) ! (>L:MSATR_AICE_PROBES_STBY)
MSATR_WINDSHIELD_HTG_LEFT_BUTTON_PRESS#(L:MSATR_AICE_WSHLD_LEFT) ! (>L:MSATR_AICE_WSHLD_LEFT) 
MSATR_WINDSHIELD_HTG_RIGHT_BUTTON_PRESS#(L:MSATR_AICE_WSHLD_RIGHT) ! (>L:MSATR_AICE_WSHLD_RIGHT) 
//Microsoft/ATR 42-600, ATR 72-600/Audio
MSATR_AUDIO_PANEL_1_ADF1_VOL_KNOB_DEC#(L:MSATR_APNL_ADF1_VOL_1) 5 - 0 max (>L:MSATR_APNL_ADF1_VOL_1)
MSATR_AUDIO_PANEL_1_ADF1_VOL_KNOB_INC#(L:MSATR_APNL_ADF1_VOL_1) 5 + 100 min (>L:MSATR_APNL_ADF1_VOL_1)
MSATR_AUDIO_PANEL_1_ADF2_VOL_KNOB_DEC#(L:MSATR_APNL_ADF2_VOL_1) 5 - 0 max (>L:MSATR_APNL_ADF2_VOL_1)
MSATR_AUDIO_PANEL_1_ADF2_VOL_KNOB_INC#(L:MSATR_APNL_ADF2_VOL_1) 5 + 100 min (>L:MSATR_APNL_ADF2_VOL_1)
MSATR_AUDIO_PANEL_1_DME1_VOL_KNOB_DEC#(L:MSATR_APNL_DME1_VOL_1) 5 - 0 max (>L:MSATR_APNL_DME1_VOL_1)
MSATR_AUDIO_PANEL_1_DME1_VOL_KNOB_INC#(L:MSATR_APNL_DME1_VOL_1) 5 + 100 min (>L:MSATR_APNL_DME1_VOL_1)
MSATR_AUDIO_PANEL_1_DME2_VOL_KNOB_DEC#(L:MSATR_APNL_DME2_VOL_1) 5 - 0 max (>L:MSATR_APNL_DME2_VOL_1)
MSATR_AUDIO_PANEL_1_DME2_VOL_KNOB_INC#(L:MSATR_APNL_DME2_VOL_1) 5 + 100 min (>L:MSATR_APNL_DME2_VOL_1)
MSATR_AUDIO_PANEL_1_HF1_TOGGLE#(L:MSATR_APNL_HF1_1) ! (>L:MSATR_APNL_HF1_1) 
MSATR_AUDIO_PANEL_1_HF1_VOL_KNOB_DEC#(L:MSATR_APNL_HF1_VOL_1) 5 - 0 max (>L:MSATR_APNL_HF1_VOL_1)
MSATR_AUDIO_PANEL_1_HF1_VOL_KNOB_INC#(L:MSATR_APNL_HF1_VOL_1) 5 + 100 min (>L:MSATR_APNL_HF1_VOL_1)
MSATR_AUDIO_PANEL_1_HF2_TOGGLE#(L:MSATR_APNL_HF2_1) ! (>L:MSATR_APNL_HF2_1) 
MSATR_AUDIO_PANEL_1_HF2_VOL_KNOB_DEC#(L:MSATR_APNL_HF2_VOL_1) 5 - 0 max (>L:MSATR_APNL_HF2_VOL_1)
MSATR_AUDIO_PANEL_1_HF2_VOL_KNOB_INC#(L:MSATR_APNL_HF2_VOL_1) 5 + 100 min (>L:MSATR_APNL_HF2_VOL_1)
MSATR_AUDIO_PANEL_1_INT_RAD_TOGGLE#(L:MSATR_APNL_INT_RAD_1) ! (>L:MSATR_APNL_INT_RAD_1) 
MSATR_AUDIO_PANEL_1_INT_TOGGLE#(L:MSATR_APNL_INT_1) ! (>L:MSATR_APNL_INT_1) 
MSATR_AUDIO_PANEL_1_INT_VOL_KNOB_DEC#(L:MSATR_APNL_INT_VOL_1) 5 - 0 max (>L:MSATR_APNL_INT_VOL_1)
MSATR_AUDIO_PANEL_1_INT_VOL_KNOB_INC#(L:MSATR_APNL_INT_VOL_1) 5 + 100 min (>L:MSATR_APNL_INT_VOL_1)
MSATR_AUDIO_PANEL_1_MKR_VOL_KNOB_DEC#(L:MSATR_APNL_MKR_VOL_1) 5 - 0 max (>L:MSATR_APNL_MKR_VOL_1)
MSATR_AUDIO_PANEL_1_MKR_VOL_KNOB_INC#(L:MSATR_APNL_MKR_VOL_1) 5 + 100 min (>L:MSATR_APNL_MKR_VOL_1)
MSATR_AUDIO_PANEL_1_MLS_VOL_KNOB_DEC#(L:MSATR_APNL_MLS_VOL_1) 5 - 0 max (>L:MSATR_APNL_MLS_VOL_1)
MSATR_AUDIO_PANEL_1_MLS_VOL_KNOB_INC#(L:MSATR_APNL_MLS_VOL_1) 5 + 100 min (>L:MSATR_APNL_MLS_VOL_1)
MSATR_AUDIO_PANEL_1_PA_TOGGLE#(L:MSATR_APNL_PA_1) ! (>L:MSATR_APNL_PA_1) 
MSATR_AUDIO_PANEL_1_PA_VOL_KNOB_DEC#(L:MSATR_APNL_PA_VOL_1) 5 - 0 max (>L:MSATR_APNL_PA_VOL_1)
MSATR_AUDIO_PANEL_1_PA_VOL_KNOB_INC#(L:MSATR_APNL_PA_VOL_1) 5 + 100 min (>L:MSATR_APNL_PA_VOL_1)
MSATR_AUDIO_PANEL_1_VHF1_TOGGLE#(L:MSATR_APNL_VHF1_1) ! (>L:MSATR_APNL_VHF1_1) 
MSATR_AUDIO_PANEL_1_VHF1_VOL_KNOB_DEC#(L:MSATR_APNL_VHF1_VOL_1) 5 - 0 max (>L:MSATR_APNL_VHF1_VOL_1)
MSATR_AUDIO_PANEL_1_VHF1_VOL_KNOB_INC#(L:MSATR_APNL_VHF1_VOL_1) 5 + 100 min (>L:MSATR_APNL_VHF1_VOL_1)
MSATR_AUDIO_PANEL_1_VHF2_TOGGLE#(L:MSATR_APNL_VHF2_1) ! (>L:MSATR_APNL_VHF2_1) 
MSATR_AUDIO_PANEL_1_VHF2_VOL_KNOB_DEC#(L:MSATR_APNL_VHF2_VOL_1) 5 - 0 max (>L:MSATR_APNL_VHF2_VOL_1)
MSATR_AUDIO_PANEL_1_VHF2_VOL_KNOB_INC#(L:MSATR_APNL_VHF2_VOL_1) 5 + 100 min (>L:MSATR_APNL_VHF2_VOL_1)
MSATR_AUDIO_PANEL_1_VOICE_ONLY_TOGGLE#(L:MSATR_APNL_VOICE_ONLY_1) ! (>L:MSATR_APNL_VOICE_ONLY_1) 
MSATR_AUDIO_PANEL_1_VOR1_VOL_KNOB_DEC#(L:MSATR_APNL_VOR1_VOL_1) 5 - 0 max (>L:MSATR_APNL_VOR1_VOL_1)
MSATR_AUDIO_PANEL_1_VOR1_VOL_KNOB_INC#(L:MSATR_APNL_VOR1_VOL_1) 5 + 100 min (>L:MSATR_APNL_VOR1_VOL_1)
MSATR_AUDIO_PANEL_1_VOR2_VOL_KNOB_DEC#(L:MSATR_APNL_VOR2_VOL_1) 5 - 0 max (>L:MSATR_APNL_VOR2_VOL_1)
MSATR_AUDIO_PANEL_1_VOR2_VOL_KNOB_INC#(L:MSATR_APNL_VOR2_VOL_1) 5 + 100 min (>L:MSATR_APNL_VOR2_VOL_1)
MSATR_COMM_AUDIO_1_SEL_PRESS#(L:MSATR_COMM_AUDIO_SEL1) ! (>L:MSATR_COMM_AUDIO_SEL1)
MSATR_COMM_AUDIO_2_SEL_PRESS#(L:MSATR_COMM_AUDIO_SEL2) ! (>L:MSATR_COMM_AUDIO_SEL2)
MSATR_AUDIO__PANEL_1_HF1_OFF#0 (>L:MSATR_APNL_HF1_1)
MSATR_AUDIO__PANEL_1_HF1_ON#1 (>L:MSATR_APNL_HF1_1)
MSATR_AUDIO__PANEL_1_HF2_OFF#0 (>L:MSATR_APNL_HF2_1)
MSATR_AUDIO__PANEL_1_HF2_ON#1 (>L:MSATR_APNL_HF2_1)
MSATR_AUDIO__PANEL_1_INT_OFF#0 (>L:MSATR_APNL_INT_1)
MSATR_AUDIO__PANEL_1_INT_ON#1 (>L:MSATR_APNL_INT_1)
MSATR_AUDIO__PANEL_1_INT_RAD_ON#1 (>L:MSATR_APNL_INT_RAD_1)
MSATR_AUDIO__PANEL_1_INT_RAD_OFF#0 (>L:MSATR_APNL_INT_RAD_1)
MSATR_AUDIO__PANEL_1_PA_OFF#0 (>L:MSATR_APNL_PA_1)
MSATR_AUDIO__PANEL_1_PA_ON#1 (>L:MSATR_APNL_PA_1)
MSATR_AUDIO__PANEL_1_VHF1_OFF#0 (>L:MSATR_APNL_VHF1_1)
MSATR_AUDIO__PANEL_1_VHF1_ON#1 (>L:MSATR_APNL_VHF1_1)
MSATR_AUDIO__PANEL_1_VHF2_OFF#0 (>L:MSATR_APNL_VHF2_1)
MSATR_AUDIO__PANEL_1_VHF2_ON#1 (>L:MSATR_APNL_VHF2_1)
MSATR_AUDIO__PANEL_1_VOICE_ONLY_OFF#0 (>L:MSATR_APNL_VOICE_ONLY_1)
MSATR_AUDIO__PANEL_1_VOICE_ONLY_ON#1 (>L:MSATR_APNL_VOICE_ONLY_1)
MSATR_AUDIO__PANEL_2_ADF1_VOL_DEC#(L:MSATR_APNL_ADF1_VOL_2) 5 - 0 max (>L:MSATR_APNL_ADF1_VOL_2)
MSATR_AUDIO__PANEL_2_ADF1_VOL_INC#(L:MSATR_APNL_ADF1_VOL_2) 5 + 100 min (>L:MSATR_APNL_ADF1_VOL_2)
MSATR_AUDIO__PANEL_2_ADF2_VOL_DEC#(L:MSATR_APNL_ADF2_VOL_2) 5 - 0 max (>L:MSATR_APNL_ADF2_VOL_2)
MSATR_AUDIO__PANEL_2_ADF2_VOL_INC#(L:MSATR_APNL_ADF2_VOL_2) 5 + 100 min (>L:MSATR_APNL_ADF2_VOL_2)
MSATR_AUDIO__PANEL_2_DME1_VOL_DEC#(L:MSATR_APNL_DME1_VOL_2) 5 - 0 max (>L:MSATR_APNL_DME1_VOL_2)
MSATR_AUDIO__PANEL_2_DME1_VOL_INC#(L:MSATR_APNL_DME1_VOL_2) 5 + 100 min (>L:MSATR_APNL_DME1_VOL_2)
MSATR_AUDIO__PANEL_2_DME2_VOL_DEC#(L:MSATR_APNL_DME2_VOL_2) 5 - 0 max (>L:MSATR_APNL_DME2_VOL_2)
MSATR_AUDIO__PANEL_2_DME2_VOL_INC#(L:MSATR_APNL_DME2_VOL_2) 5 + 100 min (>L:MSATR_APNL_DME2_VOL_2)
MSATR_AUDIO__PANEL_2_HF1_OFF#0 (>L:MSATR_APNL_HF1_2)
MSATR_AUDIO__PANEL_2_HF1_ON#1 (>L:MSATR_APNL_HF1_2)
MSATR_AUDIO__PANEL_2_HF1_TOGGLE#(L:MSATR_APNL_HF1_2) ! (>L:MSATR_APNL_HF1_2)
MSATR_AUDIO__PANEL_2_HF1_VOL_DEC#(L:MSATR_APNL_HF1_VOL_2) 5 - 0 max (>L:MSATR_APNL_HF1_VOL_2)
MSATR_AUDIO__PANEL_2_HF1_VOL_INC#(L:MSATR_APNL_HF1_VOL_2) 5 + 100 min (>L:MSATR_APNL_HF1_VOL_2)
MSATR_AUDIO__PANEL_2_HF2_OFF#0 (>L:MSATR_APNL_HF2_2)
MSATR_AUDIO__PANEL_2_HF2_ON#1 (>L:MSATR_APNL_HF2_2)
MSATR_AUDIO__PANEL_2_HF2_TOGGLE#(L:MSATR_APNL_HF2_2) ! (>L:MSATR_APNL_HF2_2)
MSATR_AUDIO__PANEL_2_HF2_VOL_DEC#(L:MSATR_APNL_HF2_VOL_2) 5 - 0 max (>L:MSATR_APNL_HF2_VOL_2)
MSATR_AUDIO__PANEL_2_HF2_VOL_INC#(L:MSATR_APNL_HF2_VOL_2) 5 + 100 min (>L:MSATR_APNL_HF2_VOL_2)
MSATR_AUDIO__PANEL_2_INT_OFF#0 (>L:MSATR_APNL_INT_2)
MSATR_AUDIO__PANEL_2_INT_ON#1 (>L:MSATR_APNL_INT_2)
MSATR_AUDIO__PANEL_2_INT_RAD_OFF#0 (>L:MSATR_APNL_INT_RAD_2)
MSATR_AUDIO__PANEL_2_INT_RAD_ON#1 (>L:MSATR_APNL_INT_RAD_2)
MSATR_AUDIO__PANEL_2_INT_RAD_TOGGLE#(L:MSATR_APNL_INT_RAD_2) ! (>L:MSATR_APNL_INT_RAD_2)
MSATR_AUDIO__PANEL_2_INT_TOGGLE#(L:MSATR_APNL_INT_2) ! (>L:MSATR_APNL_INT_2)
MSATR_AUDIO__PANEL_2_INT_VOL_DEC#(L:MSATR_APNL_INT_VOL_2) 5 - 0 max (>L:MSATR_APNL_INT_VOL_2)
MSATR_AUDIO__PANEL_2_INT_VOL_INC#(L:MSATR_APNL_INT_VOL_2) 5 + 100 min (>L:MSATR_APNL_INT_VOL_2)
MSATR_AUDIO__PANEL_2_MKR_VOL_DEC#(L:MSATR_APNL_MKR_VOL_2) 5 - 0 max (>L:MSATR_APNL_MKR_VOL_2)
MSATR_AUDIO__PANEL_2_MKR_VOL_INC#(L:MSATR_APNL_MKR_VOL_2) 5 + 100 min (>L:MSATR_APNL_MKR_VOL_2)
MSATR_AUDIO__PANEL_2_PA_OFF#0 (>L:MSATR_APNL_PA_2)
MSATR_AUDIO__PANEL_2_PA_ON#1 (>L:MSATR_APNL_PA_2)
MSATR_AUDIO__PANEL_2_PA_TOGGLE#(L:MSATR_APNL_PA_2) ! (>L:MSATR_APNL_PA_2)
MSATR_AUDIO__PANEL_2_PA_VOL_DEC#(L:MSATR_APNL_PA_VOL_2) 5 - 0 max (>L:MSATR_APNL_PA_VOL_2)
MSATR_AUDIO__PANEL_2_PA_VOL_INC#(L:MSATR_APNL_PA_VOL_2) 5 + 100 min (>L:MSATR_APNL_PA_VOL_2)
MSATR_AUDIO__PANEL_2_VHF1_OFF#0 (>L:MSATR_APNL_VHF1_2)
MSATR_AUDIO__PANEL_2_VHF1_ON#1 (>L:MSATR_APNL_VHF1_2)
MSATR_AUDIO__PANEL_2_VHF1_TOGGLE#(L:MSATR_APNL_VHF1_2) ! (>L:MSATR_APNL_VHF1_2)
MSATR_AUDIO__PANEL_2_VHF1_VOL_DEC#(L:MSATR_APNL_VHF1_VOL_2) 5 - 0 max (>L:MSATR_APNL_VHF1_VOL_2)
MSATR_AUDIO__PANEL_2_VHF1_VOL_INC#(L:MSATR_APNL_VHF1_VOL_2) 5 + 100 min (>L:MSATR_APNL_VHF1_VOL_2)
MSATR_AUDIO__PANEL_2_VHF2_OFF#0 (>L:MSATR_APNL_VHF2_2)
MSATR_AUDIO__PANEL_2_VHF2_ON#1 (>L:MSATR_APNL_VHF2_2)
MSATR_AUDIO__PANEL_2_VHF2_TOGGLE#(L:MSATR_APNL_VHF2_2) ! (>L:MSATR_APNL_VHF2_2)
MSATR_AUDIO__PANEL_2_VHF2_VOL_DEC#(L:MSATR_APNL_VHF2_VOL_2) 5 - 0 max (>L:MSATR_APNL_VHF2_VOL_2)
MSATR_AUDIO__PANEL_2_VHF2_VOL_INC#(L:MSATR_APNL_VHF2_VOL_2) 5 + 100 min (>L:MSATR_APNL_VHF2_VOL_2)
MSATR_AUDIO__PANEL_2_VOICE_ONLY_ON#1 (>L:MSATR_APNL_VOICE_ONLY_2)
MSATR_AUDIO__PANEL_2_VOICE_ONLY_TOGGLE#(L:MSATR_APNL_VOICE_ONLY_2) ! (>L:MSATR_APNL_VOICE_ONLY_2)
MSATR_AUDIO__PANEL_2_VOICE_ONLY_OFF#0 (>L:MSATR_APNL_VOICE_ONLY_2)
MSATR_AUDIO__PANEL_2_VOR1_VOL_DEC#(L:MSATR_APNL_VOR1_VOL_2) 5 - 0 max (>L:MSATR_APNL_VOR1_VOL_2)
MSATR_AUDIO__PANEL_2_VOR1_VOL_INC#(L:MSATR_APNL_VOR1_VOL_2) 5 + 100 min (>L:MSATR_APNL_VOR1_VOL_2)
MSATR_AUDIO__PANEL_2_VOR2_VOL_DEC#(L:MSATR_APNL_VOR2_VOL_2) 5 - 0 max (>L:MSATR_APNL_VOR2_VOL_2)
MSATR_AUDIO__PANEL_2_VOR2_VOL_INC#(L:MSATR_APNL_VOR2_VOL_2) 5 + 100 min (>L:MSATR_APNL_VOR2_VOL_2)
MSATR_AUDIO__PANEL_3_MLS_VOL_DEC#(L:MSATR_APNL_MLS_VOL_2) 5 - 0 max (>L:MSATR_APNL_MLS_VOL_2)
MSATR_AUDIO__PANEL_3_MLS_VOL_INC#(L:MSATR_APNL_MLS_VOL_2) 5 + 100 min (>L:MSATR_APNL_MLS_VOL_2)
//Microsoft/ATR 42-600, ATR 72-600/Autopilot
MSATR_FGCP_ALT_BUTTON#1 (>L:MSATR_FGCP_ALT)
MSATR_FGCP_ALT_DEC#(L:MSATR_FGCP_ALTSEL_DELTA) -- (>L:MSATR_FGCP_ALTSEL_DELTA)
MSATR_FGCP_ALT_INC#(L:MSATR_FGCP_ALTSEL_DELTA) ++ (>L:MSATR_FGCP_ALTSEL_DELTA)
MSATR_FGCP_ALT_KNOB_FAST_DEC#(L:MSATR_FGCP_SELALT) 10000 < if{ -1 } els{ -10 } (>L:MSATR_FGCP_ALTSEL_DELTA)
MSATR_FGCP_ALT_KNOB_FAST_INC#(L:MSATR_FGCP_SELALT) 9000 < if{ 1 } els{ 10 } (>L:MSATR_FGCP_ALTSEL_DELTA)
MSATR_FGCP_APP_BUTTON#1 (>L:MSATR_FGCP_APP)
MSATR_FGCP_AUTOPILOT_FD1_BUTTON#(L:MSATR_FGCP_FD1) ! (>L:MSATR_FGCP_FD1)
MSATR_FGCP_BC_BUTTON#1 (>L:MSATR_FGCP_BC)
MSATR_FGCP_COURSE_CPT_SIDE_DEC#(L:MSATR_FGCP_CRS1, number) 5 - 0 max (>L:MSATR_FGCP_CRS1) (L:MSATR_FGCP_CRS1_DELTA) -- (>L:MSATR_FGCP_CRS1_DELTA)
MSATR_FGCP_COURSE_CPT_SIDE_INC#(L:MSATR_FGCP_CRS1, number) 5 + 100 max (>L:MSATR_FGCP_CRS1) (L:MSATR_FGCP_CRS1_DELTA) ++ (>L:MSATR_FGCP_CRS1_DELTA)
MSATR_FGCP_CPL_BUTTON#1 (>L:MSATR_FGCP_CPL)
MSATR_FGCP_CRS_FO_SIDE_DEC#(L:MSATR_FGCP_CRS2, number) 5 - 0 max (>L:MSATR_FGCP_CRS2) (L:MSATR_FGCP_CRS2_DELTA) -- (>L:MSATR_FGCP_CRS2_DELTA)
MSATR_FGCP_CRS_FO_SIDE_INC#(L:MSATR_FGCP_CRS2, number) 5 + 100 max (>L:MSATR_FGCP_CRS2) (L:MSATR_FGCP_CRS2_DELTA) ++ (>L:MSATR_FGCP_CRS2_DELTA)
MSATR_FGCP_FD1_BUTTON#1 (>L:MSATR_FGCP_FD1)
MSATR_FGCP_FD2_BUTTON#1 (>L:MSATR_FGCP_FD2)
MSATR_FGCP_FGCP_AP_ENGAGE-DISENGAGE_BUTTON#(L:MSATR_FGCP_AP) ! (>L:MSATR_FGCP_AP)
MSATR_FGCP_HDG_BUTTON#1 (>L:MSATR_FGCP_HDG)
MSATR_FGCP_HDG_DEC#(L:MSATR_SEL_HDG) 1 - dnor (>L:MSATR_SEL_HDG) 1 (>L:MSATR_SEL_HDG_CHANGED)
MSATR_FGCP_HDG_INC#(L:MSATR_SEL_HDG) 1 + dnor (>L:MSATR_SEL_HDG) 1 (>L:MSATR_SEL_HDG_CHANGED)
MSATR_FGCP_HDG_SYNC#1 (>L:MSATR_SEL_HDG_SYNC)
MSATR_FGCP_IAS_BUTTON#1 (>L:MSATR_FGCP_IAS)
MSATR_FGCP_NAV_BUTTON#1 (>L:MSATR_FGCP_NAV)
MSATR_FGCP_SOURCE_FM1_CPT_Side#0 (>L:MSATR_FGCP_SRC1)
MSATR_FGCP_SOURCE_FM1_FO_Side#0 (>L:MSATR_FGCP_SRC2)
MSATR_FGCP_SOURCE_FM2_CPT_Side#3 (>L:MSATR_FGCP_SRC1)
MSATR_FGCP_SOURCE_FM2_FO_Side#3 (>L:MSATR_FGCP_SRC2)
MSATR_FGCP_SOURCE_VILS1_CPT_Side#1 (>L:MSATR_FGCP_SRC1)
MSATR_FGCP_SOURCE_VILS1_FO_Side#1 (>L:MSATR_FGCP_SRC2)
MSATR_FGCP_SOURCE_VILS2_CPT_Side#2 (>L:MSATR_FGCP_SRC1)
MSATR_FGCP_SOURCE_VILS2_FO_Side#2 (>L:MSATR_FGCP_SRC2)
MSATR_FGCP_SPD_HLD_BUTTON#1 (>L:MSATR_FGCP_SPDHLD)
MSATR_FGCP_SPD_TGT_SEL_TOGGLE#1 (>L:MSATR_FGCP_SPEED_TGT_SEL)
MSATR_FGCP_STBY_BUTTON#1 (>L:MSATR_FGCP_STBY)
MSATR_FGCP_STEEP_APP_PRESS#(L:MSATR_FGCP_STEEP_APP) ! (>L:MSATR_FGCP_STEEP_APP)
MSATR_FGCP_VNAV_BUTTON#1 (>L:MSATR_FGCP_VNAV)
MSATR_FGCP_VS_BUTTON#1 (>L:MSATR_FGCP_VS)
MSATR_FGCP_VS_NOSE_DN#(L:MSATR_FCGP_PITCH_WHEEL_DELTA) -- (>L:MSATR_FCGP_PITCH_WHEEL_DELTA)
MSATR_FGCP_VS_NOSE_UP#(L:MSATR_FCGP_PITCH_WHEEL_DELTA) ++ (>L:MSATR_FCGP_PITCH_WHEEL_DELTA)
MSATR_FGCP_YD_BUTTON#1 (>L:MSATR_FGCP_YD)
MSATR_SPD_TGT_DEC#(L:MSATR_FGCP_TGT_DELTA) -- (>L:MSATR_FGCP_TGT_DELTA)
MSATR_SPD_TGT_INC#(L:MSATR_FGCP_TGT_DELTA) ++ (>L:MSATR_FGCP_TGT_DELTA)
//Microsoft/ATR 42-600, ATR 72-600/Avionics
MSATR_CAPT_SWITCHING_ADC_PRESS#(L:MSATR_AHRS_ADC1) ! (>L:MSATR_AHRS_ADC1)
MSATR_CAPT_SWITCHING_ATT_HDG_PRESS#(L:MSATR_AHRS_ATTHDG1) ! (>L:MSATR_AHRS_ATTHDG1)
MSATR_FCTL_TLU_AUTO_SWITCH#1 (>L:MSATR_FCTL_TLU_SWITCH)
MSATR_FCTL_TLU_HI_SPD_SWITCH#2 (>L:MSATR_FCTL_TLU_SWITCH)
MSATR_FCTL_TLU_LO_SPD_SWITCH#0 (>L:MSATR_FCTL_TLU_SWITCH)
MSATR_FLTCTL_MFC_1A_TOGGLE#(L:MSATR_FCTL_MFC_1A) ! (>L:MSATR_FCTL_MFC_1A)
MSATR_FLTCTL_MFC_1B_TOGGLE#(L:MSATR_FCTL_MFC_1B) ! (>L:MSATR_FCTL_MFC_1B)
MSATR_FLTCTL_MFC_2A_TOGGLE#(L:MSATR_FCTL_MFC_2A) ! (>L:MSATR_FCTL_MFC_2A)
MSATR_FLTCTL_MFC_2B_TOGGLE#(L:MSATR_FCTL_MFC_2B) ! (>L:MSATR_FCTL_MFC_2B)
MSATR_FO_SWITCHING_ADC_PRESS#(L:MSATR_AHRS_ADC2) ! (>L:MSATR_AHRS_ADC2)
MSATR_FO_SWITCHING_ATT_HDG_PRESS#(L:MSATR_AHRS_ATTHDG2) ! (>L:MSATR_AHRS_ATTHDG2)
MSATR_MIP_SCREEN_1_BRT_MINUS_PRESS#-1 (>L:MSATR_MPNL_DISP1_BRT) 
MSATR_MIP_SCREEN_1_BRT_PLUS_PRESS#1 (>L:MSATR_MPNL_DISP1_BRT) 
MSATR_MIP_SCREEN_1_PWR_PRESS#(L:MSATR_MPNL_DISP1_PWR) ! (>L:MSATR_MPNL_DISP1_PWR)
MSATR_MIP_SCREEN_2_BRT_MINUS_PRESS#-1 (>L:MSATR_MPNL_DISP1_BRT) 
MSATR_MIP_SCREEN_2_BRT_PLUS_PRESS#1 (>L:MSATR_MPNL_DISP2_BRT) 
MSATR_MIP_SCREEN_2_PWR_PRESS#(L:MSATR_MPNL_DISP2_PWR) ! (>L:MSATR_MPNL_DISP2_PWR)
MSATR_MIP_SCREEN_3_BRT_MINUS_PRESS#-1 (>L:MSATR_MPNL_DISP3_BRT) 
MSATR_MIP_SCREEN_3_BRT_PLUS_PRESS#1 (>L:MSATR_MPNL_DISP3_BRT) 
MSATR_MIP_SCREEN_3_PWR_PRESS#(L:MSATR_MPNL_DISP3_PWR) ! (>L:MSATR_MPNL_DISP3_PWR)
MSATR_MIP_SCREEN_4_BRT_MINUS_PRESS#-1 (>L:MSATR_MPNL_DISP4_BRT) 
MSATR_MIP_SCREEN_4_BRT_PLUS_PRESS#1 (>L:MSATR_MPNL_DISP4_BRT) 
MSATR_MIP_SCREEN_4_PWR_PRESS#(L:MSATR_MPNL_DISP4_PWR) ! (>L:MSATR_MPNL_DISP4_PWR) 
MSATR_MIP_SCREEN_5_BRT_MINUS_PRESS#-1 (>L:MSATR_MPNL_DISP5_BRT) 
MSATR_MIP_SCREEN_5_BRT_PLUS_PRESS#1 (>L:MSATR_MPNL_DISP5_BRT) 
MSATR_MIP_SCREEN_5_PWR_PRESS#(L:MSATR_MPNL_DISP5_PWR) ! (>L:MSATR_MPNL_DISP5_PWR) 
//Microsoft/ATR 42-600, ATR 72-600/EFIS
MSATR_EFIS_BRG1_CPT_Side#1 (>L:MSATR_EFIS_BRG1_1)
MSATR_EFIS_BRG1_FO_Side#1 (>L:MSATR_EFIS_BRG1_2)
MSATR_EFIS_BRG2_CPT_Side#1 (>L:MSATR_EFIS_BRG2_1)
MSATR_EFIS_BRG2_FO_Side#1 (>L:MSATR_EFIS_BRG2_2)
MSATR_EFIS_CLR_#1 (>L:MSATR_EFIS_CLR)
MSATR_EFIS_MAN_DEL#1 (>L:MSATR_EFIS_MAN_DEL)
MSATR_EFIS_MAP_CAPT_Side#1 (>L:MSATR_EFIS_MAP_1)
MSATR_EFIS_MAP_FO_Side#1 (>L:MSATR_EFIS_MAP_2)
MSATR_EFIS_MISC_CAPT_Side#1 (>L:MSATR_EFIS_MISC_1)
MSATR_EFIS_MISC_FO_Side#1 (>L:MSATR_EFIS_MISC_2)
MSATR_EFIS_ND_CAPT_Side#1 (>L:MSATR_EFIS_ND_1)
MSATR_EFIS_ND_FO_Side#1 (>L:MSATR_EFIS_ND_2)
MSATR_EFIS_PERF_CAPT_Side#1 (>L:MSATR_EFIS_PERF_1)
MSATR_EFIS_PERF_FO_Side#1 (>L:MSATR_EFIS_PERF_2)
MSATR_EFIS_PROC_DN_CAPT_Side#1 (>L:MSATR_EFIS_PROC_DN_1)
MSATR_EFIS_PROC_DN_FO_Side#1 (>L:MSATR_EFIS_PROC_DN_2)
MSATR_EFIS_PROC_MENU_PRESS#1 (>L:MSATR_EFIS_PROC_MENU)
MSATR_EFIS_PROC_UP_CAPT_Side#1 (>L:MSATR_EFIS_PROC_UP_1)
MSATR_EFIS_PROC_UP_FO_Side#1 (>L:MSATR_EFIS_PROC_UP_2)
MSATR_EFIS_PROC_VAL_CAPT_Side#1 (>L:MSATR_EFIS_PROC_VAL_1)
MSATR_EFIS_PROC_VAL_FO_Side#1 (>L:MSATR_EFIS_PROC_VAL_2)
MSATR_EFIS_RCL#1 (>L:MSATR_EFIS_RCL)
MSATR_EFIS_RNG_DEC_CAPT_Side#1 (>L:MSATR_EFIS_RNG_DEC_1)
MSATR_EFIS_RNG_DEC_FO_Side#1 (>L:MSATR_EFIS_RNG_DEC_2)
MSATR_EFIS_RNG_INC_CAPT_Side#1 (>L:MSATR_EFIS_RNG_INC_1)
MSATR_EFIS_RNG_INC_FO_Side#1 (>L:MSATR_EFIS_RNG_INC_2)
MSATR_EFIS_SYS_CAPT_Side#1 (>L:MSATR_EFIS_SYS_1)
MSATR_EFIS_SYS_FO_Side#1 (>L:MSATR_EFIS_SYS_2)
MSATR_EFIS_VID_CAPT_Side#1 (>L:MSATR_EFIS_VID_1)
MSATR_EFIS_VID_FO_Side#1 (>L:MSATR_EFIS_VID_2)
//Microsoft/ATR 42-600, ATR 72-600/Electrical
MSATR_AC_WILD_ELEC_EXT_POWER_AVAIL_ON-OFF_SW#(L:MSATR_ACWF_EXTPWR) ! (>L:MSATR_ACWF_EXTPWR)
MSATR_ACWF_BTC_PRESS#(L:MSATR_ACWF_BTC) ! (>L:MSATR_ACWF_BTC)
MSATR_ACWF_GEN1_PRESS#(L:MSATR_ACWF_GEN1) ! (>L:MSATR_ACWF_GEN1)
MSATR_ACWF_GEN2_PRESS#(L:MSATR_ACWF_GEN2) ! (>L:MSATR_ACWF_GEN2)
MSATR_DC_SVC_UTIL_BUS_TOGGLE#(L:MSATR_ELEC_DC_SVC_UTIL_BUS) ! (>L:MSATR_ELEC_DC_SVC_UTIL_BUS)
MSATR_DCGEN1_OFF#0 (>L:MSATR_ELEC_DCGEN1)
MSATR_DCGEN1_ON#1 (>L:MSATR_ELEC_DCGEN1)
MSATR_DCGEN1_TOGGLE#(L:MSATR_ELEC_DCGEN1) ! (>L:MSATR_ELEC_DCGEN1)
MSATR_DCGEN2_OFF#0 (>L:MSATR_ELEC_DCGEN2)
MSATR_DCGEN2_ON#1 (>L:MSATR_ELEC_DCGEN2)
MSATR_DCGEN2_TOGGLE#(L:MSATR_ELEC_DCGEN2) ! (>L:MSATR_ELEC_DCGEN2)
MSATR_ELEC_BAT_SEL_EMER_SWITCH#0 (>L:MSATR_ELEC_BAT_SEL)
MSATR_ELEC_BAT_SEL_MAIN_SWITCH#1 (>L:MSATR_ELEC_BAT_SEL)
MSATR_ELEC_BTC_TOGGLE#(L:MSATR_ELEC_BTC) ! (>L:MSATR_ELEC_BTC)
MSATR_ELEC_EMER_BAT_CHG_TOGGLE#(L:MSATR_ELEC_EMER_BAT_CHG) ! (>L:MSATR_ELEC_EMER_BAT_CHG)
MSATR_ELEC_MAIN_BAT_CHG_TOGGLE#(L:MSATR_ELEC_MAIN_BAT_CHG) ! (>L:MSATR_ELEC_MAIN_BAT_CHG)
MSATR_ELEC_MASTER_BATTERY_SWITCH_OFF#2 (>L:MSATR_ELEC_BAT_SWITCH)
MSATR_ELEC_MASTER_BATTERY_SWITCH_ON#1 (>L:MSATR_ELEC_BAT_SWITCH)
MSATR_ELEC_MASTER_BATTERY_SWITCH_OVRD#0 (>L:MSATR_ELEC_BAT_SWITCH)
MSATR_ELEC_STBY_BUS_TOGGLE#(L:MSATR_ELEC_STBY_BUS) ! (>L:MSATR_ELEC_STBY_BUS)
MSATR_ELEC_TRU_TOGGLE#(L:MSATR_ELEC_TRU) ! (>L:MSATR_ELEC_TRU)
MSATR_ELEC_DC_EXTPWR_OFF#0 (>L:MSATR_ELEC_DC_EXTPWR)
MSATR_ELEC_DC_EXTPWR_ON#1 (>L:MSATR_ELEC_DC_EXTPWR)
MSATR_ELEC_DC_EXTPWR_Toggle#(L:MSATR_ELEC_DC_EXTPWR) ! (>L:MSATR_ELEC_DC_EXTPWR)
Toggle_Battery_Power#(L:MSATR_ELEC_BAT_SWITCH, Number) 1 != if{ 1 } els{ 2 } (>L:MSATR_ELEC_BAT_SWITCH, Number) 
//Microsoft/ATR 42-600, ATR 72-600/Engines
MSATR_APM_BUTTON_PRESS#(L:MSATR_ENG_APM) ! (>L:MSATR_ENG_APM)
MSATR_APM_TEST_BUTTON_PRESS#1 (>L:MSATR_ENG_APM_TEST)
MSATR_APM_TEST_BUTTON_RELEASE#0 (>L:MSATR_ENG_APM_TEST)
MSATR_ATPCS_TOGGLE#(L:MSATR_ATPCS) ! (>L:MSATR_ATPCS) 
MSATR_ENG_BOOST_BUTTON_TOGGLE#(L:MSATR_ENG_BOOST) ! (>L:MSATR_ENG_BOOST)
MSATR_ENG_EEC1_TOGGLE#(L:MSATR_ENG_EEC1) ! (>L:MSATR_ENG_EEC1)
MSATR_ENG_EEC2_TOGGLE#(L:MSATR_ENG_EEC2) ! (>L:MSATR_ENG_EEC2)
MSATR_ENG_IDLE_GATE_FLT_PUSH#1 (>L:MSATR_ENG_IDLE_GATE) 
MSATR_ENG_IDLE_GATE_GND_PULL#0 (>L:MSATR_ENG_IDLE_GATE) 
MSATR_ENG_IDLE_GATE_TOGGLE#(L:MSATR_ENG_IDLE_GATE) ! (>L:MSATR_ENG_IDLE_GATE) 
MSATR_ENG_MAN_IGN_TOGGLE#(L:MSATR_ENGS_IGN) ! (>L:MSATR_ENGS_IGN)
MSATR_ENG_PEC1_Toggle#(L:MSATR_ENG_PEC1) ! (>L:MSATR_ENG_PEC1)
MSATR_ENG_PEC2_Toggle#(L:MSATR_ENG_PEC2) ! (>L:MSATR_ENG_PEC2)
MSATR_ENG_PROP_BRAKE_SWITCH_LOCK_TOGGLE#(L:MSATR_Switch_PROP_BRAKE_Lock) ! s0 (>L:MSATR_Switch_PROP_BRAKE_Lock) l0 if{ 5 } els{ 0 } (>L:MSATR_Switch_PROP_BRAKE_Lock_CNT)
MSATR_ENG_PROP_BRAKE_SWITCH_OFF#0 (>L:MSATR_ENGS_PROP_BRK) 
MSATR_ENG_PROP_BRAKE_SWITCH_ON#1 (>L:MSATR_ENGS_PROP_BRK) 
MSATR_ENG_PROP_BRAKE_TOGGLE#(L:MSATR_ENGS_PROP_BRK) ! (>L:MSATR_ENGS_PROP_BRK) 
MSATR_ENG_START_1_PUSH#1 (>L:MSATR_ENGS_START1) 
MSATR_ENG_START_2_PUSH#1 (>L:MSATR_ENGS_START2)
MSATR_ENG_START_MODE_KNOB_CRANK#1 (>L:MSATR_ENGS_MODE)
MSATR_ENG_START_MODE_KNOB_OFF#0 (>L:MSATR_ENGS_MODE)
MSATR_ENG_START_MODE_KNOB_START_A#2 (>L:MSATR_ENGS_MODE)
MSATR_ENG_START_MODE_KNOB_START_A___B#4 (>L:MSATR_ENGS_MODE)
MSATR_ENG_START_MODE_KNOB_START_B#3 (>L:MSATR_ENGS_MODE)
MSATR_GO_AROUND_BUTTON_CPT_Side#1 (>L:MSATR_ENG_GA1)
MSATR_GO_AROUND_BUTTON_FO_Side#1 (>L:MSATR_ENG_GA2)
MSATR_GUSTLOCK_LEVER_SWITCH#(L:MSATR_ENG_GUSTLOCK) ! (>L:MSATR_ENG_GUSTLOCK)
MSATR_PWR_MGT_CLB#2 (>L:MSATR_ENG_PWRMGT_2)
MSATR_PWR_MGT_CRZ#3 (>L:MSATR_ENG_PWRMGT_2)
MSATR_PWR_MGT_KNOB_DEC#(L:MSATR_ENG_PWRMGT_2) -- 0 max s0 (>L:MSATR_ENG_PWRMGT_2) (L:MSATR_ENG_PWRMGT_SYNC) if{  l0 (>L:MSATR_ENGINE_Knob_PwrMgt_Outer) }
MSATR_PWR_MGT_KNOB_INC#(L:MSATR_ENG_PWRMGT_2) ++ 3 min s0 (>L:MSATR_ENG_PWRMGT_2) (L:MSATR_ENG_PWRMGT_SYNC) if{  l0 (>L:MSATR_ENGINE_Knob_PwrMgt_Outer) }
MSATR_PWR_MGT_KNOB_PRESS#(L:MSATR_ENG_PWRMGT_SYNC) ! s0 (>L:MSATR_ENG_PWRMGT_SYNC) l0 if{ (L:MSATR_ENG_PWRMGT_2) (>L:MSATR_ENGINE_Knob_PwrMgt_Outer)
MSATR_PWR_MGT_MCT#1 (>L:MSATR_ENG_PWRMGT_2)
MSATR_PWR_MGT_TO#0 (>L:MSATR_ENG_PWRMGT_2)
MSATR_THRUST_REVERSER__One_Button_#(A:GENERAL ENG THROTTLE LEVER POSITION:1,Percent) 2 < (A:GENERAL ENG THROTTLE LEVER POSITION:2,Percent) 2 < (L:MSATR_THROTTLE1_REV) ! and and if{ -16383 (>K:THROTTLE1_AXIS_SET_EX1)  -16383 (>K:THROTTLE2_AXIS_SET_EX1) } els{ -8000 (>K:THROTTLE1_AXIS_SET_EX1)  -8000 (>K:THROTTLE2_AXIS_SET_EX1) } 
//Microsoft/ATR 42-600, ATR 72-600/Flight Controls
MSATR_AILERON_TRIM_L_WING_DN#(A:AILERON TRIM PCT, percent) 1 - 163.83 * -16383 max 16383 min (>K:AILERON_TRIM_SET_EX1) 
MSATR_AILERON_TRIM_R_WING_DN#(A:AILERON TRIM PCT, percent) 1 + 163.83 * -16383 max 16383 min (>K:AILERON_TRIM_SET_EX1) 
//Microsoft/ATR 42-600, ATR 72-600/Flight Instrumentation
MSATR_BARO_1_KNOB_DEC#(L:MSATR_BARO_1_DELTA) -- (>L:MSATR_BARO_1_DELTA) 
MSATR_BARO_1_KNOB_INC#(L:MSATR_BARO_1_DELTA) ++ (>L:MSATR_BARO_1_DELTA) 
MSATR_BARO_1_STD_MODE_TOGGLE#1 (>L:MSATR_BARO_STD_1)
MSATR_BARO_2_KNOB_DEC#(L:MSATR_BARO_2_DELTA) -- (>L:MSATR_BARO_2_DELTA) 
MSATR_BARO_2_KNOB_INC#(L:MSATR_BARO_2_DELTA) ++ (>L:MSATR_BARO_2_DELTA) 
MSATR_BARO_2_STD_MODE_TOGGLE#1 (>L:MSATR_BARO_STD_2)
MSATR_CLOCK_1_CPT_CHR_BUTTON#1 (>L:MSATR_CLOCK1_CHR)
MSATR_CLOCK_1_CPT_ET_BUTTON#1 (>L:MSATR_CLOCK1_ET)
MSATR_CLOCK_1_CPT_MODE_BUTTON#1 (>L:MSATR_CLOCK1_MODE)
MSATR_CLOCK_1_CPT_TST_BUTTON#1 (>L:MSATR_CLOCK1_TEST)
MSATR_CLOCK_2_FO_CHR_BUTTON#1 (>L:MSATR_CLOCK2_CHR)
MSATR_CLOCK_2_FO_ET_BUTTON#1 (>L:MSATR_CLOCK2_ET)
MSATR_CLOCK_2_FO_MODE_BUTTON#1 (>L:MSATR_CLOCK2_MODE)
MSATR_CLOCK_2_FO_TST_BUTTON#1 (>L:MSATR_CLOCK2_TEST)
MSATR_DH_DEC#(L:MSATR_DH_SET_1_DELTA) -- (>L:MSATR_DH_SET_1_DELTA)
MSATR_DH_INC#(L:MSATR_DH_SET_1_DELTA) ++ (>L:MSATR_DH_SET_1_DELTA)
MSATR_DH_TOGGLE_CAPT_Side#0 (>L:MSATR_DH_TOGGLE_1)
MSATR_DH_TOGGLE_FO_Side#0 (>L:MSATR_DH_TOGGLE_2)
MSATR_EFIS_PFD-EWD-MFD_DISPLAY_Button_CAPT_Side#1 (>L:MSATR_EFIS_DISPLAY1)
MSATR_EFIS_PFD-EWD-MFD_DISPLAY_Button_FO_Side#1 (>L:MSATR_EFIS_DISPLAY2)
MSATR_IESI_KNOB_DEC#(L:MSATR_IESI_SET_DELTA) -- (>L:MSATR_IESI_SET_DELTA)
MSATR_IESI_KNOB_INC#(L:MSATR_IESI_SET_DELTA) ++ (>L:MSATR_IESI_SET_DELTA)
MSATR_IESI_MENU_BUTTON_PRESS#1 (>L:MSATR_IESI_MENU)
MSATR_IESI_MINUS_BUTTON_PRESS#1 (>L:MSATR_IESI_MINUS)
MSATR_IESI_PLUS_BUTTON_PRESS#1 (>L:MSATR_IESI_PLUS)
MSATR_IESI_SEL_BUTTON_PRESS#1 (>L:MSATR_IESI_SEL)
MSATR_IESI_STD_BUTTON_PRESS#1 (>L:MSATR_IESI_STD)
MSATR_MDA_TOGGLE_CAPT_Side#1 (>L:MSATR_DH_TOGGLE_1)
MSATR_MDA_TOGGLE_FO_Side#1 (>L:MSATR_DH_TOGGLE_2)
//Microsoft/ATR 42-600, ATR 72-600/Fuel
MSATR_FUEL_PUMP_1_TOGGLE#(L:MSATR_FUEL_PUMP1) ! (>L:MSATR_FUEL_PUMP1)
MSATR_FUEL_PUMP_2_TOGGLE#(L:MSATR_FUEL_PUMP2) ! (>L:MSATR_FUEL_PUMP2)
MSATR_FUEL_XFEED_TOGGLE#(L:MSATR_FUEL_XFEED) ! (>L:MSATR_FUEL_XFEED)
//Microsoft/ATR 42-600, ATR 72-600/Gear
MSATR_BRK_EMER#1 (>L:MSATR_PARK_EMER_BRK)
MSATR_BRK_OFF#0 (>L:MSATR_PARK_EMER_BRK)
MSATR_BRK_PARK#2 (>L:MSATR_PARK_EMER_BRK)
MSATR_GEAR_ANTISKID_TEST_BUTTON_PRESS#1 (>L:MSATR_GEAR_ASKID_TEST)
MSATR_GEAR_ANTISKID_TEST_BUTTON_RELEASE#0 (>L:MSATR_GEAR_ASKID_TEST)
MSATR_GEAR_ANTISKID_TOGGLE#(L:MSATR_GEAR_ASKID) ! (>L:MSATR_GEAR_ASKID)
MSATR_NW_STEERING_OFF#(L:MSATR_Switch_NW_STEERING_cover) 1 == if{ 1 (>L:MSATR_NW_STEERING) }
MSATR_NW_STEERING_ON#0 (>L:MSATR_NW_STEERING)
//Microsoft/ATR 42-600, ATR 72-600/Hydraulic
MSATR_HYD_PUMP_GND_CTL_ONLY_LONG_PRESS#1 (>L:MSATR_HYDR_AUX_PUMP_GNDCTL_LONG)
MSATR_HYD_PUMP_GND_CTL_ONLY_SHORT_PRESS#1 (>L:MSATR_HYDR_AUX_PUMP_GNDCTL)
MSATR_HYDR_AUX_PUMP_PRESS#(L:MSATR_HYDR_AUX) ! (>L:MSATR_HYDR_AUX)
MSATR_HYDR_BLUE_PUMP_PRESS#(L:MSATR_HYDR_BLUE) ! (>L:MSATR_HYDR_BLUE) 
MSATR_HYDR_GREEN_PUMP_PRESS#(L:MSATR_HYDR_GREEN) ! (>L:MSATR_HYDR_GREEN) 
MSATR_HYDR_XFEED_PUMP_PRESS#(L:MSATR_HYDR_XFEED) ! (>L:MSATR_HYDR_XFEED)
MSATR_HYDR_XFEED_PUMP_PRESS#(L:MSATR_HYDR_XFEED) ! (>L:MSATR_HYDR_XFEED)
//Microsoft/ATR 42-600, ATR 72-600/Light
Toggle_Emergency_Lights#(L:MSATR_CABS_EMER_EXIT_LTS, Number) 1 != if{ 1 } els{ 2 } (>L:MSATR_CABS_EMER_EXIT_LTS, Number) 
//Microsoft/ATR 42-600, ATR 72-600/Lights
MSATR_ANNLT_SWITCH_BRT#1 (>L:MSATR_ITLS_ANNLT)
MSATR_ANNLT_SWITCH_DIM#2 (>L:MSATR_ITLS_ANNLT)
MSATR_ANNLT_SWITCH_TEST#0 (>L:MSATR_ITLS_ANNLT)
MSATR_CALLS_ATTND_PRESS#1 (>L:MSATR_CALL_ATTND)
MSATR_CALLS_MECH_PRESS#1 (>L:MSATR_CALL_MECH)
MSATR_CALLS_MECH_RELEASE#0 (>L:MSATR_CALL_MECH)
MSATR_CALLS_RESET_PRESS#1 (>L:MSATR_CALL_RESET)
MSATR_ILTS_CONSOLE_CPT_DEC#(L:MSATR_ILTS_CONSOLE_CPT) 5 - 0 max (>L:MSATR_ILTS_CONSOLE_CPT)
MSATR_ILTS_CONSOLE_CPT_INC#(L:MSATR_ILTS_CONSOLE_CPT) 5 + 100 min (>L:MSATR_ILTS_CONSOLE_CPT)
MSATR_ILTS_CONSOLE_FO_DEC#(L:MSATR_ILTS_CONSOLE_FO) 5 - 0 max (>L:MSATR_ILTS_CONSOLE_FO)
MSATR_ILTS_CONSOLE_FO_INC#(L:MSATR_ILTS_CONSOLE_FO) 5 + 100 min (>L:MSATR_ILTS_CONSOLE_FO)
MSATR_ILTS_READING_CPT_KNOB_DEC#(L:MSATR_ILTS_READING_CPT) 5 - 0 max (>L:MSATR_ILTS_READING_CPT)
MSATR_ILTS_READING_CPT_KNOB_INC#(L:MSATR_ILTS_READING_CPT) 5 + 100 min (>L:MSATR_ILTS_READING_CPT)
MSATR_ILTS_READING_FO_KNOB_DEC#(L:MSATR_ILTS_READING_FO) 5 - 0 max (>L:MSATR_ILTS_READING_FO)
MSATR_ILTS_READING_FO_KNOB_INC#(L:MSATR_ILTS_READING_FO) 5 + 100 min (>L:MSATR_ILTS_READING_FO)
MSATR_LIGHT_BEACON_OFF#0 (>L:MSATR_ELTS_BEACON)
MSATR_LIGHT_BEACON_ON#1 (>L:MSATR_ELTS_BEACON)
MSATR_LIGHT_BEACON_TOGGLE#(L:MSATR_ELTS_BEACON) ! (>L:MSATR_ELTS_BEACON)
MSATR_LIGHT_DOME_BRT#0 (>L:MSATR_ILTS_DOME)
MSATR_LIGHT_DOME_DIM#1 (>L:MSATR_ILTS_DOME)
MSATR_LIGHT_DOME_OFF#2 (>L:MSATR_ILTS_DOME)
MSATR_LIGHT_FLOOD_DEC#(L:MSATR_ILTS_FLOOD_KNOB, enum) 5 - 0 max (>L:MSATR_ILTS_FLOOD_KNOB, enum)
MSATR_LIGHT_FLOOD_INC#(L:MSATR_ILTS_FLOOD_KNOB, enum) 5 + 100 min (>L:MSATR_ILTS_FLOOD_KNOB, enum)
MSATR_LIGHT_FLOOD_POTENTIOMETER#@ -10.23 / 100 + 0 max 100 min (>L:MSATR_ILTS_FLOOD_KNOB, enum)
MSATR_LIGHT_INTEG_OVH_DEC#(L:MSATR_ILTS_OVHD_KNOB, enum) -- 0 max (>L:MSATR_ILTS_OVHD_KNOB, enum)
MSATR_LIGHT_INTEG_OVH_INC#(L:MSATR_ILTS_OVHD_KNOB, enum) ++ 5 min (>L:MSATR_ILTS_OVHD_KNOB, enum)
MSATR_LIGHT_INTEG_PED_DEC#(L:MSATR_ILTS_MIP_PED_KNOB, enum) -- 0 max (>L:MSATR_ILTS_MIP_PED_KNOB, enum)
MSATR_LIGHT_INTEG_PED_INC#(L:MSATR_ILTS_MIP_PED_KNOB, enum) ++ 5 min (>L:MSATR_ILTS_MIP_PED_KNOB, enum)
MSATR_LIGHT_LAND_LEFT_OFF#0 (>L:MSATR_ELTS_LDG_LEFT) 
MSATR_LIGHT_LAND_LEFT_ON#1 (>L:MSATR_ELTS_LDG_LEFT) 
MSATR_LIGHT_LAND_OFF#0 (>L:MSATR_ELTS_LDG_LEFT) 0 (>L:MSATR_ELTS_LDG_RIGHT)
MSATR_LIGHT_LAND_ON#1 (>L:MSATR_ELTS_LDG_LEFT) 1 (>L:MSATR_ELTS_LDG_RIGHT)
MSATR_LIGHT_LAND_RIGHT_OFF#0 (>L:MSATR_ELTS_LDG_RIGHT) 
MSATR_LIGHT_LAND_RIGHT_ON#1 (>L:MSATR_ELTS_LDG_RIGHT) 
MSATR_LIGHT_LOGO_OFF#0 (>L:MSATR_ELTS_LOGO) 
MSATR_LIGHT_LOGO_ON#1 (>L:MSATR_ELTS_LOGO) 
MSATR_LIGHT_NAV_OFF#0 (>L:MSATR_ELTS_NAV)
MSATR_LIGHT_NAV_ON#1 (>L:MSATR_ELTS_NAV)
MSATR_LIGHT_STROBE_OFF#0 (>L:MSATR_ELTS_STROBE)
MSATR_LIGHT_STROBE_ON#1 (>L:MSATR_ELTS_STROBE)
MSATR_LIGHT_TAXI_TO_OFF#0 (>L:MSATR_ELTS_TAXI_TO)
MSATR_LIGHT_TAXI_TO_ON#1 (>L:MSATR_ELTS_TAXI_TO)
MSATR_LIGHT_WING_OFF#0 (>L:MSATR_ELTS_WING)
MSATR_LIGHT_WING_ON#1 (>L:MSATR_ELTS_WING)
MSATR_MIN_CAB_LT_OFF#0 (>L:MSATR_ILTS_MINCAB)
MSATR_MIN_CAB_LT_ON#1 (>L:MSATR_ILTS_MINCAB)
MSATR_MIN_CAB_LT_TOGGLE#(L:MSATR_ILTS_MINCAB) ! (>L:MSATR_ILTS_MINCAB)
MSATR_STANDBY_COMPASS_UP-DOWN#(L:MSATR_STBY_COMPASS) ! (>L:MSATR_STBY_COMPASS)
MSATR_STBY_COMPASS_LIGHT_OFF#0 (>L:MSATR_STBY_COMPASS)
MSATR_STBY_COMPASS_LIGHT_ON#1 (>L:MSATR_STBY_COMPASS)
MSATR_STORM_LIGHT_SWITCH_OFF#0 (>L:MSATR_ILTS_STORM)
MSATR_STORM_LIGHT_SWITCH_ON#1 (>L:MSATR_ILTS_STORM)
//Microsoft/ATR 42-600, ATR 72-600/MCDU
MSATR_MCDU1_Key_L1_OnPress__short-long_press_#(E:SIMULATION TIME, second) 1 + (>L:PressTime) 
MSATR_MCDU1_Key_L1_OnRelease___short-long_press_#(E:SIMULATION TIME, second) (L:PressTime) < if{  1 (>L:MSATR_MCDU1_L1) 1 (>L:MSATR_MCDU1_INPUT) } els{  1 (>L:MSATR_MCDU1_L1_LONG) 1 (>L:MSATR_MCDU1_INPUT) }
MSATR_MCDU1_Key_L2_OnPress__short-long_press_#(E:SIMULATION TIME, second) 1 + (>L:PressTime)
MSATR_MCDU1_Key_L2_OnRelease___short-long_press_#(E:SIMULATION TIME, second) (L:PressTime) < if{  1 (>L:MSATR_MCDU1_L2) 1 (>L:MSATR_MCDU1_INPUT) } els{  1 (>L:MSATR_MCDU1_L2_LONG) 1 (>L:MSATR_MCDU1_INPUT) }
MSATR_MCDU1_Key_L3_OnPress__short-long_press_#(E:SIMULATION TIME, second) 1 + (>L:PressTime)
MSATR_MCDU1_Key_L3_OnRelease___short-long_press_#(E:SIMULATION TIME, second) (L:PressTime) < if{  1 (>L:MSATR_MCDU1_L3) 1 (>L:MSATR_MCDU1_INPUT) } els{  1 (>L:MSATR_MCDU1_L3_LONG) 1 (>L:MSATR_MCDU1_INPUT) }
MSATR_MCDU2_Key_L1_OnPress__short-long_press_#(E:SIMULATION TIME, second) 1 + (>L:PressTime)
MSATR_MCDU2_Key_L1_OnRelease___short-long_press_#(E:SIMULATION TIME, second) (L:PressTime) < if{  1 (>L:MSATR_MCDU2_L1) 1 (>L:MSATR_MCDU2_INPUT) } els{  1 (>L:MSATR_MCDU2_L1_LONG) 1 (>L:MSATR_MCDU2_INPUT) }
MSATR_MCDU2_Key_L2_OnPress__short-long_press_#(E:SIMULATION TIME, second) 1 + (>L:PressTime) 
MSATR_MCDU2_Key_L2_OnRelease___short-long_press_#(E:SIMULATION TIME, second) (L:PressTime) < if{  1 (>L:MSATR_MCDU2_L2) 1 (>L:MSATR_MCDU2_INPUT) } els{  1 (>L:MSATR_MCDU2_L2_LONG) 1 (>L:MSATR_MCDU2_INPUT) }
MSATR_MCDU2_Key_L3_OnPress__short-long_press_#(E:SIMULATION TIME, second) 1 + (>L:PressTime) 
MSATR_MCDU2_Key_L3_OnRelease___short-long_press_#(E:SIMULATION TIME, second) (L:PressTime) < if{  1 (>L:MSATR_MCDU2_L3) 1 (>L:MSATR_MCDU2_INPUT) } els{  1 (>L:MSATR_MCDU2_L3_LONG) 1 (>L:MSATR_MCDU2_INPUT) }
MSATR_MCDU1_Key_0_Press#1 (>L:MSATR_MCDU1_0) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_1_Press#1 (>L:MSATR_MCDU1_1) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_2_Press#1 (>L:MSATR_MCDU1_2) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_3_Press#1 (>L:MSATR_MCDU1_3) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_4_Press#1 (>L:MSATR_MCDU1_4) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_5_Press#1 (>L:MSATR_MCDU1_5) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_6_Press#1 (>L:MSATR_MCDU1_6) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_7_Press#1 (>L:MSATR_MCDU1_7) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_8_Press#1 (>L:MSATR_MCDU1_8) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_9_Press#1 (>L:MSATR_MCDU1_9) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_A_Press#1 (>L:MSATR_MCDU1_A) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_B_Press#1 (>L:MSATR_MCDU1_B) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_BLANK_Press#1 (>L:MSATR_MCDU1_BLANK) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_BRT_DN_Press#1 (>L:MSATR_MCDU1_BRT_DN) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_BRT_UP_Press#1 (>L:MSATR_MCDU1_BRT_UP) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_C_Press#1 (>L:MSATR_MCDU1_C) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_CLR_Press#(E:SIMULATION TIME, second) 1 + (>L:PressTime) 
MSATR_MCDU1_Key_CLR_Release#(E:SIMULATION TIME, second) (L:PressTime) < if{  1 (>L:MSATR_MCDU1_CLR) 1 (>L:MSATR_MCDU1_INPUT) } els{  1 (>L:MSATR_MCDU1_CLR_LONG) 1 (>L:MSATR_MCDU1_INPUT) }
MSATR_MCDU1_Key_D_Press#1 (>L:MSATR_MCDU1_D) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_DATA_Press#1 (>L:MSATR_MCDU1_DATA) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_DTO_Press#1 (>L:MSATR_MCDU1_DTO) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_E_Press#1 (>L:MSATR_MCDU1_E) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_EXEC_Press#1 (>L:MSATR_MCDU1_EXEC) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_F_Press#1 (>L:MSATR_MCDU1_F) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_FPLN_Press#1 (>L:MSATR_MCDU1_FPLN) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_G_Press#1 (>L:MSATR_MCDU1_G) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_H_Press#1 (>L:MSATR_MCDU1_H) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_I_Press#1 (>L:MSATR_MCDU1_I) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_J_Press#1 (>L:MSATR_MCDU1_J) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_K_Press#1 (>L:MSATR_MCDU1_K) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_L_Press#1 (>L:MSATR_MCDU1_L) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_L1_Press#1 (>L:MSATR_MCDU1_L1) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_L2_Press#1 (>L:MSATR_MCDU1_L2) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_L3_Press#1 (>L:MSATR_MCDU1_L3) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_L4_Press#1 (>L:MSATR_MCDU1_L4) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_L5_Press#1 (>L:MSATR_MCDU1_L5) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_L6_Press#1 (>L:MSATR_MCDU1_L6) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_M_Press#1 (>L:MSATR_MCDU1_M) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_MENU_Press#1 (>L:MSATR_MCDU1_MENU) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_MRK_Press#1 (>L:MSATR_MCDU1_MRK) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_MSG_Press#1 (>L:MSATR_MCDU1_MSG) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_N_Press#1 (>L:MSATR_MCDU1_N) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_NEXT_Press#1 (>L:MSATR_MCDU1_NEXT) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_O_Press#1 (>L:MSATR_MCDU1_O) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_P_Press#1 (>L:MSATR_MCDU1_P) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_PERF_Press#1 (>L:MSATR_MCDU1_PERF) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_PERIOD_Press#1 (>L:MSATR_MCDU1_PERIOD) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_PLUSMINUS_Press#1 (>L:MSATR_MCDU1_PLUSMINUS) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_PREV_Press#1 (>L:MSATR_MCDU1_PREV) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_PROG_Press#1 (>L:MSATR_MCDU1_PROG) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_Q_Press#1 (>L:MSATR_MCDU1_Q) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_R_Press#1 (>L:MSATR_MCDU1_R) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_R1_Press#1 (>L:MSATR_MCDU1_R1) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_R2_Press#1 (>L:MSATR_MCDU1_R2) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_R3_Press#1 (>L:MSATR_MCDU1_R3) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_R4_Press#1 (>L:MSATR_MCDU1_R4) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_R5_Press#1 (>L:MSATR_MCDU1_R5) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_R6_Press#1 (>L:MSATR_MCDU1_R6) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_RMS_Press#1 (>L:MSATR_MCDU1_RMS) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_S_Press#1 (>L:MSATR_MCDU1_S) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_SLASH_Press#1 (>L:MSATR_MCDU1_SLASH) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_SPACE_Press#1 (>L:MSATR_MCDU1_SPACE) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_T_Press#1 (>L:MSATR_MCDU1_T) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_U_Press#1 (>L:MSATR_MCDU1_U) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_V_Press#1 (>L:MSATR_MCDU1_V) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_VNAV_Press#1 (>L:MSATR_MCDU1_VNAV) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_W_Press#1 (>L:MSATR_MCDU1_W) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_X_Press#1 (>L:MSATR_MCDU1_X) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_Y_Press#1 (>L:MSATR_MCDU1_Y) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU1_Key_Z_Press#1 (>L:MSATR_MCDU1_Z) 1 (>L:MSATR_MCDU1_INPUT)
MSATR_MCDU2_Key_0_Press#1 (>L:MSATR_MCDU2_0) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_1_Press#1 (>L:MSATR_MCDU2_1) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_2_Press#1 (>L:MSATR_MCDU2_2) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_3_Press#1 (>L:MSATR_MCDU2_3) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_4_Press#1 (>L:MSATR_MCDU2_4) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_5_Press#1 (>L:MSATR_MCDU2_5) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_6_Press#1 (>L:MSATR_MCDU2_6) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_7_Press#1 (>L:MSATR_MCDU2_7) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_8_Press#1 (>L:MSATR_MCDU2_8) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_9_Press#1 (>L:MSATR_MCDU2_9) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_A_Press#1 (>L:MSATR_MCDU2_A) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_B_Press#1 (>L:MSATR_MCDU2_B) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_BLANK_Press#1 (>L:MSATR_MCDU2_BLANK) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_BRT_DN_Press#1 (>L:MSATR_MCDU2_BRT_DN) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_BRT_UP_Press#1 (>L:MSATR_MCDU2_BRT_UP) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_C_Press#1 (>L:MSATR_MCDU2_C) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_CLR_Press#(E:SIMULATION TIME, second) 1 + (>L:PressTime) 
MSATR_MCDU2_Key_CLR_Release#(E:SIMULATION TIME, second) (L:PressTime) < if{  1 (>L:MSATR_MCDU2_CLR) 1 (>L:MSATR_MCDU2_INPUT) } els{  1 (>L:MSATR_MCDU2_CLR_LONG) 1 (>L:MSATR_MCDU2_INPUT) }
MSATR_MCDU2_Key_D_Press#1 (>L:MSATR_MCDU2_D) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_DATA_Press#1 (>L:MSATR_MCDU2_DATA) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_DTO_Press#1 (>L:MSATR_MCDU2_DTO) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_E_Press#1 (>L:MSATR_MCDU2_E) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_EXEC_Press#1 (>L:MSATR_MCDU2_EXEC) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_F_Press#1 (>L:MSATR_MCDU2_F) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_FPLN_Press#1 (>L:MSATR_MCDU2_FPLN) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_G_Press#1 (>L:MSATR_MCDU2_G) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_H_Press#1 (>L:MSATR_MCDU2_H) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_I_Press#1 (>L:MSATR_MCDU2_I) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_J_Press#1 (>L:MSATR_MCDU2_J) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_K_Press#1 (>L:MSATR_MCDU2_K) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_L_Press#1 (>L:MSATR_MCDU2_L) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_L1_Press#1 (>L:MSATR_MCDU2_L1) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_L2_Press#1 (>L:MSATR_MCDU2_L2) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_L3_Press#1 (>L:MSATR_MCDU2_L3) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_L4_Press#1 (>L:MSATR_MCDU2_L4) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_L5_Press#1 (>L:MSATR_MCDU2_L5) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_L6_Press#1 (>L:MSATR_MCDU2_L6) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_M_Press#1 (>L:MSATR_MCDU2_M) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_MENU_Press#1 (>L:MSATR_MCDU2_MENU) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_MRK_Press#1 (>L:MSATR_MCDU2_MRK) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_MSG_Press#1 (>L:MSATR_MCDU2_MSG) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_N_Press#1 (>L:MSATR_MCDU2_N) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_NEXT_Press#1 (>L:MSATR_MCDU2_NEXT) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_O_Press#1 (>L:MSATR_MCDU2_O) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_P_Press#1 (>L:MSATR_MCDU2_P) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_PERF_Press#1 (>L:MSATR_MCDU2_PERF) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_PERIOD_Press#1 (>L:MSATR_MCDU2_PERIOD) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_PLUSMINUS_Press#1 (>L:MSATR_MCDU2_PLUSMINUS) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_PREV_Press#1 (>L:MSATR_MCDU2_PREV) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_PROG_Press#1 (>L:MSATR_MCDU2_PROG) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_Q_Press#1 (>L:MSATR_MCDU2_Q) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_R_Press#1 (>L:MSATR_MCDU2_R) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_R1_Press#1 (>L:MSATR_MCDU2_R1) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_R2_Press#1 (>L:MSATR_MCDU2_R2) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_R3_Press#1 (>L:MSATR_MCDU2_R3) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_R4_Press#1 (>L:MSATR_MCDU2_R4) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_R5_Press#1 (>L:MSATR_MCDU2_R5) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_R6_Press#1 (>L:MSATR_MCDU2_R6) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_RMS_Press#1 (>L:MSATR_MCDU2_RMS) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_S_Press#1 (>L:MSATR_MCDU2_S) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_SLASH_Press#1 (>L:MSATR_MCDU2_SLASH) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_SPACE_Press#1 (>L:MSATR_MCDU2_SPACE) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_T_Press#1 (>L:MSATR_MCDU2_T) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_U_Press#1 (>L:MSATR_MCDU2_U) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_V_Press#1 (>L:MSATR_MCDU2_V) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_VNAV_Press#1 (>L:MSATR_MCDU2_VNAV) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_W_Press#1 (>L:MSATR_MCDU2_W) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_X_Press#1 (>L:MSATR_MCDU2_X) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_Y_Press#1 (>L:MSATR_MCDU2_Y) 1 (>L:MSATR_MCDU2_INPUT)
MSATR_MCDU2_Key_Z_Press#1 (>L:MSATR_MCDU2_Z) 1 (>L:MSATR_MCDU2_INPUT)
//Microsoft/ATR 42-600, ATR 72-600/Miscellaneous
EFB_PAGE_CHANGER_ENCODER_DEC#(L:EFB_ACTUAL_PAGE) -- 1 max (>L:EFB_ACTUAL_PAGE) (L:EFB_ACTUAL_PAGE) (>L:MSATR_EFB_SET_PAGE)
EFB_PAGE_CHANGER_ENCODER_INC#(L:EFB_ACTUAL_PAGE) ++ 5 min (>L:EFB_ACTUAL_PAGE) (L:EFB_ACTUAL_PAGE) (>L:MSATR_EFB_SET_PAGE) 
MSATR_CAPT_LOUD_SPEAKER_KNOB_DEC#(L:MSATR_COMM_SPEAKER_CPT) 5 - 0 max (>L:MSATR_COMM_SPEAKER_CPT)
MSATR_CAPT_LOUD_SPEAKER_KNOB_INC#(L:MSATR_COMM_SPEAKER_CPT) 5 + 100 min (>L:MSATR_COMM_SPEAKER_CPT)
MSATR_CHRONO_CPT#1 (>L:MSATR_CLCK_CHRONO_1) 
MSATR_CHRONO_FO#1 (>L:MSATR_CLCK_CHRONO_2)
MSATR_FO_LOUD_SPEAKER_KNOB_DEC#(L:MSATR_COMM_SPEAKER_FO) 5 - 0 max (>L:MSATR_COMM_SPEAKER_FO)
MSATR_FO_LOUD_SPEAKER_KNOB_INC#(L:MSATR_COMM_SPEAKER_FO) 5 + 100 min (>L:MSATR_COMM_SPEAKER_FO)
MSATR_OPEN_CLOSE_CABIN_DOOR_SWITCH#(L:MSATR_CKPT_DOOR) 1 == if{ (L:MSATR_DOOR_CABIN) ! (>L:MSATR_DOOR_CABIN) }
MSATR_OPEN_CLOSE_COCKPIT_DOOR_1_SWITCH#(L:MSATR_CKPT_DOOR) 1 == if{ (L:MSATR_DOOR_COCKPIT_1) ! (>L:MSATR_DOOR_COCKPIT_1) }
MSATR_OPEN_CLOSE_COCKPIT_DOOR_2_SWITCH#(L:MSATR_CKPT_DOOR) 1 == if{ (L:MSATR_DOOR_COCKPIT_2) ! (>L:MSATR_DOOR_COCKPIT_2) }
//Microsoft/ATR 42-600, ATR 72-600/Navigation
MSATR_MFD_CPT_RANGE_DEC_-#1 (>L:MSATR_EFIS_RNG_DEC_1)
MSATR_MFD_CPT_RANGE_INC__#1 (>L:MSATR_EFIS_RNG_INC_1)
MSATR_MFD_FO_RANGE_DEC_-#1 (>L:MSATR_EFIS_RNG_DEC_2)
MSATR_MFD_FO_RANGE_INC__#1 (>L:MSATR_EFIS_RNG_INC_2)
//Microsoft/ATR 42-600, ATR 72-600/Radar
MSATR_Weather_Radar_Gain_Knob_Dec#(L:MSATR_WXR_GAIN) -- 0 max (>L:MSATR_WXR_GAIN)
MSATR_Weather_Radar_Gain_Knob_Inc#(L:MSATR_WXR_GAIN) ++ 100 min (>L:MSATR_WXR_GAIN)
MSATR_Weather_Radar_Gain_Knob_Pull#1 (>L:MSATR_WXR_VAR)
MSATR_Weather_Radar_Gain_Knob_Push#0 (>L:MSATR_WXR_VAR) 
MSATR_Weather_Radar_Gain_Knob_Toggle#(L:MSATR_WXR_VAR) ! (>L:MSATR_WXR_VAR)
MSATR_Weather_Radar_Mode_Knob_GMAP#1 (>L:MSATR_WXR_MODE)
MSATR_Weather_Radar_Mode_Knob_OFF#4 (>L:MSATR_WXR_MODE)
MSATR_Weather_Radar_Mode_Knob_SBY#3 (>L:MSATR_WXR_MODE)
MSATR_Weather_Radar_Mode_Knob_TST#0 (>L:MSATR_WXR_MODE)
MSATR_Weather_Radar_Mode_Knob_WX#2 (>L:MSATR_WXR_MODE)
MSATR_Weather_Radar_RCT_Press#1 (>L:MSATR_WXR_RCT) 
MSATR_Weather_Radar_SECT_Press#1 (>L:MSATR_WXR_SECT)
MSATR_Weather_Radar_STAB_Press#1 (>L:MSATR_WXR_STAB)
MSATR_Weather_Radar_TGT_Press#1 (>L:MSATR_WXR_TGT) 
MSATR_Weather_Radar_TILT_Knob_Dec#(L:MSATR_WXR_TILT) 5 - 0 max (>L:MSATR_WXR_TILT)
MSATR_Weather_Radar_TILT_Knob_Inc#(L:MSATR_WXR_TILT) 5 + 100 min (>L:MSATR_WXR_TILT)
//Microsoft/ATR 42-600, ATR 72-600/Radio
MSATR_LEFT_MICROPHONE_HIDE_SWITCH#(L:MSATR_MICROPHONE_LEFT_HIDDEN) ! (>L:MSATR_MICROPHONE_LEFT_HIDDEN)
MSATR_RIGHT_MICROPHONE_HIDE_SWITCH#(L:MSATR_MICROPHONE_RIGHT_HIDDEN) ! (>L:MSATR_MICROPHONE_RIGHT_HIDDEN)
MSATR_MCP1_COM#1 (>L:MSATR_MCP1_COM)
MSATR_MCP1_Key_0_Press#1 (>L:MSATR_MCP1_0)
MSATR_MCP1_Key_1_Press#1 (>L:MSATR_MCP1_1)
MSATR_MCP1_Key_2_Press#1 (>L:MSATR_MCP1_2)
MSATR_MCP1_Key_3_Press#1 (>L:MSATR_MCP1_3)
MSATR_MCP1_Key_4_Press#1 (>L:MSATR_MCP1_4)
MSATR_MCP1_Key_5_Press#1 (>L:MSATR_MCP1_5)
MSATR_MCP1_Key_6_Press#1 (>L:MSATR_MCP1_6)
MSATR_MCP1_Key_7_Press#1 (>L:MSATR_MCP1_7)
MSATR_MCP1_Key_8_Press#1 (>L:MSATR_MCP1_8)
MSATR_MCP1_Key_9_Press#1 (>L:MSATR_MCP1_9)
MSATR_MCP1_Key_DOT_Press#1 (>L:MSATR_MCP1_PERIOD)
MSATR_MCP1_Key_DOWN_Press#1 (>L:MSATR_MCP1_DOWN)
MSATR_MCP1_Key_ENTER_Press#1 (>L:MSATR_MCP1_ENTER)
MSATR_MCP1_Key_ESC_Press#1 (>L:MSATR_MCP1_ESC)
MSATR_MCP1_Key_LEFT_Press#1 (>L:MSATR_MCP1_LEFT) 
MSATR_MCP1_Key_RIGHT_Press#1 (>L:MSATR_MCP1_RIGHT)
MSATR_MCP1_Key_UP_Press#1 (>L:MSATR_MCP1_UP)
MSATR_MCP1_NAV#1 (>L:MSATR_MCP1_NAV)
MSATR_MCP1_SURV#1 (>L:MSATR_MCP1_SURV)
MSATR_MCP2_COM#1 (>L:MSATR_MCP2_COM)
MSATR_MCP2_Key_0_Press#1 (>L:MSATR_MCP2_0)
MSATR_MCP2_Key_1_Press#1 (>L:MSATR_MCP2_1)
MSATR_MCP2_Key_2_Press#1 (>L:MSATR_MCP2_2)
MSATR_MCP2_Key_3_Press#1 (>L:MSATR_MCP2_3)
MSATR_MCP2_Key_4_Press#1 (>L:MSATR_MCP2_4)
MSATR_MCP2_Key_5_Press#1 (>L:MSATR_MCP2_5)
MSATR_MCP2_Key_6_Press#1 (>L:MSATR_MCP2_6)
MSATR_MCP2_Key_7_Press#1 (>L:MSATR_MCP2_7)
MSATR_MCP2_Key_8_Press#1 (>L:MSATR_MCP2_8)
MSATR_MCP2_Key_9_Press#1 (>L:MSATR_MCP2_9)
MSATR_MCP2_Key_DOT_Press#1 (>L:MSATR_MCP2_PERIOD)
MSATR_MCP2_Key_DOWN_Press#1 (>L:MSATR_MCP2_DOWN)
MSATR_MCP2_Key_ENTER_Press#1 (>L:MSATR_MCP2_ENTER)
MSATR_MCP2_Key_ESC_Press#1 (>L:MSATR_MCP2_ESC)
MSATR_MCP2_Key_LEFT_Press#1 (>L:MSATR_MCP2_LEFT) 
MSATR_MCP2_Key_RIGHT_Press#1 (>L:MSATR_MCP2_RIGHT)
MSATR_MCP2_Key_UP_Press#1 (>L:MSATR_MCP2_UP)
MSATR_MCP2_NAV#1 (>L:MSATR_MCP2_NAV)
MSATR_MCP2_SURV#1 (>L:MSATR_MCP2_SURV)
//Microsoft/ATR 42-600, ATR 72-600/Safety
MSATR_AFT_COMPT_LAV_DET_FANS_TOGGLE#(L:MSATR_FIRE_DET_SEL) ! (>L:MSATR_FIRE_DET_SEL)
MSATR_CAPT_WIPER_KNOB_FAST#0 (>L:MSATR_AICE_WIPER_CPT)
MSATR_CAPT_WIPER_KNOB_OFF#2 (>L:MSATR_AICE_WIPER_CPT)
MSATR_CAPT_WIPER_KNOB_SLOW#1 (>L:MSATR_AICE_WIPER_CPT)
MSATR_COMPT_SMK_TEST_PRESS#1 (>L:MSATR_FIRE_SMK_TEST)
MSATR_COMPT_SMK_TEST_RELEASE#0 (>L:MSATR_FIRE_SMK_TEST)
MSATR_DOOR_SW_TEST_OFF#0 (>L:MSATR_DOOR_SW_TEST) 
MSATR_DOOR_SW_TEST_ON#1 (>L:MSATR_DOOR_SW_TEST) 
MSATR_EMER_EXIT_LT_ARM#1 (>L:MSATR_CABS_EMER_EXIT_LTS)
MSATR_EMER_EXIT_LT_DISARM#2 (>L:MSATR_CABS_EMER_EXIT_LTS)
MSATR_EMER_EXIT_LT_ON#0 (>L:MSATR_CABS_EMER_EXIT_LTS)
MSATR_ENGINE_TO_CONFIG_TEST_Button_-_Press#1 (>L:MSATR_ENG_TO_CONFIG, bool)
MSATR_ENGINE_TO_CONFIG_TEST_Button_-_Release#0 (>L:MSATR_ENG_TO_CONFIG, bool)
MSATR_FIRE_1_AGENT_1_TOGGLE#(L:MSATR_FIRE_AGENT_1_1) ! (>L:MSATR_FIRE_AGENT_1_1)
MSATR_FIRE_1_AGENT_2_TOGGLE#(L:MSATR_FIRE_AGENT_2_1) ! (>L:MSATR_FIRE_AGENT_2_1)
MSATR_FIRE_1_LOOP_A_TOGGLE#(L:MSATR_FIRE_LOOP_A_1) ! (>L:MSATR_FIRE_LOOP_A_1)
MSATR_FIRE_1_LOOP_B_TOGGLE#(L:MSATR_FIRE_LOOP_B_1) ! (>L:MSATR_FIRE_LOOP_B_1)
MSATR_FIRE_2_AGENT_1_TOGGLE#(L:MSATR_FIRE_AGENT_1_2) ! (>L:MSATR_FIRE_AGENT_1_2)
MSATR_FIRE_2_AGENT_2_TOGGLE#(L:MSATR_FIRE_AGENT_2_2) ! (>L:MSATR_FIRE_AGENT_2_2)
MSATR_FIRE_2_LOOP_A_TOGGLE#(L:MSATR_FIRE_LOOP_A_2) ! (>L:MSATR_FIRE_LOOP_A_2)
MSATR_FIRE_2_LOOP_B_TOGGLE#(L:MSATR_FIRE_LOOP_B_2) ! (>L:MSATR_FIRE_LOOP_B_2)
MSATR_FO_WIPER_KNOB_FAST#0 (>L:MSATR_AICE_WIPER_FO)
MSATR_FO_WIPER_KNOB_OFF#2 (>L:MSATR_AICE_WIPER_FO)
MSATR_FO_WIPER_KNOB_SLOW#1 (>L:MSATR_AICE_WIPER_FO)
MSATR_MASTER_FIRE_FAULT_1_TEST#2 (>L:MSATR_FIRE_FIRE_FAULT_1)
MSATR_MASTER_FIRE_FAULT_2_TEST#2 (>L:MSATR_FIRE_FIRE_FAULT_2)
MSATR_MASTER_FIRE_FIRE_1_TEST#0 (>L:MSATR_FIRE_FIRE_FAULT_1)
MSATR_MASTER_FIRE_FIRE_2_TEST#0 (>L:MSATR_FIRE_FIRE_FAULT_2)
MSATR_MASTER_FIRE_HANDLE_1_RESET#0 (>L:MSATR_FIRE_HANDLE_1, bool)
MSATR_MASTER_FIRE_HANDLE_1_TURN#1 (>L:MSATR_FIRE_HANDLE_1, bool)
MSATR_MASTER_FIRE_HANDLE_2_RESET#0 (>L:MSATR_FIRE_HANDLE_2, bool)
MSATR_MASTER_FIRE_HANDLE_2_TURN#1 (>L:MSATR_FIRE_HANDLE_2, bool)
MSATR_MASTER_FIRE_SQUIB_TEST_1_PRESS#1 (>L:MSATR_FIRE_SQUIB_TEST_1, bool)
MSATR_MASTER_FIRE_SQUIB_TEST_1_RELEASE#0 (>L:MSATR_FIRE_SQUIB_TEST_1, bool)
MSATR_MASTER_FIRE_SQUIB_TEST_2_PRESS#1 (>L:MSATR_FIRE_SQUIB_TEST_2, bool)
MSATR_MASTER_FIRE_SQUIB_TEST_2_RELEASE#0 (>L:MSATR_FIRE_SQUIB_TEST_2, bool)
MSATR_MASTER_FIRE_TEST_1_CENTER#1 (>L:MSATR_FIRE_FIRE_FAULT_1)
MSATR_MASTER_FIRE_TEST_2_CENTER#1 (>L:MSATR_FIRE_FIRE_FAULT_2)
MSATR_NO_DEVICE_SIGN_SWITCH_OFF#0 (>L:MSATR_CABS_NO_DEVICE)
MSATR_NO_DEVICE_SIGN_SWITCH_ON#1 (>L:MSATR_CABS_NO_DEVICE)
MSATR_RCDR_GND_CTL_Toggle#(L:MSATR_FDR_GNDCTL) ! (>L:MSATR_FDR_GNDCTL)
MSATR_SEAT_BELT_SIGN_SWITCH_OFF#0 (>L:MSATR_CABS_SEAT_BELTS)
MSATR_SEAT_BELT_SIGN_SWITCH_ON#1 (>L:MSATR_CABS_SEAT_BELTS)
MSATR_STICK_PUSHER_SHAKER_TOGGLE#(L:MSATR_YOKE_PUSHER_SHAKER) ! (>L:MSATR_YOKE_PUSHER_SHAKER) 
MSATR_Cockpit_Door_Switch_Close#1 (>L:MSATR_CKPT_DOOR)
MSATR_Cockpit_Door_Switch_Deny#2 (>L:MSATR_CKPT_DOOR)
MSATR_Cockpit_Door_Switch_Open#0 (>L:MSATR_CKPT_DOOR) 1 (>L:MSATR_CKPT_DOOR_OPEN_TRIGGER)
//Microsoft/ATR 42-600, ATR 72-600/Warning
MSATR_MASTER_CAUTION_YELLOW_BUTTON#1 (>L:MSATR_FWS_MASTER_CAUT)
MSATR_MASTER_WARNING_RED_BUTTON#1 (>L:MSATR_FWS_MASTER_WARN)
MSATR_TAWS_TERR_PRESS#(L:MSATR_TAWS_TERR) ! (>L:MSATR_TAWS_TERR)
//Microsoft/All Aircraft/Avionics
AS1000_CONTROL_PAD_0#(>H:AS1000_CONTROL_PAD_0)
AS1000_CONTROL_PAD_1#(>H:AS1000_CONTROL_PAD_1)
AS1000_CONTROL_PAD_2#(>H:AS1000_CONTROL_PAD_2)
AS1000_CONTROL_PAD_3#(>H:AS1000_CONTROL_PAD_3)
AS1000_CONTROL_PAD_4#(>H:AS1000_CONTROL_PAD_4)
AS1000_CONTROL_PAD_5#(>H:AS1000_CONTROL_PAD_5)
AS1000_CONTROL_PAD_6#(>H:AS1000_CONTROL_PAD_6)
AS1000_CONTROL_PAD_7#(>H:AS1000_CONTROL_PAD_7)
AS1000_CONTROL_PAD_8#(>H:AS1000_CONTROL_PAD_8)
AS1000_CONTROL_PAD_9#(>H:AS1000_CONTROL_PAD_9)
AS1000_CONTROL_PAD_A#(>H:AS1000_CONTROL_PAD_A)
AS1000_CONTROL_PAD_B#(>H:AS1000_CONTROL_PAD_B)
AS1000_CONTROL_PAD_BKSP#(>H:AS1000_CONTROL_PAD_BKSP)
AS1000_CONTROL_PAD_C#(>H:AS1000_CONTROL_PAD_C)
AS1000_CONTROL_PAD_CLR#(>H:AS1000_CONTROL_PAD_CLR)
AS1000_CONTROL_PAD_COM#(>H:AS1000_CONTROL_PAD_COM)
AS1000_CONTROL_PAD_CRS#(>H:AS1000_CONTROL_PAD_CRS)
AS1000_CONTROL_PAD_D#(>H:AS1000_CONTROL_PAD_D)
AS1000_CONTROL_PAD_DIRECTTO#(>H:AS1000_CONTROL_PAD_DIRECTTO)
AS1000_CONTROL_PAD_Dot#(>H:AS1000_CONTROL_PAD_Dot)
AS1000_CONTROL_PAD_E#(>H:AS1000_CONTROL_PAD_E)
AS1000_CONTROL_PAD_ENT_Push#(>H:AS1000_CONTROL_PAD_ENT_Push)
AS1000_CONTROL_PAD_F#(>H:AS1000_CONTROL_PAD_F)
AS1000_CONTROL_PAD_FMS_Lower_DEC#(>H:AS1000_CONTROL_PAD_FMS_Lower_DEC)
AS1000_CONTROL_PAD_FMS_Lower_INC#(>H:AS1000_CONTROL_PAD_FMS_Lower_INC)
AS1000_CONTROL_PAD_FMS_Upper_DEC#(>H:AS1000_CONTROL_PAD_FMS_Upper_DEC)
AS1000_CONTROL_PAD_FMS_Upper_INC#(>H:AS1000_CONTROL_PAD_FMS_Upper_INC)
AS1000_CONTROL_PAD_FMS_Upper_PUSH#(>H:AS1000_CONTROL_PAD_FMS_Upper_PUSH)
AS1000_CONTROL_PAD_FPL_Push#(>H:AS1000_CONTROL_PAD_FPL_Push)
AS1000_CONTROL_PAD_G#(>H:AS1000_CONTROL_PAD_G)
AS1000_CONTROL_PAD_H#(>H:AS1000_CONTROL_PAD_H)
AS1000_CONTROL_PAD_Home#(>H:AS1000_CONTROL_PAD_Home)
AS1000_CONTROL_PAD_I#(>H:AS1000_CONTROL_PAD_I)
AS1000_CONTROL_PAD_J#(>H:AS1000_CONTROL_PAD_J)
AS1000_CONTROL_PAD_K#(>H:AS1000_CONTROL_PAD_K)
AS1000_CONTROL_PAD_L#(>H:AS1000_CONTROL_PAD_L)
AS1000_CONTROL_PAD_M#(>H:AS1000_CONTROL_PAD_M)
AS1000_CONTROL_PAD_MENU_Push#(>H:AS1000_CONTROL_PAD_MENU_Push)
AS1000_CONTROL_PAD_N#(>H:AS1000_CONTROL_PAD_N)
AS1000_CONTROL_PAD_NAV#(>H:AS1000_CONTROL_PAD_NAV)
AS1000_CONTROL_PAD_O#(>H:AS1000_CONTROL_PAD_O)
AS1000_CONTROL_PAD_P#(>H:AS1000_CONTROL_PAD_P)
AS1000_CONTROL_PAD_PROC_Push#(>H:AS1000_CONTROL_PAD_PROC_Push)
AS1000_CONTROL_PAD_PlusMinus#(>H:AS1000_CONTROL_PAD_PlusMinus)
AS1000_CONTROL_PAD_Q#(>H:AS1000_CONTROL_PAD_Q)
AS1000_CONTROL_PAD_R#(>H:AS1000_CONTROL_PAD_R)
AS1000_CONTROL_PAD_RANGE_DEC#(>H:AS1000_CONTROL_PAD_RANGE_DEC)
AS1000_CONTROL_PAD_RANGE_INC#(>H:AS1000_CONTROL_PAD_RANGE_INC)
AS1000_CONTROL_PAD_S#(>H:AS1000_CONTROL_PAD_S)
AS1000_CONTROL_PAD_SPC#(>H:AS1000_CONTROL_PAD_SPC)
AS1000_CONTROL_PAD_T#(>H:AS1000_CONTROL_PAD_T)
AS1000_CONTROL_PAD_U#(>H:AS1000_CONTROL_PAD_U)
AS1000_CONTROL_PAD_V#(>H:AS1000_CONTROL_PAD_V)
AS1000_CONTROL_PAD_W#(>H:AS1000_CONTROL_PAD_W)
AS1000_CONTROL_PAD_X#(>H:AS1000_CONTROL_PAD_X)
AS1000_CONTROL_PAD_XPDR#(>H:AS1000_CONTROL_PAD_XPDR)
AS1000_CONTROL_PAD_Y#(>H:AS1000_CONTROL_PAD_Y)
AS1000_CONTROL_PAD_Z#(>H:AS1000_CONTROL_PAD_Z)
//Microsoft/All Aircraft/Camera
VIEW_CAMERA_SELECT_1#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 0 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
VIEW_CAMERA_SELECT_2#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 1 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
VIEW_CAMERA_SELECT_3#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
VIEW_CAMERA_SELECT_4#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 3 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
VIEW_CAMERA_SELECT_5#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 4 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
VIEW_CAMERA_SELECT_6#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 5 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
VIEW_CAMERA_SELECT_7#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 6 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
VIEW_CAMERA_SELECT_8#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 7 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
VIEW_CAMERA_SELECT_9#2 (>A:CAMERA STATE,Enum) 3 (>A:CAMERA SUBSTATE,Enum) 2 (>A:CAMERA VIEW TYPE AND INDEX:0,Enum) 8 (>A:CAMERA VIEW TYPE AND INDEX:1,Enum)
//Microsoft/Bell 407/Air Condition / Pressurization
Bell_407_Knob_Ac_Temp_Dec#(L:knobAcTemp,celsius) 0 > if{ (L:knobAcTemp,celsius) 2 - (>L:knobAcTemp,celsius) }
Bell_407_Knob_Ac_Temp_Inc#(L:knobAcTemp,celsius) 100 < if{ (L:knobAcTemp,celsius) 2 + (>L:knobAcTemp,celsius) }
Bell_407_Switch_Aircond_Aft_Toggle#(L:switchAircondAft,bool) ! (>L:switchAircondAft,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Aircond_Fwd_Toggle#(L:switchAircondFwd,bool) ! (>L:switchAircondFwd,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Aircond_Mode_Dec#(L:switchAircondMode,enum) 2 < if{ (L:switchAircondMode,enum) ++ (>L:switchAircondMode,enum) )  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Aircond_Mode_Inc#(L:switchAircondMode,enum) 0 > if{ (L:switchAircondMode,enum) -- (>L:switchAircondMode,enum) }  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Heater_Toggle#(L:switchHeater,bool) ! (>L:switchHeater,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Vent_Knob_Copilot_Dec#(L:ventKnobCopilot,number) 0 > if{ (L:ventKnobCopilot,number) 4 - (>L:ventKnobCopilot,number) }  (L:pullKnobSound,enum) ++ (>L:pullKnobSound,enum)
Bell_407_Vent_Knob_Copilot_Inc#(L:ventKnobCopilot,number) 100 < if{ (L:ventKnobCopilot,number) 4 + (>L:ventKnobCopilot,number) }  (L:pullKnobSound,enum) ++ (>L:pullKnobSound,enum)
Bell_407_Vent_Knob_Pilot_Dec#(L:ventKnobPilot,number) 0 > if{ (L:ventKnobPilot,number) 4 - (>L:ventKnobPilot,number) }  (L:pullKnobSound,enum) ++ (>L:pullKnobSound,enum)
Bell_407_Vent_Knob_Pilot_Inc#(L:ventKnobPilot,number) 100 < if{ (L:ventKnobPilot,number) 4 + (>L:ventKnobPilot,number) }  (L:pullKnobSound,enum) ++ (>L:pullKnobSound,enum)
Bell_407_Window_Vent_Copilot_Dec#(L:windowVentCopilot,number) 0 > if{ (L:windowVentCopilot,number) 4 - (>L:windowVentCopilot,number) }  (L:windowVentSound,enum) ++ (>L:windowVentSound,enum)
Bell_407_Window_Vent_Copilot_Inc#(L:windowVentCopilot,number) 100 < if{ (L:windowVentCopilot,number) 4 + (>L:windowVentCopilot,number) }  (L:windowVentSound,enum) ++ (>L:windowVentSound,enum)
Bell_407_Window_Vent_Pilot_Dec#(L:windowVentPilot,number) 100 < if{ (L:windowVentPilot,number) 4 + (>L:windowVentPilot,number) }  (L:windowVentSound,enum) ++ (>L:windowVentSound,enum)
Bell_407_Window_Vent_Pilot_Inc#(L:windowVentPilot,number) 0 > if{ (L:windowVentPilot,number) 4 - (>L:windowVentPilot,number) }  (L:windowVentSound,enum) ++ (>L:windowVentSound,enum)
//Microsoft/Bell 407/Anti-Ice
Bell_407_Switch_Defog_Toggle#(L:switchDefog,bool) ! (>L:switchDefog,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Eng_Deice_Toggle#(>K:ANTI_ICE_TOGGLE,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Pitot_Heat_Toggle#(>K:PITOT_HEAT_TOGGLE)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Audio
Bell_407_Button_Audio_Com1_Xmit_Toggle#(>K:COM1_TRANSMIT_SELECT)  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Audio_Com2_Xmit_Toggle#(>K:COM2_TRANSMIT_SELECT)  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Audio_Ics_Press#1 (>L:buttonAudioIcs,bool)  (>K:TOGGLE_ICS)  (L:buttonSound,enum) ++ (>L:buttonSound,enum)
Bell_407_Button_Audio_Ics_Release#0 (>L:buttonAudioIcs,bool)
Bell_407_Button_Audio_Mute_Press#1 (>L:buttonAudioMute,bool)  (L:audioMute,bool) ! (>L:audioMute,bool)  (L:buttonSound,enum) ++ (>L:buttonSound,enum)
Bell_407_Button_Audio_Mute_Release#0 (>L:buttonAudioMute,bool)
Bell_407_Button_Audio_Mute_Toggle#(A:MARKER BEACON TEST MUTE, Bool) ! (>K:MARKER_BEACON_TEST_MUTE)  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Audio_Tel_Press#1 (>L:buttonAudioTel,bool)  (L:audioTelephoneMode,bool) ! (>L:audioTelephoneMode,bool)  (L:buttonSound,enum) ++ (>L:buttonSound,enum)
Bell_407_Button_Audio_Tel_Release#0 (>L:buttonAudioTel,bool)
//Microsoft/Bell 407/Avionics
Bell_407_Switch_Avionics_Master_Toggle#(>K:TOGGLE_AVIONICS_MASTER)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Fdr_Toggle#(L:switchAuxSys,bool) ! (>L:switchAuxSys,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Controls
Bell_407_Collective_Arm_Copilot_Dec#(>K:THROTTLE_DECR)  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)
Bell_407_Collective_Arm_Copilot_Inc#(>K:THROTTLE_INCR)  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)
Bell_407_Collective_Arm_Pilot_Dec#(>K:THROTTLE_DECR)  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)
Bell_407_Collective_Arm_Pilot_Inc#(>K:THROTTLE_INCR)  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)
Bell_407_Collective_Grip_Copilot_Dec#(L:CollectiveGrip,percent) 0 > if{ (L:CollectiveGrip,percent) -- (>L:CollectiveGrip,percent) }  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)
Bell_407_Collective_Grip_Copilot_Inc#(L:CollectiveGrip,percent) 100 < if{ (L:CollectiveGrip,percent) ++ (>L:CollectiveGrip,percent) }  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)
Bell_407_Collective_Grip_Pilot_Dec#(L:CollectiveGrip,percent) 0 > if{  15 80 (L:CollectiveGrip,percent) rng if{ (L:CollectiveGrip,percent) 4 - (>L:CollectiveGrip,percent) }  els{ (L:CollectiveGrip,percent) -- (>L:CollectiveGrip,percent) }  }  (L:CollectiveGrip,percent) 163.83 * (>K:PROP_PITCH_SET)  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)
Bell_407_Collective_Grip_Pilot_Inc#(L:CollectiveGrip,percent) 100 < if{ 15 80 (L:CollectiveGrip,percent) rng if{ (L:CollectiveGrip,percent) 4 + (>L:CollectiveGrip,percent) }  els{ (L:CollectiveGrip,percent) ++ (>L:CollectiveGrip,percent) }  }  (L:CollectiveGrip,percent) 163.83 * (>K:PROP_PITCH_SET)  (L:collectiveSound,enum) ++ (>L:collectiveSound,enum)
Bell_407_Knob_Att_Cage_Toggle#(L:knobAttCage,bool) ! (>L:knobAttCage,bool)  (>K:ATTITUDE_CAGE_BUTTON)  (L:knobAttCageSound,enum) ++ (>L:knobAttCageSound,enum)
Bell_407_Knob_Attitude_Bars_Dec#(>K:ATTITUDE_BARS_POSITION_UP)
Bell_407_Knob_Attitude_Bars_Inc#(>K:ATTITUDE_BARS_POSITION_DOWN)
Bell_407_Lever_Rotor_Brake_Press#16383 (>K:AXIS_ROTOR_BRAKE_SET)  (L:leverSound,enum) ++ (>L:leverSound,enum)
Bell_407_Lever_Rotor_Brake_Release#0 (>K:AXIS_ROTOR_BRAKE_SET)  (L:leverSound,enum) ++ (>L:leverSound,enum)
Bell_407_Switch_Att_Gyro_Toggle#(L:switchAttGyro,bool) ! (>L:switchAttGyro,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Autotrim_Toggle#(L:switchAutotrim,bool) ! (>L:switchAutotrim,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Force_Trim_Toggle#(L:switchForceTrim,bool) ! (>L:switchForceTrim,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Turncoord_Toggle#(L:switchturnCoord,bool) ! (>L:switchturnCoord,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Electrical
Bell_407_Switch_Battery_Toggle#(>K:TOGGLE_MASTER_BATTERY)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Generator_Dec#(L:switchGenerator,enum) 2 < if{ (L:switchGenerator,enum) ++ (>L:switchGenerator,enum) }  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Generator_Inc#(L:switchGenerator,enum) 0 > if{ (L:switchGenerator,enum) -- (>L:switchGenerator,enum) )  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Engine
Bell_407_Button_Fadec_Mode_Press#1 (>L:buttonFadecMode,bool)  (A:CIRCUIT ON:1,bool) if{ (L:fadecMode,bool) ! (>L:fadecMode,bool) }  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Fadec_Mode_Release#0 (>L:buttonFadecMode,bool)
Bell_407_Switch_Particle_Sep_Toggle#(L:switchParicleSep,bool) ! (>L:switchParicleSep,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Starter_Collective_Press#(L:collGripState,enum) 1 == (A:ENG N1 RPM:1,percent) 50 < and if{ 1 (>K:STARTER1_SET) }  1 (>L:switchStarter,bool)
Bell_407_Switch_Starter_Collective_Release#0 (>L:switchStarter,bool)
//Microsoft/Bell 407/Flight Instrumentation
Bell_407_Knob_Altimeter_Feet_Dec#(L:kohlsmanKnob,number) ++ (>L:kohlsmanKnob,number)  (L:kohlsmanKnob,number) 100 > if{ 0 (>L:kohlsmanKnob,number) }  (>K:KOHLSMAN_INC)
Bell_407_Knob_Altimeter_Feet_Inc#(L:kohlsmanKnob,number) -- (>L:kohlsmanKnob,number)  (L:kohlsmanKnob,number) 0 < if{ 100 (>L:kohlsmanKnob,number) }  (>K:KOHLSMAN_DEC)
//Microsoft/Bell 407/Fuel
Bell_407_Button_Fuel_Qty_Press#1 (>L:buttonFuelQty,bool)  (A:CIRCUIT ON:1,bool) if{ 1 (>L:fuelQtyMode,bool) }  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Fuel_Qty_Release#0 (>L:buttonFuelQty,bool)  0 (>L:fuelQtyMode,bool)
Bell_407_Switch_Float_Press#1 (>L:buttonFloatTest,bool)
Bell_407_Switch_Float_Release#0 (>L:buttonFloatTest,bool)
Bell_407_Switch_Fuel_Valve_Cover_Toggle#(A:FUELSYSTEM VALVE SWITCH:1,bool) if{ (L:switchFuelValveCover,bool) ! (>L:switchFuelValveCover,bool) }  (L:switchCoverSound,number) ++ (>L:switchCoverSound,number)
Bell_407_Switch_Fuel_Valve_Toggle#(L:switchFuelValveCover,bool) if{ 1 (>K:FUELSYSTEM_VALVE_TOGGLE) }  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Fuelboost_Left_Toggle#1 (>K:FUELSYSTEM_PUMP_TOGGLE)  3 (>K:FUELSYSTEM_PUMP_TOGGLE)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Fuelboost_Right_Toggle#2 (>K:FUELSYSTEM_PUMP_TOGGLE)  4 (>K:FUELSYSTEM_PUMP_TOGGLE)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Hydraulic
Bell_407_Switch_Hydraulic_Toggle#1 (>K:HYDRAULIC_SWITCH_TOGGLE)  (L:HydSwitchTest,bool) ! (>L:HydSwitchTest,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Light
Bell_407_Switch_Light_Taxi_Toggle#(>K:LANDING_LIGHTS_TOGGLE)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Lights
Bell_407_Knob_Light_Instr_Dec#(A:LIGHT POTENTIOMETER:4,percent) 100 < if{ (A:LIGHT POTENTIOMETER:4,percent) ++ (>K:LIGHT_POTENTIOMETER_4_SET) }
Bell_407_Knob_Light_Instr_Inc#(A:LIGHT POTENTIOMETER:4,percent) 0 > if{ (A:LIGHT POTENTIOMETER:4,percent) -- (>K:LIGHT_POTENTIOMETER_4_SET) }
Bell_407_Rotation_Panel_Light_Dec#(L:panelLightTilt,number) 5 - 0 max (>L:panelLightTilt,number)
Bell_407_Rotation_Panel_Light_Inc#(L:panelLightTilt,number) 5 + 100 min (>L:panelLightTilt,number)
Bell_407_Switch_Beacon_Light_Toggle#(>K:TOGGLE_BEACON_LIGHTS)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Light_Cabin_Pass_Dec#(L:switchLtsCabinPass,enum) 2 < if{ (L:switchLtsCabinPass,enum) ++ (>L:switchLtsCabinPass,enum) }
Bell_407_Switch_Light_Cabin_Pass_Inc#(L:switchLtsCabinPass,enum) 0 > if{ (L:switchLtsCabinPass,enum) -- (>L:switchLtsCabinPass,enum) }
Bell_407_Switch_Light_Landing_Dec#(L:switchLandingLight,enum) 2 < if{ (L:switchLandingLight,enum) ++ (>L:switchLandingLight,enum) }
Bell_407_Switch_Light_Landing_Inc#(L:switchLandingLight,enum) 0 > if{ (L:switchLandingLight,enum) -- (>L:switchLandingLight,enum) }
Bell_407_Switch_Light_Logo_Toggle#(>K:TOGGLE_LOGO_LIGHTS)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Light_Pulse_Toggle#(>K:TOGGLE_RECOGNITION_LIGHTS)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Panel_Light_Dec#(A:LIGHT POTENTIOMETER:5,percent) 5 - 0 max (>K:LIGHT_POTENTIOMETER_5_SET)
Bell_407_Switch_Panel_Light_Inc#(A:LIGHT POTENTIOMETER:5,percent) 5 + 100 min (>K:LIGHT_POTENTIOMETER_5_SET)
Bell_407_Switch_Pos_Light_Toggle#(>K:TOGGLE_NAV_LIGHTS)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Strobe_Light_Toggle#(>K:STROBES_TOGGLE)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Miscellaneous
Bell_407_Button_Ann_Test_Press#1 (>L:buttonAnnTest,bool)  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Ann_Test_Release#0 (>L:buttonAnnTest,bool)
Bell_407_Button_Chrono_Control_Press#1 (>L:buttonChronoControl,bool)  (L:Running chrono,bool) ! (>L:Running chrono,bool)  (L:buttonSound,enum) ++ (>L:buttonSound,enum)
Bell_407_Button_Chrono_Control_Release#0 (>L:buttonChronoControl,bool)
Bell_407_Button_Chrono_Mode_Press#1 (>L:buttonChronoMode,bool)  (L:ChronoMode,bool) ! (>L:ChronoMode,bool)  (L:buttonSound,enum) ++ (>L:buttonSound,enum)
Bell_407_Button_Chrono_Mode_Release#0 (>L:buttonChronoMode,bool)
Bell_407_Button_Chrono_Reset_Press#1 (>L:buttonChronoReset,bool)  (L:buttonSound,enum) ++ (>L:buttonSound,enum)
Bell_407_Button_Chrono_Reset_Release#0 (>L:buttonChronoReset,bool)
Bell_407_Button_Clock_Oatvolt_Press#1 (>L:buttonChronoOatVolt,bool)  (L:ChronoOatVolt,bool) ! (>L:ChronoOatVolt,bool)  (L:buttonSound,enum) ++ (>L:buttonSound,enum)
Bell_407_Button_Clock_Oatvolt_Release#0 (>L:buttonChronoOatVolt,bool)
Bell_407_Button_Insrt_Test_Press#1 (>L:buttonInstrTest,bool)  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Insrt_Test_Release#0 (>L:buttonInstrTest,bool)
Bell_407_Button_Lcd_Test_Press#1 (>L:buttonLcdTest,bool)  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Lcd_Test_Release#0 (>L:buttonLcdTest,bool)
Bell_407_Button_Overspeed_Test_Press#1 (>L:buttonOvrspdTest,bool)  (A:CIRCUIT ON:1,bool) if{ 1 (>L:testOvrspd,bool) }  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Overspeed_Test_Release#0 (>L:testOvrspd,bool)  0 (>L:buttonOvrspdTest,bool)
Bell_407_Knob_Defrost_Adjust_Dec#(L:knobDefrost,number) 100 < if{ (L:knobDefrost,number) 2 + (>L:knobDefrost,number) }
Bell_407_Knob_Defrost_Adjust_Inc#(L:knobDefrost,number) 0 > if{ (L:knobDefrost,number) 2 - (>L:knobDefrost,number) }
Bell_407_Knob_Friction_Adjust_Dec#(L:knobFriction,number) 100 < if{ (L:knobFriction,number) 2 + (>L:knobFriction,number) }
Bell_407_Knob_Friction_Adjust_Inc#(L:knobFriction,number) 0 > if{ (L:knobFriction,number) 2 - (>L:knobFriction,number) }
Bell_407_Switch_Cargo_Release_Toggle#(L:switchCargoRelease,bool) ! (>L:switchCargoRelease,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Navigation
Bell_407_Button_Xpndr_Vfr_Press#1 (>L:buttonXpndrVfr,bool)  (L:buttonXpndrVfrPressed,bool) ! (A:CIRCUIT ON:1,bool) and if{ 1 (>L:xpndrVfr,bool) }  1 (>L:buttonXpndrVfrPressed,bool)  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Xpndr_Vfr_Release#0 (>L:buttonXpndrVfr,bool)  0 (>L:buttonXpndrVfrPressed,bool)  0 (>L:xpndrVfr,bool)
Bell_407_Knob_Adf_Gauge_Dec#(L:adfObs,degrees) ++ (>L:adfObs,degrees)  (L:adfObs,degrees) 360 > if{ 1 (>L:adfObs,degrees) }
Bell_407_Knob_Adf_Gauge_Inc#(L:adfObs,degrees) -- (>L:adfObs,degrees)  (L:adfObs,degrees) 1 < if{ 360 (>L:adfObs,degrees) }
Bell_407_Knob_Hsi_Mrk_Dec#(L:needleHsiMarker,number) ++ (>L:needleHsiMarker,number)  (L:needleHsiMarker,number) 360 > if{ 0 (>L:needleHsiMarker,number) }
Bell_407_Knob_Hsi_Mrk_Inc#(L:needleHsiMarker,number) -- (>L:needleHsiMarker,number)  (L:needleHsiMarker,number) 0 < if{ 360 (>L:needleHsiMarker,number) }
Bell_407_Knob_Hsi_Obs_Dec#(>K:VOR1_OBI_INC)
Bell_407_Knob_Hsi_Obs_Inc#(>K:VOR1_OBI_DEC)
Bell_407_Knob_Vor_Obs_Dec#(>K:VOR2_OBI_INC)
Bell_407_Knob_Vor_Obs_Inc#(>K:VOR2_OBI_DEC)
Bell_407_Switch_Primary_Compass_Mode_Toggle#(L:switchPrimaryCompassMode,bool) ! (>L:switchPrimaryCompassMode,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Radio
Bell_407_Switch_Broadcast_Master_Toggle#(L:switchBroadcastMaster,bool) ! (>L:switchBroadcastMaster,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
Bell_407_Switch_Radio_Alt_Toggle#(L:switchRadAlt,bool) ! (>L:switchRadAlt,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Safety
Bell_407_Button_Eng_Fire_Press#1 (>L:buttonFireTest,bool)
Bell_407_Button_Eng_Fire_Release#0 (>L:buttonFireTest,bool)
Bell_407_Switch_Elt_Toggle#(>K:ELT_TOGGLE)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/Bell 407/Warning
Bell_407_Button_Horn_Mute_Press#1 (>L:buttonHornMute,bool)  (A:CIRCUIT ON:1,bool) if{ 1 (>L:hornMuted,bool) }  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Horn_Mute_Release#0 (>L:buttonHornMute,bool)
Bell_407_Button_Horn_Test_Press#1 (>L:buttonHornTest,bool)  (L:buttonSound,number) ++ (>L:buttonSound,number)
Bell_407_Button_Horn_Test_Release#0 (>L:buttonHornTest,bool)
Bell_407_Switch_Light_Caut_Mode_Toggle#(L:switchCautLtsMode,bool) ! (>L:switchCautLtsMode,bool)  (L:switchSound,number) ++ (>L:switchSound,number)
//Microsoft/C172 (2024)/Electrical
Avionics_bus_1_-_Off#(>B:ELECTRICAL_LINE_BUS_1_TO_AVIONICS_BUS_1_OFF)
Avionics_bus_1_-_On#(>B:ELECTRICAL_LINE_BUS_1_TO_AVIONICS_BUS_1_ON)
Avionics_bus_2_-_Off#(>B:ELECTRICAL_LINE_BUS_2_TO_AVIONICS_BUS_2_OFF)
Avionics_bus_2_-_On#(>B:ELECTRICAL_LINE_BUS_2_TO_AVIONICS_BUS_2_ON)
Cabin_power_12V_-_Off#(>B:ELECTRICAL_ELECTRICAL_SWITCH_POWER12V_ON)
Cabin_power_12V_-_Off#(>B:ELECTRICAL_ELECTRICAL_SWITCH_POWER12V_OFF)
Main_alternator_-_Off#(>B:ELECTRICAL_ALTERNATOR_1_OFF)
Main_alternator_-_On#(>B:ELECTRICAL_ALTERNATOR_1_ON)
Main_battery_-_Off#(>B:MASTER_BATTERY_OFF)
Main_battery_-_On#(>B:MASTER_BATTERY_ON)
Standby_battery_-_Arm#0 (>B:ELECTRICAL_BATTERY_STBY_2_Set)
Standby_battery_-_Off#1 (>B:ELECTRICAL_BATTERY_STBY_2_Set)
Standby_battery_-_Test#2 (>B:ELECTRICAL_BATTERY_STBY_2_Set)
//Microsoft/CJ4 (2024)/Anti-Ice
ENG_ONLY_L_-_Toggle#(>B:DEICE_ENGINE_1_TOGGLE)
ENG_ONLY_R_-_Toggle#(>B:DEICE_ENGINE_2_TOGGLE)
PITOT_1_-_Toggle#(>B:DEICE_PITOT_1_TOGGLE)
PITOT_2_-_Toggle#(>B:DEICE_PITOT_2_TOGGLE)
TAIL_L_-_Toggle#(>B:CJ4_AVIONICS_DEICE_PUSH_TAIL_1_TOGGLE)
TAIL_R_-_Toggle#(>B:CJ4_AVIONICS_DEICE_PUSH_TAIL_2_TOGGLE)
WING_LIGHT_-_Toggle#(>B:LIGHTING_WING_1_TOGGLE)
WING_ENG_L_-_Toggle#(>B:DEICE_AIRFRAME_1_TOGGLE)
WING_ENG_R_-_Toggle#(>B:DEICE_AIRFRAME_2_TOGGLE)
XFLOW_-_Toggle#(>B:CJ4_AVIONICS_DEICE_PUSH_XFLOW_PUSH)
//Microsoft/CJ4 (2024)/Anti-ice
Pitot_heat_-_Off#(>B:PITOT_HEAT_OFF)
Pitot_heat_-_On#(>B:PITOT_HEAT_ON)
//Microsoft/CJ4 (2024)/Autopilot
ALT_-_Dec#100 (>B:AUTOPILOT_ALTITUDE_Dec)
ALT_-_Inc#100 (>B:AUTOPILOT_ALTITUDE_Inc)
ALT_-_Toggle#(>B:AUTOPILOT_ALTITUDE_BUTTON_TOGGLE)
ALT_SYNC_-_Push#(>B:AUTOPILOT_ALTITUDE_ALERT_CANCEL_PUSH)
AP_-_Toggle#(>B:AUTOPILOT_AP_1_TOGGLE)
APPR_-_Toggle#(>B:AUTOPILOT_APPROACH_BUTTON_TOGGLE)
BC_-_Toggle#(>B:AUTOPILOT_BACKCOURSE_BUTTON_TOGGLE)
CRS1_-_Dec#1 (>B:AUTOPILOT_COURSE_DYN_1_Dec)
CRS1_-_Inc#1 (>B:AUTOPILOT_COURSE_DYN_1_Inc)
CRS1_-_Push#(>B:AUTOPILOT_COURSE_DYN_1_SYNC_PUSH)
CRS2_-_Dec#1 (>B:AUTOPILOT_COURSE_DYN_2_Dec)
CRS2_-_Inc#1 (>B:AUTOPILOT_COURSE_DYN_2_Inc)
CRS2_SYNC_-_Push#(>B:AUTOPILOT_COURSE_DYN_2_SYNC_PUSH)
DISC_-_Toggle#(>B:AUTOPILOT_AP_DISCONNECT_1_TOGGLE)
FD1_-_Toggle#(>B:AUTOPILOT_FD_1_MODE_TOGGLE)
FD2_-_Toggle#(>B:AUTOPILOT_FD_2_MODE_TOGGLE)
FLC_-_Toggle#(>B:AUTOPILOT_FLC_BUTTON_TOGGLE)
HALF_BANK_-_Toggle#(>B:AUTOPILOT_BANK_BUTTON_TOGGLE)
HDG_-_Dec#1 (>B:AUTOPILOT_HEADING_Dec)
HDG_-_Inc#1 (>B:AUTOPILOT_HEADING_Inc)
HDG_-_Toggle#(>B:AUTOPILOT_HEADING_MODE_TOGGLE)
HDG_SYNC_-_Push#(>B:AUTOPILOT_HEADING_SYNC_PUSH)
NAV_-_Toggle#(>B:AUTOPILOT_NAV_MODE_TOGGLE)
SPEED_-_Dec#1 (>B:AUTOPILOT_SPEED_Dec)
SPEED_-_Inc#1 (>B:AUTOPILOT_SPEED_Inc)
SPEED_-_Push#(>B:AUTOPILOT_SPEEDMACH_MODE_PUSH)
TOGA_-_Toggle#(>B:ENGINE_TOGA_PUSH_TOGGLE)
VNAV_-_Toggle#(>B:AUTOPILOT_VNAV_MODE_TOGGLE)
VS_-_Dec#100 (>B:AUTOPILOT_VERTICALSPEED_Dec)
VS_-_Inc#100 (>B:AUTOPILOT_VERTICALSPEED_Inc)
VS_-_Toggle#(>B:AUTOPILOT_VS_MODE_TOGGLE)
XFR_-_Toggle#(>B:AUTOPILOT_TRANSFER_MODE_TOGGLE)
YD_-_Toggle#(>B:AUTOPILOT_YD_BUTTON_TOGGLE)
//Microsoft/CJ4 (2024)/Avionics
0_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_0_PUSH)
0_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_0_PUSH)
1_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_1_PUSH)
1_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_1_PUSH)
2_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_2_PUSH)
2_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_2_PUSH)
3_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_3_PUSH)
3_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_3_PUSH)
4_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_4_PUSH)
4_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_4_PUSH)
5_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_5_PUSH)
5_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_5_PUSH)
6_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_6_PUSH)
6_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_6_PUSH)
7_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_7_PUSH)
7_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_7_PUSH)
8_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_8_PUSH)
8_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_8_PUSH)
9_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_9_PUSH)
9_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_9_PUSH)
A_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_A_PUSH)
A_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_A_PUSH)
B_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_B_PUSH)
B_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_B_PUSH)
BARO_-_Backup_-_Dec#1 (>B:AUTOPILOT_BARO_3_Dec)
BARO_-_Backup_-_Inc#1 (>B:AUTOPILOT_BARO_3_Inc)
BARO_-_Pilot_-_Dec#1 (>B:AUTOPILOT_BARO_1_Dec)
BARO_-_Pilot_-_Inc#1 (>B:AUTOPILOT_BARO_1_Inc)
BARO_STD_-_Push#1 (>B:AUTOPILOT_BARO_1_STD_Set)
BRT_-_Co-pilot_-_Push#(>B:FMC_BUTTON_BRT_DIM_BRIGHT)
BRT_-_Pilot_-_Push#(>B:FMC_BUTTON_BRT_DIM_BRIGHT)
C_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_C_PUSH)
C_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_C_PUSH)
CAS_PAGE_-_Co-Pilot_-_Push#(>B:AS3000_LOWER_2_CAS_PAGE_PUSH)
CAS_PAGE_-_Pilot_-_Push#(>B:AS3000_LOWER_1_CAS_PAGE_PUSH)
CLR_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_CLR_PUSH)
CLR_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_CLR_PUSH)
D_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_D_PUSH)
D_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_D_PUSH)
DATA_-_Co-pilot_-_Dec#1 (>B:AS3000_LOWER_2_DATA_Dec)
DATA_-_Co-pilot_-_Dec#1 (>B:AS3000_UPPER_2_DATA_Dec)
DATA_-_Co-pilot_-_Inc#1 (>B:AS3000_LOWER_2_DATA_Inc)
DATA_-_Co-pilot_-_Inc#1 (>B:AS3000_UPPER_2_DATA_Inc)
DATA_-_Co-pilot_-_Long#(>B:AS3000_LOWER_2_DATA_BUTTON_PUSH)
DATA_-_Co-pilot_-_Short#(>B:AS3000_LOWER_2_DATA_BUTTON_PUSH)
DATA_-_Pilot_-_Dec#1 (>B:AS3000_LOWER_1_DATA_Dec)
DATA_-_Pilot_-_Dec#1 (>B:AS3000_UPPER_1_DATA_Dec)
DATA_-_Pilot_-_Inc#1 (>B:AS3000_LOWER_1_DATA_Inc)
DATA_-_Pilot_-_Inc#1 (>B:AS3000_UPPER_1_DATA_Inc)
DATA_-_Pilot_-_Long#(>B:AS3000_LOWER_1_DATA_BUTTON_PUSH)
DATA_-_Pilot_-_Short#(>B:AS3000_LOWER_1_DATA_BUTTON_PUSH)
DEL_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_CLR_PUSH_LONG)
DEL_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_CLR_PUSH_LONG)
DEPARR_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_DEPARR_PUSH)
DEPARR_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_DEPARR_PUSH)
DIM_-_Co-pilot_-_Push#(>B:FMC_BUTTON_BRT_DIM_DIM)
DIM_-_Pilot_-_Push#(>B:FMC_BUTTON_BRT_DIM_DIM)
DIR_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_DIR_PUSH)
DIR_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_DIR_PUSH)
DIV_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_DIV_PUSH)
DIV_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_DIV_PUSH)
DOT_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_DOT_PUSH)
DOT_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_DOT_PUSH)
DSPL_MENU_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_DSPL_MENU_PUSH)
DSPL_MENU_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_DSPL_MENU_PUSH)
Down_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_NAVIGATION_Y_DOWN)
Down_-_pilot_-_Push#(>B:AS3000_LOWER_1_NAVIGATION_Y_DOWN)
E_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_E_PUSH)
E_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_E_PUSH)
ENG_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_ENG_PUSH)
ENG_-_Pilot_-_Push#(>B:AS3000_LOWER_1_ENG_PUSH)
ESC_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_ESC_PUSH)
ESC_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_ESC_PUSH)
ESC_-_Pilot_-_Push#(>B:AS3000_LOWER_1_ESC_PUSH)
ESC_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_ESC_PUSH)
ET_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_ET_PUSH)
ET_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_ET_PUSH)
EXEC_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_EXEC_PUSH)
EXEC_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_EXEC_PUSH)
F_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_F_PUSH)
F_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_F_PUSH)
FPLN_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_FPLN_PUSH)
FPLN_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_FPLN_PUSH)
FRMT_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_FRMT_PUSH)
FRMT_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_FRMT_PUSH)
G_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_G_PUSH)
G_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_G_PUSH)
H_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_H_PUSH)
H_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_H_PUSH)
I_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_I_PUSH)
I_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_I_PUSH)
IDX_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_IDX_PUSH)
IDX_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_IDX_PUSH)
MFD_CKLST_-_Co-pilot_-_Push#(>B:CJ4_AVIONICS_CCP_PUSH_CKLST_2_PUSH)
MFD_CKLST_-_Pilot_-_Push#(>B:CJ4_AVIONICS_CCP_PUSH_CKLST_1_PUSH)
J_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_J_PUSH)
J_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_J_PUSH)
K_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_K_PUSH)
K_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_K_PUSH)
L_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_L_PUSH)
L_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_L_PUSH)
L1_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_L_1_PUSH)
L2_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_L_2_PUSH)
L3_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_L_3_PUSH)
L4_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_L_4_PUSH)
L5_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_L_5_PUSH)
L6_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_L_6_PUSH)
LEFT_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_NAVIGATION_X_LEFT)
LEFT_-_Pilot_-_Push#(>B:AS3000_LOWER_1_NAVIGATION_X_LEFT)
LEGS_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_LEGS_PUSH)
LEGS_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_LEGS_PUSH)
LSK1_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_L_1_PUSH)
LSK2_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_L_2_PUSH)
LSK3_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_L_3_PUSH)
LSK4_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_L_4_PUSH)
LSK5_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_L_5_PUSH)
LSK6_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_L_6_PUSH)
LWR_MENU_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_LWR_MENU_PUSH)
LWR_MENU_-_Pilot_-_Push#(>B:AS3000_LOWER_1_LWR_MENU_PUSH)
M_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_M_PUSH)
M_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_M_PUSH)
MEM_1_-_Co-pilot_-_Long#(>B:AS3000_LOWER_2_MEM1_PUSH_LONG)
MEM_1_-_Co-pilot_-_Short#(>B:AS3000_LOWER_2_MEM1_PUSH)
MEM_1_-_Pilot_-_Long#(>B:AS3000_LOWER_1_MEM1_PUSH_LONG)
MEM_1_-_Pilot_-_Short#(>B:AS3000_LOWER_1_MEM1_PUSH)
MEM_2_-_Co-pilot_-_Long#(>B:AS3000_LOWER_2_MEM2_PUSH_LONG)
MEM_2_-_Co-pilot_-_Short#(>B:AS3000_LOWER_2_MEM2_PUSH)
MEM_2_-_Pilot_-_Long#(>B:AS3000_LOWER_1_MEM2_PUSH_LONG)
MEM_2_-_Pilot_-_Short#(>B:AS3000_LOWER_1_MEM2_PUSH)
MEM_3_-_Co-pilot_-_Long#(>B:AS3000_LOWER_2_MEM3_PUSH_LONG)
MEM_3_-_Co-pilot_-_Short#(>B:AS3000_LOWER_2_MEM3_PUSH)
MEM_3_-_Pilot_-_Long#(>B:AS3000_LOWER_1_MEM3_PUSH_LONG)
MEM_3_-_Pilot_-_Short#(>B:AS3000_LOWER_1_MEM3_PUSH)
MENU_ADV_-_Co-pilot_-_Dec#1 (>B:AS3000_LOWER_2_MENU_ADV_Dec)
MENU_ADV_-_Co-pilot_-_Dec#1 (>B:AS3000_UPPER_2_MENU_ADV_Dec)
MENU_ADV_-_Co-pilot_-_Inc#1 (>B:AS3000_LOWER_2_MENU_ADV_Inc)
MENU_ADV_-_Co-pilot_-_Inc#1 (>B:AS3000_UPPER_2_MENU_ADV_Inc)
MENU_ADV_-_Pilot_-_Dec#1 (>B:AS3000_LOWER_1_MENU_ADV_Dec)
MENU_ADV_-_Pilot_-_Dec#1 (>B:AS3000_UPPER_1_MENU_ADV_Dec)
MENU_ADV_-_Pilot_-_Inc#1 (>B:AS3000_LOWER_1_MENU_ADV_Inc)
MENU_ADV_-_Pilot_-_Inc#1 (>B:AS3000_UPPER_1_MENU_ADV_Inc)
MFD_ADV_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_MFD_ADV_PUSH)
MFD_ADV_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_MFD_ADV_PUSH)
MFD_DATA_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_MFD_DATA_PUSH)
MFD_DATA_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_MFD_DATA_PUSH)
MSG_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_MSG_PUSH)
MSG_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_MSG_PUSH)
N_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_N_PUSH)
N_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_N_PUSH)
NAV_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_NAV_PUSH)
NAV_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_NAV_PUSH)
NAV_DATA_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_NAV_DATA_PUSH)
NAV_DATA_-_Pilot_-_Push#(>B:AS3000_LOWER_1_NAV_DATA_PUSH)
NEXT_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_NEXTPAGE_PUSH)
NEXT_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_NEXTPAGE_PUSH)
O_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_O_PUSH)
O_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_O_PUSH)
P_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_P_PUSH)
P_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_P_PUSH)
PERF_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_PERF_PUSH)
PERF_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_PERF_PUSH)
PFD_MENU_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_PFD_MENU_PUSH)
PFD_MENU_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_PFD_MENU_PUSH)
PLUSMINUS_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_PLUSMINUS_PUSH)
PLUSMINUS_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_PLUSMINUS_PUSH)
PREV_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_PREVPAGE_PUSH)
PREV_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_PREVPAGE_PUSH)
PUSH_SELECT_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_DATA_BUTTON_PUSH)
PUSH_SELECT_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_DATA_BUTTON_PUSH)
Q_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_Q_PUSH)
Q_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_Q_PUSH)
R_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_R_PUSH)
R_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_R_PUSH)
R1_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_R_1_PUSH)
R2_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_R_2_PUSH)
R3_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_R_3_PUSH)
R4_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_R_4_PUSH)
R5_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_R_5_PUSH)
R6_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_SOFTKEY_R_6_PUSH)
RADAR_MENU_-_Cp-pilot_-_Push#1 (>B:CJ4_AVIONICS_PUSH_COPILOT_DCP_RADARMENU_PUSH)
RADAR_MENU_-_Pilot_-_Push#1 (>B:CJ4_AVIONICS_PUSH_PILOT_DCP_RADARMENU_PUSH)
RANGE_-_Co-pilot_-_Dec#1 (>B:AS3000_UPPER_2_RANGE_Dec)
RANGE_-_Co-pilot_-_Inc#1 (>B:AS3000_UPPER_2_RANGE_Inc)
RANGE_-_Pilot_-_Dec#1 (>B:AS3000_UPPER_1_RANGE_Dec)
RANGE_-_Pilot_-_Inc#1 (>B:AS3000_UPPER_1_RANGE_Inc)
RANGE_PUSH_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_RANGE_BUTTON_PUSH)
RANGE_PUSH_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_RANGE_BUTTON_PUSH)
REFS_MENU_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_REFS_MENU_PUSH)
REFS_MENU_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_REFS_MENU_PUSH)
RIGHT_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_NAVIGATION_X_RIGHT)
RIGHT_-_pilot_-_Push#(>B:AS3000_LOWER_1_NAVIGATION_X_RIGHT)
RSK1_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_R_1_PUSH)
RSK2_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_R_2_PUSH)
RSK3_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_R_3_PUSH)
RSK4_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_R_4_PUSH)
RSK5_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_R_5_PUSH)
RSK6_-_Pilot_-_Push#(>B:FMC_CJ4_1_SOFTKEY_R_6_PUSH)
S_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_S_PUSH)
S_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_S_PUSH)
SP_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_SP_PUSH)
SP_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_SP_PUSH)
SYS_-_Co-Pilot_-_Push#(>B:AS3000_LOWER_2_SYS_PUSH)
SYS_-_Pilot_-_Push#(>B:AS3000_LOWER_1_SYS_PUSH)
T_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_T_PUSH)
T_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_T_PUSH)
TAWS_MENU_-_Co-pilot_-_Push#1 (>B:CJ4_AVIONICS_PUSH_COPILOT_DCP_TAWSMENU_PUSH)
TAWS_MENU_-_Pilot_-_Push#1 (>B:CJ4_AVIONICS_PUSH_PILOT_DCP_TAWSMENU_PUSH)
TERR_WX_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_TERR_WX_PUSH)
TERR_WX_-_Pilot_-_Push#(>B:AS3000_LOWER_1_TERR_WX_PUSH)
TERR_WX_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_TERR_WX_PUSH)
TERR_WX_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_TERR_WX_PUSH)
TFC_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_TFC_PUSH)
TFC_-_Co-pilot_-_Push#1 (>B:AS3000_UPPER_2_TFC_PUSH)
TFC_-_Pilot_-_Push#(>B:AS3000_LOWER_1_TFC_PUSH)
TFC_-_Pilot_-_Push#1 (>B:AS3000_UPPER_1_TFC_PUSH)
TILT_-_Co-pilot_-_Dec#1 (>B:AS3000_UPPER_2_TILT_Dec)
TILT_-_Co-pilot_-_Inc#1 (>B:AS3000_UPPER_2_TILT_Inc)
TILT_-_Pilot_-_Dec#1 (>B:AS3000_UPPER_1_TILT_Dec)
TILT_-_Pilot_-_Inc#1 (>B:AS3000_UPPER_1_TILT_Inc)
TUN_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_BUTTON_TUN_PUSH)
TUN_-_Pilot_-_Push#(>B:FMC_CJ4_1_BUTTON_TUN_PUSH)
U_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_U_PUSH)
U_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_U_PUSH)
UP_-_Co-pilot_-_Push#(>B:AS3000_LOWER_1_NAVIGATION_Y_UP)
UP_-_pilot_-_Push#(>B:AS3000_LOWER_1_NAVIGATION_Y_UP)
UPR_MENU_-_Co-pilot_-_Push#(>B:AS3000_LOWER_2_UPR_MENU_PUSH)
UPR_MENU_-_Pilot_-_Push#(>B:AS3000_LOWER_1_UPR_MENU_PUSH)
V_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_V_PUSH)
V_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_V_PUSH)
W_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_W_PUSH)
W_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_W_PUSH)
X_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_X_PUSH)
X_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_X_PUSH)
Y_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_Y_PUSH)
Y_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_Y_PUSH)
Z_-_Co-pilot_-_Push#(>B:FMC_CJ4_2_KEYBOARD_Z_PUSH)
Z_-_Pilot_-_Push#(>B:FMC_CJ4_1_KEYBOARD_Z_PUSH)
ZOOM_MINUS_-_Pilot_-_Dec#1 (>B:AS3000_LOWER_1_ZOOM_Dec)
ZOOM_PLUS_-_Pilot_-_Inc#1 (>B:AS3000_LOWER_1_ZOOM_Inc)
//Microsoft/CJ4 (2024)/Controls
Gear_-_Down#(>B:LANDING_GEAR_GEAR_DOWN)
Gear_-_Up#(>B:LANDING_GEAR_GEAR_UP)
Nose_down#(>B:ELEV_TRIM_DOWN)
Nose_up#(>B:ELEV_TRIM_UP)
Parking_brake_-_Off#0 (>K:PARKING_BRAKE_SET)
Parking_brake_-_On#1 (>K:PARKING_BRAKE_SET)
//Microsoft/CJ4 (2024)/Electrical
AVIONICS_-_Dispatch#2 (>B:ELECTRICAL_SWITCH_AVIONICS_BUS_Set)
AVIONICS_-_Off#1 (>B:ELECTRICAL_SWITCH_AVIONICS_BUS_Set)
AVIONICS_-_On#0 (>B:ELECTRICAL_SWITCH_AVIONICS_BUS_Set)
BATTERY_-_Emer#2 (>L:WT_CJ4_Battery_Switch_Pos) 0 64 (>K:2:ELECTRICAL_LINE_CONNECTION_SET) 1 5 (>K:2:ELECTRICAL_LINE_CONNECTION_SET
BATTERY_-_Off#1 (>L:WT_CJ4_Battery_Switch_Pos) 0 64 (>K:2:ELECTRICAL_LINE_CONNECTION_SET) 0 5 (>K:2:ELECTRICAL_LINE_CONNECTION_SET
BATTERY_-_On#0 (>L:WT_CJ4_Battery_Switch_Pos) 1 64 (>K:2:ELECTRICAL_LINE_CONNECTION_SET) 0 5 (>K:2:ELECTRICAL_LINE_CONNECTION_SET
EMERG_Armed#1 (>B:ELECTRICAL_EMERLIGHTS_Set)
EMERG_Off#0 (>B:ELECTRICAL_EMERLIGHTS_Set)
L_GEN_-_Off#(>B:ELECTRICAL_ALTERNATOR_1_OFF)
L_GEN_-_On#(>B:ELECTRICAL_ALTERNATOR_1_ON)
R_GEN_-_Off#(>B:ELECTRICAL_ALTERNATOR_2_OFF)
R_GEN_-_On#(>B:ELECTRICAL_ALTERNATOR_2_ON)
STB_FLT_DISPLAY_-_Off#1 (>B:STBY_FLT_DISPLAY_SWITCH_Set)
STB_FLT_DISPLAY_-_On#0 (>B:STBY_FLT_DISPLAY_SWITCH_Set)
STB_FLT_DISPLAY_-_Test#2 (>B:STBY_FLT_DISPLAY_SWITCH_Set)
//Microsoft/CJ4 (2024)/Engine
Fuel_pump_-_Off#0 (>B:FUEL_PUMP_1_Set)
Fuel_pump_-_On#1 (>B:FUEL_PUMP_1_Set)
Left_run_stop_-_Run#1 (>B:FUEL_RUNSTOP_1_RUN)
Left_starter_-_On#1 (>B:ENGINE_STARTER_1_Set)
Right_run_stop_-_Run#1 (>B:FUEL_RUNSTOP_2_RUN)
Right_starter_-_On#1 (>B:ENGINE_STARTER_2_Set)
//Microsoft/CJ4 (2024)/Gear
Parking_brake_-_Off#0 (>B:LANDING_GEAR_PARKINGBRAKE_Set)
Parking_brake_-_On#1 (>B:LANDING_GEAR_PARKINGBRAKE_Set)
//Microsoft/CJ4 (2024)/Lights
BEACON_-_Toggle#(>B:LIGHTING_BEACON_1_TOGGLE)
BELT_-_Toggle#(>B:SAFETY_SEATBELTS_PUSH_TOGGLE)
Beacon_-_Off#(>B:BEACON_LIGHTS_OFF)
Beacon_-_On#(>B:BEACON_LIGHTS_ON)
LNDG_-_Toggle#(>B:LIGHTING_LANDING_0_TOGGLE)
LOGO_-_Toggle#(>B:LIGHTING_LOGO_1_TOGGLE)
Landing_-_Off#(>B:LANDING_LIGHTS_OFF)
Landing_-_On#(>B:LANDING_LIGHTS_ON)
NAV_-_Toggle#(>B:TOGGLE_NAV_LIGHTS)
Nav_-_Off#(>B:NAV_LIGHTS_OFF)
Nav_-_On#(>B:NAV_LIGHTS_ON)
PULSE_ON_-_Toggle#(>B:LIGHTING_RECOGNITION_1_TOGGLE)
PULSE_TCAS_-_Toggle#(>B:CJ4_AVIONICS_LIGHTING_PUSH_LIGHT_PULSE_TCAS_PUSH)
SAFETY_-_Toggle#(>B:SAFETY_PASSENGER_SAFETY_PUSH_TOGGLE)
STROBE_-_Toggle#(>B:LIGHTING_STROBE_1_TOGGLE)
Strobe_-_Off#(>B:STROBES_OFF)
Strobe_-_On#(>B:STROBES_ON)
TAXI_-_Toggle#(>B:LIGHTING_TAXI_1_TOGGLE)
Taxi_-_Off#(>B:TAXI_LIGHTS_OFF)
Taxi_-_On#(>B:TAXI_LIGHTS_ON)
//Microsoft/CJ4 (2024)/Warning System
Safety_-_Master_caution_-_Pilot_-_Push#0 (>B:SAFETY_CAUTION_1_Set)
Safety_-_Master_warning_-_Pilot_-_Push#0 (>B:SAFETY_WARNING_1_Set)
//Microsoft/Cabri G2/Lights
Landing_Lights_OFF#(>K:LANDING_LIGHTS_OFF)
//Microsoft/Cessna 172/Warning
Annunciator_Switch_OFF#(>K:ANNUNCIATOR_SWITCH_OFF)
Annunciator_Switch_ON#(>K:ANNUNCIATOR_SWITCH_ON)
//Microsoft/Cessna C408/Anti Ice
__B_DEICE_WINDSHIELD_OFF#(>B:DEICE_WINDSHIELD_OFF)
Airframe_Heat_OFF#(>B:DEICE_AIRFRAME_OFF)
Airframe_Heat_ON#(>B:DEICE_AIRFRAME_ON)
Bleedair_1_OFF#(>B:PNEUMATICS_BLEED_AIR_1_OFF) 
Bleedair_1_ON#(>B:PNEUMATICS_BLEED_AIR_1_ON)
Pitot_Heat_OFF#(>B:DEICE_PITOT_HEAT_OFF)
Pitot_Heat_ON#(>B:DEICE_PITOT_HEAT_ON)
Proppeler_Heat_OFF#(>B:DEICE_PROPELLER_OFF)
Proppeler_Heat_ON#(>B:DEICE_PROPELLER_ON)
Windshield_ON#(>B:DEICE_WINDSHIELD_ON)
//Microsoft/Cessna C408/Autopilot
LIGHTING_TAXI_LIGHT_LANDING#(>B:LIGHTING_TAXI_LIGHT_LANDING)
//Microsoft/Cessna C408/Engines
Condition_Lever_1_#@ 655.35 / 0 max 100 min s0 33 < if{  1 (>L:Condition_Lever_CutOff_1) 1 (>K:SET_FUEL_VALVE_ENG1)  1 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) quit } els{  2 (>L:Condition_Lever_CutOff_1) 1 (>K:SET_FUEL_VALVE_ENG1) 2 (>A:TURB ENG CONDITION LEVER POSITION:1,enum) quit }
Condition_Lever_1_CutOff#0 (>L:Condition_Lever_CutOff_1) 0 (>K:SET_FUEL_VALVE_ENG1) 0 (>A:TURB ENG CONDITION LEVER POSITION:1,enum)
Condition_Lever_2#@ 655.35 / 0 max 100 min s0 33 < if{  1 (>L:Condition_Lever_CutOff_2) 1 (>K:SET_FUEL_VALVE_ENG2)  1 (>A:TURB ENG CONDITION LEVER POSITION:2,enum) quit } els{  2 (>L:Condition_Lever_CutOff_2) 1 (>K:SET_FUEL_VALVE_ENG1) 2 (>A:TURB ENG CONDITION LEVER POSITION:2,enum) quit }
Condition_Lever_2_CutOff#0 (>L:Condition_Lever_CutOff_2) 0 (>K:SET_FUEL_VALVE_ENG2) 0 (>A:TURB ENG CONDITION LEVER POSITION:2,enum)
//Microsoft/Cessna C408/Lights
LIGHTING_CABIN_LIGHT_OFF#(>B:LIGHTING_CABIN_LIGHT_OFF)
LIGHTING_CABIN_LIGHT_ON#(>B:LIGHTING_CABIN_LIGHT_ON)
LIGHTING_LOGO_LIGHT_OFF#(>B:LIGHTING_LOGO_LIGHT_OFF)
LIGHTING_LOGO_LIGHT_ON#(>B:LIGHTING_LOGO_LIGHT_ON)
LIGHTING_NAVIGATION_LIGHT_BEACON#(>B:LIGHTING_NAVIGATION_LIGHT_BEACON)
LIGHTING_NAVIGATION_LIGHT_NAV#(>B:LIGHTING_NAVIGATION_LIGHT_NAV)
LIGHTING_NAVIGATION_LIGHT_OFF#(>B:LIGHTING_NAVIGATION_LIGHT_OFF)
LIGHTING_SEATBELTS_LIGHT_OFF#(>B:LIGHTING_SEATBELTS_LIGHT_OFF)
LIGHTING_SEATBELTS_LIGHT_ON#(>B:LIGHTING_SEATBELTS_LIGHT_ON)
LIGHTING_STROBE_LIGHT_OFF#(>B:LIGHTING_STROBE_LIGHT_OFF)
LIGHTING_STROBE_LIGHT_ON#(>B:LIGHTING_STROBE_LIGHT_ON)
LIGHTING_STROBE_LIGHT_ON#(>B:LIGHTING_STROBE_LIGHT_ON)
LIGHTING_TAXI_LIGHT_OFF#(>B:LIGHTING_TAXI_LIGHT_OFF)
LIGHTING_TAXI_LIGHT_ON#(>B:LIGHTING_TAXI_LIGHT_ON)
LIGHTING_WING_LIGHT_OFF#(>B:LIGHTING_WING_LIGHT_OFF)
LIGHTING_WING_LIGHT_ON#(>B:LIGHTING_WING_LIGHT_ON)
//Microsoft/DC-3/Engine
Supercharger_Disable_Engine_1_Duckworks_Mod#0 (>L:C47_supercharger_eng1,boo1)
Supercharger_Disable_Engine_2_Duckworks_Mod#0 (>L:C47_supercharger_eng2, boo1)
Supercharger_Enable_Engine_1_Duckworks_Mod#1 (>L:C47_supercharger_eng1,boo1)
Supercharger_Enable_Engine_2_Duckworks_Mod#1 (>L:C47_supercharger_eng2, boo1)
//Microsoft/DG1001E Neo/Electrical
Battry_ON#p0 1 min 0 max (>O:INSTRUMENT_Main_Switch_Position) (O:INSTRUMENT_Main_Switch_Position) s0 l0 0 == if{ 0 (>A:BUS BREAKER PULLED:1, Bool) g1 } l0 1 == if{ 1 (>A:BUS BREAKER PULLED:1, Bool) g1 } :1
//Microsoft/DG1001E Neo/Hydraulic
Tow_Release# p0 1 min 0 max (>O:HANDLING_Tow_Release_Position) (>K:TOW_PLANE_RELEASE) 1 (>O:_ButtonAnimVar) 
//Microsoft/DG1001E Neo/Light
Strobe_lights_On#10 (>K:2:STROBES_SET) 10 (>L:LIGHTING_STROBE_1)
Strobe_lights_off#0 (>K:2:STROBES_SET) 0 (>L:LIGHTING_STROBE_1)
//Microsoft/DHC-2/Autopilot
Vertical_Speed_Down#1 0 (H:KAP140_Push_DN) (>H:KAP140_Push_DN)
Vertical_Speed_Up#1 0 (H:KAP140_Push_UP) (>H:KAP140_Push_UP)
//Microsoft/G1000 (2024)/Autopilot
ALT_-_Inner_dec#1 (>B:AS1000_ALTITUDE_INNER_PFD_Dec)
ALT_-_Inner_inc#1 (>B:AS1000_ALTITUDE_INNER_PFD_Inc)
ALT_-_Outer_dec#1 (>B:AS1000_ALTITUDE_OUTER_PFD_Dec)
ALT_-_Outer_inc#1 (>B:AS1000_ALTITUDE_OUTER_PFD_Inc)
ALT_-_Toggle#(>B:AS1000_AUTOPILOT_ALTITUDE_PFD_TOGGLE)
AP_-_Toggle#(>B:AS1000_AUTOPILOT_AP_PFD_TOGGLE)
APP_-_Toggle#(>B:AS1000_AUTOPILOT_APPROACH_PFD_TOGGLE)
BC_-_Toggle#(>B:AS1000_AUTOPILOT_BACKCOURSE_PFD_TOGGLE)
CRS_-_Dec#1 (>B:AS1000_COURSE_PFD_Dec)
CRS_-_Direct_push#(>B:AS1000_COURSE_PUSH_PFD_PUSH)
CRS_-_Inc#1 (>B:AS1000_COURSE_PFD_Inc)
FD_-_Toggle#(>B:AS1000_AUTOPILOT_FD_PFD_TOGGLE)
FLC_-_Toggle#(>B:AS1000_AUTOPILOT_FLIGHTLEVELCHANGE_PFD_TOGGLE)
HDG_-_Dec#1 (>B:AS1000_HEADING_PFD_Dec)
HDG_-_Inc#1 (>B:AS1000_HEADING_PFD_Inc)
HDG_-_Sync_push#(>B:AS1000_HEADING_SYNC_PFD_PUSH)
HDG_-_Toggle#(>B:AS1000_AUTOPILOT_HEADING_PFD_TOGGLE)
NAV_-_Toggle#(>B:AS1000_AUTOPILOT_NAVIGATION_PFD_TOGGLE)
VNV_-_Toggle#(>B:AS1000_AUTOPILOT_VERTICAL_NAVIGATION_PFD_TOGGLE)
VS_-_Toggle#(>B:AS1000_AUTOPILOT_VERTICALSPEED_PFD_TOGGLE)
Vertical_speed_down_-_Push#(>B:AS1000_AUTOPILOT_VERTICALSPEED_DOWN_PFD_PUSH)
Vertical_speed_up_-_Push#(>B:AS1000_AUTOPILOT_VERTICALSPEED_UP_PFD_PUSH)
//Microsoft/G1000 (2024)/Avionics
BARO_-_Dec#1 (>B:AS1000_BARO_PFD_Dec)
BARO_-_Inc#1 (>B:AS1000_BARO_PFD_Inc)
CLR_-_Push#(>B:AS1000_CLR_PFD_PUSH)
DIRECT_-_Push#(>B:AS1000_DIRECTTO_PFD_PUSH)
ENT_-_Push#(>B:AS1000_ENT_PUSH_PFD_PUSH)
FMS_-_Inner_dec#1 (>B:AS1000_FMS_UPPER_PFD_Dec)
FMS_-_Inner_inc#1 (>B:AS1000_FMS_UPPER_PFD_Inc)
FMS_-_Outer_dec#1 (>B:AS1000_FMS_LOWER_PFD_Dec)
FMS_-_Outer_inc#1 (>B:AS1000_FMS_LOWER_PFD_Inc)
FMS_-_Push#(>B:AS1000_FMS_UPPER_PUSH_PFD_PUSH)
FPL_-_Push#(>B:AS1000_FPL_PUSH_PFD_PUSH)
MFD_RANGE_ZOOM_-_Dec#1 (>B:AS1000_RANGE_ZOOM_MFD_Dec)
MFD_RANGE_ZOOM_-_Inc#1 (>B:AS1000_RANGE_ZOOM_MFD_Inc)
MFD_SOFTKEY_1_-_Push#1 (>B:AS1000_SOFTKEY_1_MFD_PUSH)
MFD_SOFTKEY_10_-_Push#1 (>B:AS1000_SOFTKEY_10_MFD_PUSH)
MFD_SOFTKEY_11_-_Push#1 (>B:AS1000_SOFTKEY_11_MFD_PUSH)
MFD_SOFTKEY_12_-_Push#1 (>B:AS1000_SOFTKEY_12_MFD_PUSH)
MFD_SOFTKEY_2_-_Push#1 (>B:AS1000_SOFTKEY_2_MFD_PUSH)
MFD_SOFTKEY_3_-_Push#1 (>B:AS1000_SOFTKEY_3_MFD_PUSH)
MFD_SOFTKEY_4_-_Push#1 (>B:AS1000_SOFTKEY_4_MFD_PUSH)
MFD_SOFTKEY_5_-_Push#1 (>B:AS1000_SOFTKEY_5_MFD_PUSH)
MFD_SOFTKEY_6_-_Push#1 (>B:AS1000_SOFTKEY_6_MFD_PUSH)
MFD_SOFTKEY_7_-_Push#1 (>B:AS1000_SOFTKEY_7_MFD_PUSH)
MFD_SOFTKEY_8_-_Push#1 (>B:AS1000_SOFTKEY_8_MFD_PUSH)
MFD_SOFTKEY_9_-_Push#1 (>B:AS1000_SOFTKEY_9_MFD_PUSH)
PFD_RANGE_ZOOM_-_Dec#1 (>B:AS1000_RANGE_ZOOM_PFD_Dec)
PFD_RANGE_ZOOM_-_Inc#1 (>B:AS1000_RANGE_ZOOM_PFD_Inc)
PFD_SOFTKEY__10_-_Push#1 (>B:AS1000_SOFTKEY_10_PFD_PUSH)
PFD_SOFTKEY_1_-_Push#1 (>B:AS1000_SOFTKEY_1_PFD_PUSH)
PFD_SOFTKEY_11_-_Push#1 (>B:AS1000_SOFTKEY_11_PFD_PUSH)
PFD_SOFTKEY_12_-_Push#1 (>B:AS1000_SOFTKEY_12_PFD_PUSH)
PFD_SOFTKEY_2_-_Push#1 (>B:AS1000_SOFTKEY_2_PFD_PUSH)
PFD_SOFTKEY_3_-_Push#1 (>B:AS1000_SOFTKEY_3_PFD_PUSH)
PFD_SOFTKEY_4_-_Push#1 (>B:AS1000_SOFTKEY_4_PFD_PUSH)
PFD_SOFTKEY_5_-_Push#1 (>B:AS1000_SOFTKEY_5_PFD_PUSH)
PFD_SOFTKEY_6_-_Push#1 (>B:AS1000_SOFTKEY_6_PFD_PUSH)
PFD_SOFTKEY_7_-_Push#1 (>B:AS1000_SOFTKEY_7_PFD_PUSH)
PFD_SOFTKEY_8_-_Push#1 (>B:AS1000_SOFTKEY_8_PFD_PUSH)
PFD_SOFTKEY_9_-_Push#1 (>B:AS1000_SOFTKEY_9_PFD_PUSH)
MENU_-_Push#(>B:AS1000_MENU_PUSH_PFD_PUSH)
PROC_-_Push#(>B:AS1000_PROC_PUSH_PFD_PUSH)
//Microsoft/G1000 (2024)/Radio
COM_-_Large_dec#1 (>B:AS1000_COM_LARGE_PFD_Dec)
COM_-_Large_inc#1 (>B:AS1000_COM_LARGE_PFD_Inc)
COM_-_Small_dec#1 (>B:AS1000_COM_SMALL_PFD_Dec)
COM_-_Small_inc#1 (>B:AS1000_COM_SMALL_PFD_Inc)
COM_-_Switch_push#(>B:AS1000_COM_SWITCH_PFD_PUSH)
COM_-_Toggle_1_2_push#(>B:AS1000_COM_PUSH_PFD_PUSH)
NAV_-_Switch_push#(>B:AS1000_NAV_SWITCH_PFD_PUSH)
Nav_-_Toggle_1_2_push#(>B:AS1000_NAV_PUSH_PFD_PUSH)
Nav_-_Large_Inc#1 (>B:AS1000_NAV_LARGE_PFD_Inc)
Nav_-_Large_dec#1 (>B:AS1000_NAV_LARGE_PFD_Dec)
Nav_-_Small_dec#1 (>B:AS1000_NAV_SMALL_PFD_Dec)
Nav_-_Small_inc#1 (>B:AS1000_NAV_SMALL_PFD_Inc)
//Microsoft/Generic/Anti-Ice
ANTI_ICE_OFF#(>K:ANTI_ICE_OFF)
ANTI_ICE_ON#(>K:ANTI_ICE_ON)
ANTI_ICE_TOGGLE#(>K:ANTI_ICE_TOGGLE)
ANTI_ICE_TOGGLE_ENG1#(>K:ANTI_ICE_TOGGLE_ENG1)
ANTI_ICE_TOGGLE_ENG2#(>K:ANTI_ICE_TOGGLE_ENG2)
ANTI_ICE_TOGGLE_ENG3#(>K:ANTI_ICE_TOGGLE_ENG3)
ANTI_ICE_TOGGLE_ENG4#(>K:ANTI_ICE_TOGGLE_ENG4)
ANTI_ICE_SET_ENG1#(>K:ANTI_ICE_SET_ENG1)
PITOT_HEAT_OFF#(>K:PITOT_HEAT_OFF)
PITOT_HEAT_ON#(>K:PITOT_HEAT_ON)
PITOT_HEAT_TOGGLE#(>K:PITOT_HEAT_TOGGLE)
TOGGLE_WINDSHIELD_De-Ice#(>K:WINDSHIELD_DEICE_TOGGLE)
TOGGLE_PITOT_BLOCKAGE#(>K:TOGGLE_PITOT_BLOCKAGE)
TOGGLE_PROPELLER_DEICE#(>K:TOGGLE_PROPELLER_DEICE)
TOGGLE_STRUCTURAL_DEICE#(>K:TOGGLE_STRUCTURAL_DEICE)
WINDSHIELD_DE-ICE_OFF#(>K:WINDSHIELD_DEICE_OFF)
WINDSHIELD_DE-ICE_ON#(>K:WINDSHIELD_DEICE_ON)
//Microsoft/Generic/Autopilot
AP_AIRSPEED_HOLD#(>K:AP_AIRSPEED_HOLD)
AP_AIRSPEED_OFF#(>K:AP_AIRSPEED_OFF)
AP_AIRSPEED_ON#(>K:AP_AIRSPEED_ON)
AP_ALT_HOLD#(>K:AP_ALT_HOLD)
AP_ALT_HOLD_OFF#(>K:AP_ALT_HOLD_OFF)
AP_ALT_HOLD_ON#(>K:AP_ALT_HOLD_ON)
AP_ALT_VAR_DEC#(>K:AP_ALT_VAR_DEC)
AP_ALT_VAR_INC#(>K:AP_ALT_VAR_INC)
AP_APR_HOLD#(>K:AP_APR_HOLD)
AP_APR_HOLD_OFF#(>K:AP_APR_HOLD_OFF)
AP_APR_HOLD_ON#(>K:AP_APR_HOLD_ON)
AP_ATT_HOLD#(>K:AP_ATT_HOLD)
AP_ATT_HOLD_OFF#(>K:AP_ATT_HOLD_OFF)
AP_ATT_HOLD_ON#(>K:AP_ATT_HOLD_ON)
AP_BC_HOLD#(>K:AP_BC_HOLD)
AP_BC_HOLD_OFF#(>K:AP_BC_HOLD_OFF)
AP_BC_HOLD_ON#(>K:AP_BC_HOLD_ON)
AP_HDG_HOLD#(>K:AP_HDG_HOLD)
AP_HDG_HOLD_OFF#(>K:AP_HDG_HOLD_OFF)
AP_HDG_HOLD_ON#(>K:AP_HDG_HOLD_ON)
AP_LOC_HOLD#(>K:AP_LOC_HOLD)
AP_LOC_HOLD_OFF#(>K:AP_LOC_HOLD_OFF)
AP_LOC_HOLD_ON#(>K:AP_LOC_HOLD_ON)
AP_MACH_HOLD#(>K:AP_MACH_HOLD)
AP_MACH_OFF#(>K:AP_MACH_OFF)
AP_MACH_ON#(>K:AP_MACH_ON)
AP_MACH_VAR_DEC#(>K:AP_MACH_VAR_DEC)
AP_MACH_VAR_INC#(>K:AP_MACH_VAR_INC)
AP_MASTER#(>K:AP_MASTER)
AP_N1_HOLD#(>K:AP_N1_HOLD)
AP_N1_REF_DEC#(>K:AP_N1_REF_DEC)
AP_N1_REF_INC#(>K:AP_N1_REF_INC)
AP_NAV1_HOLD#(>K:AP_NAV1_HOLD)
AP_NAV1_HOLD_OFF#(>K:AP_NAV1_HOLD_OFF)
AP_NAV1_HOLD_ON#(>K:AP_NAV1_HOLD_ON)
AP_PANEL_ALTITUDE_HOLD#(>K:AP_PANEL_ALTITUDE_HOLD)
AP_PANEL_ALTITUDE_OFF#(>K:AP_PANEL_ALTITUDE_OFF)
AP_PANEL_ALTITUDE_ON#(>K:AP_PANEL_ALTITUDE_ON)
AP_PANEL_HEADING_HOLD#(>K:AP_PANEL_HEADING_HOLD)
AP_PANEL_HEADING_OFF#(>K:AP_PANEL_HEADING_OFF)
AP_PANEL_HEADING_ON#(>K:AP_PANEL_HEADING_ON)
AP_PANEL_MACH_HOLD#(>K:AP_PANEL_MACH_HOLD)
AP_PANEL_MACH_HOLD_TOGGLE#(>K:AP_PANEL_MACH_HOLD_TOGGLE)
AP_PANEL_MACH_OFF#(>K:AP_PANEL_MACH_OFF)
AP_PANEL_MACH_ON#(>K:AP_PANEL_MACH_ON)
AP_PANEL_SPEED_HOLD#(>K:AP_PANEL_SPEED_HOLD)
AP_PANEL_SPEED_HOLD_TOGGLE#(>K:AP_PANEL_SPEED_HOLD_TOGGLE)
AP_PANEL_SPEED_OFF#(>K:AP_PANEL_SPEED_OFF)
AP_PANEL_SPEED_ON#(>K:AP_PANEL_SPEED_ON)
AP_PANEL_VS_HOLD#(>K:AP_PANEL_VS_HOLD)
AP_PITCH_REF_INC_DN#(>K:AP_PITCH_REF_INC_DN)
AP_PITCH_REF_INC_UP#(>K:AP_PITCH_REF_INC_UP)
AP_PITCH_REF_SELECT#(>K:AP_PITCH_REF_SELECT)
AP_VS_VAR_DEC#(>K:AP_VS_VAR_DEC)
AP_VS_VAR_INC#(>K:AP_VS_VAR_INC)
AP_WING_LEVELER#(>K:AP_WING_LEVELER)
AP_WING_LEVELER_OFF#(>K:AP_WING_LEVELER_OFF)
AP_WING_LEVELER_ON#(>K:AP_WING_LEVELER_ON)
AUTOPILOT_OFF#(>K:AUTOPILOT_OFF)
AUTOPILOT_ON#(>K:AUTOPILOT_ON)
AP_MAX_BANK_ANGLE_SET#(>K:AP_MAX_BANK_ANGLE_SET)
AP_MAX_BANK_SET#(>K:AP_MAX_BANK_SET)
AP_HDG_VAR_DEC#(>K:AP_HDG_VAR_DEC)
AP_HDG_VAR_INC#(>K:AP_HDG_VAR_INC)
AP_MAX_BANK_DEC#(>K:AP_MAX_BANK_DEC)
AP_MAX_BANK_INC#(>K:AP_MAX_BANK_INC)
AP_SPD_VAR_DEC#(>K:AP_SPD_VAR_DEC)
AP_SPD_VAR_INC#(>K:AP_SPD_VAR_INC)
altitude#  (A:AUTOPILOT ALTITUDE LOCK, bool) if{  (>K:AP_PANEL_ALTITUDE_OFF)  (>K:AP_PANEL_VS_ON) }  1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 - -3000 max 3000 min (>K:2:AP_VS_VAR_SET_ENGLISH) } els{ 100 (>K:AP_ALT_VAR_DEC) } } 
SYNC_FLIGHT_DIRECTOR_PITCH#(>K:SYNC_FLIGHT_DIRECTOR_PITCH)
TOGGLE_FLIGHT_DIRECTOR#(>K:TOGGLE_FLIGHT_DIRECTOR)
YAW_DAMPER_OFF#(>K:YAW_DAMPER_OFF)
YAW_DAMPER_ON#(>K:YAW_DAMPER_ON)
YAW_DAMPER_TOGGLE#(>K:YAW_DAMPER_TOGGLE)
//Microsoft/Generic/Avionics
AS1000_AP_ALT_DEC_100# (A:AUTOPILOT ALTITUDE LOCK VAR, feet) 100 - (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)
AS1000_AP_ALT_DEC_1000# (A:AUTOPILOT ALTITUDE LOCK VAR, feet) 1000 - (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)
AS1000_AP_ALT_INC_100# (A:AUTOPILOT ALTITUDE LOCK VAR, feet) 100 + (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)
AS1000_AP_ALT_INC_1000# (A:AUTOPILOT ALTITUDE LOCK VAR, feet) 1000 + (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB_Up)
AS1000_AP_ALT_SYNC#(A:INDICATED ALTITUDE, feet) (>K:AP_ALT_VAR_SET_ENGLISH) (>H:AP_KNOB)
AS1000_AP_VNAV_Push#(L:XMLVAR_VNAVButtonValue, Bool) ! (>L:XMLVAR_VNAVButtonValue)
AS1000_MFD_ActivateMapCursor#(>H:AS1000_MFD_ActivateMapCursor)
AS1000_MFD_BARO_DEC#(>H:AS1000_MFD_BARO_DEC)
AS1000_MFD_BARO_INC#(>H:AS1000_MFD_BARO_INC)
AS1000_MFD_CLR#(>H:AS1000_MFD_CLR)
AS1000_MFD_CLR_Long#(>H:AS1000_MFD_CLR_Long)
AS1000_MFD_COM_Large_DEC#(>H:AS1000_MFD_COM_Large_DEC)
AS1000_MFD_COM_Large_INC#(>H:AS1000_MFD_COM_Large_INC)
AS1000_MFD_COM_Small_DEC#(>H:AS1000_MFD_COM_Small_DEC)
AS1000_MFD_COM_Small_INC#(>H:AS1000_MFD_COM_Small_INC)
AS1000_MFD_COM_Switch#(>H:AS1000_MFD_COM_Switch)
AS1000_MFD_COM_Switch_Long#(>H:AS1000_MFD_COM_Switch_Long)
AS1000_MFD_CRS_DEC#(>H:AS1000_MFD_CRS_DEC)
AS1000_MFD_CRS_INC#(>H:AS1000_MFD_CRS_INC)
AS1000_MFD_CRS_PUSH#(>H:AS1000_MFD_CRS_PUSH)
AS1000_MFD_DIRECTTO#(>H:AS1000_MFD_DIRECTTO)
AS1000_MFD_DeactivateMapCursor#(>H:AS1000_MFD_DeactivateMapCursor)
AS1000_MFD_ENT_Push#(>H:AS1000_MFD_ENT_Push)
AS1000_MFD_FLIGHT_DIRECTOR_PUSH#(A:AUTOPILOT MASTER, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) }
AS1000_MFD_FMS_Lower_DEC#(>H:AS1000_MFD_FMS_Lower_DEC)
AS1000_MFD_FMS_Lower_INC#(>H:AS1000_MFD_FMS_Lower_INC)
AS1000_MFD_FMS_Upper_DEC#(>H:AS1000_MFD_FMS_Upper_DEC)
AS1000_MFD_FMS_Upper_INC#(>H:AS1000_MFD_FMS_Upper_INC)
AS1000_MFD_FMS_Upper_PUSH#(>H:AS1000_MFD_FMS_Upper_PUSH)
AS1000_MFD_FPL_Push#(>H:AS1000_MFD_FPL_Push)
AS1000_MFD_HEADING_DEC#1 (>K:HEADING_BUG_DEC)
AS1000_MFD_HEADING_FAST_DEC#(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 - dnor (>K:1:HEADING_BUG_SET)
AS1000_MFD_HEADING_FAST_INC#(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 + dnor (>K:1:HEADING_BUG_SET)
AS1000_MFD_HEADING_INC#1 (>K:HEADING_BUG_INC)
AS1000_MFD_HEADING_SYNC#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
AS1000_MFD_JOYSTICK_DOWN#(>H:AS1000_MFD_JOYSTICK_DOWN)
AS1000_MFD_JOYSTICK_LEFT#(>H:AS1000_MFD_JOYSTICK_LEFT)
AS1000_MFD_JOYSTICK_PUSH#(>H:AS1000_MFD_JOYSTICK_PUSH)
AS1000_MFD_JOYSTICK_RIGHT#(>H:AS1000_MFD_JOYSTICK_RIGHT)
AS1000_MFD_JOYSTICK_UP#(>H:AS1000_MFD_JOYSTICK_UP)
AS1000_MFD_MENU_Push#(>H:AS1000_MFD_MENU_Push)
AS1000_MFD_NAV_Large_DEC#(>H:AS1000_MFD_NAV_Large_DEC)
AS1000_MFD_NAV_Large_INC#(>H:AS1000_MFD_NAV_Large_INC)
AS1000_MFD_NAV_Push#(>H:AS1000_MFD_NAV_Push)
AS1000_MFD_NAV_Small_DEC#(>H:AS1000_MFD_NAV_Small_DEC)
AS1000_MFD_NAV_Small_INC#(>H:AS1000_MFD_NAV_Small_INC)
AS1000_MFD_NAV_Switch#(>H:AS1000_MFD_NAV_Switch)
AS1000_MFD_NOSE_DN#(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_VS_VAR_DEC) (>H:AP_UP) } (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (>K:AP_SPD_VAR_INC) } (A:AUTOPILOT PITCH HOLD, Bool) if{ (>K:AP_PITCH_REF_INC_DN) }
AS1000_MFD_NOSE_UP#(A:AUTOPILOT VERTICAL HOLD, Bool) if{ (>K:AP_VS_VAR_INC) (>H:AP_DN) } (A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{ (>K:AP_SPD_VAR_DEC) } (A:AUTOPILOT PITCH HOLD, Bool) if{ (>K:AP_PITCH_REF_INC_UP) }
AS1000_MFD_PROC_Push#(>H:AS1000_MFD_PROC_Push)
AS1000_MFD_RANGE_DEC#(>H:AS1000_MFD_RANGE_DEC)
AS1000_MFD_RANGE_INC#(>H:AS1000_MFD_RANGE_INC)
AS1000_MFD_SOFTKEYS_1#(>H:AS1000_MFD_SOFTKEYS_1)
AS1000_MFD_SOFTKEYS_10#(>H:AS1000_MFD_SOFTKEYS_10)
AS1000_MFD_SOFTKEYS_11#(>H:AS1000_MFD_SOFTKEYS_11)
AS1000_MFD_SOFTKEYS_12#(>H:AS1000_MFD_SOFTKEYS_12)
AS1000_MFD_SOFTKEYS_2#(>H:AS1000_MFD_SOFTKEYS_2)
AS1000_MFD_SOFTKEYS_3#(>H:AS1000_MFD_SOFTKEYS_3)
AS1000_MFD_SOFTKEYS_4#(>H:AS1000_MFD_SOFTKEYS_4)
AS1000_MFD_SOFTKEYS_5#(>H:AS1000_MFD_SOFTKEYS_5)
AS1000_MFD_SOFTKEYS_6#(>H:AS1000_MFD_SOFTKEYS_6)
AS1000_MFD_SOFTKEYS_7#(>H:AS1000_MFD_SOFTKEYS_7)
AS1000_MFD_SOFTKEYS_8#(>H:AS1000_MFD_SOFTKEYS_8)
AS1000_MFD_SOFTKEYS_9#(>H:AS1000_MFD_SOFTKEYS_9)
AS1000_MFD_VOL_1_DEC#(>H:AS1000_MFD_VOL_1_DEC)
AS1000_MFD_VOL_1_INC#(>H:AS1000_MFD_VOL_1_INC)
AS1000_MFD_VOL_2_DEC#(>H:AS1000_MFD_VOL_2_DEC)
AS1000_MFD_VOL_2_INC#(>H:AS1000_MFD_VOL_2_INC)
AS1000_MID_ADF_Push#(>H:AS1000_MID_ADF_Push)
AS1000_MID_AUX_Push#(>H:AS1000_MID_AUX_Push)
AS1000_MID_COM_1_Push#(>H:AS1000_MID_COM_1_Push)
AS1000_MID_COM_2_Push#(>H:AS1000_MID_COM_2_Push)
AS1000_MID_COM_3_Push#(>H:AS1000_MID_COM_3_Push)
AS1000_MID_COM_Mic_1_Push#(>H:AS1000_MID_COM_Mic_1_Push)
AS1000_MID_COM_Mic_2_Push#(>H:AS1000_MID_COM_Mic_2_Push)
AS1000_MID_COM_Mic_3_Push#(>H:AS1000_MID_COM_Mic_3_Push)
AS1000_MID_COM_Swap_1_2_Push#(>H:AS1000_MID_COM_Swap_1_2_Push)
AS1000_MID_DME_Push#(>H:AS1000_MID_DME_Push)
AS1000_MID_HI_SENS_Push#(>H:AS1000_MID_HI_SENS_Push)
AS1000_MID_Isolate_Copilot_Push#(>H:AS1000_MID_Isolate_Copilot_Push)
AS1000_MID_Isolate_Pilot_Push#(>H:AS1000_MID_Isolate_Pilot_Push)
AS1000_MID_MAN_SQ_Push#(>H:AS1000_MID_MAN_SQ_Push)
AS1000_MID_MKR_Mute_Push#(>H:AS1000_MID_MKR_Mute_Push)
AS1000_MID_NAV_1_Push#(>H:AS1000_MID_NAV_1_Push)
AS1000_MID_NAV_2_Push#(>H:AS1000_MID_NAV_2_Push)
AS1000_MID_PA_Push#(>H:AS1000_MID_PA_Push)
AS1000_MID_Pass_Copilot_DEC#(>H:AS1000_MID_Pass_Copilot_DEC)
AS1000_MID_Pass_Copilot_INC#(>H:AS1000_MID_Pass_Copilot_INC)
AS1000_MID_Play_Push#(>H:AS1000_MID_Play_Push)
AS1000_MID_SPKR_Push#(>H:AS1000_MID_SPKR_Push)
AS1000_MID_TEL_Push#(>H:AS1000_MID_TEL_Push)
AS1000_PFD_ActivateMapCursor#(>H:AS1000_PFD_ActivateMapCursor)
AS1000_PFD_BARO_DEC#(>H:AS1000_PFD_BARO_DEC)
AS1000_PFD_BARO_INC#(>H:AS1000_PFD_BARO_INC)
AS1000_PFD_CLR#(>H:AS1000_PFD_CLR)
AS1000_PFD_CLR_Long#(>H:AS1000_PFD_CLR_Long)
AS1000_PFD_COM_Large_DEC#(>H:AS1000_PFD_COM_Large_DEC)
AS1000_PFD_COM_Large_INC#(>H:AS1000_PFD_COM_Large_INC)
AS1000_PFD_COM_Push#(>H:AS1000_PFD_COM_Push)
AS1000_PFD_COM_Small_DEC#(>H:AS1000_PFD_COM_Small_DEC)
AS1000_PFD_COM_Small_INC#(>H:AS1000_PFD_COM_Small_INC)
AS1000_PFD_COM_Switch#(>H:AS1000_PFD_COM_Switch)
AS1000_PFD_COM_Switch_Long#(>H:AS1000_PFD_COM_Switch_Long)
AS1000_PFD_CRS_DEC#(>H:AS1000_PFD_CRS_DEC)
AS1000_PFD_CRS_INC#(>H:AS1000_PFD_CRS_INC)
AS1000_PFD_DIRECTTO#(>H:AS1000_PFD_DIRECTTO)
AS1000_PFD_DeactivateMapCursor#(>H:AS1000_PFD_DeactivateMapCursor)
AS1000_PFD_ENT_Push#(>H:AS1000_PFD_ENT_Push)
AS1000_PFD_FMS_Lower_INC#(>H:AS1000_PFD_FMS_Lower_INC)
AS1000_PFD_FMS_Upper_DEC#(>H:AS1000_PFD_FMS_Upper_DEC)
AS1000_PFD_FMS_Upper_INC#(>H:AS1000_PFD_FMS_Upper_INC)
AS1000_PFD_FMS_Upper_PUSH#(>H:AS1000_PFD_FMS_Upper_PUSH)
AS1000_PFD_FPL_Push#(>H:AS1000_PFD_FPL_Push)
AS1000_PFD_HEADING_DEC#1 (>K:HEADING_BUG_DEC)
AS1000_PFD_HEADING_FAST_DEC#(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 - dnor (>K:1:HEADING_BUG_SET)
AS1000_PFD_HEADING_FAST_INC#(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 + dnor (>K:1:HEADING_BUG_SET)
AS1000_PFD_HEADING_INC#1 (>K:HEADING_BUG_INC)
AS1000_PFD_HEADING_SYNC#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
AS1000_PFD_JOYSTICK_DOWN#(>H:AS1000_PFD_JOYSTICK_DOWN)
AS1000_PFD_JOYSTICK_LEFT#(>H:AS1000_PFD_JOYSTICK_LEFT)
AS1000_PFD_JOYSTICK_PUSH#(>H:AS1000_PFD_JOYSTICK_PUSH)
AS1000_PFD_JOYSTICK_RIGHT#(>H:AS1000_PFD_JOYSTICK_RIGHT)
AS1000_PFD_JOYSTICK_UP#(>H:AS1000_PFD_JOYSTICK_UP)
AS1000_PFD_MENU_Push#(>H:AS1000_PFD_MENU_Push)
AS1000_PFD_NAV_Large_DEC#(>H:AS1000_PFD_NAV_Large_DEC)
AS1000_PFD_NAV_Large_INC#(>H:AS1000_PFD_NAV_Large_INC)
AS1000_PFD_NAV_Push#(>H:AS1000_PFD_NAV_Push)
AS1000_PFD_NAV_Small_DEC#(>H:AS1000_PFD_NAV_Small_DEC)
AS1000_PFD_NAV_Small_INC#(>H:AS1000_PFD_NAV_Small_INC)
AS1000_PFD_NAV_Switch#(>H:AS1000_PFD_NAV_Switch)
AS1000_PFD_PROC_Push#(>H:AS1000_PFD_PROC_Push)
AS1000_PFD_RANGE_DEC#(>H:AS1000_PFD_RANGE_DEC)
AS1000_PFD_RANGE_INC#(>H:AS1000_PFD_RANGE_INC)
AS1000_PFD_SOFTKEYS_1#(>H:AS1000_PFD_SOFTKEYS_1)
AS1000_PFD_SOFTKEYS_10#(>H:AS1000_PFD_SOFTKEYS_10)
AS1000_PFD_SOFTKEYS_11#(>H:AS1000_PFD_SOFTKEYS_11)
AS1000_PFD_SOFTKEYS_12#(>H:AS1000_PFD_SOFTKEYS_12)
AS1000_PFD_SOFTKEYS_2#(>H:AS1000_PFD_SOFTKEYS_2)
AS1000_PFD_SOFTKEYS_3#(>H:AS1000_PFD_SOFTKEYS_3)
AS1000_PFD_SOFTKEYS_4#(>H:AS1000_PFD_SOFTKEYS_4)
AS1000_PFD_SOFTKEYS_5#(>H:AS1000_PFD_SOFTKEYS_5)
AS1000_PFD_SOFTKEYS_6#(>H:AS1000_PFD_SOFTKEYS_6)
AS1000_PFD_SOFTKEYS_7#(>H:AS1000_PFD_SOFTKEYS_7)
AS1000_PFD_SOFTKEYS_8#(>H:AS1000_PFD_SOFTKEYS_8)
AS1000_PFD_SOFTKEYS_9#(>H:AS1000_PFD_SOFTKEYS_9)
AS1000_PFD_VOL_1_DEC#(>H:AS1000_PFD_VOL_1_DEC)
AS1000_PFD_VOL_2_DEC#(>H:AS1000_PFD_VOL_2_DEC)
AS1000_PFD_VOL_2_INC#(>H:AS1000_PFD_VOL_2_INC)
AS3000_MFD_SOFTKEYS_1#(>H:AS3000_MFD_SOFTKEYS_1)
AS3000_MFD_SOFTKEYS_10#(>H:AS3000_MFD_SOFTKEYS_10)
AS3000_MFD_SOFTKEYS_11#(>H:AS3000_MFD_SOFTKEYS_11)
AS3000_MFD_SOFTKEYS_12#(>H:AS3000_MFD_SOFTKEYS_12)
AS3000_MFD_SOFTKEYS_2#(>H:AS3000_MFD_SOFTKEYS_2)
AS3000_MFD_SOFTKEYS_3#(>H:AS3000_MFD_SOFTKEYS_3)
AS3000_MFD_SOFTKEYS_4#(>H:AS3000_MFD_SOFTKEYS_4)
AS3000_MFD_SOFTKEYS_5#(>H:AS3000_MFD_SOFTKEYS_5)
AS3000_MFD_SOFTKEYS_6#(>H:AS3000_MFD_SOFTKEYS_6)
AS3000_MFD_SOFTKEYS_7#(>H:AS3000_MFD_SOFTKEYS_7)
AS3000_MFD_SOFTKEYS_8#(>H:AS3000_MFD_SOFTKEYS_8)
AS3000_MFD_SOFTKEYS_9#(>H:AS3000_MFD_SOFTKEYS_9)
AS3000_PFD_BottomKnob_Large_DEC#(>H:AS3000_PFD_BottomKnob_Large_DEC)
AS3000_PFD_BottomKnob_Large_INC#(>H:AS3000_PFD_BottomKnob_Large_INC)
AS3000_PFD_BottomKnob_Push#(>H:AS3000_PFD_BottomKnob_Push)
AS3000_PFD_BottomKnob_Push_Long#(>H:AS3000_PFD_BottomKnob_Push_Long)
AS3000_PFD_BottomKnob_Small_DEC#(>H:AS3000_PFD_BottomKnob_Small_DEC)
AS3000_PFD_BottomKnob_Small_INC#(>H:AS3000_PFD_BottomKnob_Small_INC)
AS3000_PFD_SOFTKEYS_1#(>H:AS3000_PFD_SOFTKEYS_1)
AS3000_PFD_SOFTKEYS_10#(>H:AS3000_PFD_SOFTKEYS_10)
AS3000_PFD_SOFTKEYS_11#(>H:AS3000_PFD_SOFTKEYS_11)
AS3000_PFD_SOFTKEYS_12#(>H:AS3000_PFD_SOFTKEYS_12)
AS3000_PFD_SOFTKEYS_2#(>H:AS3000_PFD_SOFTKEYS_2)
AS3000_PFD_SOFTKEYS_3#(>H:AS3000_PFD_SOFTKEYS_3)
AS3000_PFD_SOFTKEYS_4#(>H:AS3000_PFD_SOFTKEYS_4)
AS3000_PFD_SOFTKEYS_5#(>H:AS3000_PFD_SOFTKEYS_5)
AS3000_PFD_SOFTKEYS_6#(>H:AS3000_PFD_SOFTKEYS_6)
AS3000_PFD_SOFTKEYS_7#(>H:AS3000_PFD_SOFTKEYS_7)
AS3000_PFD_SOFTKEYS_8#(>H:AS3000_PFD_SOFTKEYS_8)
AS3000_PFD_SOFTKEYS_9#(>H:AS3000_PFD_SOFTKEYS_9)
AS3000_PFD_TopKnob_Large_DEC#(>H:AS3000_PFD_TopKnob_Large_DEC)
AS3000_PFD_TopKnob_Large_INC#(>H:AS3000_PFD_TopKnob_Large_INC)
AS3000_PFD_TopKnob_Small_DEC#(>H:AS3000_PFD_TopKnob_Small_DEC)
AS3000_PFD_TopKnob_Small_INC#(>H:AS3000_PFD_TopKnob_Small_INC)
AS3X_Touch_1_Back_Push#(>H:AS3X_Touch_1_Back_Push)
AS3X_Touch_1_DirectTo_Push#(>H:AS3X_Touch_1_DirectTo_Push)
AS3X_Touch_1_Knob_Inner_L_DEC#(>H:AS3X_Touch_1_Knob_Inner_L_DEC)
AS3X_Touch_1_Knob_Inner_L_INC#(>H:AS3X_Touch_1_Knob_Inner_L_INC)
AS3X_Touch_1_Knob_Inner_R_DEC#(>H:AS3X_Touch_1_Knob_Inner_R_DEC)
AS3X_Touch_1_Knob_Inner_R_INC#(>H:AS3X_Touch_1_Knob_Inner_R_INC)
AS3X_Touch_1_Knob_Outer_L_DEC#(>H:AS3X_Touch_1_Knob_Outer_L_DEC)
AS3X_Touch_1_Knob_Outer_L_INC#(>H:AS3X_Touch_1_Knob_Outer_L_INC)
AS3X_Touch_1_Knob_Outer_R_DEC#(>H:AS3X_Touch_1_Knob_Outer_R_DEC)
AS3X_Touch_1_Knob_Outer_R_INC#(>H:AS3X_Touch_1_Knob_Outer_R_INC)
AS3X_Touch_1_Menu_Push#(>H:AS3X_Touch_1_Menu_Push)
AS3X_Touch_1_NRST_Push#(>H:AS3X_Touch_1_NRST_Push)
AS1000_MFD_COM_Push#(>H:AS1000_MFD_COM_Push)
AS1000_MFD_FLC_Push#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)
AS1000_MID_Display_Backup_Push#(L:AS1000_MID_Display_Backup_Active) ! (>L:AS1000_MID_Display_Backup_Active)
AS1000_PFD_CRS_PUSH#(>H:AS1000_PFD_CRS_PUSH)
AS1000_PFD_FMS_Lower_DEC#(>H:AS1000_PFD_FMS_Lower_DEC)
AS1000_PFD_VOL_1_INC#(>H:AS1000_PFD_VOL_1_INC)
AS3X_Touch_1_Knob_Inner_L_PUSH#(>H:AS3X_Touch_1_Knob_Inner_L_PUSH)
AS3X_Touch_1_Knob_Inner_R_PUSH#(>H:AS3X_Touch_1_Knob_Inner_R_PUSH)
AS430_CDI_Push#(>H:AS430_CDI_Push)
AS430_CLR_Push#(>H:AS430_CLR_Push)
AS430_CLR_Push_Long#(>H:AS430_CLR_Push_Long)
AS430_COMSWAP_Push#(>H:AS430_COMSWAP_Push)
AS430_DirectTo_Push#(>H:AS430_DirectTo_Push)
AS430_ENT_Push#(>H:AS430_ENT_Push)
AS430_FPL_Push#(>H:AS430_FPL_Push)
AS430_LeftLargeKnob_Left#(>H:AS430_LeftLargeKnob_Left)
AS430_LeftLargeKnob_Right#(>H:AS430_LeftLargeKnob_Right)
AS430_LeftSmallKnob_Left#(>H:AS430_LeftSmallKnob_Left)
AS430_LeftSmallKnob_Push#(>H:AS430_LeftSmallKnob_Push)
AS430_LeftSmallKnob_Right#(>H:AS430_LeftSmallKnob_Right)
AS430_MENU_Push#(>H:AS430_MENU_Push)
AS430_MSG_Push#(>H:AS430_MSG_Push)
AS430_NAVSWAP_Push#(>H:AS430_NAVSWAP_Push)
AS430_OBS_Push#(>H:AS430_OBS_Push)
AS430_PROC_Push#(>H:AS430_PROC_Push)
AS430_RNG_Dezoom#(>H:AS430_RNG_Dezoom)
AS430_RNG_Zoom#(>H:AS430_RNG_Zoom)
AS430_RightLargeKnob_Left#(>H:AS430_RightLargeKnob_Left)
AS430_RightLargeKnob_Right#(>H:AS430_RightLargeKnob_Right)
AS430_RightSmallKnob_Left#(>H:AS430_RightSmallKnob_Left)
AS430_RightSmallKnob_Push#(>H:AS430_RightSmallKnob_Push)
AS430_RightSmallKnob_Right#(>H:AS430_RightSmallKnob_Right)
AS530_CDI_Push#(>H:AS530_CDI_Push)
AS530_CLR_Push#(>H:AS530_CLR_Push)
AS530_CLR_Push_Long#(>H:AS530_CLR_Push_Long)
AS530_COMSWAP_Push#(>H:AS530_COMSWAP_Push)
AS530_DirectTo_Push#(>H:AS530_DirectTo_Push)
AS530_ENT_Push#(>H:AS530_ENT_Push)
AS530_FPL_Push#(>H:AS530_FPL_Push)
AS530_LeftLargeKnob_Left#(>H:AS530_LeftLargeKnob_Left)
AS530_LeftLargeKnob_Right#(>H:AS530_LeftLargeKnob_Right)
AS530_LeftSmallKnob_Left#(>H:AS530_LeftSmallKnob_Left)
AS530_LeftSmallKnob_Push#(>H:AS530_LeftSmallKnob_Push)
AS530_LeftSmallKnob_Right#(>H:AS530_LeftSmallKnob_Right)
AS530_MENU_Push#(>H:AS530_MENU_Push)
AS530_MSG_Push#(>H:AS530_MSG_Push)
AS530_NAVSWAP_Push#(>H:AS530_NAVSWAP_Push)
AS530_OBS_Push#(>H:AS530_OBS_Push)
AS530_PROC_Push#(>H:AS530_PROC_Push)
AS530_RNG_Dezoom#(>H:AS530_RNG_Dezoom)
AS530_RNG_Zoom#(>H:AS530_RNG_Zoom)
AS530_RightLargeKnob_Left#(>H:AS530_RightLargeKnob_Left)
AS530_RightLargeKnob_Right#(>H:AS530_RightLargeKnob_Right)
AS530_RightSmallKnob_Left#(>H:AS530_RightSmallKnob_Left)
AS530_RightSmallKnob_Push#(>H:AS530_RightSmallKnob_Push)
AS530_RightSmallKnob_Right#(>H:AS530_RightSmallKnob_Right)
AS530_VNAV_Push#(>H:AS530_VNAV_Push)
AUDIO_PANEL_VOLUME_DEC#(A:AUDIO PANEL VOLUME,Percent) -- 0 max (>K:AUDIO_PANEL_VOLUME_SET) 
AUDIO_PANEL_VOLUME_INC#(A:AUDIO PANEL VOLUME,Percent) ++ 100 min (>K:AUDIO_PANEL_VOLUME_SET) 
AVIONICS_MASTER_1_OFF#(>K:AVIONICS_MASTER_1_OFF)
AVIONICS_MASTER_1_ON#(>K:AVIONICS_MASTER_1_ON)
AVIONICS_MASTER_2_OFF#(>K:AVIONICS_MASTER_2_OFF)
AVIONICS_MASTER_2_ON#(>K:AVIONICS_MASTER_2_ON)
AVIONICS_MASTER_SWITCH_OFF#0 (>K:AVIONICS_MASTER_SET)
AVIONICS_MASTER_SWITCH_ON#1 (>K:AVIONICS_MASTER_SET)
BAROMETRIC_STD_PRESSURE#(>K:BAROMETRIC_STD_PRESSURE)
BARO_1_DEC#0 (>K:KOHLSMAN_DEC)
BARO_1_INC#0 (>K:KOHLSMAN_INC)
BARO_2_DEC#1 (>K:KOHLSMAN_DEC)
BARO_2_INC#1 (>K:KOHLSMAN_INC)
BARO_3_DEC#2 (>K:KOHLSMAN_DEC)
BARO_3_INC#2 (>K:KOHLSMAN_INC)
BARO_DEC_inHg_0_01#(A:KOHLSMAN SETTING HG:1, inHg) 0.01 - 33.8639 * 16 * (>K:KOHLSMAN_SET)
BARO_DEC_inHg_0_1#(A:KOHLSMAN SETTING HG:1, inHg) 0.1 - 33.8639 * 16 * (>K:KOHLSMAN_SET)
BARO_DEC_inHg_1#(A:KOHLSMAN SETTING HG:1, inHg) 1 - 33.8639 * 16 * (>K:KOHLSMAN_SET)
BARO_INC_inHg_0_01#(A:KOHLSMAN SETTING HG:1, inHg) 0.01 + 33.8639 * 16 * (>K:KOHLSMAN_SET)
BARO_INC_inHg_0_1#(A:KOHLSMAN SETTING HG:1, inHg) 0.1 + 33.8639 * 16 * (>K:KOHLSMAN_SET)
BARO_INC_inHg_1#(A:KOHLSMAN SETTING HG:1, inHg) 1 + 33.8639 * 16 * (>K:KOHLSMAN_SET)
TRANSPONDER_STATE#state (>A:TRANSPONDER STATE, enum)
Transponder0#(>H:Transponder0)
Transponder1#(>H:Transponder1)
Transponder2#(>H:Transponder2)
Transponder3#(>H:Transponder3)
Transponder4#(>H:Transponder4)
Transponder5#(>H:Transponder5)
Transponder6#(>H:Transponder6)
Transponder7#(>H:Transponder7)
TransponderCRSR#(>H:TransponderCRSR)
TransponderFUNC#(>H:TransponderFUNC)
TransponderSTARTSTOP#(>H:TransponderSTARTSTOP)
KAP140_Knob_Inner_DEC#(>H:KAP140_Knob_Inner_DEC)
KAP140_Knob_Inner_INC#(>H:KAP140_Knob_Inner_INC)
KAP140_Knob_Outer_DEC#(>H:KAP140_Knob_Outer_DEC)
KAP140_Knob_Outer_INC#(>H:KAP140_Knob_Outer_INC)
KAP140_Long_Push_BARO#(>H:KAP140_Long_Push_BARO)
KAP140_Push_ALT#(>H:KAP140_Push_ALT)
KAP140_Push_AP#(>H:KAP140_Push_AP)
KAP140_Push_APR#(>H:KAP140_Push_APR)
KAP140_Push_ARM#(>H:KAP140_Push_ARM)
KAP140_Push_BARO#(>H:KAP140_Push_BARO)
KAP140_Push_DN#(>H:KAP140_Push_DN)
KAP140_Push_HDG#(>H:KAP140_Push_HDG)
KAP140_Push_NAV#(>H:KAP140_Push_NAV)
KAP140_Push_REV#(>H:KAP140_Push_REV)
KAP140_Push_UP#(>H:KAP140_Push_UP)
TOGGLE_AVIONICS_MASTER#(>K:TOGGLE_AVIONICS_MASTER)
TransponderALT#4 (>A:TRANSPONDER STATE:1, Enum)
TransponderCLR#(>H:TransponderCLR)
TransponderIDT#(>K:XPNDR_IDENT_ON)
TransponderOFF#0 (>A:TRANSPONDER STATE:1, Enum)
TransponderON#3 (>A:TRANSPONDER STATE:1, Enum)
TransponderSTBY#1 (>A:TRANSPONDER STATE:1, Enum)
TransponderTST#2 (>A:TRANSPONDER STATE:1, Enum)
TransponderVFR#(>H:TransponderVFR)
adf_AntAdf#(>H:adf_AntAdf)
adf_FltEt#(>H:adf_FltEt)
adf_SetRst#(>H:adf_SetRst)
adf_bfo#(>H:adf_bfo)
adf_frqTransfert#(>H:adf_frqTransfert)
oclock_control#(>H:oclock_control)
oclock_control_long#(>H:oclock_control_long)
oclock_oat#(>H:oclock_oat)
oclock_select#(>H:oclock_select)
//Microsoft/Generic/Camera
CAPTURE_SCREENSHOT#(>K:CAPTURE_SCREENSHOT)
CHASE_VIEW_NEXT#(>K:CHASE_VIEW_NEXT)
CHASE_VIEW_PREV#(>K:CHASE_VIEW_PREV)
CHASE_VIEW_TOGGLE#(>K:CHASE_VIEW_TOGGLE)
CLOSE_VIEW#(>K:CLOSE_VIEW)
EYEPOINT_BACK#(>K:EYEPOINT_BACK)
EYEPOINT_DOWN#(>K:EYEPOINT_DOWN)
EYEPOINT_FORWARD#(>K:EYEPOINT_FORWARD)
EYEPOINT_LEFT#(>K:EYEPOINT_LEFT)
EYEPOINT_RIGHT#(>K:EYEPOINT_RIGHT)
EYEPOINT_UP#(>K:EYEPOINT_UP)
CAMERA_STATE#index (>A:CAMERA STATE, enum)
CAMERA_SUBSTATE#index (>A:CAMERA SUBSTATE, enum)
KNEEBOARD_VIEW#(>K:KNEEBOARD_VIEW)
NEW_VIEW#(>K:NEW_VIEW)
NEXT_SUB_VIEW#(>K:NEXT_SUB_VIEW)
NEXT_VIEW#(>K:NEXT_VIEW)
PAN_DOWN#(>K:PAN_DOWN)
PAN_LEFT#(>K:PAN_LEFT)
PAN_LEFT_DOWN#(>K:PAN_LEFT_DOWN)
PAN_LEFT_UP#(>K:PAN_LEFT_UP)
PAN_RIGHT#(>K:PAN_RIGHT)
PAN_RIGHT_DOWN#(>K:PAN_RIGHT_DOWN)
PAN_RIGHT_UP#(>K:PAN_RIGHT_UP)
PAN_TILT_LEFT#(>K:PAN_TILT_LEFT)
PAN_TILT_RIGHT#(>K:PAN_TILT_RIGHT)
PAN_UP#(>K:PAN_UP)
PREV_SUB_VIEW#(>K:PREV_SUB_VIEW)
PREV_VIEW#(>K:PREV_VIEW)
VIEW_ALWAYS_PAN_DOWN#(>K:VIEW_ALWAYS_PAN_DOWN)
VIEW_ALWAYS_PAN_UP#(>K:VIEW_ALWAYS_PAN_UP)
VIEW_AXIS_INDICATOR_CYCLE#(>K:VIEW_AXIS_INDICATOR_CYCLE)
VIEW_CAMERA_SELECT_START#(>K:VIEW_CAMERA_SELECT_START)
VIEW_CHASE_DISTANCE_ADD#(>K:VIEW_CHASE_DISTANCE_ADD)
VIEW_CHASE_DISTANCE_SUB#(>K:VIEW_CHASE_DISTANCE_SUB)
VIEW_COCKPIT_FORWARD#(>K:VIEW_COCKPIT_FORWARD)
VIEW_DOWN#(>K:VIEW_DOWN)
VIEW_FORWARD#(>K:VIEW_FORWARD)
VIEW_FORWARD_LEFT#(>K:VIEW_FORWARD_LEFT)
VIEW_FORWARD_LEFT_UP#(>K:VIEW_FORWARD_LEFT_UP)
VIEW_FORWARD_RIGHT#(>K:VIEW_FORWARD_RIGHT)
VIEW_FORWARD_RIGHT_UP#(>K:VIEW_FORWARD_RIGHT_UP)
VIEW_FORWARD_UP#(>K:VIEW_FORWARD_UP)
VIEW_LEFT#(>K:VIEW_LEFT)
VIEW_LEFT_UP#(>K:VIEW_LEFT_UP)
VIEW_LINKING_TOGGLE#(>K:VIEW_LINKING_TOGGLE)
VIEW_MAP_ORIENTATION_CYCLE#(>K:VIEW_MAP_ORIENTATION_CYCLE)
VIEW_MODE#(>K:VIEW_MODE)
VIEW_MODE_REV#(>K:VIEW_MODE_REV)
VIEW_PANEL_ALPHA_DEC#(>K:VIEW_PANEL_ALPHA_DEC)
VIEW_PANEL_ALPHA_INC#(>K:VIEW_PANEL_ALPHA_INC)
VIEW_PANEL_ALPHA_SELECT#(>K:VIEW_PANEL_ALPHA_SELECT)
VIEW_PREVIOUS_TOGGLE#(>K:VIEW_PREVIOUS_TOGGLE)
VIEW_REAR#(>K:VIEW_REAR)
VIEW_REAR_LEFT#(>K:VIEW_REAR_LEFT)
VIEW_REAR_LEFT_UP#(>K:VIEW_REAR_LEFT_UP)
VIEW_REAR_RIGHT#(>K:VIEW_REAR_RIGHT)
VIEW_REAR_RIGHT_UP#(>K:VIEW_REAR_RIGHT_UP)
VIEW_REAR_UP#(>K:VIEW_REAR_UP)
VIEW_RIGHT#(>K:VIEW_RIGHT)
VIEW_RIGHT_UP#(>K:VIEW_RIGHT_UP)
VIEW_TRACK_PAN_TOGGLE#(>K:VIEW_TRACK_PAN_TOGGLE)
VIEW_UP#(>K:VIEW_UP)
VIEW_VIRTUAL_COCKPIT_FORWARD#(>K:VIEW_VIRTUAL_COCKPIT_FORWARD)
VIEW_WINDOW_TITLES_TOGGLE#(>K:VIEW_WINDOW_TITLES_TOGGLE)
VIEW_WINDOW_TO_FRONT#(>K:VIEW_WINDOW_TO_FRONT)
ZOOM_1X#(>K:ZOOM_1X)
ZOOM_IN#(>K:ZOOM_IN)
ZOOM_IN_FINE#(>K:ZOOM_IN_FINE)
ZOOM_MINUS#(>K:ZOOM_MINUS)
ZOOM_OUT#(>K:ZOOM_OUT)
ZOOM_OUT_FINE#(>K:ZOOM_OUT_FINE)
ZOOM_PLUS#(>K:ZOOM_PLUS)
//Microsoft/Generic/Controls
AILERONS_LEFT#(>K:AILERONS_LEFT)
AILERONS_RIGHT#(>K:AILERONS_RIGHT)
AILERON_TRIM_LEFT#(>K:AILERON_TRIM_LEFT)
AILERON_TRIM_RIGHT#(>K:AILERON_TRIM_RIGHT)
CENTER_AILER_RUDDER#(>K:CENTER_AILER_RUDDER)
DEC_AUTOBRAKE_CONTROL#(>K:DEC_AUTOBRAKE_CONTROL)
ELEV_DOWN#(>K:ELEV_DOWN)
ELEV_TRIM_DN#(>K:ELEV_TRIM_DN)
ELEV_TRIM_UP#(>K:ELEV_TRIM_UP)
ELEV_UP#(>K:ELEV_UP)
Elevator_Trim_Fast_Dec#(A:ELEVATOR TRIM PCT,Percent) -- 163.83 * -16383 max (>K:ELEVATOR_TRIM_SET)
Elevator_Trim_Fast_Inc#(A:ELEVATOR TRIM PCT,Percent) ++ 163.83 * 16383 min (>K:ELEVATOR_TRIM_SET)
FLAPS_1#(>K:FLAPS_1)
FLAPS_2#(>K:FLAPS_2)
FLAPS_3#(>K:FLAPS_3)
FLAPS_DOWN#(>K:FLAPS_DOWN)
FLAPS_INCR#(>K:FLAPS_INCR)
INC_AUTOBRAKE_CONTROL#(>K:INC_AUTOBRAKE_CONTROL)
AUTORUDDER_TOGGLE#(>K:AUTORUDDER_TOGGLE)
AXIS_RUDDER_SET#(>K:AXIS_RUDDER_SET)
BRAKES#(>K:BRAKES)
BRAKES_LEFT#(>K:BRAKES_LEFT)
BRAKES_RIGHT#(>K:BRAKES_RIGHT)
FLAPS_DECR#(>K:FLAPS_DECR)
FLAPS_UP#(>K:FLAPS_UP)
HELI_COLLECTIVE_DECR#(>K:COLLECTIVE_DECR)
HELI_COLLECTIVE_INCR#(>K:COLLECTIVE_INCR)
HELI_CYCLIC_LATERAL_LEFT#(>K:CYCLIC_LATERAL_LEFT)
HELI_CYCLIC_LATERAL_RIGHT#(>K:CYCLIC_LATERAL_RIGHT)
HELI_CYCLIC_LONGITUDINAL_DOWN#(>K:CYCLIC_LONGITUDINAL_DOWN)
HELI_CYCLIC_LONGITUDINAL_UP#(>K:CYCLIC_LONGITUDINAL_UP)
HELI_DECREASE_HELO_GOV_BEEP#(>K:DECREASE_HELO_GOV_BEEP)
HELI_INCREASE_HELO_GOV_BEEP#(>K:INCREASE_HELO_GOV_BEEP)
RUDDER_TRIM_LEFT#(>K:RUDDER_TRIM_LEFT)
RUDDER_TRIM_RIGHT#(>K:RUDDER_TRIM_RIGHT)
RUDDER_CENTER#(>K:RUDDER_CENTER)
RUDDER_LEFT#(>K:RUDDER_LEFT)
RUDDER_RIGHT#(>K:RUDDER_RIGHT)
SPOILERS_ARM_OFF#(>K:SPOILERS_ARM_OFF)
SPOILERS_ARM_ON#(>K:SPOILERS_ARM_ON)
SPOILERS_ARM_TOGGLE#(>K:SPOILERS_ARM_TOGGLE)
SPOILERS_DEC#(>K:SPOILERS_DEC)
SPOILERS_INC#(>K:SPOILERS_INC)
SPOILERS_OFF#(>K:SPOILERS_OFF)
SPOILERS_ON#(>K:SPOILERS_ON)
SPOILERS_TOGGLE#(>K:SPOILERS_TOGGLE)
PARKING_BRAKES_TOGGLE#(>K:PARKING_BRAKES)
PARKING_BRAKES_OFF#0 (>K:PARKING_BRAKE_SET)
PARKING_BRAKES_ON#1 (>K:PARKING_BRAKE_SET)
ROTOR_BRAKE#(>K:ROTOR_BRAKE)
RUDDER_TRIM_RESET#(>K:RUDDER_TRIM_RESET) 
TOGGLE_LEFT_BRAKE_FAILURE#(>K:TOGGLE_LEFT_BRAKE_FAILURE)
TOGGLE_RIGHT_BRAKE_FAILURE#(>K:TOGGLE_RIGHT_BRAKE_FAILURE)
TOGGLE_TOTAL_BRAKE_FAILURE#(>K:TOGGLE_TOTAL_BRAKE_FAILURE)
//Microsoft/Generic/Electrical
APU_GENERATOR_SWITCH_TOGGLE#(>K:APU_GENERATOR_SWITCH_TOGGLE)
BATTERY_OFF#(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
BATTERY_ON#(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
ALTERNATOR_1_OFF#1 (>K:ALTERNATOR_OFF) 
ALTERNATOR_1_ON#1 (>K:ALTERNATOR_ON) 
ALTERNATOR_2_OFF#2 (>K:ALTERNATOR_OFF) 
ALTERNATOR_2_ON#2 (>K:ALTERNATOR_ON) 
ALTERNATOR_SET#(>K:2:ALTERNATOR_SET)
APU_BLEED_AIR_SOURCE_SET#(>K:APU_BLEED_AIR_SOURCE_SET)
APU_BLEED_AIR_SOURCE_TOGGLE#(>K:APU_BLEED_AIR_SOURCE_TOGGLE)
APU_EXTINGUISH_FIRE#(>K:APU_EXTINGUISH_FIRE)
APU_GENERATOR_SWITCH_SET#(>K:2:APU_GENERATOR_SWITCH_SET)
APU_OFF_SWITCH#(>K:APU_OFF_SWITCH)
APU_STARTER#(>K:APU_STARTER)
BATTERY1_SET#(>K:BATTERY1_SET)
BATTERY2_SET#(>K:BATTERY2_SET)
BATTERY3_SET#(>K:BATTERY3_SET)
BATTERY4_SET#(>K:BATTERY4_SET)
ELECTRICAL_BATTERY_BREAKER_TOGGLE#(>K:2:ELECTRICAL_BATTERY_BREAKER_TOGGLE)
EXTERNAL_POWER_TOGGLE#(>K:TOGGLE_EXTERNAL_POWER)
MAGNETO#(>K:MAGNETO)
MASTER_BATTERY_1_OFF#1 (>K:MASTER_BATTERY_OFF)
MASTER_BATTERY_1_ON#1 (>K:MASTER_BATTERY_ON)
MASTER_BATTERY_2_OFF#2 (>K:MASTER_BATTERY_OFF)
MASTER_BATTERY_2_ON#2 (>K:MASTER_BATTERY_ON)
MASTER_BATTERY_SET#(>K:2:MASTER_BATTERY_SET)
TOGGLE_MASTER_BATTERY_ALTERNATOR#(>K:TOGGLE_MASTER_BATTERY_ALTERNATOR)
TOGGLE_ALTERNATOR1#(>K:TOGGLE_ALTERNATOR1)
TOGGLE_ALTERNATOR2#(>K:TOGGLE_ALTERNATOR2)
TOGGLE_ALTERNATOR3#(>K:TOGGLE_ALTERNATOR3)
TOGGLE_ALTERNATOR4#(>K:TOGGLE_ALTERNATOR4)
TOGGLE_ELECTRICAL_FAILURE#(>K:TOGGLE_ELECTRICAL_FAILURE)
TOGGLE_MASTER_ALTERNATOR#(>K:TOGGLE_MASTER_ALTERNATOR)
TOGGLE_MASTER_BATTERY#(>K:TOGGLE_MASTER_BATTERY)
//Microsoft/Generic/Engine
HELI_ROTOR_BRAKE_OFF#(>K:ROTOR_BRAKE_OFF)
HELI_ROTOR_BRAKE_ON#(>K:ROTOR_BRAKE_ON)
HELI_ROTOR_BRAKE_SET#(>K:ROTOR_BRAKE_SET)
HELI_ROTOR_BRAKE_TOGGLE#(>K:ROTOR_BRAKE_TOGGLE)
HELI_ROTOR_CLUTCH_SWITCH_SET#(>K:ROTOR_CLUTCH_SWITCH_SET)
HELI_ROTOR_CLUTCH_SWITCH_TOGGLE#(>K:ROTOR_CLUTCH_SWITCH_TOGGLE)
HELI_ROTOR_GOV_SWITCH_OFF#(>K:ROTOR_GOV_SWITCH_OFF)
HELI_ROTOR_GOV_SWITCH_ON#(>K:ROTOR_GOV_SWITCH_ON)
HELI_ROTOR_GOV_SWITCH_SET#(>K:ROTOR_GOV_SWITCH_SET)
HELI_ROTOR_GOV_SWITCH_TOGGLE#(>K:ROTOR_GOV_SWITCH_TOGGLE)
HELI_ROTOR_LATERAL_TRIM_DEC#(>K:ROTOR_LATERAL_TRIM_DEC)
HELI_ROTOR_LATERAL_TRIM_INC#(>K:ROTOR_LATERAL_TRIM_INC)
HELI_ROTOR_LONGITUDINAL_TRIM_DEC#(>K:ROTOR_LONGITUDINAL_TRIM_DEC)
HELI_ROTOR_LONGITUDINAL_TRIM_INC#(>K:ROTOR_LONGITUDINAL_TRIM_INC)
HELI_ROTOR_TRIM_RESET#(>K:ROTOR_TRIM_RESET)
HELI_TAIL_ROTOR_DECR#(>K:TAIL_ROTOR_DECR)
HELI_TAIL_ROTOR_INCR#(>K:TAIL_ROTOR_INCR)
HELICOPTER_ENGINE_1_BEEP_TRIM_DECREASE#(>K:HELICOPTER_ENGINE_1_BEEP_TRIM_DECREASE)
HELICOPTER_ENGINE_1_BEEP_TRIM_INCREASE#(>K:HELICOPTER_ENGINE_1_BEEP_TRIM_INCREASE)
HELICOPTER_ENGINE_1_BEEP_TRIM_SET#(>K:HELICOPTER_ENGINE_1_BEEP_TRIM_SET)
HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_OFF#(>K:HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_OFF)
HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_ON#(>K:HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_ON)
HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_SET#(>K:HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_SET)
HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_TOGGLE#(>K:HELICOPTER_ENGINE_1_GOVERNOR_SWITCH_TOGGLE)
HELICOPTER_ENGINE_2_BEEP_TRIM_DECREASE#(>K:HELICOPTER_ENGINE_2_BEEP_TRIM_DECREASE)
HELICOPTER_ENGINE_2_BEEP_TRIM_INCREASE#(>K:HELICOPTER_ENGINE_2_BEEP_TRIM_INCREASE)
HELICOPTER_ENGINE_2_BEEP_TRIM_SET#(>K:HELICOPTER_ENGINE_2_BEEP_TRIM_SET)
HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_OFF#(>K:HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_OFF)
HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_ON#(>K:HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_ON)
HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_SET#(>K:HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_SET)
HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_TOGGLE#(>K:HELICOPTER_ENGINE_2_GOVERNOR_SWITCH_TOGGLE)
HELICOPTER_THROTTLE_CUT#(>K:HELICOPTER_THROTTLE_CUT)
HELICOPTER_THROTTLE_DEC#(>K:HELICOPTER_THROTTLE_DEC)
HELICOPTER_THROTTLE_FULL#(>K:HELICOPTER_THROTTLE_FULL)
HELICOPTER_THROTTLE_INC#(>K:HELICOPTER_THROTTLE_INC)
HELICOPTER_THROTTLE1_CUT#(>K:HELICOPTER_THROTTLE1_CUT)
HELICOPTER_THROTTLE1_DEC#(>K:HELICOPTER_THROTTLE1_DEC)
HELICOPTER_THROTTLE1_FULL#(>K:HELICOPTER_THROTTLE1_FULL)
HELICOPTER_THROTTLE1_INC#(>K:HELICOPTER_THROTTLE1_INC)
HELICOPTER_THROTTLE2_CUT#(>K:HELICOPTER_THROTTLE2_CUT)
HELICOPTER_THROTTLE2_DEC#(>K:HELICOPTER_THROTTLE2_DEC)
HELICOPTER_THROTTLE2_FULL#(>K:HELICOPTER_THROTTLE2_FULL)
HELICOPTER_THROTTLE2_INC#(>K:HELICOPTER_THROTTLE2_INC)
//Microsoft/Generic/Engines
DEC_THROTTLE#(>K:DEC_THROTTLE)
ENGINE#(>K:ENGINE)
ENGINE_AUTO_SHUTDOWN#(>K:ENGINE_AUTO_SHUTDOWN)
ENGINE_PRIMER#(>K:ENGINE_PRIMER)
INC_THROTTLE#(>K:INC_THROTTLE)
CONDITION_LEVER_1_DEC#(>K:CONDITION_LEVER_1_DEC)
CONDITION_LEVER_1_INC#(>K:CONDITION_LEVER_1_INC)
CONDITION_LEVER_1_SET#(>K:CONDITION_LEVER_1_SET)
CONDITION_LEVER_2_DEC#(>K:CONDITION_LEVER_2_DEC)
CONDITION_LEVER_2_INC#(>K:CONDITION_LEVER_2_INC)
CONDITION_LEVER_2_SET#(>K:CONDITION_LEVER_2_SET)
CONDITION_LEVER_3_DEC#(>K:CONDITION_LEVER_3_DEC)
CONDITION_LEVER_3_INC#(>K:CONDITION_LEVER_3_INC)
CONDITION_LEVER_3_SET#(>K:CONDITION_LEVER_3_SET)
CONDITION_LEVER_4_DEC#(>K:CONDITION_LEVER_4_DEC)
CONDITION_LEVER_4_INC#(>K:CONDITION_LEVER_4_INC)
CONDITION_LEVER_4_SET#(>K:CONDITION_LEVER_4_SET)
CONDITION_LEVER_DEC#(>K:CONDITION_LEVER_DEC)
CONDITION_LEVER_INC#(>K:CONDITION_LEVER_INC)
CONDITION_LEVER_SET#(>K:CONDITION_LEVER_SET)
ENGINE_AUTO_START#(>K:ENGINE_AUTO_START)
SET_FUEL_VALVE_ENG1_OFF#0 (>K:SET_FUEL_VALVE_ENG1)
SET_FUEL_VALVE_ENG1_ON#1 (>K:SET_FUEL_VALVE_ENG1) 
SET_FUEL_VALVE_ENG2_OFF#0 (>K:SET_FUEL_VALVE_ENG2)
SET_FUEL_VALVE_ENG2_ON#1 (>K:SET_FUEL_VALVE_ENG2)
THROTTLE_DECR#(>K:THROTTLE_DECR)
JET_STARTER#(>K:JET_STARTER)
MIXTURE1_DECR#(>K:MIXTURE1_DECR)
MIXTURE1_DECR_SMALL#(>K:MIXTURE1_DECR_SMALL)
MIXTURE1_INCR#(>K:MIXTURE1_INCR)
MIXTURE1_INCR_SMALL#(>K:MIXTURE1_INCR_SMALL)
MIXTURE1_LEAN#(>K:MIXTURE1_LEAN)
MIXTURE1_RICH#(>K:MIXTURE1_RICH)
MIXTURE2_DECR#(>K:MIXTURE2_DECR)
MIXTURE2_DECR_SMALL#(>K:MIXTURE2_DECR_SMALL)
MIXTURE2_INCR#(>K:MIXTURE2_INCR)
MIXTURE2_INCR_SMALL#(>K:MIXTURE2_INCR_SMALL)
MIXTURE2_LEAN#(>K:MIXTURE2_LEAN)
MIXTURE2_RICH#(>K:MIXTURE2_RICH)
MIXTURE3_DECR#(>K:MIXTURE3_DECR)
MIXTURE3_DECR_SMALL#(>K:MIXTURE3_DECR_SMALL)
MIXTURE3_INCR#(>K:MIXTURE3_INCR)
MIXTURE3_INCR_SMALL#(>K:MIXTURE3_INCR_SMALL)
MIXTURE3_LEAN#(>K:MIXTURE3_LEAN)
MIXTURE3_RICH#(>K:MIXTURE3_RICH)
MIXTURE4_DECR#(>K:MIXTURE4_DECR)
MIXTURE4_DECR_SMALL#(>K:MIXTURE4_DECR_SMALL)
MIXTURE4_INCR#(>K:MIXTURE4_INCR)
MIXTURE4_INCR_SMALL#(>K:MIXTURE4_INCR_SMALL)
MIXTURE4_LEAN#(>K:MIXTURE4_LEAN)
MIXTURE4_RICH#(>K:MIXTURE4_RICH)
MIXTURE_DECR#(>K:MIXTURE_DECR)
MIXTURE_DECR_SMALL#(>K:MIXTURE_DECR_SMALL)
MIXTURE_INCR#(>K:MIXTURE_INCR)
MIXTURE_INCR_SMALL#(>K:MIXTURE_INCR_SMALL)
MIXTURE_LEAN#(>K:MIXTURE_LEAN)
MIXTURE_RICH#(>K:MIXTURE_RICH)
THROTTLE1_CUT#(>K:THROTTLE1_CUT)
THROTTLE1_DECR#(>K:THROTTLE1_DECR)
THROTTLE1_DECR_SMALL#(>K:THROTTLE1_DECR_SMALL)
THROTTLE1_FULL#(>K:THROTTLE1_FULL)
THROTTLE1_INCR#(>K:THROTTLE1_INCR)
THROTTLE1_INCR_SMALL#(>K:THROTTLE1_INCR_SMALL)
THROTTLE2_CUT#(>K:THROTTLE2_CUT)
THROTTLE2_DECR#(>K:THROTTLE2_DECR)
THROTTLE2_DECR_SMALL#(>K:THROTTLE2_DECR_SMALL)
THROTTLE2_FULL#(>K:THROTTLE2_FULL)
THROTTLE2_INCR#(>K:THROTTLE2_INCR)
THROTTLE2_INCR_SMALL#(>K:THROTTLE2_INCR_SMALL)
THROTTLE3_CUT#(>K:THROTTLE3_CUT)
THROTTLE3_DECR#(>K:THROTTLE3_DECR)
THROTTLE3_DECR_SMALL#(>K:THROTTLE3_DECR_SMALL)
THROTTLE3_FULL#(>K:THROTTLE3_FULL)
THROTTLE3_INCR#(>K:THROTTLE3_INCR)
THROTTLE3_INCR_SMALL#(>K:THROTTLE3_INCR_SMALL)
THROTTLE4_CUT#(>K:THROTTLE4_CUT)
THROTTLE4_DECR#(>K:THROTTLE4_DECR)
THROTTLE4_DECR_SMALL#(>K:THROTTLE4_DECR_SMALL)
THROTTLE4_FULL#(>K:THROTTLE4_FULL)
THROTTLE4_INCR#(>K:THROTTLE4_INCR)
THROTTLE4_INCR_SMALL#(>K:THROTTLE4_INCR_SMALL)
THROTTLE_10#(>K:THROTTLE_10)
THROTTLE_20#(>K:THROTTLE_20)
THROTTLE_30#(>K:THROTTLE_30)
THROTTLE_40#(>K:THROTTLE_40)
THROTTLE_50#(>K:THROTTLE_50)
THROTTLE_60#(>K:THROTTLE_60)
THROTTLE_70#(>K:THROTTLE_70)
THROTTLE_80#(>K:THROTTLE_80)
THROTTLE_90#(>K:THROTTLE_90)
THROTTLE_CUT#(>K:THROTTLE_CUT)
THROTTLE_DECR_SMALL#(>K:THROTTLE_DECR_SMALL)
THROTTLE_FULL#(>K:THROTTLE_FULL)
THROTTLE_INCR#(>K:THROTTLE_INCR)
THROTTLE_INCR_SMALL#(>K:THROTTLE_INCR_SMALL)
THROTTLE_REVERSE_THRUST_HOLD#(>K:THROTTLE_REVERSE_THRUST_HOLD)
THROTTLE_REVERSE_THRUST_TOGGLE#(>K:THROTTLE_REVERSE_THRUST_TOGGLE)
TOGGLE_ENGINE1_FAILURE#(>K:TOGGLE_ENGINE1_FAILURE)
TOGGLE_ENGINE2_FAILURE#(>K:TOGGLE_ENGINE2_FAILURE)
TOGGLE_ENGINE3_FAILURE#(>K:TOGGLE_ENGINE3_FAILURE)
TOGGLE_ENGINE4_FAILURE#(>K:TOGGLE_ENGINE4_FAILURE)
//Microsoft/Generic/Environment
SIM_RATE#(>K:SIM_RATE)
SIM_RATE_DECR#(>K:SIM_RATE_DECR)
SIM_RATE_INCR#(>K:SIM_RATE_INCR)
SET_SIMULATOR_RATE#1 sp0  :0 (E:SIMULATION RATE, number) l0 !=  if{  (E:SIMULATION RATE, number) l0 <  if{  (>K:SIM_RATE_INCR) g0  } els{  (>K:SIM_RATE_DECR) g0  }  }
SIMUI_WINDOW_HIDESHOW#(>K:SIMUI_WINDOW_HIDESHOW)
//Microsoft/Generic/Flight Controls
HELI_AUTO_HOVER_OFF#(>K:AUTO_HOVER_OFF)
HELI_AUTO_HOVER_ON#(>K:AUTO_HOVER_ON)
HELI_AUTO_HOVER_SET#(>K:AUTO_HOVER_SET)
//Microsoft/Generic/Flight Instrumentation
GYRO_DRIFT_DEC#(>K:GYRO_DRIFT_DEC)
GYRO_DRIFT_INC#(>K:GYRO_DRIFT_INC)
HEADING_BUG_DEC#(>K:HEADING_BUG_DEC)
HEADING_BUG_INC#(>K:HEADING_BUG_INC)
HEADING_BUG_SELECT#(>K:HEADING_BUG_SELECT)
ATTITUDE_CAGE_BUTTON#(>K:ATTITUDE_CAGE_BUTTON)
GYRO_DRIFT_SET#(>K:GYRO_DRIFT_SET)
GYRO_DRIFT_SET_EX1#(>K:GYRO_DRIFT_SET_EX1)
GYRO_DRIFT_SYNC_TO_MAGNETIC_COMPASS#(A:MAGNETIC COMPASS, degrees) (>K:GYRO_DRIFT_SET_EX1)
HEADING_GYRO_SET#(>K:HEADING_GYRO_SET)
KOHLSMAN_SET#(>K:KOHLSMAN_SET)
KOHLSMAN_DEC#(>K:KOHLSMAN_DEC)
KOHLSMAN_INC#(>K:KOHLSMAN_INC)
Kohlsman_Set__in_Hg_#@ 33.8639 16 * * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_1)
Kohlsman_Set_Standard_Baro_mb#1013.25 16 * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_1)
Kohlsman_Set_mb#@ 16 * (>K:2:KOHLSMAN_SET) l0 (>L:INSTRUMENT_Altimeter_1)
RESET_MAX_RPM_INDICATOR#(>K:RESET_MAX_RPM_INDICATOR)
//Microsoft/Generic/Fuel
FUEL_DUMP_TOGGLE#(>K:FUEL_DUMP_TOGGLE)
FUEL_PUMP#(>K:FUEL_PUMP)
FUEL_SELECTOR_2_ALL#(>K:FUEL_SELECTOR_2_ALL)
FUEL_SELECTOR_2_CENTER#(>K:FUEL_SELECTOR_2_CENTER)
FUEL_SELECTOR_2_LEFT#(>K:FUEL_SELECTOR_2_LEFT)
FUEL_SELECTOR_2_LEFT_AUX#(>K:FUEL_SELECTOR_2_LEFT_AUX)
FUEL_SELECTOR_2_LEFT_MAIN#(>K:FUEL_SELECTOR_2_LEFT_MAIN)
FUEL_SELECTOR_2_OFF#(>K:FUEL_SELECTOR_2_OFF)
FUEL_SELECTOR_2_RIGHT#(>K:FUEL_SELECTOR_2_RIGHT)
FUEL_SELECTOR_2_RIGHT_AUX#(>K:FUEL_SELECTOR_2_RIGHT_AUX)
FUEL_SELECTOR_2_RIGHT_MAIN#(>K:FUEL_SELECTOR_2_RIGHT_MAIN)
FUEL_SELECTOR_3_ALL#(>K:FUEL_SELECTOR_3_ALL)
FUEL_SELECTOR_3_CENTER#(>K:FUEL_SELECTOR_3_CENTER)
FUEL_SELECTOR_3_LEFT#(>K:FUEL_SELECTOR_3_LEFT)
FUEL_SELECTOR_3_LEFT_AUX#(>K:FUEL_SELECTOR_3_LEFT_AUX)
FUEL_SELECTOR_3_LEFT_MAIN#(>K:FUEL_SELECTOR_3_LEFT_MAIN)
FUEL_SELECTOR_3_OFF#(>K:FUEL_SELECTOR_3_OFF)
FUEL_SELECTOR_3_RIGHT#(>K:FUEL_SELECTOR_3_RIGHT)
FUEL_SELECTOR_3_RIGHT_AUX#(>K:FUEL_SELECTOR_3_RIGHT_AUX)
FUEL_SELECTOR_3_RIGHT_MAIN#(>K:FUEL_SELECTOR_3_RIGHT_MAIN)
FUEL_SELECTOR_4_ALL#(>K:FUEL_SELECTOR_4_ALL)
FUEL_SELECTOR_4_CENTER#(>K:FUEL_SELECTOR_4_CENTER)
FUEL_SELECTOR_4_LEFT#(>K:FUEL_SELECTOR_4_LEFT)
FUEL_SELECTOR_4_LEFT_AUX#(>K:FUEL_SELECTOR_4_LEFT_AUX)
FUEL_SELECTOR_4_LEFT_MAIN#(>K:FUEL_SELECTOR_4_LEFT_MAIN)
FUEL_SELECTOR_4_OFF#(>K:FUEL_SELECTOR_4_OFF)
FUEL_SELECTOR_4_RIGHT#(>K:FUEL_SELECTOR_4_RIGHT)
FUEL_SELECTOR_4_RIGHT_AUX#(>K:FUEL_SELECTOR_4_RIGHT_AUX)
FUEL_SELECTOR_4_RIGHT_MAIN#(>K:FUEL_SELECTOR_4_RIGHT_MAIN)
FUEL_SELECTOR_CENTER#(>K:FUEL_SELECTOR_CENTER)
FUEL_SELECTOR_LEFT#(>K:FUEL_SELECTOR_LEFT)
FUEL_SELECTOR_LEFT_AUX#(>K:FUEL_SELECTOR_LEFT_AUX)
FUEL_SELECTOR_LEFT_MAIN#(>K:FUEL_SELECTOR_LEFT_MAIN)
FUEL_SELECTOR_OFF#(>K:FUEL_SELECTOR_OFF)
FUEL_SELECTOR_RIGHT#(>K:FUEL_SELECTOR_RIGHT)
FUEL_SELECTOR_RIGHT_AUX#(>K:FUEL_SELECTOR_RIGHT_AUX)
ADD_FUEL_QUANTITY#(>K:ADD_FUEL_QUANTITY)
FUEL_PUMP_OFF#(A:GENERAL ENG FUEL PUMP SWITCH:1,Bool) if{ (>K:TOGGLE_ELECT_FUEL_PUMP) }
FUEL_PUMP_ON#(A:GENERAL ENG FUEL PUMP SWITCH:1,Bool) ! if{ (>K:TOGGLE_ELECT_FUEL_PUMP) }
FUEL_SYSTEM_PUMP_OFF#index (>K:FUELSYSTEM_PUMP_OFF)
FUEL_SYSTEM_PUMP_ON#index (>K:FUELSYSTEM_PUMP_ON)
FUEL_SYSTEM_PUMP_SET#[0] [1] (>K:2:FUELSYSTEM_PUMP_SET)
FUEL_SYSTEM_PUMP_TOGGLE#index (>K:FUELSYSTEM_PUMP_TOGGLE)
FUEL_SYSTEM_TRIGGER_OFF#index (>K:FUELSYSTEM_TRIGGER_OFF)
FUEL_SYSTEM_TRIGGER_OFF#index (>K:FUELSYSTEM_TRIGGER_ON)
FUEL_SYSTEM_TRIGGER_SET#[0] [1] (>K:2:FUELSYSTEM_TRIGGER_SET)
FUEL_SYSTEM_TRIGGER_TOGGLE#index (>K:FUELSYSTEM_TRIGGER_TOGGLE)
FUEL_SYSTEM_VALVE_CLOSE#index (>K:FUELSYSTEM_VALVE_CLOSE)
FUEL_SYSTEM_VALVE_OPEN#index (>K:FUELSYSTEM_VALVE_OPEN)
FUEL_SYSTEM_VALVE_SET#[0] [1] (>K:2:FUELSYSTEM_VALVE_SET)
FUEL_SYSTEM_VALVE_TOGGLE#index (>K:FUELSYSTEM_VALVE_TOGGLE)
FUEL_SELECTOR_ALL#(>K:FUEL_SELECTOR_ALL)
FUEL_SELECTOR_RIGHT_MAIN#(>K:FUEL_SELECTOR_RIGHT_MAIN)
MANUAL_FUEL_PRESSURE_PUMP#(>K:MANUAL_FUEL_PRESSURE_PUMP)
REQUEST_FUEL_KEY#(>K:REQUEST_FUEL_KEY)
TOGGLE_ELECT_FUEL_PUMP#(>K:TOGGLE_ELECT_FUEL_PUMP)
TOGGLE_ELECT_FUEL_PUMP1#(>K:TOGGLE_ELECT_FUEL_PUMP1)
TOGGLE_ELECT_FUEL_PUMP2#(>K:TOGGLE_ELECT_FUEL_PUMP2)
TOGGLE_ELECT_FUEL_PUMP3#(>K:TOGGLE_ELECT_FUEL_PUMP3)
TOGGLE_ELECT_FUEL_PUMP4#(>K:TOGGLE_ELECT_FUEL_PUMP4)
TOGGLE_FUEL_VALVE_ALL#(>K:TOGGLE_FUEL_VALVE_ALL)
TOGGLE_FUEL_VALVE_ENG1#(>K:TOGGLE_FUEL_VALVE_ENG1)
TOGGLE_FUEL_VALVE_ENG2#(>K:TOGGLE_FUEL_VALVE_ENG2)
TOGGLE_FUEL_VALVE_ENG3#(>K:TOGGLE_FUEL_VALVE_ENG3)
TOGGLE_FUEL_VALVE_ENG4#(>K:TOGGLE_FUEL_VALVE_ENG4)
//Microsoft/Generic/Gear
GEAR_DOWN#(>K:GEAR_DOWN)
GEAR_TOGGLE#(>K:GEAR_TOGGLE)
GEAR_UP#(>K:GEAR_UP)
ANTISKID_BRAKES_TOGGLE#(>K:ANTISKID_BRAKES_TOGGLE)
//Microsoft/Generic/Interaction
COCKPIT_CAMERA_ZOOM_DEC#(A:COCKPIT CAMERA ZOOM,Percent) 5 - (>A:COCKPIT CAMERA ZOOM,Percent)
COCKPIT_CAMERA_ZOOM_INC#(A:COCKPIT CAMERA ZOOM,Percent) 5 + (>A:COCKPIT CAMERA ZOOM,Percent)
EXTERNAL_CAMERA_ZOOM_DEC#(A:CHASE CAMERA ZOOM,Percent) 5 - (>A:CHASE CAMERA ZOOM,Percent)
EXTERNAL_CAMERA_ZOOM_INC#(A:CHASE CAMERA ZOOM,Percent) 5 + (>A:CHASE CAMERA ZOOM,Percent)
COCKPIT-EXTERNAL-VIEW-SWAP-SWITCH#50 (>A:COCKPIT CAMERA ZOOM,Percent) 50 (>A:CHASE CAMERA ZOOM,Percent) (A:CAMERA STATE,Enum) 2 == if{ 3 (>A:CAMERA STATE,Enum) } els{ (A:CAMERA STATE,Enum) 3 == if{ 2 (>A:CAMERA STATE,Enum) }
COCKPIT-EXTERNAL-VIEW-SWAP-SWITCH_-_DUPLICATE__OLD_#50 (>A:COCKPIT CAMERA ZOOM,Percent) 50 (>A:CHASE CAMERA ZOOM,Percent) (A:CAMERA STATE,Enum) 2 == if{ 3 (>A:CAMERA STATE,Enum) } els{ (A:CAMERA STATE,Enum) 3 == if{ 2 (>A:CAMERA STATE,Enum) }
TUG_HEADING#(>K:TUG_HEADING)
TUG_SPEED#(>K:TUG_SPEED)
TOGGLE_JETWAY#(>K:TOGGLE_JETWAY)
TOGGLE_PUSHBACK#(>K:TOGGLE_PUSHBACK)
TOW_PLANE_RELEASE#(>K:TOW_PLANE_RELEASE)
TOW_PLANE_REQUEST#(>K:TOW_PLANE_REQUEST)
TUG_DISABLE#(>K:TUG_DISABLE)
//Microsoft/Generic/Lights
ALL_LIGHTS_TOGGLE#(>K:ALL_LIGHTS_TOGGLE)
BEACON_LIGHTS_OFF#(>K:BEACON_LIGHTS_OFF)
BEACON_LIGHTS_ON#(>K:BEACON_LIGHTS_ON)
BEACON_LIGHTS_SET#(>K:2:BEACON_LIGHTS_SET)
CABIN_LIGHTS_OFF#(>K:CABIN_LIGHTS_OFF)
CABIN_LIGHTS_ON#(>K:CABIN_LIGHTS_ON)
CABIN_LIGHTS_SET#(>K:2:CABIN_LIGHTS_SET)
GLARESHIELD_LIGHTS_OFF#(>K:GLARESHIELD_LIGHTS_OFF)
GLARESHIELD_LIGHTS_ON#(>K:GLARESHIELD_LIGHTS_ON)
GLARESHIELD_LIGHTS_TOGGLE#(>K:GLARESHIELD_LIGHTS_TOGGLE)
GLARESHIELD_LIGHTS_SET#(>K:2:GLARESHIELD_LIGHTS_SET)
LANDING_LIGHT_DOWN#(>K:LANDING_LIGHT_DOWN)
LANDING_LIGHT_HOME#(>K:LANDING_LIGHT_HOME)
LANDING_LIGHT_LEFT#(>K:LANDING_LIGHT_LEFT)
LANDING_LIGHT_RIGHT#(>K:LANDING_LIGHT_RIGHT)
LANDING_LIGHT_UP#(>K:LANDING_LIGHT_UP)
LANDING_LIGHTS_OFF#(>K:LANDING_LIGHTS_OFF)
LANDING_LIGHTS_ON#(>K:LANDING_LIGHTS_ON)
LANDING_LIGHTS_SET#(>K:2:LANDING_LIGHTS_SET)
LANDING_LIGHTS_TOGGLE#(>K:LANDING_LIGHTS_TOGGLE)
LIGHT_POTENTIOMETER_SET#(>K:2:LIGHT_POTENTIOMETER_SET)
LOGO_LIGHTS_OFF#0 (>K:LOGO_LIGHTS_SET)
LOGO_LIGHTS_ON#1 (>K:LOGO_LIGHTS_SET)
NAV_LIGHTS_OFF#0 (>K:NAV_LIGHTS_SET)
NAV_LIGHTS_ON#1 (>K:NAV_LIGHTS_SET)
PANEL_LIGHTS_SET__#(>K:2:PANEL_LIGHTS_SET )
PANEL_LIGHTS_TOGGLE#(>K:PANEL_LIGHTS_TOGGLE)
PEDESTRAL_LIGHTS_OFF#(>K:PEDESTRAL_LIGHTS_OFF)
PEDESTRAL_LIGHTS_ON#(>K:PEDESTRAL_LIGHTS_ON)
PEDESTRAL_LIGHTS_SET#(>K:2:PEDESTRAL_LIGHTS_SET)
PEDESTRAL_LIGHTS_TOGGLE#(>K:PEDESTRAL_LIGHTS_TOGGLE)
RECOGNITION_LIGHTS_SET#(>K:2:RECOGNITION_LIGHTS_SET)
STROBES_SET#(>K:2:STROBES_SET)
STROBES_OFF#(>K:STROBES_OFF)
STROBES_ON#(>K:STROBES_ON)
STROBES_TOGGLE#(>K:STROBES_TOGGLE)
TAXI_LIGHTS_SET#(>K:2:TAXI_LIGHTS_SET)
TOGGLE_NAV_LIGHTS#(>K:TOGGLE_NAV_LIGHTS)
PANEL_LIGHTS_OFF#(>K:PANEL_LIGHTS_OFF)
PANEL_LIGHTS_ON#(>K:PANEL_LIGHTS_ON)
TAXI_LIGHTS_OFF#0 (>K:TAXI_LIGHTS_SET)
TAXI_LIGHTS_ON#1 (>K:TAXI_LIGHTS_SET)
TOGGLE_BEACON_LIGHTS#(>K:TOGGLE_BEACON_LIGHTS)
TOGGLE_CABIN_LIGHTS#(>K:TOGGLE_CABIN_LIGHTS)
TOGGLE_LOGO_LIGHTS#(>K:TOGGLE_LOGO_LIGHTS)
TOGGLE_RECOGNITION_LIGHTS#(>K:TOGGLE_RECOGNITION_LIGHTS)
TOGGLE_TAXI_LIGHTS#(>K:TOGGLE_TAXI_LIGHTS)
TOGGLE_WING_LIGHTS#(>K:TOGGLE_WING_LIGHTS)
WING_LIGHTS_OFF#0 (>K:WING_LIGHTS_SET)
WING_LIGHTS_ON#1 (>K:WING_LIGHTS_SET)
//Microsoft/Generic/Miscellaneous
CLOCK_HOURS_SET#(>K:CLOCK_HOURS_SET)
CLOCK_MINUTES_DEC#(>K:CLOCK_MINUTES_DEC)
CLOCK_MINUTES_INC#(>K:CLOCK_MINUTES_INC)
CLOCK_MINUTES_SET#(>K:CLOCK_MINUTES_SET)
CLOCK_SECONDS_ZERO#(>K:CLOCK_SECONDS_ZERO)
Request_Ground_Power_Unit#(>K:REQUEST_POWER_SUPPLY)
Toggle_Catering#(>K:REQUEST_CATERING)
Toggle_Luggage___Baggage#(>K:REQUEST_LUGGAGE)
ZULU_DAY_SET#(>K:ZULU_DAY_SET)
ZULU_HOURS_SET#(>K:ZULU_HOURS_SET)
ZULU_MINUTES_SET#(>K:ZULU_MINUTES_SET)
ZULU_YEAR_SET#(>K:ZULU_YEAR_SET)
//Microsoft/Generic/Navigation
ADF_VOLUME_DEC#(>K:ADF_VOLUME_DEC)
ADF_VOLUME_INC#(>K:ADF_VOLUME_INC)
ADF_CARD_DEC#(>K:ADF_CARD_DEC)
ADF_CARD_INC#(>K:ADF_CARD_INC)
//Microsoft/Generic/Radio
ADF_100_DEC#(>K:ADF_100_DEC)
ADF_100_INC#(>K:ADF_100_INC)
ADF_10_DEC#(>K:ADF_10_DEC)
ADF_10_INC#(>K:ADF_10_INC)
ADF_1_DEC#(>K:ADF_1_DEC)
ADF_1_INC#(>K:ADF_1_INC)
COM1_VOLUME_DEC#(>K:COM1_VOLUME_DEC)
COM1_VOLUME_INC#(>K:COM1_VOLUME_INC)
COM1_VOLUME_SET#@ 10.23 / (>K:COM1_VOLUME_SET)
COM2_RADIO_FRACT_DEC#(>K:COM2_RADIO_FRACT_DEC)
COM2_RADIO_FRACT_DEC_CARRY#(>K:COM2_RADIO_FRACT_DEC_CARRY)
COM2_RADIO_FRACT_INC#(>K:COM2_RADIO_FRACT_INC)
COM2_RADIO_FRACT_INC_CARRY#(>K:COM2_RADIO_FRACT_INC_CARRY)
COM2_RADIO_SWAP#(>K:COM2_RADIO_SWAP)
COM2_RADIO_WHOLE_DEC#(>K:COM2_RADIO_WHOLE_DEC)
COM2_RADIO_WHOLE_INC#(>K:COM2_RADIO_WHOLE_INC)
COM2_VOLUME_SET#@ 10.23 / (>K:COM2_VOLUME_SET)
COM_RECEIVE_ALL_TOGGLE#(>K:COM_RECEIVE_ALL_TOGGLE)
COM_STBY_RADIO_SWAP#(>K:COM_STBY_RADIO_SWAP)
DME#(>K:DME)
DME1_TOGGLE#(>K:DME1_TOGGLE)
DME2_TOGGLE#(>K:DME2_TOGGLE)
DME_SELECT#(>K:DME_SELECT)
FREQUENCY_SWAP#(>K:FREQUENCY_SWAP)
ADF1_Swap_Freq#(>K:ADF1_RADIO_SWAP)
ATC#(>K:ATC)
ATC_MENU_0#(>K:ATC_MENU_0)
ATC_MENU_1#(>K:ATC_MENU_1)
ATC_MENU_2#(>K:ATC_MENU_2)
ATC_MENU_3#(>K:ATC_MENU_3)
ATC_MENU_4#(>K:ATC_MENU_4)
ATC_MENU_5#(>K:ATC_MENU_5)
ATC_MENU_6#(>K:ATC_MENU_6)
ATC_MENU_7#(>K:ATC_MENU_7)
ATC_MENU_8#(>K:ATC_MENU_8)
ATC_MENU_9#(>K:ATC_MENU_9)
COM_1_SPACING_MODE_SWITCH_TOGGLE#(>K:COM_1_SPACING_MODE_SWITCH)
COM_2_SPACING_MODE_SWITCH#(>K:COM_2_SPACING_MODE_SWITCH)
COM_3_SPACING_MODE_SWITCH#(>K:COM_3_SPACING_MODE_SWITCH)
COM_RADIO_SET#[0] (>K:COM_RADIO_SET)
COM_RADIO_SET_HZ#[0] (>K:COM_RADIO_SET_HZ)
COM_STBY_RADIO_SET#[0] (>K:COM_STBY_RADIO_SET)
COM_STBY_RADIO_SET_HZ#[0] (>K:COM_STBY_RADIO_SET_HZ)
COM1_RECEIVE_SELECT#(>K:COM1_RECEIVE_SELECT)
COM1_RECEIVE_TOGGLE#(A:COM RECEIVE EX1:1, Bool) ! (>K:COM1_RECEIVE_SELECT)
COM1_RADIO_SWAP#(>K:COM1_RADIO_SWAP)
COM1_TRANSMIT_SELECT#(>K:COM1_TRANSMIT_SELECT)
COM2_RECEIVE_SELECT#(>K:COM2_RECEIVE_SELECT) 
COM2_RECEIVE_TOGGLE#(A:COM RECEIVE EX1:2, Bool) ! (>K:COM2_RECEIVE_SELECT)
COM2_STBY_RADIO_SWAP#(>K:COM2_STBY_RADIO_SWAP)
COM2_TRANSMIT_SELECT#(>K:COM2_TRANSMIT_SELECT)
COM3_RADIO_FRACT_DEC#(>K:COM3_RADIO_FRACT_DEC)
COM3_RADIO_FRACT_INC#(>K:COM3_RADIO_FRACT_INC)
COM3_RADIO_SWAP#(>K:COM3_RADIO_SWAP)
COM3_RADIO_WHOLE_DEC#(>K:COM3_RADIO_WHOLE_DEC)
COM3_RADIO_WHOLE_INC#(>K:COM3_RADIO_WHOLE_INC)
COM3_RECEIVE_SELECT#(>K:COM3_RECEIVE_SELECT)
COM3_RECEIVE_SELECT#(>K:COM3_RECEIVE_SELECT) 
COM3_RECEIVE_TOGGLE#(A:COM RECEIVE EX1:3, Bool) ! (>K:COM3_RECEIVE_SELECT)
COM3_STBY_RADIO_SET#(>K:COM3_STBY_RADIO_SET)
COM3_STBY_RADIO_SET_HZ#(>K:COM3_STBY_RADIO_SET_HZ)
COM3_VOLUME_DEC#(>K:COM3_VOLUME_DEC)
COM3_VOLUME_INC#(>K:COM3_VOLUME_INC)
COM3_VOLUME_SET#(>K:COM3_VOLUME_SET)
COM_RADIO#(>K:COM_RADIO)
COM_RADIO_FRACT_DEC#(>K:COM_RADIO_FRACT_DEC)
COM_RADIO_FRACT_DEC_CARRY#(>K:COM_RADIO_FRACT_DEC_CARRY)
COM_RADIO_FRACT_INC#(>K:COM_RADIO_FRACT_INC)
COM_RADIO_FRACT_INC_CARRY#(>K:COM_RADIO_FRACT_INC_CARRY)
COM_RADIO_WHOLE_DEC#(>K:COM_RADIO_WHOLE_DEC)
COM_RADIO_WHOLE_INC#(>K:COM_RADIO_WHOLE_INC)
Intercom_Mode_Set#int (>K:INTERCOM_MODE_SET)
Marker_Beacon_Sensitivity_High#(>K:MARKER_BEACON_SENSITIVITY_HIGH) 
Marker_Beacon_Sensitivity_low#(>K:MARKER_BEACON_SENSITIVITY_LOW)
Marker_Beacon_Test___Mute#(>K:MARKER_BEACON_TEST_MUTE)
NAV1_RADIO_SET#[0] (>K:NAV1_RADIO_SET)
NAV1_RADIO_SET_HZ#[0] (>K:NAV1_RADIO_SET_HZ) 
NAV1_VOLUME_SET_EX1#[0] (>K:NAV1_VOLUME_SET_EX1)
PILOT_TRANSMITTER_SET#index (>K:PILOT_TRANSMITTER_SET)
TOGGLE_ICS#(>K:TOGGLE_ICS)
VOR1_OBI_DEC#(>K:VOR1_OBI_DEC)
VOR1_OBI_FAST_DEC#(A:NAV OBS:1, Degrees) 10 - dnor (>K:VOR1_SET)
VOR1_OBI_FAST_INC#(A:NAV OBS:1, Degrees) 10 + dnor (>K:VOR1_SET)
VOR1_OBI_INC#(>K:VOR1_OBI_INC)
VOR2_OBI_FAST_DEC#(A:NAV OBS:2, Degrees) 10 - dnor (>K:VOR2_SET)
VOR2_OBI_FAST_INC#(A:NAV OBS:2, Degrees) 10 + dnor (>K:VOR2_SET)
XPNDR_1_2_DEC#(A:TRANSPONDER CODE:1, Number) 100 / int 10 % 0 == if{ (>K:XPNDR_1000_DEC) } (>K:XPNDR_100_DEC)
XPNDR_1_2_INC#(A:TRANSPONDER CODE:1, Number) 100 / int 10 % 7 == if{ (>K:XPNDR_1000_INC) } (>K:XPNDR_100_INC)
XPNDR_3_4_DEC#(A:TRANSPONDER CODE:1, number) s0 100 div sp2 l0 100 % -- s1 10 % 9 == if{ l1 2 - } els{ l1 } 0 max 77 min l2 100 * + (>L:mfXPNDR, Number) (L:mfXPNDR, BCO16) (>K:XPNDR_SET) 
XPNDR_3_4_INC#(A:TRANSPONDER CODE:1, number) s0 100 div sp2 l0 100 % ++ s1 10 % 8 == if{ l1 2 + } els{ l1 } 0 max 77 min l2 100 * + (>L:mfXPNDR, Number) (L:mfXPNDR, BCO16) (>K:XPNDR_SET) 
XPNDR_IDENT_ON#(>K:XPNDR_IDENT_ON)
MARKER_SOUND_TOGGLE#(>K:MARKER_SOUND_TOGGLE)
NAV1_RADIO_FRACT_DEC#(>K:NAV1_RADIO_FRACT_DEC)
NAV1_RADIO_FRACT_DEC_CARRY#(>K:NAV1_RADIO_FRACT_DEC_CARRY)
NAV1_RADIO_FRACT_INC#(>K:NAV1_RADIO_FRACT_INC)
NAV1_RADIO_FRACT_INC_CARRY#(>K:NAV1_RADIO_FRACT_INC_CARRY)
NAV1_RADIO_SWAP#(>K:NAV1_RADIO_SWAP)
NAV1_RADIO_WHOLE_DEC#(>K:NAV1_RADIO_WHOLE_DEC)
NAV1_RADIO_WHOLE_INC#(>K:NAV1_RADIO_WHOLE_INC)
NAV2_RADIO_FRACT_DEC#(>K:NAV2_RADIO_FRACT_DEC)
NAV2_RADIO_FRACT_DEC_CARRY#(>K:NAV2_RADIO_FRACT_DEC_CARRY)
NAV2_RADIO_FRACT_INC#(>K:NAV2_RADIO_FRACT_INC)
NAV2_RADIO_FRACT_INC_CARRY#(>K:NAV2_RADIO_FRACT_INC_CARRY)
NAV2_RADIO_SWAP#(>K:NAV2_RADIO_SWAP)
NAV2_RADIO_WHOLE_DEC#(>K:NAV2_RADIO_WHOLE_DEC)
NAV2_RADIO_WHOLE_INC#(>K:NAV2_RADIO_WHOLE_INC)
NAV_RADIO#(>K:NAV_RADIO)
RADIO_ADF2_IDENT_DISABLE#(>K:RADIO_ADF2_IDENT_DISABLE)
RADIO_ADF2_IDENT_ENABLE#(>K:RADIO_ADF2_IDENT_ENABLE)
RADIO_ADF2_IDENT_TOGGLE#(>K:RADIO_ADF2_IDENT_TOGGLE)
RADIO_ADF_IDENT_DISABLE#(>K:RADIO_ADF_IDENT_DISABLE)
RADIO_ADF_IDENT_ENABLE#(>K:RADIO_ADF_IDENT_ENABLE)
RADIO_ADF_IDENT_TOGGLE#(>K:RADIO_ADF_IDENT_TOGGLE)
RADIO_DME1_IDENT_DISABLE#(>K:RADIO_DME1_IDENT_DISABLE)
RADIO_DME1_IDENT_ENABLE#(>K:RADIO_DME1_IDENT_ENABLE)
RADIO_DME1_IDENT_TOGGLE#(>K:RADIO_DME1_IDENT_TOGGLE)
RADIO_DME2_IDENT_DISABLE#(>K:RADIO_DME2_IDENT_DISABLE)
RADIO_DME2_IDENT_ENABLE#(>K:RADIO_DME2_IDENT_ENABLE)
RADIO_DME2_IDENT_TOGGLE#(>K:RADIO_DME2_IDENT_TOGGLE)
RADIO_SELECTED_DME_IDENT_DISABLE#(>K:RADIO_SELECTED_DME_IDENT_DISABLE)
RADIO_SELECTED_DME_IDENT_ENABLE#(>K:RADIO_SELECTED_DME_IDENT_ENABLE)
RADIO_SELECTED_DME_IDENT_TOGGLE#(>K:RADIO_SELECTED_DME_IDENT_TOGGLE)
RADIO_VOR1_IDENT_DISABLE#(>K:RADIO_VOR1_IDENT_DISABLE)
RADIO_VOR1_IDENT_ENABLE#(>K:RADIO_VOR1_IDENT_ENABLE)
RADIO_VOR1_IDENT_TOGGLE#(>K:RADIO_VOR1_IDENT_TOGGLE)
RADIO_VOR2_IDENT_DISABLE#(>K:RADIO_VOR2_IDENT_DISABLE)
RADIO_VOR2_IDENT_ENABLE#(>K:RADIO_VOR2_IDENT_ENABLE)
RADIO_VOR2_IDENT_TOGGLE#(>K:RADIO_VOR2_IDENT_TOGGLE)
TOGGLE_DME#(>K:TOGGLE_DME)
TOGGLE_SPEAKER#(>K:TOGGLE_SPEAKER)
VOR2_OBI_DEC#(>K:VOR2_OBI_DEC)
VOR2_OBI_INC#(>K:VOR2_OBI_INC)
VOR_OBS#(>K:VOR_OBS)
XPNDR#(>K:XPNDR)
XPNDR_1000_DEC#(>K:XPNDR_1000_DEC)
XPNDR_1000_INC#(>K:XPNDR_1000_INC)
XPNDR_100_DEC#(>K:XPNDR_100_DEC)
XPNDR_100_INC#(>K:XPNDR_100_INC)
XPNDR_10_DEC#(>K:XPNDR_10_DEC)
XPNDR_10_INC#(>K:XPNDR_10_INC)
XPNDR_1_DEC#(>K:XPNDR_1_DEC)
XPNDR_1_INC#(>K:XPNDR_1_INC)
XPNDR_DEC_CARRY#(>K:XPNDR_DEC_CARRY)
XPNDR_IDENT_OFF#(>K:XPNDR_IDENT_OFF)
XPNDR_IDENT_SET#(>K:XPNDR_IDENT_SET)
XPNDR_IDENT_TOGGLE#(>K:XPNDR_IDENT_TOGGLE)
XPNDR_INC_CARRY#(>K:XPNDR_INC_CARRY)
XPNDR_SET#(>K:XPNDR_SET)
//Microsoft/Generic/Safety
ELT_OFF#1 (>K:ELT_OFF) 
ELT_ON#1 (>K:ELT_ON) 
ELT_SET#[0] (>K:ELT_SET)
ELT_TOGGLE#ELT_TOGGLE
//Microsoft/Generic/Unsorted
AIRSPEED_BUG_SELECT#(>K:AIRSPEED_BUG_SELECT)
ALTITUDE_BUG_SELECT#(>K:ALTITUDE_BUG_SELECT)
ATTITUDE_BARS_POSITION_DOWN#(>K:ATTITUDE_BARS_POSITION_DOWN)
ATTITUDE_BARS_POSITION_UP#(>K:ATTITUDE_BARS_POSITION_UP)
AUTORUDDER_TOGGLE#(>K:AUTORUDDER_TOGGLE)
AUTO_THROTTLE_ARM#(>K:AUTO_THROTTLE_ARM)
AUTO_THROTTLE_TO_GA#(>K:AUTO_THROTTLE_TO_GA)
AXIS_PAN_HEADING#(>K:AXIS_PAN_HEADING)
AXIS_PAN_PITCH#(>K:AXIS_PAN_PITCH)
AXIS_PAN_TILT#(>K:AXIS_PAN_TILT)
BLEED_AIR_SOURCE_CONTROL_DEC#(>K:BLEED_AIR_SOURCE_CONTROL_DEC)
BLEED_AIR_SOURCE_CONTROL_INC#(>K:BLEED_AIR_SOURCE_CONTROL_INC)
CLOCK_MINUTES_DEC#(>K:CLOCK_MINUTES_DEC)
CLOCK_MINUTES_INC#(>K:CLOCK_MINUTES_INC)
CLOCK_SECONDS_ZERO#(>K:CLOCK_SECONDS_ZERO)
CROSS_FEED_OFF#(>K:CROSS_FEED_OFF)
CROSS_FEED_OPEN#(>K:CROSS_FEED_OPEN)
CROSS_FEED_TOGGLE#(>K:CROSS_FEED_TOGGLE)
DEC_COWL_FLAPS#(>K:DEC_COWL_FLAPS)
DEC_COWL_FLAPS1#(>K:DEC_COWL_FLAPS1)
DEC_COWL_FLAPS2#(>K:DEC_COWL_FLAPS2)
DEC_COWL_FLAPS3#(>K:DEC_COWL_FLAPS3)
DEC_COWL_FLAPS4#(>K:DEC_COWL_FLAPS4)
DEC_DECISION_HEIGHT#(>K:DEC_DECISION_HEIGHT)
DEMO_STOP#(>K:DEMO_STOP)
EGT#(>K:EGT)
EGT1_DEC#(>K:EGT1_DEC)
EGT1_INC#(>K:EGT1_INC)
EGT2_DEC#(>K:EGT2_DEC)
EGT2_INC#(>K:EGT2_INC)
EGT3_DEC#(>K:EGT3_DEC)
EGT3_INC#(>K:EGT3_INC)
EGT4_DEC#(>K:EGT4_DEC)
EGT4_INC#(>K:EGT4_INC)
EGT_DEC#(>K:EGT_DEC)
EGT_INC#(>K:EGT_INC)
FLIGHT_MAP#(>K:FLIGHT_MAP)
FLY_BY_WIRE_ELAC_TOGGLE#(>K:FLY_BY_WIRE_ELAC_TOGGLE)
FLY_BY_WIRE_FAC_TOGGLE#(>K:FLY_BY_WIRE_FAC_TOGGLE)
FLY_BY_WIRE_SEC_TOGGLE#(>K:FLY_BY_WIRE_SEC_TOGGLE)
FREEZE_ALTITUDE_TOGGLE#(>K:FREEZE_ALTITUDE_TOGGLE)
FREEZE_ATTITUDE_TOGGLE#(>K:FREEZE_ATTITUDE_TOGGLE)
FREEZE_LATITUDE_LONGITUDE_TOGGLE#(>K:FREEZE_LATITUDE_LONGITUDE_TOGGLE)
GAUGE_KEYSTROKE#(>K:GAUGE_KEYSTROKE)
GEAR_PUMP#(>K:GEAR_PUMP)
GPWS_SWITCH_TOGGLE#(>K:GPWS_SWITCH_TOGGLE)
HOIST_DEPLOY_TOGGLE#(>K:HOIST_DEPLOY_TOGGLE)
HOIST_SWITCH_EXTEND#(>K:HOIST_SWITCH_EXTEND)
HOIST_SWITCH_RETRACT#(>K:HOIST_SWITCH_RETRACT)
HYDRAULIC_SWITCH_TOGGLE#(>K:HYDRAULIC_SWITCH_TOGGLE)
INC_COWL_FLAPS#(>K:INC_COWL_FLAPS)
INC_COWL_FLAPS1#(>K:INC_COWL_FLAPS1)
INC_COWL_FLAPS2#(>K:INC_COWL_FLAPS2)
INC_COWL_FLAPS3#(>K:INC_COWL_FLAPS3)
INC_COWL_FLAPS4#(>K:INC_COWL_FLAPS4)
INC_DECISION_HEIGHT#(>K:INC_DECISION_HEIGHT)
INVOKE_HELP#(>K:INVOKE_HELP)
BAROMETRIC#(>K:BAROMETRIC)
CLOCK_HOURS_DEC#(>K:CLOCK_HOURS_DEC)
CLOCK_HOURS_INC#(>K:CLOCK_HOURS_INC)
SET_PAUSE_OFF#(>K:SET_PAUSE_OFF)
SET_PAUSE_ON#(>K:SET_PAUSE_ON)
SET_PAUSE_ON#(>K:SET_PAUSE_ON)
STEERING_DEC#(>K:STEERING_DEC)
STEERING_INC#(>K:STEERING_INC)
TOGGLE_VARIOMETER_SWITCH#(>K:TOGGLE_VARIOMETER_SWITCH)
TOGGLE_GPS_DRIVES_NAV1#(>K:TOGGLE_GPS_DRIVES_NAV1)
JOYSTICK_CALIBRATE#(>K:JOYSTICK_CALIBRATE)
MAGNETO1_BOTH#(>K:MAGNETO1_BOTH)
MAGNETO1_DECR#(>K:MAGNETO1_DECR)
MAGNETO1_INCR#(>K:MAGNETO1_INCR)
MAGNETO1_LEFT#(>K:MAGNETO1_LEFT)
MAGNETO1_OFF#(>K:MAGNETO1_OFF)
MAGNETO1_RIGHT#(>K:MAGNETO1_RIGHT)
MAGNETO1_START#(>K:MAGNETO1_START)
MAGNETO2_BOTH#(>K:MAGNETO2_BOTH)
MAGNETO2_DECR#(>K:MAGNETO2_DECR)
MAGNETO2_INCR#(>K:MAGNETO2_INCR)
MAGNETO2_LEFT#(>K:MAGNETO2_LEFT)
MAGNETO2_OFF#(>K:MAGNETO2_OFF)
MAGNETO2_RIGHT#(>K:MAGNETO2_RIGHT)
MAGNETO2_START#(>K:MAGNETO2_START)
MAGNETO3_BOTH#(>K:MAGNETO3_BOTH)
MAGNETO3_DECR#(>K:MAGNETO3_DECR)
MAGNETO3_INCR#(>K:MAGNETO3_INCR)
MAGNETO3_LEFT#(>K:MAGNETO3_LEFT)
MAGNETO3_OFF#(>K:MAGNETO3_OFF)
MAGNETO3_RIGHT#(>K:MAGNETO3_RIGHT)
MAGNETO3_START#(>K:MAGNETO3_START)
MAGNETO4_BOTH#(>K:MAGNETO4_BOTH)
MAGNETO4_DECR#(>K:MAGNETO4_DECR)
MAGNETO4_INCR#(>K:MAGNETO4_INCR)
MAGNETO4_LEFT#(>K:MAGNETO4_LEFT)
MAGNETO4_OFF#(>K:MAGNETO4_OFF)
MAGNETO4_RIGHT#(>K:MAGNETO4_RIGHT)
MAGNETO4_START#(>K:MAGNETO4_START)
MAGNETO_BOTH#(>K:MAGNETO_BOTH)
MAGNETO_DECR#(>K:MAGNETO_DECR)
MAGNETO_INCR#(>K:MAGNETO_INCR)
MAGNETO_LEFT#(>K:MAGNETO_LEFT)
MAGNETO_OFF#(>K:MAGNETO_OFF)
MAGNETO_RIGHT#(>K:MAGNETO_RIGHT)
MAGNETO_START#(>K:MAGNETO_START)
MAP_ZOOM_FINE_IN#(>K:MAP_ZOOM_FINE_IN)
MAP_ZOOM_FINE_OUT#(>K:MAP_ZOOM_FINE_OUT)
MINUS#(>K:MINUS)
MINUS_SHIFT#(>K:MINUS_SHIFT)
MOUSE_LOOK_TOGGLE#(>K:MOUSE_LOOK_TOGGLE)
MP_ACTIVATE_CHAT#(>K:MP_ACTIVATE_CHAT)
MP_BROADCAST_VOICE_CAPTURE_START#(>K:MP_BROADCAST_VOICE_CAPTURE_START)
MP_BROADCAST_VOICE_CAPTURE_STOP#(>K:MP_BROADCAST_VOICE_CAPTURE_STOP)
MP_CHAT#(>K:MP_CHAT)
MP_PLAYER_CYCLE#(>K:MP_PLAYER_CYCLE)
MP_PLAYER_FOLLOW#(>K:MP_PLAYER_FOLLOW)
MP_TRANSFER_CONTROL#(>K:MP_TRANSFER_CONTROL)
MP_VOICE_CAPTURE_START#(>K:MP_VOICE_CAPTURE_START)
MP_VOICE_CAPTURE_STOP#(>K:MP_VOICE_CAPTURE_STOP)
NEW_MAP#(>K:NEW_MAP)
NITROUS_TANK_VALVE_TOGGLE#(>K:NITROUS_TANK_VALVE_TOGGLE)
PANEL_1#(>K:PANEL_1)
PANEL_2#(>K:PANEL_2)
PANEL_3#(>K:PANEL_3)
PANEL_4#(>K:PANEL_4)
PANEL_5#(>K:PANEL_5)
PANEL_6#(>K:PANEL_6)
PANEL_7#(>K:PANEL_7)
PANEL_8#(>K:PANEL_8)
PANEL_9#(>K:PANEL_9)
PANEL_HUD_NEXT#(>K:PANEL_HUD_NEXT)
PANEL_HUD_PREVIOUS#(>K:PANEL_HUD_PREVIOUS)
PANEL_ID_CLOSE#(>K:PANEL_ID_CLOSE)
PANEL_ID_OPEN#(>K:PANEL_ID_OPEN)
PANEL_ID_TOGGLE#(>K:PANEL_ID_TOGGLE)
PAUSE_OFF#(>K:PAUSE_OFF)
PAUSE_ON#(>K:PAUSE_ON)
PAUSE_TOGGLE#(>K:PAUSE_TOGGLE)
PLUS#(>K:PLUS)
PLUS_SHIFT#(>K:PLUS_SHIFT)
POINT_OF_INTEREST_CYCLE_NEXT#(>K:POINT_OF_INTEREST_CYCLE_NEXT)
POINT_OF_INTEREST_CYCLE_PREVIOUS#(>K:POINT_OF_INTEREST_CYCLE_PREVIOUS)
POINT_OF_INTEREST_TOGGLE_POINTER#(>K:POINT_OF_INTEREST_TOGGLE_POINTER)
PRESSURIZATION_CLIMB_RATE_DEC#(>K:PRESSURIZATION_CLIMB_RATE_DEC)
PRESSURIZATION_CLIMB_RATE_INC#(>K:PRESSURIZATION_CLIMB_RATE_INC)
PRESSURIZATIPRESSURE_ALT_DEC#(>K:PRESSURIZATIPRESSURE_ALT_DEC)
PRESSURIZATIPRESSURE_ALT_INC#(>K:PRESSURIZATIPRESSURE_ALT_INC)
PROP_PITCH1_DECR#(>K:PROP_PITCH1_DECR)
PROP_PITCH1_DECR_SMALL#(>K:PROP_PITCH1_DECR_SMALL)
PROP_PITCH1_HI#(>K:PROP_PITCH1_HI)
PROP_PITCH1_INCR#(>K:PROP_PITCH1_INCR)
PROP_PITCH1_INCR_SMALL#(>K:PROP_PITCH1_INCR_SMALL)
PROP_PITCH1_LO#(>K:PROP_PITCH1_LO)
PROP_PITCH2_DECR#(>K:PROP_PITCH2_DECR)
PROP_PITCH2_DECR_SMALL#(>K:PROP_PITCH2_DECR_SMALL)
PROP_PITCH2_HI#(>K:PROP_PITCH2_HI)
PROP_PITCH2_INCR#(>K:PROP_PITCH2_INCR)
PROP_PITCH2_INCR_SMALL#(>K:PROP_PITCH2_INCR_SMALL)
PROP_PITCH2_LO#(>K:PROP_PITCH2_LO)
PROP_PITCH3_DECR#(>K:PROP_PITCH3_DECR)
PROP_PITCH3_DECR_SMALL#(>K:PROP_PITCH3_DECR_SMALL)
PROP_PITCH3_HI#(>K:PROP_PITCH3_HI)
PROP_PITCH3_INCR#(>K:PROP_PITCH3_INCR)
PROP_PITCH3_INCR_SMALL#(>K:PROP_PITCH3_INCR_SMALL)
PROP_PITCH3_LO#(>K:PROP_PITCH3_LO)
PROP_PITCH4_DECR#(>K:PROP_PITCH4_DECR)
PROP_PITCH4_DECR_SMALL#(>K:PROP_PITCH4_DECR_SMALL)
PROP_PITCH4_HI#(>K:PROP_PITCH4_HI)
PROP_PITCH4_INCR#(>K:PROP_PITCH4_INCR)
PROP_PITCH4_INCR_SMALL#(>K:PROP_PITCH4_INCR_SMALL)
PROP_PITCH4_LO#(>K:PROP_PITCH4_LO)
PROP_PITCH_DECR#(>K:PROP_PITCH_DECR)
PROP_PITCH_DECR_SMALL#(>K:PROP_PITCH_DECR_SMALL)
PROP_PITCH_HI#(>K:PROP_PITCH_HI)
PROP_PITCH_INCR#(>K:PROP_PITCH_INCR)
PROP_PITCH_INCR_SMALL#(>K:PROP_PITCH_INCR_SMALL)
PROP_PITCH_LO#(>K:PROP_PITCH_LO)
READOUTS_FLIGHT#(>K:READOUTS_FLIGHT)
READOUTS_SLEW#(>K:READOUTS_SLEW)
REFRESH_SCENERY#(>K:REFRESH_SCENERY)
RELEASE_DROPPABLE_OBJECTS#(>K:RELEASE_DROPPABLE_OBJECTS)
RELOAD_PANELS#(>K:RELOAD_PANELS)
RELOAD_USER_AIRCRAFT#(>K:RELOAD_USER_AIRCRAFT)
REPAIR_AND_REFUEL#(>K:REPAIR_AND_REFUEL)
RETRACT_FLOAT_SWITCH_DEC#(>K:RETRACT_FLOAT_SWITCH_DEC)
RETRACT_FLOAT_SWITCH_INC#(>K:RETRACT_FLOAT_SWITCH_INC)
ROTOR_CLUTCH_SWITCH_TOGGLE#(>K:ROTOR_CLUTCH_SWITCH_TOGGLE)
ROTOR_GOV_SWITCH_TOGGLE#(>K:ROTOR_GOV_SWITCH_TOGGLE)
ROTOR_LATERAL_TRIM_DEC#(>K:ROTOR_LATERAL_TRIM_DEC)
ROTOR_LATERAL_TRIM_INC#(>K:ROTOR_LATERAL_TRIM_INC)
SELECT_1#(>K:SELECT_1)
SELECT_2#(>K:SELECT_2)
SELECT_3#(>K:SELECT_3)
SELECT_4#(>K:SELECT_4)
SITUATION_SAVE#(>K:SITUATION_SAVE)
SLEW_AHEAD_MINUS#(>K:SLEW_AHEAD_MINUS)
SLEW_AHEAD_PLUS#(>K:SLEW_AHEAD_PLUS)
SLEW_ALTIT_DN_FAST#(>K:SLEW_ALTIT_DN_FAST)
SLEW_ALTIT_DN_SLOW#(>K:SLEW_ALTIT_DN_SLOW)
SLEW_ALTIT_FREEZE#(>K:SLEW_ALTIT_FREEZE)
SLEW_ALTIT_MINUS#(>K:SLEW_ALTIT_MINUS)
SLEW_ALTIT_PLUS#(>K:SLEW_ALTIT_PLUS)
SLEW_ALTIT_UP_FAST#(>K:SLEW_ALTIT_UP_FAST)
SLEW_ALTIT_UP_SLOW#(>K:SLEW_ALTIT_UP_SLOW)
SLEW_BANK_MINUS#(>K:SLEW_BANK_MINUS)
SLEW_BANK_PLUS#(>K:SLEW_BANK_PLUS)
SLEW_FREEZE#(>K:SLEW_FREEZE)
SLEW_HEADING_MINUS#(>K:SLEW_HEADING_MINUS)
SLEW_HEADING_PLUS#(>K:SLEW_HEADING_PLUS)
SLEW_LEFT#(>K:SLEW_LEFT)
SLEW_OFF#(>K:SLEW_OFF)
SLEW_ON#(>K:SLEW_ON)
SLEW_PITCH_DN_FAST#(>K:SLEW_PITCH_DN_FAST)
SLEW_PITCH_DN_SLOW#(>K:SLEW_PITCH_DN_SLOW)
SLEW_PITCH_FREEZE#(>K:SLEW_PITCH_FREEZE)
SLEW_PITCH_MINUS#(>K:SLEW_PITCH_MINUS)
SLEW_PITCH_PLUS#(>K:SLEW_PITCH_PLUS)
SLEW_PITCH_UP_FAST#(>K:SLEW_PITCH_UP_FAST)
SLEW_PITCH_UP_SLOW#(>K:SLEW_PITCH_UP_SLOW)
SLEW_RIGHT#(>K:SLEW_RIGHT)
SLEW_TOGGLE#(>K:SLEW_TOGGLE)
SLING_PICKUP_RELEASE#(>K:SLING_PICKUP_RELEASE)
SMOKE_OFF#(>K:SMOKE_OFF)
SMOKE_ON#(>K:SMOKE_ON)
SMOKE_TOGGLE#(>K:SMOKE_TOGGLE)
SOUND_OFF#(>K:SOUND_OFF)
SOUND_ON#(>K:SOUND_ON)
SOUND_TOGGLE#(>K:SOUND_TOGGLE)
TAKEOFF_ASSIST_ARM_TOGGLE#(>K:TAKEOFF_ASSIST_ARM_TOGGLE)
TAKEOFF_ASSIST_FIRE#(>K:TAKEOFF_ASSIST_FIRE)
TOGGLE_AFTERBURNER#(>K:TOGGLE_AFTERBURNER)
TOGGLE_AFTERBURNER1#(>K:TOGGLE_AFTERBURNER1)
TOGGLE_AFTERBURNER2#(>K:TOGGLE_AFTERBURNER2)
TOGGLE_AFTERBURNER3#(>K:TOGGLE_AFTERBURNER3)
TOGGLE_AFTERBURNER4#(>K:TOGGLE_AFTERBURNER4)
TOGGLE_AIRCRAFT_EXIT#(>K:TOGGLE_AIRCRAFT_EXIT)
TOGGLE_AIRCRAFT_LABELS#(>K:TOGGLE_AIRCRAFT_LABELS)
TOGGLE_AIRPORT_NAME_DISPLAY#(>K:TOGGLE_AIRPORT_NAME_DISPLAY)
TOGGLE_ALL_STARTERS#(>K:TOGGLE_ALL_STARTERS)
TOGGLE_ALTERNATE_STATIC#(>K:TOGGLE_ALTERNATE_STATIC)
TOGGLE_AUTOFEATHER_ARM#(>K:TOGGLE_AUTOFEATHER_ARM)
TOGGLE_ELECTRIC_VACUUM_PUMP#(>K:TOGGLE_ELECTRIC_VACUUM_PUMP)
TOGGLE_FEATHER_SWITCHES#(>K:TOGGLE_FEATHER_SWITCHES)
TOGGLE_FEATHER_SWITCH_1#(>K:TOGGLE_FEATHER_SWITCH_1)
TOGGLE_FEATHER_SWITCH_2#(>K:TOGGLE_FEATHER_SWITCH_2)
TOGGLE_FEATHER_SWITCH_3#(>K:TOGGLE_FEATHER_SWITCH_3)
TOGGLE_FEATHER_SWITCH_4#(>K:TOGGLE_FEATHER_SWITCH_4)
TOGGLE_HYDRAULIC_FAILURE#(>K:TOGGLE_HYDRAULIC_FAILURE)
TOGGLE_LAUNCH_BAR_SWITCH#(>K:TOGGLE_LAUNCH_BAR_SWITCH)
TOGGLE_MASTER_IGNITION_SWITCH#(>K:TOGGLE_MASTER_IGNITION_SWITCH)
TOGGLE_PRIMER#(>K:TOGGLE_PRIMER)
TOGGLE_PRIMER1#(>K:TOGGLE_PRIMER1)
TOGGLE_PRIMER2#(>K:TOGGLE_PRIMER2)
TOGGLE_PRIMER3#(>K:TOGGLE_PRIMER3)
TOGGLE_PRIMER4#(>K:TOGGLE_PRIMER4)
TOGGLE_PROPELLER_SYNC#(>K:TOGGLE_PROPELLER_SYNC)
TOGGLE_RACERESULTS_WINDOW#(>K:TOGGLE_RACERESULTS_WINDOW)
TOGGLE_STARTER1#(>K:TOGGLE_STARTER1)
TOGGLE_STARTER2#(>K:TOGGLE_STARTER2)
TOGGLE_STARTER3#(>K:TOGGLE_STARTER3)
TOGGLE_STARTER4#(>K:TOGGLE_STARTER4)
TOGGLE_STATIC_PORT_BLOCKAGE#(>K:TOGGLE_STATIC_PORT_BLOCKAGE)
TOGGLE_TAILWHEEL_LOCK#(>K:TOGGLE_TAILWHEEL_LOCK)
TOGGLE_TAIL_HOOK_HANDLE#(>K:TOGGLE_TAIL_HOOK_HANDLE)
TOGGLE_TURN_INDICATOR_SWITCH#(>K:TOGGLE_TURN_INDICATOR_SWITCH)
TOGGLE_VACUUM_FAILURE#(>K:TOGGLE_VACUUM_FAILURE)
TOGGLE_WATER_BALLAST_VALVE#(>K:TOGGLE_WATER_BALLAST_VALVE)
TOGGLE_WATER_RUDDER#(>K:TOGGLE_WATER_RUDDER)
TOGGLE_WING_FOLD#(>K:TOGGLE_WING_FOLD)
TRUE_AIRSPEED_CAL_DEC#(>K:TRUE_AIRSPEED_CAL_DEC)
TRUE_AIRSPEED_CAL_INC#(>K:TRUE_AIRSPEED_CAL_INC)
TURBINE_IGNITION_SWITCH_TOGGLE#(>K:TURBINE_IGNITION_SWITCH_TOGGLE)
VIDEO_RECORD_TOGGLE#(>K:VIDEO_RECORD_TOGGLE)
VIRTUAL_COPILOT_ACTION#(>K:VIRTUAL_COPILOT_ACTION)
VIRTUAL_COPILOT_TOGGLE#(>K:VIRTUAL_COPILOT_TOGGLE)
VSI_BUG_SELECT#(>K:VSI_BUG_SELECT)
YAXIS_INVERT_TOGGLE#(>K:YAXIS_INVERT_TOGGLE)
//Microsoft/Generic/Warning System
CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE#(>K:CABIN_NO_SMOKING_ALERT_SWITCH_TOGGLE)
CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE#(>K:CABIN_SEATBELTS_ALERT_SWITCH_TOGGLE)
EXTINGUISH_ENGINE_FIRE#(>K:EXTINGUISH_ENGINE_FIRE)
//Microsoft/PC-12 NGX 2024/Autopilot
AUTOPILOT_AUTOTHROTTLE_TOGGLE#(>B:AUTOPILOT_AUTOTHROTTLE_TOGGLE)
//Microsoft/SR22T/Lights
SR22T_ICE_LIGHTS_OFF#(L:LIGHTING_WING_1,0)
SR22T_ICE_LIGHTS_ON#1 (>K:LIGHTING_WING_1)
//Microsoft/Carenado/Cessna C408/Anti Ice
PITOT_HEAT_OFF#0 (>B:DEICE_PITOT_HEAT_Set) 
PITOT_HEAT_ON#1 (>B:DEICE_PITOT_HEAT_Set) 
//Microsoft/Carenado/Cessna C408/Autopilot
Master_Caution_Reset#(>B:AUTOPILOT_MASTER_CAUTION_TOGGLE)
Master_Warning_Reset#(>B:AUTOPILOT_MASTER_WARNING_TOGGLE)
//Microsoft/Carenado/Cessna C408/Electrical
GENERATOR_1_OFF#(>B:ELECTRICAL_ALTERNATOR_1_OFF) 
GENERATOR_1_ON#(>B:ELECTRICAL_ALTERNATOR_1_ON) 
GENERATOR_2_OFF#(>B:ELECTRICAL_ALTERNATOR_2_OFF)
GENERATOR_2_ON#(>B:ELECTRICAL_ALTERNATOR_2_ON) 
MASTER_BATTERY_1_OFF#(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 
MASTER_BATTERY_1_ON#(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
//Microsoft/Carenado/Cessna C408/Engines
AUTO_IGNITION_1_OFF#0 (>B:ENGINE_IGNITION_1_Set) 
AUTO_IGNITION_1_ON#1 (>B:ENGINE_IGNITION_1_Set) 
AUTO_IGNITION_2_OFF#0 (>B:ENGINE_IGNITION_2_Set) 
AUTO_IGNITION_2_ON#1 (>B:ENGINE_IGNITION_2_Set) 
BOOSTER_1_OFF#(>B:FUEL_PUMP_1_OFF) 
BOOSTER_1_ON#(>B:FUEL_PUMP_1_ON) 
HANDELING_AUTOFEATHER_ARM#2 (>B:HANDLING_AUTOFEATHER_Set) 
HANDELING_AUTOFEATHER_OFF#1 (>B:HANDLING_AUTOFEATHER_Set) 
HANDELING_AUTOFEATHER_TEST#0 (>B:HANDLING_AUTOFEATHER_Set) 
STARTER_1_ON#(>B:ENGINE_STARTER_1_ON) 
STARTER_2_OFF#(>B:ENGINE_STARTER_1_OFF) 
//Microsoft/Carenado/Cessna C408/Fuel
BOOSTER_2_OFF#(>B:FUEL_PUMP_2_OFF) 
BOOSTER_2_ON#(>B:FUEL_PUMP_2_ON) 
FUEL_TRANSFER_LEFT#0 (>B:FUEL_TRANSFER_Set) 
FUEL_TRANSFER_OFF#1 (>B:FUEL_TRANSFER_Set) 
FUEL_TRANSFER_RIGHT#2 (>B:FUEL_TRANSFER_Set) 
//Microsoft/Carenado/Cessna C408/Main instrument panel
INSTRUMENT_TEST_ANUN#9 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_AOA#3 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_BLEEED_LEAK#8 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_CVR#6 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_ENG_FIRE#2 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_FLAPS#7 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_ICE_DETECT#4 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_OFF#0 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_OVERSPEED#1 (>B:INSTRUMENT_TEST_Set)
INSTRUMENT_TEST_SMOKE#5 (>B:INSTRUMENT_TEST_Set)
//Microsoft/Carenado/PC-12 NGX 2024/Autopilot
AUTOPILOT_ALTITUDE_1000_Dec#1 (>B:AUTOPILOT_ALTITUDE_1000_Dec)
AUTOPILOT_ALTITUDE_1000_Inc#1 (>B:AUTOPILOT_ALTITUDE_1000_Inc)
AUTOPILOT_ALTITUDE_100_Dec#1 (>B:AUTOPILOT_ALTITUDE_100_Dec)
AUTOPILOT_ALTITUDE_100_Inc#1 (>B:AUTOPILOT_ALTITUDE_100_Inc)
AUTOPILOT_ALTITUDE_BUTTON_TOGGLE#(>B:AUTOPILOT_ALTITUDE_BUTTON_TOGGLE)
AUTOPILOT_ALTITUDE_SYNC_PUSH#(>B:AUTOPILOT_ALTITUDE_SYNC_PUSH)
AUTOPILOT_APPROACH_BUTTON_TOGGLE#(>B:AUTOPILOT_APPROACH_BUTTON_TOGGLE)
AUTOPILOT_AP_1_TOGGLE#(>B:AUTOPILOT_AP_1_TOGGLE)
AUTOPILOT_AUTOTHROTTLE_OFF#(>B:AUTOPILOT_AUTOTHROTTLE_OFF)
AUTOPILOT_AUTOTHROTTLE_ON#(>B:AUTOPILOT_AUTOTHROTTLE_ON)
AUTOPILOT_BANK_TOGGLE#(>B:AUTOPILOT_BANK_TOGGLE)
AUTOPILOT_FD_1_MODE_OFF#(>B:AUTOPILOT_FD_1_MODE_OFF)
AUTOPILOT_FD_1_MODE_ON#(>B:AUTOPILOT_FD_1_MODE_ON)
AUTOPILOT_FD_1_MODE_TOGGLE#(>B:AUTOPILOT_FD_1_MODE_TOGGLE)
AUTOPILOT_FLC_BUTTON_TOGGLE#(>B:AUTOPILOT_FLC_BUTTON_TOGGLE)
AUTOPILOT_HEADING_Dec#1 (>B:AUTOPILOT_HEADING_Dec)
AUTOPILOT_HEADING_Inc#1 (>B:AUTOPILOT_HEADING_Inc)
AUTOPILOT_HEADING_MODE_TOGGLE#(>B:AUTOPILOT_HEADING_MODE_TOGGLE)
AUTOPILOT_HEADING_SYNC_PUSH#(>B:AUTOPILOT_HEADING_SYNC_PUSH)
AUTOPILOT_NAV_MODE_TOGGLE#(>B:AUTOPILOT_NAV_MODE_TOGGLE)
AUTOPILOT_SPEEDMACH_MODE_PUSH#(>B:AUTOPILOT_SPEEDMACH_MODE_PUSH)
AUTOPILOT_SPEED_Dec#1 (>B:AUTOPILOT_SPEED_Dec)
AUTOPILOT_SPEED_Inc#1 (>B:AUTOPILOT_SPEED_Inc)
AUTOPILOT_VERTICALSPEED_Dec#1 (>B:AUTOPILOT_VERTICALSPEED_Dec)
AUTOPILOT_VERTICALSPEED_Inc#1 (>B:AUTOPILOT_VERTICALSPEED_Inc)
AUTOPILOT_VNAV_MODE_TOGGLE#(>B:AUTOPILOT_VNAV_MODE_TOGGLE)
AUTOPILOT_VS_MODE_TOGGLE#(>B:AUTOPILOT_VS_MODE_TOGGLE)
AUTOPILOT_YD_BUTTON_TOGGLE#(>B:AUTOPILOT_YD_BUTTON_TOGGLE)
INSTRUMENT_AUTOPILOT_KNOB_MIN_INNER_Dec#1 (>B:INSTRUMENT_AUTOPILOT_KNOB_MIN_INNER_Dec)
INSTRUMENT_AUTOPILOT_KNOB_MIN_INNER_Inc#1 (>B:INSTRUMENT_AUTOPILOT_KNOB_MIN_INNER_Inc)
INSTRUMENT_AUTOPILOT_KNOB_MIN_INNER_PUSH_PUSH#(>B:INSTRUMENT_AUTOPILOT_KNOB_MIN_INNER_PUSH_PUSH)
INSTRUMENT_FMS_MAN_TOGGLE#(>B:INSTRUMENT_FMS_MAN_TOGGLE)
INSTRUMENT_HDG_TRK_TOGGLE#(>B:INSTRUMENT_HDG_TRK_TOGGLE)
//Miltech Simulations/MV22B Osprey/Avionics
MV22B_CDU_Off_Brightness#0 (>L:MARYADI0209)
MV22B_Captain_Left_MFD_Off_Brightness#0 (>L:MARYADI0074)
MV22B_Captain_Right_MFD_Off_Brightness#0 (>L:MARYADI0099)
MV22B_Co-pilot_Right_MFD_Off_Brightness#0 (>L:MARYADI0049)
MV22B_Copilot_Left_MFD_Off_Brightness#0 (>L:MARYADI0024)
//Miltech Simulations/MV22B Osprey/Engine
MV22B_Toggle_Rotor_Brake#(L:MARYADI0344) ! (>L:MARYADI0344)
//Miltech Simulations/MV22B Osprey/Hydraulic
Rotate_Nacelles_Down#(>K:DEC_COWL_FLAPS4)
Rotate_Nacelles_Up#(>K:INC_COWL_FLAPS4)
//Miltech Simulations/MV22B Osprey/Interaction
MV22B_Cargo_Door_Toggle#(L:MARYADI0380) ! (>L:MARYADI0380)
MV22B_Toggle_Door_Mode__Manual_Auto_#(L:MARYADI0381) ! (>L:MARYADI0381)
MV22B_Toggle_Side_Door_Open_Close#(L:MARYADI0382) ! (>L:MARYADI0382)
//Nemeth Designs/Bell 407/Lights
B407_LDG_LTS_BOTH#2 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_ON) 1 (>K:WING_LIGHTS_ON) 
B407_LDG_LTS_FWD#1 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_ON) 1 (>K:WING_LIGHTS_OFF)
B407_LDG_LTS_OFF#0 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_OFF) 1 (>K:WING_LIGHTS_OFF)
B407_LDG_LTS_SW_DN#(A:LIGHT WING ON:1, Number) 1 == if{ 1 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_ON) 1 (>K:WING_LIGHTS_OFF) } els{ 0 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_OFF) 1 (>K:WING_LIGHTS_OFF) }
B407_LDG_LTS_SW_UP#(A:LIGHT TAXI ON:1, Number) 1 == if{ 2 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_ON) 1 (>K:WING_LIGHTS_ON) } (A:LIGHT TAXI ON:1, Number) 0 == if{ 1 (>L:switchLandingLight, Number) 1 (>K:TAXI_LIGHTS_ON) 1 (>K:WING_LIGHTS_OFF) }
//NextGen/EMB-110/Fuel
MainFuelPumpL#It will be implemented soon
//NextGen/EMB-110/Lights
Beacon_Light_OFF#0 (>L:XMLVAR_NGSE110_AnticollisionLightSwitchPos, enum)
Beacon_light_ON#2 (>L:XMLVAR_NGSE110_AnticollisionLightSwitchPos, enum)
Rotating_Light_ON#1 (>L:XMLVAR_NGSE110_AnticollisionLightSwitchPos, enum)
//PMDG/B737-700/Air Condition / Pressurization
Air_temp_source__Pass_cabin#(L:switch_187_73X, number) 0 == if{ 18701 (>K:ROTOR_BRAKE) }
Air_temp_source__Supply_duct#(L:switch_187_73X, number) 100 == if{ 18701 (>K:ROTOR_BRAKE) }
PMDG_B737_Cruise_Alt_Dec#21808 (>K:ROTOR_BRAKE)
PMDG_B737_Cruise_Alt_Inc#21807 (>K:ROTOR_BRAKE)
PMDG_B737_Land_Alt_Dec#22008 (>K:ROTOR_BRAKE)
PMDG_B737_Land_Alt_Inc#22007 (>K:ROTOR_BRAKE)
PMDG_B737_Recirc_Fan_1_Auto#(L:switch_196_73X) 0 == if{ 19601 (>K:ROTOR_BRAKE) }
PMDG_B737_Recirc_Fan_1_Off#(L:switch_196_73X) 0 > if{ 19601 (>K:ROTOR_BRAKE) }
PMDG_B737_Recirc_Fan_1_Toggle#19601 (>K:ROTOR_BRAKE)
PMDG_B737_Recirc_Fan_2_Auto#(L:switch_872_73X) 0 == if{ 87201 (>K:ROTOR_BRAKE) }
PMDG_B737_Recirc_Fan_2_Off#(L:switch_872_73X) 0 > if{ 87201 (>K:ROTOR_BRAKE) }
PMDG_B737_Recirc_Fan_2_Toggle#87201 (>K:ROTOR_BRAKE)
PMDG_B737_Aft_Cab_Temp_Dec#30707 (>K:ROTOR_BRAKE)
PMDG_B737_Aft_Cab_Temp_Dec_1#30708 (>K:ROTOR_BRAKE)
PMDG_B737_Air_Temp_Source#18701 (>K:ROTOR_BRAKE)
PMDG_B737_Air_Temp_Src_CONT_CAB_AFT#40 (L:switch_313_73X,number) - 10 div s0 :1 l0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Air_Temp_Src_CONT_CAB_FWD#30 (L:switch_313_73X,number) - 10 div s0 :1 l0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Air_Temp_Src_Dec#31308 (>K:ROTOR_BRAKE)
PMDG_B737_Air_Temp_Src_Inc#31307 (>K:ROTOR_BRAKE)
PMDG_B737_Air_Temp_Src_PACK_L#20 (L:switch_313_73X,number) - 10 div s0 :1 l0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Air_Temp_Src_PACK_R#10 (L:switch_313_73X,number) - 10 div s0 :1 l0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Air_Temp_Src_PASS_CAB_AFT#0 (L:switch_313_73X,number) - 10 div s0 :1 l0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Air_Temp_Src_PASS_CAB_FWD#50 (L:switch_313_73X,number) - 10 div s0 :1 l0 0 > if{ 31307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Cont_Cab_Temp_Dec#30508 (>K:ROTOR_BRAKE)
PMDG_B737_Cont_Cab_Temp_Inc#30507 (>K:ROTOR_BRAKE)
PMDG_B737_Cont_Cabin_Temp_Dec#19108 (>K:ROTOR_BRAKE)
PMDG_B737_Cont_Cabin_Temp_Inc#19107 (>K:ROTOR_BRAKE)
PMDG_B737_Filter_Switch_Dec#87008 (>K:ROTOR_BRAKE)
PMDG_B737_Filter_Switch_Inc#87007 (>K:ROTOR_BRAKE)
PMDG_B737_Fwd_Cab_Temp_Dec#30608 (>K:ROTOR_BRAKE)
PMDG_B737_Fwd_Cab_Temp_Inc#30607 (>K:ROTOR_BRAKE)
PMDG_B737_Outflow_Valve_Close#22201 (>K:ROTOR_BRAKE)
PMDG_B737_Outflow_Valve_Open#22202 (>K:ROTOR_BRAKE)
PMDG_B737_Pass_Cabin_Temp_Dec#19208 (>K:ROTOR_BRAKE)
PMDG_B737_Pass_Cabin_Temp_Inc#19207 (>K:ROTOR_BRAKE)
PMDG_B737_Pressurization_Mode_ALTN#10 (L:switch_223_73X,number) - 10 div s0 :1 l0 0 > if{ 22307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 22308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Pressurization_Mode_AUTO#0 (L:switch_223_73X,number) - 10 div s0 :1 l0 0 > if{ 22307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 22308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Pressurization_Mode_MAN#20 (L:switch_223_73X,number) - 10 div s0 :1 l0 0 > if{ 22307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 22308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Trim_Air#31101 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Anti-Ice
PMDG_B737_OVHD_Ovht_Test_Button_Press#19901 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Ovht_Test_Button_Release#19904 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_ENG_1_OFF#100 (L:switch_157_73X, number) == if{ 15702 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_ENG_1_ON#0 (L:switch_157_73X, number) == if{ 15701 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_ENG_1_TOGGLE#15701 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_ENG_2_OFF#100 (L:switch_158_73X, number) == if{ 15802 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_ENG_2_ON#0 (L:switch_158_73X, number) == if{ 15801 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_ENG_2_TOGGLE#15801 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_PROBE_A_OFF#100 (L:switch_140_73X, number) == if{ 14002 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_PROBE_A_ON#0 (L:switch_140_73X, number) == if{ 14001 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_PROBE_A_TOGGLE#14001 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_PROBE_B_OFF#100 (L:switch_141_73X, number) == if{ 14102 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_PROBE_B_ON#0 (L:switch_141_73X, number) == if{ 14101 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_PROBE_B_TOGGLE#14101 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_L_OFF#100 (L:switch_136_73X, number) == if{ 13602 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_L_ON#0 (L:switch_136_73X, number) == if{ 13601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_L_TOGGLE#13601 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_R_OFF#100 (L:switch_138_73X, number) == if{ 13802 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_R_ON#0 (L:switch_138_73X, number) == if{ 13801 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_FWD_R_TOGGLE#13801 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_L_OFF#100 (L:switch_135_73X, number) == if{ 13502 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_L_ON#0 (L:switch_135_73X, number) == if{ 13501 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_L_TOGGLE#13501 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_R_OFF#100 (L:switch_139_73X, number) == if{ 13902 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_R_ON#0 (L:switch_139_73X, number) == if{ 13901 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_SIDE_R_TOGGLE#13901 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_TEST_OVTH#13702 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_WINDOW_HEAT_TEST_POWER#13701 (>K:ROTOR_BRAKE)
PMDG_B737-7_ANTI_ICE_WING_OFF#100 (L:switch_156_73X, number) == if{ 15602 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WING_ON#0 (L:switch_156_73X, number) == if{ 15601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ANTI_ICE_WING_TOGGLE#15601 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Autopilot
PMDG_B737_Bank_Angle_Selector_10#0 (L:switch_389_73X,number) - 10 div s0 :1 l0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Bank_Angle_Selector_15#10 (L:switch_389_73X,number) - 10 div s0 :1 l0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Bank_Angle_Selector_20#20 (L:switch_389_73X,number) - 10 div s0 :1 l0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Bank_Angle_Selector_25#30 (L:switch_389_73X,number) - 10 div s0 :1 l0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Bank_Angle_Selector_30#40 (L:switch_389_73X,number) - 10 div s0 :1 l0 0 > if{ 38902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 38901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_FD_Switch_Capt_Off#(L:switch_378_73X) 0 == if{ 37801 (>K:ROTOR_BRAKE) }
PMDG_B737_FD_Switch_Capt_On#(L:switch_378_73X) 100 == if{ 37801 (>K:ROTOR_BRAKE) }
PMDG_B737_FD_Switch_FO_Off#(L:switch_407_73X, number) 0 == if{ 40701 (>K:ROTOR_BRAKE) }
PMDG_B737_FD_Switch_FO_On#(L:switch_407_73X, number) 100 == if{ 40701 (>K:ROTOR_BRAKE) }
PMDG_B737_MCP_A_T_Switch_Off#(L:switch_380_73X) 0 == if{ 38001 (>K:ROTOR_BRAKE) }
PMDG_B737_MCP_A_T_Switch_On#(L:switch_380_73X) 100 == if{ 38001 (>K:ROTOR_BRAKE) }
PMDG_B737_MCP_SPEED_SWITCH#38201 (>K:ROTOR_BRAKE)
PMDG_B737-7_CPT_FD_TOGGLE#37801 (>K:ROTOR_BRAKE)
PMDG_B737-7_FO_FD_TOGGLE#40701 (>K:ROTOR_BRAKE)
PMDG_B737-7_MCP_ALT_INTV_BUTTON#88501 (>K:ROTOR_BRAKE)
PMDG_B737-7_MCP_C_O_BUTTON#38301 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_A_T_TOGGLE#38001 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_ALT_DEC#40008 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_ALT_HLD_SWITCH#39401 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_ALT_INC#40007 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_APP_SWITCH#39301 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_AUTOPILOT_DISENGAGE_SWITCH#40601 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_AUTOPILOT_DISENGAGE_SWITCH_OFF#(L:switch_406_73X) 0 == if{ 40601 (>K:ROTOR_BRAKE) }
PMDG_B737_MCP_AUTOPILOT_DISENGAGE_SWITCH_ON#(L:switch_406_73X) 100 == if{ 40601 (>K:ROTOR_BRAKE) }
PMDG_B737_MCP_AUTOPILOT_DISENGAGE_YOKE#100401 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_BANK_ANGLE_DEC#38901 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_BANK_ANGLE_INC#38902 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_CMD_A_SWITCH#40201 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_CMD_B_SWITCH#40301 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_CPT_CRS_DEC#37608 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_CPT_CRS_INC#37607 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_CWS_A_SWITCH#40401 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_CWS_B_SWITCH#40501 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_FO_CRS_DEC#40908 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_FO_CRS_INC#40907 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_HDG_DEC#39008 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_HDG_INC#39007 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_HDG_SEL-SWITCH#39201 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_IAS_MACH_DEC#38408 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_IAS_MACH_INC#38407 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_LNAV_SWITCH#39701 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_LVL_CHG_SWITCH#39101 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_N1_LIMIT_SWITCH#38101 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_SPD_INTV_BUTTON#38701 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_V_S_SWITCH#39501 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_VNAV_SWITCH#38601 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_VOR_LOC_SWITCH#39601 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_VS_DEC#40107 (>K:ROTOR_BRAKE)
PMDG_B737_MCP_VS_INC#40108 (>K:ROTOR_BRAKE)
PMDG_B737_Ap_Disc_Left#101501 (>K:ROTOR_BRAKE)
PMDG_B737_Ap_Disc_Right#100501 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Autothrust System
PMDG_B737-7_AUTOTHRUST_DISENGAGE#68201 (>K:ROTOR_BRAKE)
PMDG_B737-7_AUTOTHRUST_TOGA_L_BTN#68401 (>K:ROTOR_BRAKE)
PMDG_B737-7_AUTOTHRUST_TOGA_R_BTN#68701 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Avionics
PMDG_B737_Baro_FO_Dec#42108 (>K:ROTOR_BRAKE)
PMDG_B737_Baro_FO_Inc#42107 (>K:ROTOR_BRAKE)
PMDG_B737_Baro_Ref#42201 (>K:ROTOR_BRAKE)
PMDG_B737_Capt_A_P_P_RST_Button#33901 (>K:ROTOR_BRAKE)
PMDG_B737_Capt_AFDS_Test_1_Switch_Press#34202 (>K:ROTOR_BRAKE)
PMDG_B737_Capt_AFDS_Test_2_Switch_Press#34201 (>K:ROTOR_BRAKE)
PMDG_B737_Capt_AFDS_Test_Switch_Release#34204 (>K:ROTOR_BRAKE)
PMDG_B737_FO_AFDS_Panel_Test_Switch_1#44202 (>K:ROTOR_BRAKE)
PMDG_B737_FO_AFDS_Panel_Test_Switch_2#44201 (>K:ROTOR_BRAKE)
PMDG_B737_FO_AFDS_Panel_Test_Switch_Release#44204 (>K:ROTOR_BRAKE)
PMDG_B737_Fuel_Flow_Switch_Release#46804 (>K:ROTOR_BRAKE)
PMDG_B737_Fuel_Flow_Switch_Reset#46802 (>K:ROTOR_BRAKE)
PMDG_B737_Fuel_Flow_Switch_Used#46801 (>K:ROTOR_BRAKE)
PMDG_B737_Irs_Display_Selector_PPOS#20 (L:switch_229_73X,number) - 10 div s0 :1 l0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Isfd_Baro_Knob_Dec#99108 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_Baro_Knob_Inc#99107 (>K:ROTOR_BRAKE)
PMDG_B737_Lower_DU_L_Selector_ENG_PRI#0 (L:switch_336_73X) - 50 div s0 :1 l0 0 > if{ 33607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 33608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Lower_DU_L_Selector_ND#100 (L:switch_336_73X) - 50 div s0 :1 l0 0 > if{ 33607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 33608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Lower_DU_L_Selector_NORM#50 (L:switch_336_73X) - 50 div s0 :1 l0 0 > if{ 33607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 33608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Lower_DU_R_Selector_ENG_PRI#0 (L:switch_441_73X) - 50 div s0 :1 l0 0 > if{ 44108 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 44107 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Lower_DU_R_Selector_ND#100 (L:switch_441_73X) - 50 div s0 :1 l0 0 > if{ 44108 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 44107 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Lower_DU_R_Selector_NORM#50 (L:switch_441_73X) - 50 div s0 :1 l0 0 > if{ 44108 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 44107 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Main_Panel_DUs_ENG_PRI#20 (L:switch_335_73X,number) - 10 div s0 :1 l0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Main_Panel_DUs_MFD#40 (L:switch_335_73X,number) - 10 div s0 :1 l0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Main_Panel_DUs_NORM#10 (L:switch_335_73X,number) - 10 div s0 :1 l0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Main_Panel_DUs_OUTBD_PFD#0 (L:switch_335_73X,number) - 10 div s0 :1 l0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Main_Panel_DUs_PFD#30 (L:switch_335_73X,number) - 10 div s0 :1 l0 0 > if{ 33507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 33508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_N1_Set_Inner_Dec#46708 (>K:ROTOR_BRAKE)
PMDG_B737_N1_Set_Inner_Inc#46707 (>K:ROTOR_BRAKE)
PMDG_B737_N1_Set_Mode_Outer_Dec#46608 (>K:ROTOR_BRAKE)
PMDG_B737_N1_Set_Mode_Outer_Inc#46607 (>K:ROTOR_BRAKE)
PMDG_B737_N1_Set_Outer_Knob_1#10 (L:switch_466_73X) - 10 div s0 :1 l0 0 > if{ 46607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_N1_Set_Outer_Knob_2#0 (L:switch_466_73X) - 10 div s0 :1 l0 0 > if{ 46607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_N1_Set_Outer_Knob_Auto#20 (L:switch_466_73X) - 10 div s0 :1 l0 0 > if{ 46607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_N1_Set_Outer_Knob_Both#30 (L:switch_466_73X) - 10 div s0 :1 l0 0 > if{ 46607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_OVHD_IRS_Sys_Dspl_L#(L:switch_231_73X) 100 == if{ 23101 (>K:ROTOR_BRAKE) }
PMDG_B737_OVHD_IRS_Sys_Dspl_R#(L:switch_231_73X) 0 == if{ 23101 (>K:ROTOR_BRAKE) }
PMDG_B737_OVHD_LE_Devices_Test_Press#22401 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_LE_Devices_Test_Release#22404 (>K:ROTOR_BRAKE)
PMDG_B737_STBY_Baro_Set_Dec#49208 (>K:ROTOR_BRAKE)
PMDG_B737_STBY_Baro_Set_Inc#49207 (>K:ROTOR_BRAKE)
PMDG_B737_Spd_Ref_Outer_Knob_AUTO#10 (L:switch_464_73X) - 10 div s0 :1 l0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Spd_Ref_Outer_Knob_BUG#60 (L:switch_464_73X) - 10 div s0 :1 l0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Spd_Ref_Outer_Knob_SET#0 (L:switch_464_73X) - 10 div s0 :1 l0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Spd_Ref_Outer_Knob_V1#20 (L:switch_464_73X) - 10 div s0 :1 l0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Spd_Ref_Outer_Knob_VR#30 (L:switch_464_73X) - 10 div s0 :1 l0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Spd_Ref_Outer_Knob_VREF#50 (L:switch_464_73X) - 10 div s0 :1 l0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Spd_Ref_Outer_Knob_WT#40 (L:switch_464_73X) - 10 div s0 :1 l0 0 > if{ 46407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_A_P_P_Rst_R#44501 (>K:ROTOR_BRAKE)
PMDG_B737_A_T_P_RST_Button#34001 (>K:ROTOR_BRAKE)
PMDG_B737_A_T_P_Rst_R#44401 (>K:ROTOR_BRAKE)
PMDG_B737_Ai_Mode_Dec#47408 (>K:ROTOR_BRAKE)
PMDG_B737_Ai_Mode_Inc#47407 (>K:ROTOR_BRAKE)
PMDG_B737_Below_G_S_P-Inhibit#44601 (>K:ROTOR_BRAKE)
PMDG_B737_Cage#47601 (>K:ROTOR_BRAKE)
PMDG_B737_Control_Panel_Both_1#0 (L:switch_59_73X,number) - 50 div s0 :1 l0 0 > if{ 5902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 5901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Control_Panel_Both_2#100 (L:switch_59_73X,number) - 50 div s0 :1 l0 0 > if{ 5902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 5901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Control_Panel_Normal#50 (L:switch_59_73X,number) - 50 div s0 :1 l0 0 > if{ 5902 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 5901 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Cr#462101 (>K:ROTOR_BRAKE)
PMDG_B737_Ctr_R#41601 (>K:ROTOR_BRAKE)
PMDG_B737_Displays_Source_All_1#0 (L:switch_58_73X,number) - 10 div s0 :1 l0 0 > if{ 5807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 5808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Displays_Source_All_2#20 (L:switch_58_73X,number) - 10 div s0 :1 l0 0 > if{ 5807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 5808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Displays_Source_Auto#10 (L:switch_58_73X,number) - 10 div s0 :1 l0 0 > if{ 5807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 5808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Eng#46301 (>K:ROTOR_BRAKE)
PMDG_B737_FMC_P_RST_Button#34101 (>K:ROTOR_BRAKE)
PMDG_B737_Flight_Control_A_Guard#7901 (>K:ROTOR_BRAKE)
PMDG_B737_Flight_Control_A_Off#50 (L:switch_78_73X,number) - 50 div s0 :1 l0 0 > if{ 7801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 7802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Flight_Control_A_On#100 (L:switch_78_73X,number) - 50 div s0 :1 l0 0 > if{ 7801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 7802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Flight_Control_A_Stby#0 (L:switch_78_73X,number) - 50 div s0 :1 l0 0 > if{ 7801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 7802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Flight_Control_B_Guard#8101 (>K:ROTOR_BRAKE)
PMDG_B737_Flight_Control_B_Off#50 (L:switch_80_73X,number) - 50 div s0 :1 l0 0 > if{ 8001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 8002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Flight_Control_B_On#100 (L:switch_80_73X,number) - 50 div s0 :1 l0 0 > if{ 8001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 8002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Flight_Control_B_Stby#0 (L:switch_80_73X,number) - 50 div s0 :1 l0 0 > if{ 8001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 8002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Flt_Alt_Dec#21808 (>K:ROTOR_BRAKE)
PMDG_B737_Flt_Alt_Inc#21807 (>K:ROTOR_BRAKE)
PMDG_B737_Fmc_P_Rst_R#44301 (>K:ROTOR_BRAKE)
PMDG_B737_Fmc_Source_Both_L#0 (L:switch_60_73X,number) - 50 div s0 :1 l0 0 > if{ 6002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Fmc_Source_Both_R#100 (L:switch_60_73X,number) - 50 div s0 :1 l0 0 > if{ 6002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Fmc_Source_Normal#50 (L:switch_60_73X,number) - 50 div s0 :1 l0 0 > if{ 6002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Fpv_R#41901 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Brt_#77601 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Clr#77501 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Dim-#77701 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Enter#78701 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_G_S#77301 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Mode#77001 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_0#78801 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_1#77801 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_2#77901 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_3#78001 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_4#78101 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_5#78201 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_6#78301 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_7#78401 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_8#78501 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Num_9#78601 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Rwy#77201 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Stby#77101 (>K:ROTOR_BRAKE)
PMDG_B737_HGS_Test#78901 (>K:ROTOR_BRAKE)
PMDG_B737_Hgs_Fail#52201 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_0#24301 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_1#23201 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_2#23301 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_3#23401 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_4#23501 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_5#23601 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_6#23701 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_7#23801 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_8#23901 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_9#24001 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_Clr#24401 (>K:ROTOR_BRAKE)
PMDG_B737_IRS_Ent#24101 (>K:ROTOR_BRAKE)
PMDG_B737_Irs_Display_Selector_Dec#22908 (>K:ROTOR_BRAKE)
PMDG_B737_Irs_Display_Selector_HDG_STS#40 (L:switch_229_73X,number) - 10 div s0 :1 l0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Irs_Display_Selector_Inc#22907 (>K:ROTOR_BRAKE)
PMDG_B737_Irs_Display_Selector_TEST#0 (L:switch_229_73X,number) - 10 div s0 :1 l0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Irs_Display_Selector_TK_GS#10 (L:switch_229_73X,number) - 10 div s0 :1 l0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Irs_Display_Selector_WIND#30 (L:switch_229_73X,number) - 10 div s0 :1 l0 0 > if{ 22907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 22908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Irs_Dspl_Brt_Dec#23008 (>K:ROTOR_BRAKE)
PMDG_B737_Irs_Dspl_Brt_Inc#23007 (>K:ROTOR_BRAKE)
PMDG_B737_Irs_Transfer_Both_L#0 (L:switch_61_73X,number) - 50 div s0 :1 l0 0 > if{ 6102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Irs_Transfer_Both_R#100 (L:switch_61_73X,number) - 50 div s0 :1 l0 0 > if{ 6102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Irs_Transfer_Normal#50 (L:switch_61_73X,number) - 50 div s0 :1 l0 0 > if{ 6102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Isfd__#98801 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_-#98901 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_Adjust_Knob_Dec#202208 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_Adjust_Knob_Inc#202207 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_Adjust_Push#202301 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_App#98701 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_Att_Rst_Switch#99001 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_Hp_In#98601 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_Menu#202101 (>K:ROTOR_BRAKE)
PMDG_B737_Isfd_Std#99301 (>K:ROTOR_BRAKE)
PMDG_B737_Mins_R_Rst#41301 (>K:ROTOR_BRAKE)
PMDG_B737_Mins_Slew_FO_Dec#41108 (>K:ROTOR_BRAKE)
PMDG_B737_Mins_Slew_FO_Inc#41107 (>K:ROTOR_BRAKE)
PMDG_B737_Mtrs_R#42001 (>K:ROTOR_BRAKE)
PMDG_B737_STBY_RMI_Vor1_Adf1#49701 (>K:ROTOR_BRAKE)
PMDG_B737_STBY_RMI_Vor2_Adf2#49801 (>K:ROTOR_BRAKE)
PMDG_B737_Spd_Ref_Mode_Dec#46408 (>K:ROTOR_BRAKE)
PMDG_B737_Spd_Ref_Mode_Inc#46407 (>K:ROTOR_BRAKE)
PMDG_B737_Spd_Ref_Sel_Dec#46508 (>K:ROTOR_BRAKE)
PMDG_B737_Spd_Ref_Sel_Inc#46507 (>K:ROTOR_BRAKE)
PMDG_B737_Std_R#42301 (>K:ROTOR_BRAKE)
PMDG_B737_Sys#46201 (>K:ROTOR_BRAKE)
PMDG_B737_Sys_Test#50001 (>K:ROTOR_BRAKE)
PMDG_B737_Tfc_R#41801 (>K:ROTOR_BRAKE)
PMDG_B737_Vor1_Adf1_R#41401 (>K:ROTOR_BRAKE)
PMDG_B737_Vor2_Adf2_R#42401 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Auto#91701 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Gain_Control_Left_Dec#92308 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Gain_Control_Left_Inc#92307 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Gain_Control_Right_Dec#92208 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Gain_Control_Right_Inc#92207 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Gc_Left#79301 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Gc_Right#92101 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Map_Left#79201 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Map_Right#79701 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Test#91801 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Tfr_Left#79001 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Tfr_Right#91901 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Tilt_Control_Left_Dec#79408 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Tilt_Control_Left_Inc#79407 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Tilt_Control_Right_Dec#79508 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Tilt_Control_Right_Inc#79507 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Wx_Left#79101 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Wx_Right#79601 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Wx_T_Left#91601 (>K:ROTOR_BRAKE)
PMDG_B737_Weather_Radar_Wx_T_Right#92001 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Controls
PMDG_B737_Alternate_Flaps_Down_Press#7501 (>K:ROTOR_BRAKE)
PMDG_B737_Alternate_Flaps_Down_Release#7502 (>K:ROTOR_BRAKE)
PMDG_B737_Alternate_Flaps_Master#7301 (>K:ROTOR_BRAKE)
PMDG_B737_Alternate_Flaps_Up_Press#7502 (>K:ROTOR_BRAKE)
PMDG_B737_Alternate_Flaps_Up_Release#7501 (>K:ROTOR_BRAKE)
PMDG_B737_Elevator_Trim_Dec#67807 (>K:ROTOR_BRAKE)
PMDG_B737_Elevator_Trim_Inc#67808 (>K:ROTOR_BRAKE)
PMDG_B737_Engines_Fire_Ext_Test_1#0 (L:switch_715_73X,number) - 50 div s0 :1 l0 0 > if{ 71502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 71501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Engines_Fire_Ext_Test_2#100 (L:switch_715_73X,number) - 50 div s0 :1 l0 0 > if{ 71502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 71501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Engines_Fire_Ext_Test_Middle#50 (L:switch_715_73X,number) - 50 div s0 :1 l0 0 > if{ 71502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 71501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Nose_Wheel_Steering_Switch#32501 (>K:ROTOR_BRAKE)
PMDG_B737_Rudder_Trim_Knob_Release#81104 (>K:ROTOR_BRAKE)
PMDG_B737_Rudder_Trim_Nose_Left#81101 (>K:ROTOR_BRAKE)
PMDG_B737_Rudder_Trim_Nose_Right#81102 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_15#714601 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_5#714401 (>K:ROTOR_BRAKE)
PMDG_B737_Aileron_Trim_Switch_Left#81001 (>K:ROTOR_BRAKE)
PMDG_B737_Aileron_Trim_Switch_Right#81002 (>K:ROTOR_BRAKE)
PMDG_B737_Alternate_Flaps_Master_Guard#7401 (>K:ROTOR_BRAKE)
PMDG_B737_Below_G_S_P-Inhibit#32701 (>K:ROTOR_BRAKE)
PMDG_B737_Move_Flap_Lever#71401 (>K:ROTOR_BRAKE)
PMDG_B737_Move_Spoilers_Lever#67901 (>K:ROTOR_BRAKE)
PMDG_B737_Nose_Wheel_Steering_Guard#32601 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_1#714201 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_10#714501 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_2#714301 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_25#714701 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_30#714801 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_40#714901 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Flaps_Up#714101 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Spoilers_50_Percent#679301 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Spoilers_Armed#679201 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Spoilers_Down#679101 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Spoilers_Flight_Detent#679401 (>K:ROTOR_BRAKE)
PMDG_B737_Set_Spoilers_Up#679501 (>K:ROTOR_BRAKE)
PMDG_B737_Spoiler_A#6501 (>K:ROTOR_BRAKE)
PMDG_B737_Spoiler_A_Guard#6601 (>K:ROTOR_BRAKE)
PMDG_B737_Spoiler_B#6701 (>K:ROTOR_BRAKE)
PMDG_B737_Spoiler_B_Guard#6801 (>K:ROTOR_BRAKE)
//PMDG/B737-700/EFIS
PMDG_B737_EFIS_L_BARO_STD_Press#36701 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Baro_Select_Knob_HPa#(L:switch_366_73X) 0 != if{ 36601 (>K:ROTOR_BRAKE) }
PMDG_B737_EFIS_L_Baro_Select_Knob_InHg#(L:switch_366_73X) 0 == if{ 36601 (>K:ROTOR_BRAKE) }
PMDG_B737_EFIS_L_MINS_KNOB_BARO#(L:switch_356_73X) 0 == if{ 35601 (>K:ROTOR_BRAKE) }
PMDG_B737_EFIS_L_MINS_KNOB_RADIO#(L:switch_356_73X) 0 != if{ 35601 (>K:ROTOR_BRAKE) }
PMDG_B737_EFIS_L_MINS_REF#35601 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Range_Dec#36108 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_VOR_ADF_ADF1#100 (L:switch_358_73X) - 50 div s0 :1 l0 0 > if{ 35801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 35802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_VOR_ADF_OFF#50 (L:switch_358_73X) - 50 div s0 :1 l0 0 > if{ 35801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 35802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_VOR_ADF_VOR1#0 (L:switch_358_73X) - 50 div s0 :1 l0 0 > if{ 35801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 35802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_VOR2_ADF2_ADF2#100 (L:switch_368_73X) - 50 div s0 :1 l0 0 > if{ 36801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_VOR2_ADF2_OFF#50 (L:switch_368_73X) - 50 div s0 :1 l0 0 > if{ 36801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_VOR2_ADF2_VOR2#0 (L:switch_368_73X) - 50 div s0 :1 l0 0 > if{ 36801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_APP#0 (L:switch_415_73X) - 10 div s0 :1 l0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_APP#0 (L:switch_415_73X) - 10 div s0 :1 l0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_BARO_ENC_Dec#42108 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_BARO_ENC_Inc#42107 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_BARO_KNOB_HPA#(L:switch_422_73X) 0 == if{ 42201 (>K:ROTOR_BRAKE) }
PMDG_B737_EFIS_R_BARO_KNOB_IN#(L:switch_422_73X) 0 != if{ 42201 (>K:ROTOR_BRAKE) }
PMDG_B737_EFIS_R_FPV#41901 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_MAP#20 (L:switch_415_73X) - 10 div s0 :1 l0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_MINS_ENC_Dec#41108 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_MINS_ENC_Inc#41107 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_MINS_KNOB_BARO#(L:switch_412_73X) 0 == if{ 41201 (>K:ROTOR_BRAKE) }
PMDG_B737_EFIS_R_MINS_KNOB_RADIO#(L:switch_412_73X) 0 != if{ 41201 (>K:ROTOR_BRAKE) }
PMDG_B737_EFIS_R_MTRS#42001 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Mins_Ref_Toggle#41201 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_PLN#30 (L:switch_415_73X) - 10 div s0 :1 l0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RANGE_10#10 (L:switch_417_73X) - 10 div s0 :1 l0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RANGE_160#50 (L:switch_417_73X) - 10 div s0 :1 l0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RANGE_20#20 (L:switch_417_73X) - 10 div s0 :1 l0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RANGE_320#60 (L:switch_417_73X) - 10 div s0 :1 l0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RANGE_40#30 (L:switch_417_73X) - 10 div s0 :1 l0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RANGE_5#0 (L:switch_417_73X) - 10 div s0 :1 l0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RANGE_640#70 (L:switch_417_73X) - 10 div s0 :1 l0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RANGE_80#40 (L:switch_417_73X) - 10 div s0 :1 l0 0 > if{ 41707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_RST#41301 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_VOR#10 (L:switch_415_73X) - 10 div s0 :1 l0 0 > if{ 41507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_VOR_ADF_ADF1#100 (L:switch_414_73X) - 50 div s0 :1 l0 0 > if{ 41401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_VOR_ADF_OFF#50 (L:switch_414_73X) - 50 div s0 :1 l0 0 > if{ 41401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_VOR_ADF_VOR1#0 (L:switch_414_73X) - 50 div s0 :1 l0 0 > if{ 41401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 41402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_VOR2_ADF2_ADF2#100 (L:switch_424_73X) - 50 div s0 :1 l0 0 > if{ 42401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 42402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_VOR2_ADF2_OFF#50 (L:switch_424_73X) - 50 div s0 :1 l0 0 > if{ 42401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 42402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_R_VOR2_ADF2_VOR2#0 (L:switch_424_73X) - 50 div s0 :1 l0 0 > if{ 42401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 42402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Efis_Mode_FO_Dec#41508 (>K:ROTOR_BRAKE)
PMDG_B737_Efis_Mode_FO_Inc#41507 (>K:ROTOR_BRAKE)
PMDG_B737_Efis_Range_FO_Dec#41708 (>K:ROTOR_BRAKE)
PMDG_B737_Efis_Range_FO_Inc#41707 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_CPT_RANGE_DEC#36108 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_CPT_RANGE_INC#36107 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Mode_CTR#41601 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Mode_Dec#41508 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Mode_Inc#41507 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Range_Dec#41708 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Range_Inc#41707 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_TFC#41801 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_BARO_Dec#36508 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_BARO_IN_HPA#36601 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_BARO_Inc#36507 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_FPV#36301 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_MINS_RST#35701 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_MINS_Slew_Dec#35508 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_MINS_Slew_Inc#35507 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_MTRS#36401 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Map_Btn_ARPT#37201 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Map_Btn_DATA#37301 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Map_Btn_POS#37401 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Map_Btn_STA#37001 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Map_Btn_TERR#37501 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Map_Btn_WPT#37101 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Map_Btn_WXR#36901 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Mode_APP#0 (L:switch_359_73X) - 10 div s0 :1 l0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Mode_CTR#36001 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Mode_Dec#35908 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Mode_Inc#35907 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_Mode_MAP#20 (L:switch_359_73X) - 10 div s0 :1 l0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Mode_PLN#30 (L:switch_359_73X) - 10 div s0 :1 l0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Mode_VOR#10 (L:switch_359_73X) - 10 div s0 :1 l0 0 > if{ 35907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 35908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_10#10 (L:switch_361_73X) - 10 div s0 :1 l0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_160#50 (L:switch_361_73X) - 10 div s0 :1 l0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_20#20 (L:switch_361_73X) - 10 div s0 :1 l0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_320#60 (L:switch_361_73X) - 10 div s0 :1 l0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_40#30 (L:switch_361_73X) - 10 div s0 :1 l0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_5#0 (L:switch_361_73X) - 10 div s0 :1 l0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_640#70 (L:switch_361_73X) - 10 div s0 :1 l0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_80#40 (L:switch_361_73X) - 10 div s0 :1 l0 0 > if{ 36107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 36108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_EFIS_L_Range_Inc#36107 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_L_TFC#36201 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Map_Btn_ARPT#42801 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Map_Btn_Data#42901 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Map_Btn_POS#43001 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Map_Btn_STA#42601 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Map_Btn_WPT#42701 (>K:ROTOR_BRAKE)
PMDG_B737_EFIS_R_Map_Btn_WXR#42501 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Electrical
PMDG_B737_Elec_Bus_Transfer_Off#100 (L:switch_18_73X, number) == if{ 1801 (>K:ROTOR_BRAKE) }
PMDG_B737_Elec_Bus_Transfer_On#0 (L:switch_18_73X, number) == if{ 1801 (>K:ROTOR_BRAKE) }
PMDG_B737_Elec_Bus_Transfer_Toggle#1801 (>K:ROTOR_BRAKE)
PMDG_B737_Master_Battery_Switch_Off#(L:switch_01_73X) 0 != if{ 101 (>K:ROTOR_BRAKE) }
PMDG_B737_Master_Battery_Switch_On#(L:switch_01_73X) 0 == if{ 101 (>K:ROTOR_BRAKE) }
PMDG_B737_OH_APU_SWITCH_OFF#50 (L:switch_118_73X) == if{ 11802 (>K:ROTOR_BRAKE) } 
PMDG_B737_OH_APU_SWITCH_ON#50 (L:switch_118_73X) != if{ 11801 (>K:ROTOR_BRAKE) }
PMDG_B737_OH_APU_SWITCH_START#50 (L:switch_118_73X) == if{ 11801 (>K:ROTOR_BRAKE) }  els{ 11801 (>K:ROTOR_BRAKE) 11801 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ELECTRICAL_APU_GEN1_OFF#2802 (>K:ROTOR_BRAKE)
PMDG_B737-7_ELECTRICAL_APU_GEN1_ON#2801 (>K:ROTOR_BRAKE)
PMDG_B737-7_ELECTRICAL_APU_GEN2_OFF#2902 (>K:ROTOR_BRAKE)
PMDG_B737-7_ELECTRICAL_APU_GEN2_ON#2901 (>K:ROTOR_BRAKE)
PMDG_B737-7_ELECTRICAL_GALLEY_POWER_OFF#100 (L:switch_974_73X, number) == if{ 97402 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ELECTRICAL_GALLEY_POWER_ON#0 (L:switch_974_73X, number) == if{ 97401 (>K:ROTOR_BRAKE) }
PMDG_B737-7_ELECTRICAL_GALLEY_POWER_TOGGLE#97401 (>K:ROTOR_BRAKE)
PMDG_B737-7_ELECTRICAL_GEN1_OFF#2702 (>K:ROTOR_BRAKE)
PMDG_B737-7_ELECTRICAL_GEN1_ON#2701 (>K:ROTOR_BRAKE)
PMDG_B737-7_ELECTRICAL_GEN2_OFF#3002 (>K:ROTOR_BRAKE)
PMDG_B737-7_ELECTRICAL_GEN2_ON#3001 (>K:ROTOR_BRAKE)
PMDG_B737-7_GRD_PWR_OFF_POS_SW#1702 (>K:ROTOR_BRAKE)
PMDG_B737-7_GRD_PWR_ON_POS_SW#1701 (>K:ROTOR_BRAKE)
PMDG_B737_BATT_GUARD_SWITCH#201 (>K:ROTOR_BRAKE)
PMDG_B737_BATT_ON_OFF_SWITCH#101 (>K:ROTOR_BRAKE)
PMDG_B737_Ac_Source_Knob_APU_GEN#30 (L:switch_04_73X,number) - 10 div s0 :1 l0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Ac_Source_Knob_Dec#408 (>K:ROTOR_BRAKE)
PMDG_B737_Ac_Source_Knob_GEN_1#20 (L:switch_04_73X,number) - 10 div s0 :1 l0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Ac_Source_Knob_GEN_2#40 (L:switch_04_73X,number) - 10 div s0 :1 l0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Ac_Source_Knob_GND_PWR#10 (L:switch_04_73X,number) - 10 div s0 :1 l0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Ac_Source_Knob_INV#50 (L:switch_04_73X,number) - 10 div s0 :1 l0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Ac_Source_Knob_Inc#407 (>K:ROTOR_BRAKE)
PMDG_B737_Ac_Source_Knob_STBY_PWR#0 (L:switch_04_73X,number) - 10 div s0 :1 l0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Ac_Source_Knob_TEST#60 (L:switch_04_73X,number) - 10 div s0 :1 l0 0 > if{ 407 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 408 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Apu_Start_OFF#0 (L:switch_118_73X,number) - 50 div s0 :1 l0 0 > if{ 11801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Apu_Start_ON#50 (L:switch_118_73X,number) - 50 div s0 :1 l0 0 > if{ 11801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Apu_Start_START#100 (L:switch_118_73X,number) - 50 div s0 :1 l0 0 > if{ 11801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Bus_Transfer_Guard#1901 (>K:ROTOR_BRAKE)
PMDG_B737_Cvr_Erase#18001 (>K:ROTOR_BRAKE)
PMDG_B737_Cvr_Test#17801 (>K:ROTOR_BRAKE)
PMDG_B737_Dc_Source_Knob_AUX_BAT#30 (L:switch_03_73X,number) - 10 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Dc_Source_Knob_BAT#20 (L:switch_03_73X,number) - 10 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Dc_Source_Knob_BAT_BUS#10 (L:switch_03_73X,number) - 10 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Dc_Source_Knob_Dec#308 (>K:ROTOR_BRAKE)
PMDG_B737_Dc_Source_Knob_Inc#307 (>K:ROTOR_BRAKE)
PMDG_B737_Dc_Source_Knob_STBY_PWR#0 (L:switch_03_73X,number) - 10 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Dc_Source_Knob_TEST#70 (L:switch_03_73X,number) - 10 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Dc_Source_Knob_TR1#40 (L:switch_03_73X,number) - 10 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Dc_Source_Knob_TR2#50 (L:switch_03_73X,number) - 10 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Dc_Source_Knob_TR3#60 (L:switch_03_73X,number) - 10 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Elec_Maint#9301 (>K:ROTOR_BRAKE)
PMDG_B737_Gen_Drive_Disc_Left#1201 (>K:ROTOR_BRAKE)
PMDG_B737_Gen_Drive_Disc_Left_Guard#1301 (>K:ROTOR_BRAKE)
PMDG_B737_Gen_Drive_Disc_Right#1401 (>K:ROTOR_BRAKE)
PMDG_B737_Gen_Drive_Disc_Right_Guard#1501 (>K:ROTOR_BRAKE)
PMDG_B737_Standby_Power_Auto#100 (L:switch_10_73X,number) - 50 div s0 :1 l0 0 > if{ 1002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 1001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Standby_Power_Bat#0 (L:switch_10_73X,number) - 50 div s0 :1 l0 0 > if{ 1002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 1001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Standby_Power_Off#50 (L:switch_10_73X,number) - 50 div s0 :1 l0 0 > if{ 1002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 1001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Trip_Reset#20901 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Engines
A310_TRP_Auto_Toggle#1 (>L:A310_TRP_AUTO_BUTTON)
A310_TRP_FLX_TO_Button_Press#6 (>L:A310_TRP_MODE)
A310_TRP_Flex_Temp_Knob_Dec#1 (>L:A310_FLEX_TEMP_DN_COMMAND)
A310_TRP_Flex_Temp_Knob_Inc#1 (>L:A310_FLEX_TEMP_UP_COMMAND)
Engine_1_Start_Lever_ENG1#68801 (>K:ROTOR_BRAKE) - ON 68802 (>K:ROTOR_BRAKE
PMDG_B737_ENGINE_START_RIGHT_LEVER_IDLE#68901 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_1_A_T_Disengage#68201 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_1_Reverse_Thrust_Kill#68001 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_1_Throttle#68301 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_2_Reverse_Thrust_Kill#68101 (>K:ROTOR_BRAKE)
PMDG_B737_Engine_Start_Left_GRD#0 (L:switch_119_73X,number) - 10 div s0 :1 l0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ENGINE_START_LEFT_ROTARY_SWITCH_CONT_POS#20 (L:switch_119_73X) - 10 div s0 :1 l0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ENGINE_START_LEFT_ROTARY_SWITCH_FLT_POS#30 (L:switch_119_73X) - 10 div s0 :1 l0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ENGINE_START_LEFT_ROTARY_SWITCH_GRD_POS#0 (L:switch_119_73X) - 10 div s0 :1 l0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ENGINE_START_LEFT_ROTARY_SWITCH_OFF_POS#10 (L:switch_119_73X) - 10 div s0 :1 l0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ENGINE_START_RIGHT_ROTARY_SWITCH_CONT_POS#20 (L:switch_121_73X) - 10 div s0 :1 l0 0 > if{ 12107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ENGINE_START_RIGHT_ROTARY_SWITCH_FLT_POS#30 (L:switch_121_73X) - 10 div s0 :1 l0 0 > if{ 12107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ENGINE_START_RIGHT_ROTARY_SWITCH_GRD_POS#0 (L:switch_121_73X) - 10 div s0 :1 l0 0 > if{ 12107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ENGINE_START_RIGHT_ROTARY_SWITCH_OFF_POS#10 (L:switch_121_73X) - 10 div s0 :1 l0 0 > if{ 12107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_ENGINE_START_LEFT_LEVER_CUTOFF#68802 (>K:ROTOR_BRAKE)
PMDG_B737_ENGINE_START_LEFT_LEVER_IDLE#68801 (>K:ROTOR_BRAKE)
PMDG_B737_ENGINE_START_RIGHT_LEVER_CUTOFF#68902 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_2_A_T_Disengage#68501 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_2_Throttle#68601 (>K:ROTOR_BRAKE)
PMDG_B737_Engine_Start_Left_CONT#20 (L:switch_119_73X,number) - 10 div s0 :1 l0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Engine_Start_Left_Dec#11908 (>K:ROTOR_BRAKE)
PMDG_B737_Engine_Start_Left_FLT#30 (L:switch_119_73X,number) - 10 div s0 :1 l0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Engine_Start_Left_Inc#11909 (>K:ROTOR_BRAKE)
PMDG_B737_Engine_Start_Left_OFF#10 (L:switch_119_73X,number) - 10 div s0 :1 l0 0 > if{ 11907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Ignition_Select_Both#50 (L:switch_120_73X,number) - 50 div s0 :1 l0 0 > if{ 12002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Ignition_Select_IGN_L#0 (L:switch_120_73X,number) - 50 div s0 :1 l0 0 > if{ 12002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Ignition_Select_IGN_R#100 (L:switch_120_73X,number) - 50 div s0 :1 l0 0 > if{ 12002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
//PMDG/B737-700/FMS
PMDG_B737_FMS_Left_BRT_Dec_Release#60504 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_BRT_Inc_Release#60504 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_CLR_Press#60201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_CLR_Release#60204 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_1#53401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_10#54301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_11#54401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_12#54501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_2#53501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_3#53601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_4#53701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_5#53801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_6#53901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_7#54001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_8#54101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LS_9#54201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_BRT_Dec_Release#67704 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_BRT_Inc_Release#67704 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_CLR_Press#67401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_CLR_Release#67404 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_12#61701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_6#61101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_7#61201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left___-#57201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left__#60101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_A#57301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_B#57401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_BRT_Dec#60502 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_BRT_Inc#60501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_C#57501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_CLB#54801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_CRZ#54901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_D#57601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_DECIMAL#57001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_DEL#60001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_DEP_ARR#55301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_DES#55001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_E#57701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_EXEC#55601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_F#57801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_FIX#55801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_G#57901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_H#58001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_HOLD#55401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_I#58101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_INIT_REF#54601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_J#58201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_K#58301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_L#58401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_LEGS#55201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_M#58501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_MENU#55101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_N#58601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_N1_LIMIT#55701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NEXT_PAGE#56001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_0#57101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_1#56101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_2#56201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_3#56301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_4#56401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_5#56501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_6#56601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_7#56701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_8#56801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_NUM_9#56901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_O#58701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_P#58801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_PREV_PAGE#55901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_PROG#55501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_Q#58901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_R#59001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_RTE#54701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_S#59101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_SP#59901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_T#59201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_U#59301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_V#59401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_W#59501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_X#59601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_Y#59701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Left_Z#59801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right___-#64401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right__#67301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_A#64501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_B#64601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_BRT_Dec#67702 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_BRT_Inc#67701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_C#64701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_CLB#62001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_CRZ#62101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_D#64801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_DECIMAL#64201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_DEL#67201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_DEP_ARR#62501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_DES#62201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_E#64901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_EXEC#62801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_F#65001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_FIX#63001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_G#65101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_H#65201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_HOLD#62601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_I#65301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_INIT_REF#61801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_J#65401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_K#65501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_L#65601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LEGS#62401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_1#60601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_10#61501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_11#61601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_2#60701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_3#60801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_4#60901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_5#61001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_8#61301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_LS_9#61401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_M#65701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_MENU#62301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_N#65801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_N1_LIMIT#62901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NEXT_PAGE#63201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_0#64301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_1#63301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_2#63401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_3#63501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_4#63601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_5#63701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_6#63801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_7#63901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_8#64001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_NUM_9#64101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_O#65901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_P#66001 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_PREV_PAGE#63101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_PROG#62701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_Q#66101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_R#66201 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_RTE#61901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_S#66301 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_SP#67101 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_T#66401 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_U#66501 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_V#66601 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_W#66701 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_X#66801 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_Y#66901 (>K:ROTOR_BRAKE)
PMDG_B737_FMS_Right_Z#67001 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Fire Protection
PMDG_B737_FWD_Cargo_Fire_ARM_Switch#76301 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Flight Controls
PMDG_B737-7_FLT_CONTROL_YAW_DAMPER_OFF#100 (L:switch_63_73X, number) == if{ 6302 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FLT_CONTROL_YAW_DAMPER_ON#0 (L:switch_63_73X, number) == if{ 6301 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FLT_CONTROL_YAW_DAMPER_TOGGLE#6301 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Flight Instrumentation
PMDG_B737-7_HGS_HUD_BRIGHTNESS_KNOB_DEC#98008 (>K:ROTOR_BRAKE)
PMDG_B737-7_HGS_HUD_BRIGHTNESS_KNOB_INC#98007 (>K:ROTOR_BRAKE)
PMDG_B737-7_HGS_HUD_BRT_AUTO_MAN_SWITCH#98101 (>K:ROTOR_BRAKE)
PMDG_B737-7_HGS_HUD_UP_DOWN_SWITCH#97901 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Fuel
PMDG_B737_FUEL_CUT_OFF_LEVER2_DN#(L:switch_689_73X) 0 == if{ 68901 (>K:ROTOR_BRAKE) }
PMDG_B737_FUEL_CUT_OFF_LEVER2_UP#(L:switch_689_73X) 100 == if{ 68901 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_CROSSFEED_OFF#100 (L:switch_49_73X, number) == if{ 4902 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_CROSSFEED_ON#0 (L:switch_49_73X, number) == if{ 4901 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_CROSSFEED_TOGGLE#4901 (>K:ROTOR_BRAKE)
PMDG_B737-7_FUEL_CUT_OFF_LEVER1_DN#(L:switch_688_73X) 0 == if{ 68801 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_CUT_OFF_LEVER1_UP#(L:switch_688_73X) 100 == if{ 68801 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_AFT_LEFT_OFF#100 (L:switch_37_73X, number) == if{ 3702 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_AFT_LEFT_ON#0 (L:switch_37_73X, number) == if{ 3701 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_AFT_LEFT_SW#3701 (>K:ROTOR_BRAKE)
PMDG_B737-7_FUEL_PUMP_AFT_RIGHT_OFF#100 (L:switch_40_73X, number) == if{ 4002 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_AFT_RIGHT_ON#0 (L:switch_40_73X, number) == if{ 4001 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_AFT_RIGHT_SW#4001 (>K:ROTOR_BRAKE)
PMDG_B737-7_FUEL_PUMP_CTR_L_OFF#100 (L:switch_45_73X, number) == if{ 4502 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_CTR_L_ON#0 (L:switch_45_73X, number) == if{ 4501 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_CTR_L_SW#4501 (>K:ROTOR_BRAKE)
PMDG_B737-7_FUEL_PUMP_CTR_R_OFF#100 (L:switch_46_73X, number) == if{ 4602 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_CTR_R_ON#0 (L:switch_46_73X, number) == if{ 4601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_CTR_R_SW#4601 (>K:ROTOR_BRAKE)
PMDG_B737-7_FUEL_PUMP_FWD_LEFT_OFF#100 (L:switch_38_73X, number) == if{ 3802 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_FWD_LEFT_ON#0 (L:switch_38_73X, number) == if{ 3801 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_FWD_LEFT_SW#3801 (>K:ROTOR_BRAKE)
PMDG_B737-7_FUEL_PUMP_FWD_RIGHT_OFF#100 (L:switch_39_73X, number) == if{ 3902 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_FWD_RIGHT_ON#0 (L:switch_39_73X, number) == if{ 3901 (>K:ROTOR_BRAKE) }
PMDG_B737-7_FUEL_PUMP_FWD_RIGHT_SW#3901 (>K:ROTOR_BRAKE)
PMDG_B737_Aux_Fuel_A_Aft#201101 (>K:ROTOR_BRAKE)
PMDG_B737_Aux_Fuel_A_Fwd#200901 (>K:ROTOR_BRAKE)
PMDG_B737_Aux_Fuel_Aft_Bleed#201401 (>K:ROTOR_BRAKE)
PMDG_B737_Aux_Fuel_B_Aft#201201 (>K:ROTOR_BRAKE)
PMDG_B737_Aux_Fuel_B_Fwd#201001 (>K:ROTOR_BRAKE)
PMDG_B737_Aux_Fuel_Fwd_Bleed#201301 (>K:ROTOR_BRAKE)
PMDG_B737_Aux_Fuel_Gnd_Guard#201801 (>K:ROTOR_BRAKE)
PMDG_B737_Aux_Fuel_Gnd_Switch#201901 (>K:ROTOR_BRAKE)
PMDG_B737_Bbj_Aux_Fuel_Left_Alert_Switch#203201 (>K:ROTOR_BRAKE)
PMDG_B737_Bbj_Aux_Fuel_Left_Maint_Switch#203401 (>K:ROTOR_BRAKE)
PMDG_B737_Bbj_Aux_Fuel_Left_Test_Switch#203001 (>K:ROTOR_BRAKE)
PMDG_B737_Bbj_Aux_Fuel_Right_Alert_Switch#203301 (>K:ROTOR_BRAKE)
PMDG_B737_Bbj_Aux_Fuel_Right_Maint_Switch#203501 (>K:ROTOR_BRAKE)
PMDG_B737_Bbj_Aux_Fuel_Right_Test_Switch#203101 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Gear
PMDG_B737-7_ANTISKID_1_POS_SW#20 (L:switch_460_73X) - 10 div s0 :1 l0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ANTISKID_2_POS_SW#30 (L:switch_460_73X) - 10 div s0 :1 l0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ANTISKID_3_POS_SW#40 (L:switch_460_73X) - 10 div s0 :1 l0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ANTISKID_MAX_POS_SW#50 (L:switch_460_73X) - 10 div s0 :1 l0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ANTISKID_OFF_POS_SW#10 (L:switch_460_73X) - 10 div s0 :1 l0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_ANTISKID_RTO_POS_SW#0 (L:switch_460_73X) - 10 div s0 :1 l0 0 > if{ 46007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 46008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_AUTOBRAKE_DEC#46008 (>K:ROTOR_BRAKE)
PMDG_B737-7_AUTOBRAKE_INC#46007 (>K:ROTOR_BRAKE)
PMDG_B737-7_GEAR_DOWN#(>K:GEAR_DOWN)
PMDG_B737-7_GEAR_HORN_CUTOUT#71301 (>K:ROTOR_BRAKE)
PMDG_B737-7_GEAR_LEVER_DEC#45501 (>K:ROTOR_BRAKE)
PMDG_B737-7_GEAR_LEVER_INC#45502 (>K:ROTOR_BRAKE)
PMDG_B737-7_GEAR_OFF#30 (L:switch_455_73X) - sp0 l0 0 > if{ 45501 (>K:ROTOR_BRAKE) } l0 0 < if{ 45502 (>K:ROTOR_BRAKE) }
PMDG_B737-7_GEAR_UP#30 (L:switch_455_73X) - 10 div == if{ 45502 (>K:ROTOR_BRAKE) } els{ (>K:GEAR_UP) }
PMDG_B737-7_PARKING_BRAKE_OFF#100 (L:switch_693_73X, number) == if{ 69301 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PARKING_BRAKE_ON#0 (L:switch_693_73X, number) == if{ 69302 (>K:ROTOR_BRAKE) }
PMDG_B737_00_Alt_Gear_Ext_Door#200201 (>K:ROTOR_BRAKE)
PMDG_B737_00_Alt_Gear_Ext_Handle_Left#200401 (>K:ROTOR_BRAKE)
PMDG_B737_00_Alt_Gear_Ext_Handle_Nose#200501 (>K:ROTOR_BRAKE)
PMDG_B737_00_Alt_Gear_Ext_Handle_Right#200301 (>K:ROTOR_BRAKE)
PMDG_B737_Center_Manual_Gear_Extension#102001 (>K:ROTOR_BRAKE)
PMDG_B737_Landing_Gear_Off#455101 (>K:ROTOR_BRAKE)
PMDG_B737_Landing_Gear_Unlock#455201 (>K:ROTOR_BRAKE)
PMDG_B737_Left_Manual_Gear_Extension#101901 (>K:ROTOR_BRAKE)
PMDG_B737_Right_Manual_Gear_Extension#101701 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Hydraulic
PMDG_B737-7_HYDRAULIC_PUMP_A_ELEC_2_OFF#100 (L:switch_167_73X, number) == if{ 16702 (>K:ROTOR_BRAKE) }
PMDG_B737-7_HYDRAULIC_PUMP_A_ELEC_2_ON#0 (L:switch_167_73X, number) == if{ 16701 (>K:ROTOR_BRAKE) }
PMDG_B737-7_HYDRAULIC_PUMP_A_ELEC_2_TOGGLE#16701 (>K:ROTOR_BRAKE)
PMDG_B737-7_HYDRAULIC_PUMP_A_ENG_1_OFF#100 (L:switch_165_73X, number) == if{ 16502 (>K:ROTOR_BRAKE) }
PMDG_B737-7_HYDRAULIC_PUMP_A_ENG_1_ON#0 (L:switch_165_73X, number) == if{ 16501 (>K:ROTOR_BRAKE) }
PMDG_B737-7_HYDRAULIC_PUMP_A_ENG_1_TOGGLE#16501 (>K:ROTOR_BRAKE)
PMDG_B737-7_HYDRAULIC_PUMP_B_ELEC_1_OFF#100 (L:switch_168_73X, number) == if{ 16802 (>K:ROTOR_BRAKE) }
PMDG_B737-7_HYDRAULIC_PUMP_B_ELEC_1_ON#0 (L:switch_168_73X, number) == if{ 16801 (>K:ROTOR_BRAKE) }
PMDG_B737-7_HYDRAULIC_PUMP_B_ELEC_1_TOGGLE#16801 (>K:ROTOR_BRAKE)
PMDG_B737-7_HYDRAULIC_PUMP_B_ENG_2_OFF#100 (L:switch_166_73X, number) == if{ 16602 (>K:ROTOR_BRAKE) }
PMDG_B737-7_HYDRAULIC_PUMP_B_ENG_2_ON#0 (L:switch_166_73X, number) == if{ 16601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_HYDRAULIC_PUMP_B_ENG_2_TOGGLE#16601 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Lights
PMDG_B737_AFDS_Flood_Knob_Dec#33808 (>K:ROTOR_BRAKE)
PMDG_B737_AFDS_Flood_Knob_Inc#33807 (>K:ROTOR_BRAKE)
PMDG_B737_Background_Bright_Knob_Dec#33708 (>K:ROTOR_BRAKE)
PMDG_B737_Background_Bright_Knob_Inc#33707 (>K:ROTOR_BRAKE)
PMDG_B737_Emergency_Light_Switch_Armed#50 (L:switch_100_73X) - 50 div s0 :1 l0 0 > if{ 10001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Emergency_Light_Switch_Guard_Toggle#10101 (>K:ROTOR_BRAKE) 
PMDG_B737_Emergency_Light_Switch_Off#0 (L:switch_100_73X) - 50 div s0 :1 l0 0 > if{ 10001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Emergency_Light_Switch_On#100 (L:switch_100_73X) - 50 div s0 :1 l0 0 > if{ 10001 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10002 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_LOWER_DU_L_Selector_Dec#33608 (>K:ROTOR_BRAKE)
PMDG_B737_LOWER_DU_L_Selector_Inc#33607 (>K:ROTOR_BRAKE)
PMDG_B737_Lights_Switch_BRT#50 (L:switch_346_73X) - 50 div s0 :1 l0 0 > if{ 34601 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 34602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Lights_Switch_DIM#100 (L:switch_346_73X) - 50 div s0 :1 l0 0 > if{ 34601 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 34602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Lights_Switch_Test#0 (L:switch_346_73X) - 50 div s0 :1 l0 0 > if{ 34601 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 34602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Lower_Du_R_Selector_Dec#44108 (>K:ROTOR_BRAKE)
PMDG_B737_Lower_Du_R_Selector_Inc#44107 (>K:ROTOR_BRAKE)
PMDG_B737_Ovhd_Circuit_Breaker_Light_Knob_Dec#9408 (>K:ROTOR_BRAKE)
PMDG_B737_Ovhd_Circuit_Breaker_Light_Knob_Inc#9407 (>K:ROTOR_BRAKE)
PMDG_B737_Ovhd_Panel_Light_Knob_Dec#9508 (>K:ROTOR_BRAKE)
PMDG_B737_Ovhd_Panel_Light_Knob_Inc#9507 (>K:ROTOR_BRAKE)
PMDG_B737_Pedestal_Flood_Bright_Knob_Dec#75608 (>K:ROTOR_BRAKE) 
PMDG_B737_Pedestal_Flood_Bright_Knob_Inc#75607 (>K:ROTOR_BRAKE)
PMDG_B737_Pedestal_Panel_Bright_Knob__Dec#75708 (>K:ROTOR_BRAKE) 
PMDG_B737_Pedestal_Panel_Bright_Knob__Inc#75707 (>K:ROTOR_BRAKE) 
PMDG_B737_Retractable_Landing_Light_Left_ON#100 (L:switch_111_73X,number) - 50 div s0 :1 l0 0 > if{ 11101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Spotlight_Capt_Knob_Dec#201508 (>K:ROTOR_BRAKE)
PMDG_B737_Spotlight_Capt_Knob_Inc#201507 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_POSITION_OFF#(L:switch_123_73X, number) s0 l0 0 == if{ 12301 (>K:ROTOR_BRAKE) } l0 100 == if{ 12302 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_POSITION_STROBE#(L:switch_123_73X, number) s0 l0 0 == if{ 12301 (>K:ROTOR_BRAKE) } l0 50 == if{ 12302 (>K:ROTOR_BRAKE) } l0 100 == if{ 12302 (>K:ROTOR_BRAKE) 12302 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_ANTI_COLLISION_OFF#100 (L:switch_124_73X, number) == if{ 12401 (>K:ROTOR_BRAKE) } 
PMDG_B737-7_LIGHTS_ANTI_COLLISION_ON#0 (L:switch_124_73X, number) == if{ 12401 (>K:ROTOR_BRAKE) } 
PMDG_B737-7_LIGHTS_ANTI_COLLISION_TOGGLE#12401 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_FIXED_LANDING_BOTH_OFF#100 (L:switch_113_73X, number) == if{ 11301 (>K:ROTOR_BRAKE) } 100 (L:switch_114_73X, number) == if{ 11401 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_FIXED_LANDING_BOTH_ON#0 (L:switch_113_73X, number) == if{ 11301 (>K:ROTOR_BRAKE) } 0 (L:switch_114_73X, number) == if{ 11401 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_FIXED_LANDING_BOTH_TOGGLE#11301 (>K:ROTOR_BRAKE) 11401 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_FIXED_LANDING_L_OFF#100 (L:switch_113_73X, number) == if{ 11301 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_FIXED_LANDING_L_ON#0 (L:switch_113_73X, number) == if{ 11301 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_FIXED_LANDING_L_TOGGLE#11301 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_FIXED_LANDING_R_OFF#100 (L:switch_114_73X, number) == if{ 11401 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_FIXED_LANDING_R_ON#0 (L:switch_114_73X, number) == if{ 11401 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_FIXED_LANDING_R_TOGGLE#11401 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_INTERIOR_DOME_WHITE_BRIGHT#(L:switch_258_73X, number) s0 l0 50 == if{ 25801 (>K:ROTOR_BRAKE) } l0 0 == if{ 25801 (>K:ROTOR_BRAKE) 25801 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_INTERIOR_DOME_WHITE_DIM#(L:switch_258_73X, number) s0 l0 50 == if{ 25802 (>K:ROTOR_BRAKE) } l0 100 == if{ 25802 (>K:ROTOR_BRAKE) 25802 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_INTERIOR_DOME_WHITE_OFF#(L:switch_258_73X, number) s0 l0 0 == if{ 25801 (>K:ROTOR_BRAKE) } l0 100 == if{ 25802 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_LOGO_OFF#100 (L:switch_122_73X, number) == if{ 12201 (>K:ROTOR_BRAKE) } 
PMDG_B737-7_LIGHTS_LOGO_ON#0 (L:switch_122_73X, number) == if{ 12201 (>K:ROTOR_BRAKE) } 
PMDG_B737-7_LIGHTS_LOGO_TOGGLE#12201 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_POSITION_STEADY#(L:switch_123_73X, number) s0 l0 50 == if{ 12301 (>K:ROTOR_BRAKE) } l0 0 == if{ 12301 (>K:ROTOR_BRAKE) 12301 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_ALL_OFF#11002 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_ALL_ON#11001 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_BOTH_EXTENDED#(L:switch_111_73X, number) s0 (L:switch_112_73X, number) s1 l0 0 == if{ 11101 (>K:ROTOR_BRAKE) } l0 100 == if{ 11102 (>K:ROTOR_BRAKE) } l1 0 == if{ 11201 (>K:ROTOR_BRAKE) } l1 100 == if{ 11202 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_BOTH_OFF#(L:switch_111_73X, number) s0 (L:switch_112_73X, number) s1 l0 50 == if{ 11102 (>K:ROTOR_BRAKE) } l0 100 == if{ 11102 (>K:ROTOR_BRAKE) 11102 (>K:ROTOR_BRAKE) } l1 50 == if{ 11202 (>K:ROTOR_BRAKE) } l1 100 == if{ 11202 (>K:ROTOR_BRAKE) 11202 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_BOTH_ON#(L:switch_111_73X, number) s0 (L:switch_112_73X, number) s1 l0 50 == if{ 11101 (>K:ROTOR_BRAKE) } l0 0 == if{ 11101 (>K:ROTOR_BRAKE) 11101 (>K:ROTOR_BRAKE) } l1 50 == if{ 11201 (>K:ROTOR_BRAKE) } l1 0 == if{ 11201 (>K:ROTOR_BRAKE) 11201 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_L_EXTENDED#(L:switch_111_73X, number) s0 l0 0 == if{ 11101 (>K:ROTOR_BRAKE) } l0 100 == if{ 11102 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_L_OFF#(L:switch_111_73X, number) s0 l0 50 == if{ 11102 (>K:ROTOR_BRAKE) } l0 100 == if{ 11102 (>K:ROTOR_BRAKE) 11102 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_L_ON#(L:switch_111_73X, number) s0 l0 50 == if{ 11101 (>K:ROTOR_BRAKE) } l0 0 == if{ 11101 (>K:ROTOR_BRAKE) 11101 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_R_EXTENDED#(L:switch_112_73X, number) s0 l0 0 == if{ 11201 (>K:ROTOR_BRAKE) } l0 100 == if{ 11202 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_R_OFF#(L:switch_112_73X, number) s0 l0 50 == if{ 11202 (>K:ROTOR_BRAKE) } l0 100 == if{ 11202 (>K:ROTOR_BRAKE) 11202 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RETRACTABLE_LANDING_R_ON#(L:switch_112_73X, number) s0 l0 50 == if{ 11201 (>K:ROTOR_BRAKE) } l0 0 == if{ 11201 (>K:ROTOR_BRAKE) 11201 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RUNWAY_BOTH_OFF#100 (L:switch_115_73X, number) == if{ 11501 (>K:ROTOR_BRAKE) } 100 (L:switch_116_73X, number) == if{ 11601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RUNWAY_BOTH_ON#0 (L:switch_115_73X, number) == if{ 11501 (>K:ROTOR_BRAKE) } 0 (L:switch_116_73X, number) == if{ 11601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RUNWAY_BOTH_TOGGLE#11501 (>K:ROTOR_BRAKE) 11601 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_RUNWAY_L_OFF#100 (L:switch_115_73X, number) == if{ 11501 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RUNWAY_L_ON#0 (L:switch_115_73X, number) == if{ 11501 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RUNWAY_L_TOGGLE#11501 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_RUNWAY_R_OFF#100 (L:switch_116_73X, number) == if{ 11601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RUNWAY_R_ON#0 (L:switch_116_73X, number) == if{ 11601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_RUNWAY_R_TOGGLE#11601 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_TAXI_OFF#100 (L:switch_117_73X, number) == if{ 11701 (>K:ROTOR_BRAKE) } 
PMDG_B737-7_LIGHTS_TAXI_ON#0 (L:switch_117_73X, number) == if{ 11701 (>K:ROTOR_BRAKE) } 
PMDG_B737-7_LIGHTS_TAXI_TOGGLE#11701 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_WHEEL_WELL_OFF#100 (L:switch_126_73X, number) == if{ 12601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_WHEEL_WELL_ON#0 (L:switch_126_73X, number) == if{ 12601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_WHEEL_WELL_TOGGLE#12601 (>K:ROTOR_BRAKE)
PMDG_B737-7_LIGHTS_WING_OFF#100 (L:switch_125_73X, number) == if{ 12501 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_WING_ON#0 (L:switch_125_73X, number) == if{ 12501 (>K:ROTOR_BRAKE) }
PMDG_B737-7_LIGHTS_WING_TOGGLE#12501 (>K:ROTOR_BRAKE)
PMDG_B737_Chart_Light_CA_Adjust_Dec#31908 (>K:ROTOR_BRAKE)
PMDG_B737_Chart_Light_CA_Adjust_Inc#31907 (>K:ROTOR_BRAKE)
PMDG_B737_Chart_Light_FO_Adjust_Dec#32208 (>K:ROTOR_BRAKE)
PMDG_B737_Chart_Light_FO_Adjust_Inc#32207 (>K:ROTOR_BRAKE)
PMDG_B737_Compass_Light#98201 (>K:ROTOR_BRAKE)
PMDG_B737_INBD_DU_BRT_Dec#33008 (>K:ROTOR_BRAKE)
PMDG_B737_INBD_DU_BRT_Inc#33007 (>K:ROTOR_BRAKE)
PMDG_B737_INBD_DU_RDR_BRT_Dec#33108 (>K:ROTOR_BRAKE)
PMDG_B737_INBD_DU_RDR_BRT_Inc#33107 (>K:ROTOR_BRAKE)
PMDG_B737_Inbd_Du_R_Brt_Dec#50708 (>K:ROTOR_BRAKE)
PMDG_B737_Inbd_Du_R_Brt_Inc#50707 (>K:ROTOR_BRAKE)
PMDG_B737_Inbd_Du_Rdr_R_Brt_Dec#50808 (>K:ROTOR_BRAKE)
PMDG_B737_Inbd_Du_Rdr_R_Brt_Inc#50807 (>K:ROTOR_BRAKE)
PMDG_B737_LOW_DU_BRT_Dec#33208 (>K:ROTOR_BRAKE)
PMDG_B737_LOW_DU_BRT_Dec_C#33308 (>K:ROTOR_BRAKE)
PMDG_B737_LOW_DU_BRT_Inc#33207 (>K:ROTOR_BRAKE)
PMDG_B737_LOW_DU_BRT_Inc_C#33307 (>K:ROTOR_BRAKE)
PMDG_B737_MAIN_PANEL_Dus_Dec#33508 (>K:ROTOR_BRAKE)
PMDG_B737_MAIN_PANEL_Dus_Inc#33507 (>K:ROTOR_BRAKE)
PMDG_B737_Main_Panel_Bright_Dec#32808 (>K:ROTOR_BRAKE)
PMDG_B737_Main_Panel_Bright_Inc#32807 (>K:ROTOR_BRAKE)
PMDG_B737_Main_Panel_Dus_R_Dec#44008 (>K:ROTOR_BRAKE)
PMDG_B737_Main_Panel_Dus_R_Inc#44007 (>K:ROTOR_BRAKE)
PMDG_B737_Main_Panel_R_Brt_Dec#51008 (>K:ROTOR_BRAKE)
PMDG_B737_Main_Panel_R_Brt_Inc#51007 (>K:ROTOR_BRAKE)
PMDG_B737_Map_Light_L_Adjust_Dec#32308 (>K:ROTOR_BRAKE)
PMDG_B737_Map_Light_L_Adjust_Inc#32307 (>K:ROTOR_BRAKE)
PMDG_B737_Map_Light_L_Pull#89501 (>K:ROTOR_BRAKE)
PMDG_B737_Map_Light_R_Adjust_Dec#32408 (>K:ROTOR_BRAKE)
PMDG_B737_Map_Light_R_Adjust_Inc#32407 (>K:ROTOR_BRAKE)
PMDG_B737_Map_Light_R_Pull#89601 (>K:ROTOR_BRAKE)
PMDG_B737_OUTBD_DU_BRT_Dec#32907 (>K:ROTOR_BRAKE)
PMDG_B737_OUTBD_DU_BRT_Inc#32908 (>K:ROTOR_BRAKE)
PMDG_B737_Outbd_Du_R_Brt_Dec#50908 (>K:ROTOR_BRAKE)
PMDG_B737_Outbd_Du_R_Brt_Inc#50907 (>K:ROTOR_BRAKE)
PMDG_B737_Position_Light_OFF#50 (L:switch_123_73X,number) - 50 div s0 :1 l0 0 > if{ 12301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Position_Light_STEADY#100 (L:switch_123_73X,number) - 50 div s0 :1 l0 0 > if{ 12301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Position_Light_STROBE_STEADY#0 (L:switch_123_73X,number) - 50 div s0 :1 l0 0 > if{ 12301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Retractable_Landing_Light_Left_EXT#50 (L:switch_111_73X,number) - 50 div s0 :1 l0 0 > if{ 11101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Retractable_Landing_Light_Left_RET#0 (L:switch_111_73X,number) - 50 div s0 :1 l0 0 > if{ 11101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Retractable_Landing_Light_Right_EXT#50 (L:switch_112_73X,number) - 50 div s0 :1 l0 0 > if{ 11201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Retractable_Landing_Light_Right_ON#100 (L:switch_112_73X,number) - 50 div s0 :1 l0 0 > if{ 11201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Retractable_Landing_Light_Right_RET#0 (L:switch_112_73X,number) - 50 div s0 :1 l0 0 > if{ 11201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Spotlight_Knob_Fo_Dec#201608 (>K:ROTOR_BRAKE)
PMDG_B737_Spotlight_Knob_Fo_Inc#201607 (>K:ROTOR_BRAKE)
PMDG_B737_Spotlight_Knob_Obs_Dec#201708 (>K:ROTOR_BRAKE)
PMDG_B737_Spotlight_Knob_Obs_Inc#201707 (>K:ROTOR_BRAKE)
PMDG_B737_Standby_Power_Guard#1101 (>K:ROTOR_BRAKE)
PMDG_B737_UPPER_DU_BRT_Dec#33408 (>K:ROTOR_BRAKE)
PMDG_B737_UPPER_DU_BRT_Inc#33407 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Miscellaneous
PMDG_B737_Captain_Tablet_Home_Button_Press#(>H:CATabHome)
PMDG_B737_FO_Tablet_Home_Button_Press#(>H:FOTabHome)
PMDG_B737_OVHD_CVR_Erase_Button_Press#18001 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_CVR_Erase_Button_Release#18004 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_CVR_Test_Button_Press#17801 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_CVR_Test_Button_Release#17804 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_VOICE_RECORDER_Switch_Toggle_#298101 (>K:ROTOR_BRAKE)
PMDG_B737-7_WIPER_LEFT_HIGH_POS_SW#30 (L:switch_36_73X) - 10 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_WIPER_LEFT_INT_POS_SW#10 (L:switch_36_73X) - 10 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_WIPER_LEFT_LOW_POS_SW#20 (L:switch_36_73X) - 10 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_WIPER_LEFT_OFF_POS_SW#0 (L:switch_36_73X) - 10 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_WIPER_RIGHT_HIGH_POS_SW#30 (L:switch_109_73X) - 10 div s0 :1 l0 0 > if{ 10907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_WIPER_RIGHT_INT_POS_SW#10 (L:switch_109_73X) - 10 div s0 :1 l0 0 > if{ 10907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_WIPER_RIGHT_LOW_POS_SW#20 (L:switch_109_73X) - 10 div s0 :1 l0 0 > if{ 10907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_WIPER_RIGHT_OFF_POS_SW#0 (L:switch_109_73X) - 10 div s0 :1 l0 0 > if{ 10907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_00_Checklist_Knob_Left#752101 (>K:ROTOR_BRAKE)
PMDG_B737_00_Checklist_Knob_Right#752201 (>K:ROTOR_BRAKE)
PMDG_B737_00_Combiner_Cover#200601 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Left_Arrow#170101 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Left_Chart#170001 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Left_Power#173001 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Left_Star#172901 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Left_Sun#172801 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Right_Arrow#178701 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Right_Chart#178601 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Right_Power#181601 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Right_Star#181501 (>K:ROTOR_BRAKE)
PMDG_B737_00_Efb_Right_Sun#181401 (>K:ROTOR_BRAKE)
PMDG_B737_00_Grimes_Light_Ca#202001 (>K:ROTOR_BRAKE)
PMDG_B737_00_Hgs_Projector_Mover#(L:hgs_projector_mover,bool) ! (>L:hgs_projector_mover,bool)
PMDG_B737_00_Jumpseat#200101 (>K:ROTOR_BRAKE)
PMDG_B737_00_Noclick#0 (L:NoClick,bool) ! (>L:NoClick,bool) 1
PMDG_B737_00_Yoke_Left_Hide#200701 (>K:ROTOR_BRAKE)
PMDG_B737_00_Yoke_Right_Hide#200801 (>K:ROTOR_BRAKE)
PMDG_B737_A_Testswitch#(L:TestSwitch,bool) ! (>L:TestSwitch,bool)
PMDG_B737_Ca_Left_Arm_Rest#100601 (>K:ROTOR_BRAKE)
PMDG_B737_Ca_Right_Arm_Rest#100701 (>K:ROTOR_BRAKE)
PMDG_B737_Cab_Util#501 (>K:ROTOR_BRAKE)
PMDG_B737_Equipment_Cooling_Exhaust#9701 (>K:ROTOR_BRAKE)
PMDG_B737_Equipment_Cooling_Supply#9601 (>K:ROTOR_BRAKE)
PMDG_B737_Fo_Left_Arm_Rest#100801 (>K:ROTOR_BRAKE)
PMDG_B737_Fo_Right_Arm_Rest#100901 (>K:ROTOR_BRAKE)
PMDG_B737_Fs2Crew#200001 (>K:ROTOR_BRAKE)
PMDG_B737_Galley#97501 (>K:ROTOR_BRAKE)
PMDG_B737_Ife_Pass#601 (>K:ROTOR_BRAKE)
PMDG_B737_Service_Interphone#25701 (>K:ROTOR_BRAKE)
PMDG_B737_Wlan#88801 (>K:ROTOR_BRAKE)
PMDG_B737_Wlan_Guard#88901 (>K:ROTOR_BRAKE)
PMDG_B737_Yoke_Counter_1#99801 (>K:ROTOR_BRAKE)
PMDG_B737_Yoke_Counter_2#99901 (>K:ROTOR_BRAKE)
PMDG_B737_Yoke_Counter_3#100001 (>K:ROTOR_BRAKE)
PMDG_B737_Yoke_Counter_4#100101 (>K:ROTOR_BRAKE)
PMDG_B737_Yoke_Counter_5#100201 (>K:ROTOR_BRAKE)
PMDG_B737_Yoke_Counter_6#100301 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Navigation
PMDG_B737_Cpt_Chr#31401 (>K:ROTOR_BRAKE)
PMDG_B737_Cpt_Chr__#31701 (>K:ROTOR_BRAKE)
PMDG_B737_Cpt_Chr_-#31801 (>K:ROTOR_BRAKE)
PMDG_B737_Cpt_Chr_Et#32101 (>K:ROTOR_BRAKE)
PMDG_B737_Cpt_Chr_Reset#32001 (>K:ROTOR_BRAKE)
PMDG_B737_Cpt_Chr_Set#31601 (>K:ROTOR_BRAKE)
PMDG_B737_Cpt_Chr_Tc_Sr#314102 (>K:ROTOR_BRAKE)
PMDG_B737_Cpt_Chr_Time_Date#31501 (>K:ROTOR_BRAKE)
PMDG_B737_FO_Chr#52301 (>K:ROTOR_BRAKE)
PMDG_B737_FO_Chr__#52601 (>K:ROTOR_BRAKE)
PMDG_B737_FO_Chr_-#52701 (>K:ROTOR_BRAKE)
PMDG_B737_FO_Chr_Et#53001 (>K:ROTOR_BRAKE)
PMDG_B737_FO_Chr_Reset#52901 (>K:ROTOR_BRAKE)
PMDG_B737_FO_Chr_Set#52501 (>K:ROTOR_BRAKE)
PMDG_B737_FO_Chr_Tc_Sr#523102 (>K:ROTOR_BRAKE)
PMDG_B737_FO_Chr_Time_Date#52401 (>K:ROTOR_BRAKE)
PMDG_B737-7_IRS_LEFT_ALIGN_POS_SW#10 (L:switch_255_73X) - 10 div s0 :1 l0 0 > if{ 25507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 25508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_IRS_LEFT_ATT_POS_SW#30 (L:switch_255_73X) - 10 div s0 :1 l0 0 > if{ 25507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 25508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_IRS_LEFT_NAV_POS_SW#20 (L:switch_255_73X) - 10 div s0 :1 l0 0 > if{ 25507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 25508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_IRS_LEFT_OFF_POS_SW#0 (L:switch_255_73X) - 10 div s0 :1 l0 0 > if{ 25507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 25508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_IRS_RIGHT_ALIGN_POS_SW#10 (L:switch_256_73X) - 10 div s0 :1 l0 0 > if{ 25607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 25608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_IRS_RIGHT_ATT_POS_SW#30 (L:switch_256_73X) - 10 div s0 :1 l0 0 > if{ 25607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 25608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_IRS_RIGHT_NAV_POS_SW#20 (L:switch_256_73X) - 10 div s0 :1 l0 0 > if{ 25607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 25608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_IRS_RIGHT_OFF_POS_SW#0 (L:switch_256_73X) - 10 div s0 :1 l0 0 > if{ 25607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 25608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Compass_Stow#(L:NGXCompassStow,bool) ! (>L:NGXCompassStow,bool)
//PMDG/B737-700/Passengers/Crew
PMDG_B737-7_MISCELLANEOUS_ATTENDANT_CALL_BTN#10501 (>K:ROTOR_BRAKE)
PMDG_B737-7_MISCELLANEOUS_NO_SMOKING_OFF#100 (L:switch_103_73X, number) == if{ 10302 (>K:ROTOR_BRAKE) }
PMDG_B737-7_MISCELLANEOUS_NO_SMOKING_ON#0 (L:switch_103_73X, number) == if{ 10301 (>K:ROTOR_BRAKE) }
PMDG_B737-7_MISCELLANEOUS_NO_SMOKING_TOGGLE#10301 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Pneumatic
PMDG_B737-7_PNEUMATIC_APU_BLEED_OFF#100 (L:switch_211_73X, number) == if{ 21102 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_APU_BLEED_ON#0 (L:switch_211_73X, number) == if{ 21101 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_APU_BLEED_TOGGLE#21101 (>K:ROTOR_BRAKE)
PMDG_B737-7_PNEUMATIC_ENG_BLEED_1_OFF#100 (L:switch_210_73X, number) == if{ 21002 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_ENG_BLEED_1_ON#0 (L:switch_210_73X, number) == if{ 21001 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_ENG_BLEED_1_TOGGLE#21001 (>K:ROTOR_BRAKE)
PMDG_B737-7_PNEUMATIC_ENG_BLEED_2_OFF#100 (L:switch_212_73X, number) == if{ 21202 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_ENG_BLEED_2_ON#0 (L:switch_212_73X, number) == if{ 21201 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_ENG_BLEED_2_TOGGLE#21201 (>K:ROTOR_BRAKE)
PMDG_B737-7_PNEUMATIC_ISOLATION_VALVE_AUTO#(L:switch_202_73X, number) s0 l0 0 == if{ 20201 (>K:ROTOR_BRAKE) } l0 100 == if{ 20202 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_ISOLATION_VALVE_CLOSE#(L:switch_202_73X, number) s0 l0 50 == if{ 20202 (>K:ROTOR_BRAKE) } l0 100 == if{ 20202 (>K:ROTOR_BRAKE) 20202 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_ISOLATION_VALVE_OPEN#(L:switch_202_73X, number) s0 l0 50 == if{ 20201 (>K:ROTOR_BRAKE) } l0 0 == if{ 20201 (>K:ROTOR_BRAKE) 20201 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_PACK_L_AUTO#(L:switch_200_73X, number) s0 l0 0 == if{ 20001 (>K:ROTOR_BRAKE) } l0 100 == if{ 20002 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_PACK_L_HIGH#(L:switch_200_73X, number) s0 l0 50 == if{ 20001 (>K:ROTOR_BRAKE) } l0 0 == if{ 20001 (>K:ROTOR_BRAKE) 20001 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_PACK_L_OFF#(L:switch_200_73X, number) s0 l0 50 == if{ 20002 (>K:ROTOR_BRAKE) } l0 100 == if{ 20002 (>K:ROTOR_BRAKE) 20002 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_PACK_R_AUTO#(L:switch_201_73X, number) s0 l0 0 == if{ 20101 (>K:ROTOR_BRAKE) } l0 100 == if{ 20102 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_PACK_R_HIGH#(L:switch_201_73X, number) s0 l0 50 == if{ 20101 (>K:ROTOR_BRAKE) } l0 0 == if{ 20101 (>K:ROTOR_BRAKE) 20101 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_PACK_R_OFF#(L:switch_201_73X, number) s0 l0 50 == if{ 20102 (>K:ROTOR_BRAKE) } l0 100 == if{ 20102 (>K:ROTOR_BRAKE) 20102 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_RECIRC_FAN_AUTO#0 (L:switch_196_73X, number) == if{ 19601 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_RECIRC_FAN_OFF#100 (L:switch_196_73X, number) == if{ 19602 (>K:ROTOR_BRAKE) }
PMDG_B737-7_PNEUMATIC_RECIRC_FAN_TOGGLE#19601 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Radio
PMDG_B737_ADF_Tfr#82701 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_ALT_SOURCE#80301 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_Code_Left_Inner_Dec#80508 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_Code_Left_Inner_Inc#80507 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_Code_Left_Outer_Dec#80408 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_Code_Left_Outer_Inc#80407 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_Code_Right_Inner_Dec#80808 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_Code_Right_Inner_Inc#80807 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_Code_Right_Outer_Dec#80708 (>K:ROTOR_BRAKE)
PMDG_B737_ATC_Code_Right_Outer_Inc#80707 (>K:ROTOR_BRAKE)
PMDG_B737_COM_Unit_3_Vhf_Frq_Tfr#94601 (>K:ROTOR_BRAKE)
PMDG_B737_Off_On#90301 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_ACP_VHF1_MIC1_Press#73401 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_ACP_VHF1_MIC1_Release#73404 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_ACP_VHF2_MIC_1_Press#73501 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_ACP_VHF2_MIC1_Release__#73504 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_RMP_AM_Button_Press#91201 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_RMP_HF1_Button_Press#91001 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_RMP_HF2_Button_Press#91401 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_RMP_VHF1_Button_Press#90401 (>K:ROTOR_BRAKE)
PMDG_B737_PED_LEFT_RMP_VHF2_Button_Press#90601 (>K:ROTOR_BRAKE) 
PMDG_B737_PED_LEFT_RMP_VHF3_Button_Press#90801 (>K:ROTOR_BRAKE)
PMDG_B737_PED_RIGHT_RMP_AM_Button_Press#93301 (>K:ROTOR_BRAKE)
PMDG_B737_PED_RIGHT_RMP_HF1_Button_Press#93101 (>K:ROTOR_BRAKE)
PMDG_B737_PED_RIGHT_RMP_HF2_Button_Press#93501 (>K:ROTOR_BRAKE)
PMDG_B737_PED_RIGHT_RMP_VHF1_Button_Press#92501 (>K:ROTOR_BRAKE)
PMDG_B737_PED_RIGHT_RMP_VHF2_Button_Press#92701 (>K:ROTOR_BRAKE)
PMDG_B737_PED_RIGHT_RMP_VHF3_Button_Press#92901 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_3_Vhf1_Press#95401 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_3_Vhf2_Press#95601 (>K:ROTOR_BRAKE)
PMDG_B737_SELCAL_HF1#93701 (>K:ROTOR_BRAKE)
PMDG_B737_SELCAL_HF2#93801 (>K:ROTOR_BRAKE)
PMDG_B737_SELCAL_VHF1#81201 (>K:ROTOR_BRAKE)
PMDG_B737_SELCAL_VHF2#81301 (>K:ROTOR_BRAKE)
PMDG_B737_SELCAL_VHF3#81401 (>K:ROTOR_BRAKE)
PMDG_B737_Select_XPNDR_1_2#79801 (>K:ROTOR_BRAKE)
PMDG_B737_TCAS_MODE_XPNDR#20 (L:switch_800_73X) - 10 div s0 :1 l0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737-7_COM1_RADIO_FRACT_DEC#72708 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM1_RADIO_FRACT_INC#72707 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM1_RADIO_SWAP_SWITCH#72101 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM1_RADIO_WHOLE_DEC#72608 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM1_RADIO_WHOLE_INC#72607 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM2_RADIO_FRACT_DEC#84308 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM2_RADIO_FRACT_INC#84307 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM2_RADIO_SWAP_SWITCH#83701 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM2_RADIO_WHOLE_DEC#84208 (>K:ROTOR_BRAKE)
PMDG_B737-7_COM2_RADIO_WHOLE_INC#84207 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV1_RADIO_FRACT_DEC#73208 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV1_RADIO_FRACT_INC#73207 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV1_RADIO_SWAP_SWITCH#72901 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV1_RADIO_WHOLE_DEC#73308 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV1_RADIO_WHOLE_INC#73307 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV2_RADIO_FRACT_DEC#84908 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV2_RADIO_FRACT_INC#84907 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV2_RADIO_SWAP_SWITCH#84501 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV2_RADIO_WHOLE_DEC#84808 (>K:ROTOR_BRAKE)
PMDG_B737-7_NAV2_RADIO_WHOLE_INC#84807 (>K:ROTOR_BRAKE)
PMDG_B737-7_TRANSPONDER_MODE_CHANGE_ENCODER_DEC#80008 (>K:ROTOR_BRAKE)
PMDG_B737-7_TRANSPONDER_MODE_CHANGE_ENCODER_INC#80007 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Inner_Dec#82208 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Inner_Inc#82207 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Middle#81601 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Middle_Dec#82308 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Middle_Inc#82307 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Outer#81701 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Outer_1#81501 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Outer_Dec#82408 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Frq_Outer_Inc#82407 (>K:ROTOR_BRAKE)
PMDG_B737_Adf_Ant#81801 (>K:ROTOR_BRAKE)
PMDG_B737_Am_Switch#96201 (>K:ROTOR_BRAKE)
PMDG_B737_Am_Switch_1#93301 (>K:ROTOR_BRAKE)
PMDG_B737_Flt_Dk_Door_Dec#83408 (>K:ROTOR_BRAKE)
PMDG_B737_Flt_Dk_Door_Inc#83407 (>K:ROTOR_BRAKE)
PMDG_B737_Flt_Mic#85201 (>K:ROTOR_BRAKE)
PMDG_B737_Flt_Mic_1#73601 (>K:ROTOR_BRAKE)
PMDG_B737_Hf_Sensor_Dec#94908 (>K:ROTOR_BRAKE)
PMDG_B737_Hf_Sensor_Dec_1#72408 (>K:ROTOR_BRAKE)
PMDG_B737_Hf_Sensor_Inc#94907 (>K:ROTOR_BRAKE)
PMDG_B737_Hf_Sensor_Inc_1#72407 (>K:ROTOR_BRAKE)
PMDG_B737_Hf1#96001 (>K:ROTOR_BRAKE)
PMDG_B737_Hf1_1#93101 (>K:ROTOR_BRAKE)
PMDG_B737_Hf1_Receive#87501 (>K:ROTOR_BRAKE)
PMDG_B737_Hf2#96401 (>K:ROTOR_BRAKE)
PMDG_B737_Hf2_1#93501 (>K:ROTOR_BRAKE)
PMDG_B737_Hf2_Switch#91401 (>K:ROTOR_BRAKE)
PMDG_B737_IDENT_Button#80601 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_0#722301 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_1#721401 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_2#721501 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_3#721601 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_4#721701 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_5#721801 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_6#721901 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_7#722001 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_8#722101 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_9#722201 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_Act_Stby#721001 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_Clr#722401 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_Mode_Dn#721201 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_Mode_Up#721301 (>K:ROTOR_BRAKE)
PMDG_B737_MMR1_Test#721101 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_0#723901 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_1#722901 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_2#723001 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_3#723101 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_4#723201 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_5#723401 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_6#723501 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_7#723601 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_8#723701 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_9#723801 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_Act_Stby#722501 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_Clr#724001 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_Mode_Dn#722701 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_Mode_Up#722801 (>K:ROTOR_BRAKE)
PMDG_B737_MMR2_Test#722601 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_0#725401 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_1#724501 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_2#724601 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_3#724701 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_4#724801 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_5#724901 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_6#725001 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_7#725101 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_8#725201 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_9#725301 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_Act_Stby#724101 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_Clr#725501 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_Mode_Dn#724301 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_Mode_Up#724401 (>K:ROTOR_BRAKE)
PMDG_B737_MMR3_Test#724201 (>K:ROTOR_BRAKE)
PMDG_B737_Nav1_Test#73101 (>K:ROTOR_BRAKE)
PMDG_B737_Nav2_Test#84701 (>K:ROTOR_BRAKE)
PMDG_B737_Pa_Mic#87301 (>K:ROTOR_BRAKE)
PMDG_B737_Pa_Mic_1#73801 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_ADF1_RECEIVE#74801 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_ADF2_RECEIVE#74901 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_ALT_NORM#75501 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_FLT_RECEIVE#74301 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_HF1_RECEIVE#74201 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_MASK_BOOM#75301 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_MKR_RECEIVE#75001 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_NAV1_RECEIVE#74601 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_NAV2_RECEIVE#74701 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_PA_RECEIVE#74501 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_R_T_I_C#75201 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_SPKR_RECEIVE#75101 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_SVC_RECEIVE#74401 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_VHF1_RECEIVE#73901 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_VHF2_RECEIVE#74001 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_L_VHF3_RECEIVE#74101 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_ADF1_RECEIVE#86401 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_ADF2_RECEIVE#86501 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_ALT_NORM#87101 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_FLT_RECEIVE#85901 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_HF1_RECEIVE#85801 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_MASK_BOOM#86901 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_MKR_RECEIVE#86601 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_NAV1_RECEIVE#86201 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_NAV2_RECEIVE#86301 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_PA_RECEIVE#86101 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_R_T_I_C#86801 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_SPKR_RECEIVE#86701 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_SVC_RECEIVE#86001 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_VHF1_RECEIVE#85501 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_VHF2_RECEIVE#85601 (>K:ROTOR_BRAKE)
PMDG_B737_Radio_R_VHF3_RECEIVE#85701 (>K:ROTOR_BRAKE)
PMDG_B737_Stab_Trim#83001 (>K:ROTOR_BRAKE)
PMDG_B737_Stab_Trim_Guard#83101 (>K:ROTOR_BRAKE)
PMDG_B737_Svc_Mic#85301 (>K:ROTOR_BRAKE)
PMDG_B737_Svc_Mic_1#73701 (>K:ROTOR_BRAKE)
PMDG_B737_TCAS_MODE_ALT_RPTG_OFF#10 (L:switch_800_73X) - 10 div s0 :1 l0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_TCAS_MODE_Knob_Dec#80008 (>K:ROTOR_BRAKE)
PMDG_B737_TCAS_MODE_Knob_Inc#80007 (>K:ROTOR_BRAKE)
PMDG_B737_TCAS_MODE_STBY#0 (L:switch_800_73X) - 10 div s0 :1 l0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_TCAS_MODE_TA_ONLY#30 (L:switch_800_73X) - 10 div s0 :1 l0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_TCAS_MODE_TA_RA#40 (L:switch_800_73X) - 10 div s0 :1 l0 0 > if{ 80007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 80008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_TCAS_TEST_Button#80101 (>K:ROTOR_BRAKE)
PMDG_B737_Test#82101 (>K:ROTOR_BRAKE)
PMDG_B737_Test_1_2_R#81901 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Inner_Frq_Dec#95208 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Inner_Frq_Inc#95207 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Nav_Both_on_1#0 (L:switch_62_73X,number) - 50 div s0 :1 l0 0 > if{ 6202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Vhf_Nav_Both_on_2#100 (L:switch_62_73X,number) - 50 div s0 :1 l0 0 > if{ 6202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Vhf_Nav_Normal#50 (L:switch_62_73X,number) - 50 div s0 :1 l0 0 > if{ 6202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 6201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Vhf_Off#95301 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Off_1#92401 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Outer_Frq#72301 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Outer_Frq_Dec#95108 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Outer_Frq_Inc#95107 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Test#95001 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf_Test_1#72501 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf1_Mic#85001 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf2_Mic#85101 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf2_Outer_Frq#83901 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf3_Receive#87401 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Safety
PMDG_B737_AFT_DET_Select_A#0 (L:switch_761_73X) - 50 div s0 :1 l0 0 > if{ 76102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 76101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_AFT_DET_Select_B#100 (L:switch_761_73X) - 50 div s0 :1 l0 0 > if{ 76102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 76101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_AFT_DET_Select_Norm#50 (L:switch_761_73X) - 50 div s0 :1 l0 0 > if{ 76102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 76101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Aft_Det_Select_Switch_Dec#76101 (>K:ROTOR_BRAKE)
PMDG_B737_Aft_Det_Select_Switch_Inc#76102 (>K:ROTOR_BRAKE)
PMDG_B737_Apu_Fire_Warn_Disch_Handle_Up#698101 (>K:ROTOR_BRAKE)
PMDG_B737_Apu_Fire_Warn_Disch_Lock_Switch#97701 (>K:ROTOR_BRAKE)
PMDG_B737_Apu_Fire_Warn_Disch_Rotate_Left#69801 (>K:ROTOR_BRAKE)
PMDG_B737_Apu_Fire_Warn_Disch_Rotate_Right#69802 (>K:ROTOR_BRAKE)
PMDG_B737_Cargo_Fire_Test#76901 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_1_Fire_Warn_Disch_Handle_Up#697101 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_1_Fire_Warn_Disch_Lock_Switch#97601 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_1_Fire_Warn_Disch_Rotate_Left#69701 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_1_Fire_Warn_Disch_Rotate_Right#69702 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_2_Fire_Warn_Lock_Switch#97801 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_2_Fire_Warn_Disch_Handle_Up#699101 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_2_Fire_Warn_Disch_Rotate_Left#69901 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_2_Fire_Warn_Disch_Rotate_Right#69902 (>K:ROTOR_BRAKE)
PMDG_B737_FWD_DET_Select_A_#0 (L:switch_760_73X) - 50 div s0 :1 l0 0 > if{ 76002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 76001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_FWD_DET_Select_B#100 (L:switch_760_73X) - 50 div s0 :1 l0 0 > if{ 76002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 76001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_FWD_DET_Select_Norm#50 (L:switch_760_73X) - 50 div s0 :1 l0 0 > if{ 76002 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 76001 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Fasten_Belts_AUTO#50 (L:switch_104_73X,number) - 50 div s0 :1 l0 0 > if{ 10401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Fwd_Det_Select_Dec#76001 (>K:ROTOR_BRAKE)
PMDG_B737_Fwd_Det_Select_Inc#76002 (>K:ROTOR_BRAKE)
PMDG_B737_Main_Det_Select_Switch_Dec#761101 (>K:ROTOR_BRAKE)
PMDG_B737_Main_Det_Select_Switch_Inc#761102 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Alt_Horn_Cutout_Button_Press#18301 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Alt_Horn_Cutout_Button_Release#18304 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Ground_Call_Button_Press#10601 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Ground_Call_Button_Release#10604 (>K:ROTOR_BRAKE)
PMDG_B737-7_SAFETY_FASTEN_BELTS_AUTO#(L:switch_104_73X, number) s0 l0 0 == if{ 10401 (>K:ROTOR_BRAKE) } l0 100 == if{ 10402 (>K:ROTOR_BRAKE) }
PMDG_B737-7_SAFETY_FASTEN_BELTS_OFF#(L:switch_104_73X, number) s0 l0 50 == if{ 10402 (>K:ROTOR_BRAKE) } l0 100 == if{ 10402 (>K:ROTOR_BRAKE) 10402 (>K:ROTOR_BRAKE) }
PMDG_B737-7_SAFETY_FASTEN_BELTS_ON#(L:switch_104_73X, number) s0 l0 50 == if{ 10401 (>K:ROTOR_BRAKE) } l0 0 == if{ 10401 (>K:ROTOR_BRAKE) 10401 (>K:ROTOR_BRAKE) }
PMDG_B737_Adf1_Receive#28201 (>K:ROTOR_BRAKE)
PMDG_B737_Adf2_Receive#28301 (>K:ROTOR_BRAKE)
PMDG_B737_Aft_Cargo_Fire_Arm#76501 (>K:ROTOR_BRAKE)
PMDG_B737_Alt_Norm#27901 (>K:ROTOR_BRAKE)
PMDG_B737_Bell_Cutout#70401 (>K:ROTOR_BRAKE)
PMDG_B737_Cargo_Fire_Discharge#76701 (>K:ROTOR_BRAKE)
PMDG_B737_Cargo_Fire_Discharge_Guard#76801 (>K:ROTOR_BRAKE)
PMDG_B737_Eec_1#26801 (>K:ROTOR_BRAKE)
PMDG_B737_Eec_1_Guard#26701 (>K:ROTOR_BRAKE)
PMDG_B737_Eec_2#27101 (>K:ROTOR_BRAKE)
PMDG_B737_Eec_2_Guard#27001 (>K:ROTOR_BRAKE)
PMDG_B737_Eng_1_Ovht_Det_A#0 (L:switch_694_73X,number) - 50 div s0 :1 l0 0 > if{ 69402 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 69401 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Eng_1_Ovht_Det_B#100 (L:switch_694_73X,number) - 50 div s0 :1 l0 0 > if{ 69402 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 69401 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Eng_1_Ovht_Det_Normal#50 (L:switch_694_73X,number) - 50 div s0 :1 l0 0 > if{ 69402 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 69401 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Eng_2_Ovht_Det_A#0 (L:switch_705_73X,number) - 50 div s0 :1 l0 0 > if{ 70502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 70501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Eng_2_Ovht_Det_B#100 (L:switch_705_73X,number) - 50 div s0 :1 l0 0 > if{ 70502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 70501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Eng_2_Ovht_Det_Normal#50 (L:switch_705_73X,number) - 50 div s0 :1 l0 0 > if{ 70502 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 70501 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Fasten_Belts_OFF#0 (L:switch_104_73X,number) - 50 div s0 :1 l0 0 > if{ 10401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Fasten_Belts_ON#100 (L:switch_104_73X,number) - 50 div s0 :1 l0 0 > if{ 10401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Filter_B#10 (L:switch_278_73X,number) - 10 div s0 :1 l0 0 > if{ 27807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 27808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Filter_Dec#27808 (>K:ROTOR_BRAKE)
PMDG_B737_Filter_Inc#27807 (>K:ROTOR_BRAKE)
PMDG_B737_Filter_R#20 (L:switch_278_73X,number) - 10 div s0 :1 l0 0 > if{ 27807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 27808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Filter_Switch_Dec#75408 (>K:ROTOR_BRAKE)
PMDG_B737_Filter_Switch_Inc#75407 (>K:ROTOR_BRAKE)
PMDG_B737_Filter_V#0 (L:switch_278_73X,number) - 10 div s0 :1 l0 0 > if{ 27807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 27808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_Flight_Recorder#29801 (>K:ROTOR_BRAKE)
PMDG_B737_Flight_Recorder_Guard#29901 (>K:ROTOR_BRAKE)
PMDG_B737_Flt_Mic#29601 (>K:ROTOR_BRAKE)
PMDG_B737_Flt_Receive#28801 (>K:ROTOR_BRAKE)
PMDG_B737_Freighter_Lav_Bell_Cut_Out#91501 (>K:ROTOR_BRAKE)
PMDG_B737_Freighter_Lav_Smoke_Test#91301 (>K:ROTOR_BRAKE)
PMDG_B737_Freighter_Smoke_Switch_Guard#91101 (>K:ROTOR_BRAKE)
PMDG_B737_Fwd_Cargo_Fire_Arm#76301 (>K:ROTOR_BRAKE)
PMDG_B737_Hf1_Mic#29401 (>K:ROTOR_BRAKE)
PMDG_B737_Hf2_Mic#29501 (>K:ROTOR_BRAKE)
PMDG_B737_Mask_Boom#27701 (>K:ROTOR_BRAKE)
PMDG_B737_Mkr_Receive#28401 (>K:ROTOR_BRAKE)
PMDG_B737_Nav1_Receive#28001 (>K:ROTOR_BRAKE)
PMDG_B737_Nav2_Receive#28101 (>K:ROTOR_BRAKE)
PMDG_B737_No_Smoking_AUTO#50 (L:switch_103_73X,number) - 50 div s0 :1 l0 0 > if{ 10301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_No_Smoking_OFF#0 (L:switch_103_73X,number) - 50 div s0 :1 l0 0 > if{ 10301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_No_Smoking_ON#100 (L:switch_103_73X,number) - 50 div s0 :1 l0 0 > if{ 10301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 10302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B737_O2_Test_Reset_1#98301 (>K:ROTOR_BRAKE)
PMDG_B737_O2_Test_Reset_2#983101 (>K:ROTOR_BRAKE)
PMDG_B737_O2_Test_Reset_3#983201 (>K:ROTOR_BRAKE)
PMDG_B737_O2_Test_Reset_4#983301 (>K:ROTOR_BRAKE)
PMDG_B737_Ovht_Test_Fault_Inop#0 (L:switch_696_73X,number) - 50 div s0 :1 l0 0 > if{ 69602 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 69601 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Ovht_Test_Fire#100 (L:switch_696_73X,number) - 50 div s0 :1 l0 0 > if{ 69602 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 69601 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Ovht_Test_Normal_#50 (L:switch_696_73X,number) - 50 div s0 :1 l0 0 > if{ 69602 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 69601 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B737_Pa_Receive#29001 (>K:ROTOR_BRAKE)
PMDG_B737_Pass_Oxygen#26401 (>K:ROTOR_BRAKE)
PMDG_B737_Pass_Oxygen_Guard#26501 (>K:ROTOR_BRAKE)
PMDG_B737_R_T_I_C#27601 (>K:ROTOR_BRAKE)
PMDG_B737_Smoke#90901 (>K:ROTOR_BRAKE)
PMDG_B737_Smoke_Bell_Cut_Out#90701 (>K:ROTOR_BRAKE)
PMDG_B737_Smoke_Test#90501 (>K:ROTOR_BRAKE)
PMDG_B737_Spkr_Receive#28501 (>K:ROTOR_BRAKE)
PMDG_B737_Stabtrim_Autopilot_Cutout#71101 (>K:ROTOR_BRAKE)
PMDG_B737_Stabtrim_Autopilot_Cutout_Guard#71201 (>K:ROTOR_BRAKE)
PMDG_B737_Stabtrim_Main_Elec_Cutout#70901 (>K:ROTOR_BRAKE)
PMDG_B737_Stabtrim_Main_Elec_Cutout_Guard#71001 (>K:ROTOR_BRAKE)
PMDG_B737_Svc_Mic#29701 (>K:ROTOR_BRAKE)
PMDG_B737_Svc_Receive#28901 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf1_Mic#29101 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf1_Receive#28601 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf2_Mic#29201 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf2_Receive#28701 (>K:ROTOR_BRAKE)
PMDG_B737_Vhf3_Mic#29301 (>K:ROTOR_BRAKE)
//PMDG/B737-700/Warning
GPWS_Flap_Inhibit_Switch_Cover_Close#(L:switch_502_73X, number) if{ 50201 (>K:ROTOR_BRAKE) }
GPWS_Flap_Inhibit_Switch_Cover_Open#(L:switch_502_73X, number) ! if{ 50201 (>K:ROTOR_BRAKE) }
GPWS_Flap_Inhibit_Switch_Cover_Toggle_Open_Close#50201 (>K:ROTOR_BRAKE)
GPWS_Flap_Inhibit_Switch_Inhibit#(L:switch_501_73X, number) if{ 50101 (>K:ROTOR_BRAKE) }
GPWS_Flap_Inhibit_Switch_Norm#(L:switch_501_73X, number) ! if{ 50101 (>K:ROTOR_BRAKE) }
GPWS_Flap_Inhibit_Switch_Toggle_Inhibit_Norm#50101 (>K:ROTOR_BRAKE)
GPWS_Gear_Inhibit_Switch_Cover_Close#(L:switch_504_73X, number) if{ 50401 (>K:ROTOR_BRAKE) }
GPWS_Gear_Inhibit_Switch_Cover_Open#(L:switch_504_73X, number) ! if{ 50401 (>K:ROTOR_BRAKE) }
GPWS_Gear_Inhibit_Switch_Cover_Toggle_Open_Close#50401 (>K:ROTOR_BRAKE)
GPWS_Gear_Inhibit_Switch_Cover_Toggle_Open_Close#50401 (>K:ROTOR_BRAKE)
GPWS_Gear_Inhibit_Switch_Norm#(L:switch_503_73X, number) ! if{ 50301 (>K:ROTOR_BRAKE) }
GPWS_Gear_Inhibit_Switch_On#(L:switch_503_73X, number) if{ 50301 (>K:ROTOR_BRAKE) }
GPWS_Gear_Inhibit_Switch_Toggle_Inhibit_Norm#50301 (>K:ROTOR_BRAKE)
GPWS_Terr_Inhibit_Switch_Cover_Close#(L:switch_506_73X, number) if{ 50601 (>K:ROTOR_BRAKE) }
GPWS_Terr_Inhibit_Switch_Cover_Open#(L:switch_506_73X, number) ! if{ 50601 (>K:ROTOR_BRAKE) }
GPWS_Terr_Inhibit_Switch_Cover_Toggle_Open_Close#50601 (>K:ROTOR_BRAKE)
GPWS_Terr_Inhibit_Switch_Norm#(L:switch_505_73X, number) ! if{ 50501 (>K:ROTOR_BRAKE) }
GPWS_Terr_Inhibit_Switch_On#(L:switch_505_73X, number) if{ 50501 (>K:ROTOR_BRAKE) }
GPWS_Terr_Inhibit_Switch_Toggle_Inhibit_Norm#50501 (>K:ROTOR_BRAKE)
PMDG_B737_Annunciator_Panel_L_Press#34901 (>K:ROTOR_BRAKE)
PMDG_B737_Annunciator_Panel_L_Release#34904 (>K:ROTOR_BRAKE)
PMDG_B737_Annunciator_Panel_R_Release#43704 (>K:ROTOR_BRAKE)
PMDG_B737_Fire_Warn_Button#43901 (>K:ROTOR_BRAKE)
PMDG_B737_GPWS_Sys_Test_Button_Press#50001 (>K:ROTOR_BRAKE)
PMDG_B737_GPWS_Sys_Test_Button_Release#50004 (>K:ROTOR_BRAKE)
PMDG_B737_Master_Caution_Button#43801 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Mach_Airspeed_Warning_Test_1#30101 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Mach_Airspeed_Warning_Test_1_Release#30104 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Mach_Airspeed_Warning_Test_2#30201 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Mach_Airspeed_Warning_Test_2_Release#30204 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Stall_Warning_Test_1_Press#30301 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Stall_Warning_Test_1_Release#30304 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Stall_Warning_Test_2_Press#30401 (>K:ROTOR_BRAKE)
PMDG_B737_OVHD_Stall_Warning_Test_2_Release#30404 (>K:ROTOR_BRAKE)
PMDG_B737_MASTER_CAUTION_YELLOW_SWITCH#34801 (>K:ROTOR_BRAKE)
PMDG_B737_MASTER_WARNING_FIRE_RED_SWITCH#34701 (>K:ROTOR_BRAKE)
PMDG_B737_Annunciator_Panel_R_Press#43701 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Air Condition / Pressurization
PM_OV#16001 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Air Condition and Pressurization
PMDG_B777_OVHD_Cargo_Temp_Select_Aft_HIGH#100 (L:switch_148_a) - 50 div s0 :1 l0 0 > if{ 14807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 14808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_OVHD_Cargo_Temp_Select_Aft_LOW#50 (L:switch_148_a) - 50 div s0 :1 l0 0 > if{ 14807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 14808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_OVHD_Cargo_Temp_Select_Aft_OFF#0 (L:switch_148_a) - 50 div s0 :1 l0 0 > if{ 14807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 14808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_OVHD_Cargo_Temp_Select_Bulk_HIGH#100 (L:switch_149_a) - 50 div s0 :1 l0 0 > if{ 14907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 14908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_OVHD_Cargo_Temp_Select_Bulk_LOW#50 (L:switch_149_a) - 50 div s0 :1 l0 0 > if{ 14907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 14908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_OVHD_Cargo_Temp_Select_Bulk_OFF#0 (L:switch_149_a) - 50 div s0 :1 l0 0 > if{ 14907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 14908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
//PMDG/B777 300ER/Air Conditioning and Pressurization
PMDG_B777_Cabin_Temp_Dec#80 95 (L:CABINTempKnob,number) rng if{ 74 (>L:CABINTempKnob, number) } els{ (L:CABINTempKnob, number) 1 - 1 max (>L:CABINTempKnob, number)
PMDG_B777_Cabin_Temp_Inc#80 95 (L:CABINTempKnob,number) rng if{ 1 (>L:CABINTempKnob, number) } els{ (L:CABINTempKnob, number) 1 + 60 min (>L:CABINTempKnob, number)
PMDG_B777_Air_Cond_Reset#14101 (>K:ROTOR_BRAKE)
PMDG_B777_Bleed_Air_APU_Off#(L:switch_131_a) if{ 13101 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_APU_On#(L:switch_131_a) ! if{ 13101 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_APU_Toggle#13101 (>K:ROTOR_BRAKE)
PMDG_B777_Bleed_Air_C_Isln_Off#(L:switch_133_a) if{ 13301 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_C_Isln_On#(L:switch_133_a) ! if{ 13301 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_C_Isln_Toggle#13301 (>K:ROTOR_BRAKE)
PMDG_B777_Bleed_Air_L_Eng_Off#(L:switch_129_a) if{ 12901 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_L_Eng_On#(L:switch_129_a) ! if{ 12901 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_L_Eng_Toggle#12901 (>K:ROTOR_BRAKE)
PMDG_B777_Bleed_Air_L_Isln_Off#(L:switch_132_a) if{ 13201 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_L_Isln_On#(L:switch_132_a) ! if{ 13201 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_L_Isln_Toggle#13201 (>K:ROTOR_BRAKE)
PMDG_B777_Bleed_Air_R_Eng_Off#(L:switch_130_a) if{ 13001 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_R_Eng_On#(L:switch_130_a) ! if{ 13001 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_R_Eng_Toggle#13001 (>K:ROTOR_BRAKE)
PMDG_B777_Bleed_Air_R_Isln_Off#(L:switch_134_a) if{ 13401 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_R_Isln_On#(L:switch_134_a) ! if{ 13401 (>K:ROTOR_BRAKE) }
PMDG_B777_Bleed_Air_R_Isln_Toggle#13401 (>K:ROTOR_BRAKE)
PMDG_B777_Cabin_Temp_Inc#80 95 (L:CABINTempKnob,number) rng if{ 1 (>L:CABINTempKnob, number) } els{ (L:CABINTempKnob, number) 1 + 75 min (>L:CABINTempKnob, number)
PMDG_B777_Equip_Cooling_Off#(L:switch_144_a) if{ 14401 (>K:ROTOR_BRAKE) }
PMDG_B777_Equip_Cooling_On#(L:switch_144_a) ! if{ 14401 (>K:ROTOR_BRAKE) }
PMDG_B777_Equip_Cooling_Toggle#14401 (>K:ROTOR_BRAKE)
PMDG_B777_Flt_Deck_Temp_Dec#80 95 (L:FLTDeckTempKnob,number) rng if{ 74 (>L:FLTDeckTempKnob, number) } els{ (L:FLTDeckTempKnob, number) 1 - 1 max (>L:FLTDeckTempKnob, number)
PMDG_B777_Flt_Deck_Temp_Inc#80 95 (L:FLTDeckTempKnob,number) rng if{ 1 (>L:FLTDeckTempKnob, number) } els{ (L:FLTDeckTempKnob, number) 1 + 75 min (>L:FLTDeckTempKnob, number)
PMDG_B777_Gasper_Off#(L:switch_145_a) if{ 14501 (>K:ROTOR_BRAKE) }
PMDG_B777_Gasper_On#(L:switch_145_a) ! if{ 14501 (>K:ROTOR_BRAKE) }
PMDG_B777_Gasper_Toggle#14501 (>K:ROTOR_BRAKE)
PMDG_B777_L_Pack_Off#(L:switch_135_a) if{ 13501 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Pack_On#(L:switch_135_a) ! if{ 13501 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Pack_Toggle#13501 (>K:ROTOR_BRAKE)
PMDG_B777_L_Trim_Air_Off#(L:switch_137_a) if{ 13701 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Trim_Air_On#(L:switch_137_a) ! if{ 13701 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Trim_Air_Toggle#13701 (>K:ROTOR_BRAKE)
PMDG_B777_Ldg_Alt_Dec#(L:switch_1261_a, number) 50 > if{ (L:LDGALTRotate, number) 5 - -50 max (>L:LDGALTRotate, number) }
PMDG_B777_Ldg_Alt_Inc#(L:switch_1261_a, number) 50 > if{ (L:LDGALTRotate, number) 5 + 50 min (>L:LDGALTRotate, number) }
PMDG_B777_Ldg_Alt_Off#(L:switch_1261_a) if{ 126101 (>K:ROTOR_BRAKE) }
PMDG_B777_Ldg_Alt_On#(L:switch_1261_a) ! if{ 126101 (>K:ROTOR_BRAKE) }
PMDG_B777_Ldg_Alt_Toggle#126101 (>K:ROTOR_BRAKE)
PMDG_B777_Outflow_Value_Aft_Manual_-----#50 (L:switch_125_a) - 50 div s0 :1 l0 0 > if{ 12501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Outflow_Value_Aft_Manual_Close#100 (L:switch_125_a) - 50 div s0 :1 l0 0 > if{ 12501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Outflow_Value_Aft_Manual_Dec#12502 (>K:ROTOR_BRAKE)
PMDG_B777_Outflow_Value_Aft_Manual_Inc#12501 (>K:ROTOR_BRAKE)
PMDG_B777_Outflow_Value_Aft_Manual_Open#0 (L:switch_125_a) - 50 div s0 :1 l0 0 > if{ 12501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Outflow_Value_Fwd_Manual_-----#50 (L:switch_124_a) - 50 div s0 :1 l0 0 > if{ 12401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Outflow_Value_Fwd_Manual_Close#100 (L:switch_124_a) - 50 div s0 :1 l0 0 > if{ 12401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Outflow_Value_Fwd_Manual_Dec#12402 (>K:ROTOR_BRAKE)
PMDG_B777_Outflow_Value_Fwd_Manual_Inc#12401 (>K:ROTOR_BRAKE)
PMDG_B777_Outflow_Value_Fwd_Manual_Open#0 (L:switch_124_a) - 50 div s0 :1 l0 0 > if{ 12401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Outflow_Valve_Aft_Off#(L:switch_128_a) if{ 12801 (>K:ROTOR_BRAKE) }
PMDG_B777_Outflow_Valve_Aft_On#(L:switch_128_a) ! if{ 12801 (>K:ROTOR_BRAKE) }
PMDG_B777_Outflow_Valve_Aft_Toggle#12801 (>K:ROTOR_BRAKE)
PMDG_B777_Outflow_Valve_Fwd_Off#(L:switch_127_a) if{ 12701 (>K:ROTOR_BRAKE) }
PMDG_B777_Outflow_Valve_Fwd_On#(L:switch_127_a) ! if{ 12701 (>K:ROTOR_BRAKE) }
PMDG_B777_Outflow_Valve_Fwd_Toggle#12701 (>K:ROTOR_BRAKE)
PMDG_B777_R_Pack_Off#(L:switch_136_a) if{ 13601 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Pack_On#(L:switch_136_a) ! if{ 13601 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Pack_Toggle#13601 (>K:ROTOR_BRAKE)
PMDG_B777_R_Trim_Air_Off#(L:switch_138_a) if{ 13801 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Trim_Air_On#(L:switch_138_a) ! if{ 13801 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Trim_Air_Toggle#13801 (>K:ROTOR_BRAKE)
PMDG_B777_Ram_Air_Turbine_Switch_Guard_Close#(L:switch_44_a) if{ 4401 (>K:ROTOR_BRAKE) }
PMDG_B777_Ram_Air_Turbine_Switch_Guard_Open#(L:switch_44_a) ! if{ 4401 (>K:ROTOR_BRAKE) }
PMDG_B777_Ram_Air_Turbine_Switch_Guard_Toggle#4401 (>K:ROTOR_BRAKE)
PMDG_B777_Recirc_Fans_Lower_Off#(L:switch_143_a) if{ 14301 (>K:ROTOR_BRAKE) }
PMDG_B777_Recirc_Fans_Lower_On#(L:switch_143_a) ! if{ 14301 (>K:ROTOR_BRAKE) }
PMDG_B777_Recirc_Fans_Lower_Toggle#14301 (>K:ROTOR_BRAKE)
PMDG_B777_Recirc_Fans_Upper_Off#(L:switch_142_a) if{ 14201 (>K:ROTOR_BRAKE) }
PMDG_B777_Recirc_Fans_Upper_On#(L:switch_142_a) ! if{ 14201 (>K:ROTOR_BRAKE) }
PMDG_B777_Recirc_Fans_Upper_Toggle#14201 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Anti-Ice
PMDG_B777_L_Engine_Anti_Ice_Auto_#50 (L:switch_112_a) - 50 div s0 :1 l0 0 > if{ 11207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_L_Engine_Anti_Ice_Dec#11208 (>K:ROTOR_BRAKE)
PMDG_B777_L_Engine_Anti_Ice_Inc#11207 (>K:ROTOR_BRAKE)
PMDG_B777_L_Engine_Anti_Ice_Off#0 (L:switch_112_a) - 50 div s0 :1 l0 0 > if{ 11207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_L_Engine_Anti_Ice_On#100 (L:switch_112_a) - 50 div s0 :1 l0 0 > if{ 11207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Engine_Anti_Ice_Auto_#50 (L:switch_113_a) - 50 div s0 :1 l0 0 > if{ 11307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Engine_Anti_Ice_Dec#11308 (>K:ROTOR_BRAKE)
PMDG_B777_R_Engine_Anti_Ice_Inc#11307 (>K:ROTOR_BRAKE)
PMDG_B777_R_Engine_Anti_Ice_Off#0 (L:switch_113_a) - 50 div s0 :1 l0 0 > if{ 11307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Engine_Anti_Ice_On#100 (L:switch_113_a) - 50 div s0 :1 l0 0 > if{ 11307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Window_Heat_L_Fwd_Off#(L:switch_46_a) if{ 4601 (>K:ROTOR_BRAKE) }
PMDG_B777_Window_Heat_L_Fwd_On#(L:switch_46_a) ! if{ 4601 (>K:ROTOR_BRAKE) }
PMDG_B777_Window_Heat_L_Fwd_Toggle#4601 (>K:ROTOR_BRAKE)
PMDG_B777_Window_Heat_L_Side_Off#(L:switch_45_a) if{ 4501 (>K:ROTOR_BRAKE) }
PMDG_B777_Window_Heat_L_Side_On#(L:switch_45_a) ! if{ 4501 (>K:ROTOR_BRAKE) }
PMDG_B777_Window_Heat_L_Side_Toggle#4501 (>K:ROTOR_BRAKE)
PMDG_B777_Window_Heat_R_Fwd_Off#(L:switch_47_a) if{ 4701 (>K:ROTOR_BRAKE) }
PMDG_B777_Window_Heat_R_Fwd_On#(L:switch_47_a) ! if{ 4701 (>K:ROTOR_BRAKE) }
PMDG_B777_Window_Heat_R_Fwd_Toggle#4701 (>K:ROTOR_BRAKE)
PMDG_B777_Window_Heat_R_Side_Off#(L:switch_48_a) if{ 4801 (>K:ROTOR_BRAKE) }
PMDG_B777_Window_Heat_R_Side_On#(L:switch_48_a) ! if{ 4801 (>K:ROTOR_BRAKE) }
PMDG_B777_Window_Heat_R_Side_Toggle#4801 (>K:ROTOR_BRAKE)
PMDG_B777_Wing_Anti_Ice_Auto_#50 (L:switch_111_a) - 50 div s0 :1 l0 0 > if{ 11107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Wing_Anti_Ice_Dec#11108 (>K:ROTOR_BRAKE)
PMDG_B777_Wing_Anti_Ice_Inc#11107 (>K:ROTOR_BRAKE)
PMDG_B777_Wing_Anti_Ice_Off#0 (L:switch_111_a) - 50 div s0 :1 l0 0 > if{ 11107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Wing_Anti_Ice_On#100 (L:switch_111_a) - 50 div s0 :1 l0 0 > if{ 11107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
//PMDG/B777 300ER/Autopilot
_PMDG_B777_MCP_FD1_Switch_Down#(L:switch_202_a) 0 == if{ 20201 (>K:ROTOR_BRAKE) }
PMDG_B777_A_P_Disc_Yoke_Button_Left#108401 (>K:ROTOR_BRAKE)
PMDG_B777_A_T_Button#20701 (>K:ROTOR_BRAKE)
PMDG_B777_A_T_Disconnect_Throttle_Button_Left#50201 (>K:ROTOR_BRAKE)
PMDG_B777_A_T_L_Arm#20401 (>K:ROTOR_BRAKE)
PMDG_B777_A_T_R_Arm#20501 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_ALT_Auto_1000_Select_Toggle#22501 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_ALT_HLD_Button_Press#22601 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_ALT_Knob_DEC#225008 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_ALT_Knob_Inc#225007 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_ALT_Knob_Press#225101 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_AP_Button_Press#20301 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_AP_Disengage_Bar_Down#(L:switch_214_a) 0 == if{ 21401 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_AP_Disengage_Bar_Up#(L:switch_214_a) 100 == if{ 21401 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_AP_Disengage_Toggle#21401 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_APP_Button_Press#22801 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_AT_Arm_L_Switch_Down#(L:switch_204_a) 0 == if{ 20401 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_AT_Arm_L_Switch_Toggle#20401 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_AT_Arm_L_Switch_Up#(L:switch_204_a) 100 == if{ 20401 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_AT_Arm_R_Switch_Down#(L:switch_205_a) 0 == if{ 20501 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_AT_Arm_R_Switch_Toggle#20501 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_AT_Arm_R_Switch_Up#(L:switch_205_a) 100 == if{ 20501 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_Bank_Angle_Knob_10#20 (L:switch_2181_a) - 10 div s0 :1 l0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_MCP_Bank_Angle_Knob_15#30 (L:switch_2181_a) - 10 div s0 :1 l0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_MCP_Bank_Angle_Knob_20#40 (L:switch_2181_a) - 10 div s0 :1 l0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_MCP_Bank_Angle_Knob_25#50 (L:switch_2181_a) - 10 div s0 :1 l0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_MCP_Bank_Angle_Knob_5#10 (L:switch_2181_a) - 10 div s0 :1 l0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_MCP_Bank_Angle_Knob_AUTO#0 (L:switch_2181_a) - 10 div s0 :1 l0 0 < if{ 218101 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 218102 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_MCP_Bank_Angle_Knob_Dec#218101 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_Bank_Angle_Knob_Inc#218102 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_CLB_CON_Button_Press#20601 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_FD1_Switch_Toggle#20201 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_FD1_Switch_Up#(L:switch_202_a) 100 == if{ 20201 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_FD2_Switch#23001 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_FD2_Switch_Down#(L:switch_230_a) 0 == if{ 23001 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_FD2_Switch_Up#(L:switch_230_a) 100 == if{ 23001 (>K:ROTOR_BRAKE) }
PMDG_B777_MCP_FLCH_Button_Press#21301 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_FO_AP_Button_Press#22901 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_HDG_HOLD_Button_Press#21901 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_HDG_Knob_Dec#218008 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_HDG_Knob_Inc#218007 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_HDG_Knob_SEL_Press#21801 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_HDG_TRK_Mode_Toggle#21601 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_IAS_MACH_Button_Press#20801 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_IAS_MACH_Knob_Dec#21008 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_IAS_MACH_Knob_Inc#21007 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_IAS_MACH_Knob_SEL_Press#210001 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_LNAV_Button_Press#21101 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_V_S_Knob_DEC#22207 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_V_S_Knob_INC#22208 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_VNAV_Button_Press#21201 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_VOR_LOC_Button_Press#22701 (>K:ROTOR_BRAKE)
PMDG_B777_MCP_VS_FPA_Switch#22301 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Avionics
PMDG_B777__Primary_Flight_Computers_Switch_Guard_Toggle#5601 (>K:ROTOR_BRAKE)
PMDG_B777_ADIRU_Off#(L:switch_59_a) if{ 5901 (>K:ROTOR_BRAKE) }
PMDG_B777_ADIRU_On#(L:switch_59_a) ! if{ 5901 (>K:ROTOR_BRAKE) }
PMDG_B777_ADIRU_Toggle#5901 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_AIR_Button_Press#23901 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_CAM_Button_Press#24301 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_CANC_RCL_Button_Press#24701 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_CHKL_Button_Press#24401 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_COMM_Button_Press#24501 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_DOOR_Button_Press#24001 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_ELEC_Button_Press#23601 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_ENG_Button_Press#23401 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_FCTL_Button_Press#24201 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_FUEL_Button_Press#23801 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_GEAR_Button_Press#24101 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_HYD_Button_Press#23701 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_L_INBD_Button_Press#23101 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_LWR_CTR_Button_Press#23301 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_NAV_Button_Press#24601 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_R_INBD_Button_Press#23201 (>K:ROTOR_BRAKE)
PMDG_B777_DSP_STAT_Button_Press#23501 (>K:ROTOR_BRAKE)
PMDG_B777_MIP_AIR_DATA_ATT_ALTN_L_Button_Toggle#17001 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_AIR_DATA_ATT_ALTN_R_Button_Toggle#27801 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_ALTN_GEAR_GUARD_Toggle#29401 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_DSPL_CTRL_ALTN_Button_Toggle#16901 (>K:ROTOR_BRAKE)
PMDG_B777_MIP_DSPL_CTRL_ALTN_R_BUTTON_TOGGLE#27701 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_FMC_Sel_Knob_AUTO#50 (L:switch_291_a) - 10 div s0 :1 l0 0 > if{ 29107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_FMC_Sel_Knob_L#0 (L:switch_291_a) - 10 div s0 :1 l0 0 > if{ 29107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_FMC_Sel_Knob_R#100 (L:switch_291_a) - 10 div s0 :1 l0 0 > if{ 29107 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29108 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_GS_Inhibit_Switch#30301 (>K:ROTOR_BRAKE)
PMDG_B777_MIP_GS_Inhibit_Switch#30301 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_HDG_REF_BUTTON_TOGGLE#31301 (>K:ROTOR_BRAKE)
PMDG_B777_MIP_HDG_REF_GUARD_TOGGLE#31401 (>K:ROTOR_BRAKE)
PMDG_B777_MIP_LEFT_INBOARD_DSPL_EICAS#30 (L:switch_315_a) - 10 div s0 :1 l0 0 > if{ 31507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_LEFT_INBOARD_DSPL_MFD#20 (L:switch_315_a) - 10 div s0 :1 l0 0 > if{ 31507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_LEFT_INBOARD_DSPL_NAV#10 (L:switch_315_a) - 10 div s0 :1 l0 0 > if{ 31507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_LEFT_INBOARD_DSPL_PFD#0 (L:switch_315_a) - 10 div s0 :1 l0 0 > if{ 31507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_NAV_CDU_L_BUTTON_TOGGLE#16801 (>K:ROTOR_BRAKE)
PMDG_B777_MIP_NAV_CDU_R_BUTTON_TOGGLE#27601 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_RIGHT_INBOARD_DSPL_EICAS#0 (L:switch_290_a) - 10 div s0 :1 l0 0 > if{ 29007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_RIGHT_INBOARD_DSPL_MFD#10 (L:switch_290_a) - 10 div s0 :1 l0 0 > if{ 29007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_RIGHT_INBOARD_DSPL_NAV#20 (L:switch_290_a) - 10 div s0 :1 l0 0 > if{ 29007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_RIGHT_INBOARD_DSPL_PFD#30 (L:switch_290_a) - 10 div s0 :1 l0 0 > if{ 29007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_TERR_OVRD_GUARD_Toggle#29801 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_TERR_OVRD_Toggle#29701 (>K:ROTOR_BRAKE) 
PMDG_B777_Primary_Flight_Computers_Switch_Auto#(L:switch_55_a) ! if{ 5501 (>K:ROTOR_BRAKE) }
PMDG_B777_Primary_Flight_Computers_Switch_Disc#(L:switch_55_a) if{ 5501 (>K:ROTOR_BRAKE) }
PMDG_B777_Primary_Flight_Computers_Switch_Guard_Close#(L:switch_56_a) if{ 5601 (>K:ROTOR_BRAKE) }
PMDG_B777_Primary_Flight_Computers_Switch_Guard_Open#(L:switch_56_a) ! if{ 5601 (>K:ROTOR_BRAKE) }
PMDG_B777_Primary_Flight_Computers_Switch_Toggle#5501 (>K:ROTOR_BRAKE)
PMDG_B777_Thrust_Asym_Comp_Off#(L:switch_54_a) if{ 5401 (>K:ROTOR_BRAKE) }
PMDG_B777_Thrust_Asym_Comp_On#(L:switch_54_a) ! if{ 5401 (>K:ROTOR_BRAKE) }
PMDG_B777_Thrust_Asym_Comp_Toggle#5401 (>K:ROTOR_BRAKE)
PMDG_B777_DSPL_CTRL_Off#(L:switch_478_a) if{ 47801 (>K:ROTOR_BRAKE) }
PMDG_B777_DSPL_CTRL_On#(L:switch_478_a) ! if{ 47801 (>K:ROTOR_BRAKE) }
PMDG_B777_DSPL_CTRL_Toggle#47801 (>K:ROTOR_BRAKE)
PMDG_B777_Eicas_Event_Rcd_Press#47901 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_AUTO_Press#58301 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_L_R_Press#58401 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_GC_Press#58001 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_Gain_Dec#58208 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_Gain_Inc#58207 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_MAP_Press#57901 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_TFR_Press#57601 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_Tilt_Dec#58108 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_Tilt_Inc#58107 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_WX___T_Press#57801 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Left_WX_Press#57701 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_GC_Press#59201 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_Gain_Dec#58708 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_Gain_Inc#58707 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_MAP_Press#59101 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_TFR_Press#58801 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_Tilt_Dec#58608 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_Tilt_Inc#58607 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_WX___T_Press#59001 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_Right_WX_Press#58901 (>K:ROTOR_BRAKE)
PMDG_B777_Wx_Rdr_TEST_Press#58501 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/CPDLC
PMDG_B777_LEFT_ACPT_Button_Press#17801 (>K:ROTOR_BRAKE)
PMDG_B777_LEFT_CANC_Button_Press#17901 (>K:ROTOR_BRAKE)
PMDG_B777_LEFT_RJCT_Button_Press#18001 (>K:ROTOR_BRAKE)
PMDG_B777_RIGHT_ACPT_Button_Press#26901 (>K:ROTOR_BRAKE)
PMDG_B777_RIGHT_CANC_Button_Press#27001 (>K:ROTOR_BRAKE)
PMDG_B777_RIGHT_RJCT_Button_Press#27101 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Controls
PMDG_B777_Flaps_Lever_1#507201 (>K:ROTOR_BRAKE)
PMDG_B777_Flaps_Lever_15#507401 (>K:ROTOR_BRAKE)
PMDG_B777_Flaps_Lever_20#507501 (>K:ROTOR_BRAKE)
PMDG_B777_Flaps_Lever_25#507601 (>K:ROTOR_BRAKE)
PMDG_B777_Flaps_Lever_30#507701 (>K:ROTOR_BRAKE)
PMDG_B777_Flaps_Lever_5#507301 (>K:ROTOR_BRAKE)
PMDG_B777_Flaps_Lever_Up#507101 (>K:ROTOR_BRAKE)
PMDG_B777_MIP_FLAP_OVRD_GUARD_Toggle#30201 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_FLAP_OVRD_Toggle#30101 (>K:ROTOR_BRAKE) 
PMDG_B777_PED_ALTN_FLAPS_ARM_BUTTON#51001 (>K:ROTOR_BRAKE)
PMDG_B777_PED_ALTN_FLAPS_ARM_GUARD_TOGGLE#51101 (>K:ROTOR_BRAKE)
PMDG_B777_PED_ALTN_FLAPS_KNOB_EXT#100 (L:switch_512_a) - 50 div s0 :1 l0 0 > if{ 51202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 51201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_PED_ALTN_FLAPS_KNOB_OFF#50 (L:switch_512_a) - 50 div s0 :1 l0 0 > if{ 51202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 51201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_PED_ALTN_FLAPS_KNOB_RET#0 (L:switch_512_a) - 50 div s0 :1 l0 0 > if{ 51202 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 51201 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_PED_ALTN_PITCH_TRIM_LEVER_NOSE_DOWN#49602 (>K:ROTOR_BRAKE) 
PMDG_B777_PED_ALTN_PITCH_TRIM_LEVER_NOSE_UP#49601 (>K:ROTOR_BRAKE) 
PMDG_B777_PED_ALTN_PITCH_TRIM_LEVER_RELEASE#49604 (>K:ROTOR_BRAKE) 
PMDG_B777_PED_STAB_C_CUTOUT#(L:switch_517_a) 0 == if{ 51701 (>K:ROTOR_BRAKE) }
PMDG_B777_PED_STAB_C_NORM#(L:switch_517_a) 100 == if{ 51701 (>K:ROTOR_BRAKE) }
PMDG_B777_PED_STAB_C_Switch_Guard_Toggle#51601 (>K:ROTOR_BRAKE)
PMDG_B777_PED_STAB_C_Switch_Toggle#51701 (>K:ROTOR_BRAKE)
PMDG_B777_PED_STAB_R_CUTOUT#(L:switch_519_a) 0 == if{ 51901 (>K:ROTOR_BRAKE) }
PMDG_B777_PED_STAB_R_NORM#(L:switch_519_a) 100 == if{ 51901 (>K:ROTOR_BRAKE) }
PMDG_B777_PED_STAB_R_Switch_Guard_Toggle#51801 (>K:ROTOR_BRAKE)
PMDG_B777_PED_STAB_R_Switch_Toggle#51901 (>K:ROTOR_BRAKE)
PMDG_B777_Spoiler_Arm_Toggle#(L:switch_498_a) 200 != if{ -13000 } els{ -16383 } (>K:AXIS_SPOILER_SET) 
PMDG_B777_TOGA_SWITCH_L#50001 (>K:ROTOR_BRAKE)
PMDG_B777_TOGA_SWITCH_R#50401 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/EFIS
PMDG_B777_EFIS_F0__VOR_ADF_L_SWITCH_ADF_L#100 (L:switch_251_a) - 50 div sp0 :1 l0 0 < if{ 25102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 25101 (>K:ROTOR_BRAKE) l0 -- s0 g1 }
PMDG_B777_EFIS_F0__VOR_ADF_L_SWITCH_OFF#50 (L:switch_251_a) - 50 div sp0 :1 l0 0 < if{ 25102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 25101 (>K:ROTOR_BRAKE) l0 -- s0 g1 }
PMDG_B777_EFIS_F0__VOR_ADF_L_SWITCH_VOR_L#0 (L:switch_251_a) - 50 div sp0 :1 l0 0 < if{ 25102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 25101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_EFIS_F0__VOR_ADF_R_SWITCH_ADF_R#100 (L:switch_256_a) - 50 div sp0 :1 l0 0 < if{ 25602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 25601 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_EFIS_F0__VOR_ADF_R_SWITCH_OFF#50 (L:switch_256_a) - 50 div sp0 :1 l0 0 < if{ 25602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 25601 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_EFIS_F0__VOR_ADF_R_SWITCH_VOR_R#0 (L:switch_256_a) - 50 div sp0 :1 l0 0 < if{ 25602 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 25601 (>K:ROTOR_BRAKE) l0 -- s0 g1 } 
PMDG_B777_EFIS_L_ARPT_Button_Press#19801 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Baro_Dec#(L:CABaroKnob, number) 5 - -50 max (>L:CABaroKnob, number) (E:SIMULATION TIME, second) 0.04 + (>L:myBaroTimer)
PMDG_B777_EFIS_L_Baro_Inc#(L:CABaroKnob, number) 5 + 50 min (>L:CABaroKnob, number) (E:SIMULATION TIME, second) 0.04 + (>L:myBaroTimer)
PMDG_B777_EFIS_L_Baro_Knob#(>L:CABaroKnob, number)
PMDG_B777_EFIS_L_Baro_Knob_STD_Button_Press#19201 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Baro_Ref_Toggle#19001 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_DATA_Button_Press#19901 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_FPV_Button_Press#19301 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_MINS_KNOB_DEC#(L:CAMinsKnob, number) 5 - -50 max (>L:CAMinsKnob, number) (E:SIMULATION TIME, second) 0.04 + (>L:myMinsTimer)
PMDG_B777_EFIS_L_MINS_KNOB_INC#(L:CAMinsKnob, number) 5 + 50 min (>L:CAMinsKnob, number) (E:SIMULATION TIME, second) 0.04 + (>L:myMinsTimer)
PMDG_B777_EFIS_L_MINS_Knob_RST_Button_Press#18301 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_MINS_REF_BARO#(L:switch_181_a) 0 == if[ 18101 (>K:ROTOR_BRAKE) }
PMDG_B777_EFIS_L_MINS_REF_RADIO#(L:switch_181_a) 100 == if[ 18101 (>K:ROTOR_BRAKE) }
PMDG_B777_EFIS_L_MINS_REF_Toggle#18101 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_MTRS_Button_Press#19401 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Mode_Knob_APP#0 (L:switch_185_a) - 10 div s0 :1 l0 0 > if{ 18507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Mode_Knob_CTR_Press#18601 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Mode_Knob_Dec#18508 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Mode_Knob_Inc#18507 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Mode_Knob_MAP#20 (L:switch_185_a) - 10 div s0 :1 l0 0 > if{ 18507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Mode_Knob_PLN#30 (L:switch_185_a) - 10 div s0 :1 l0 0 > if{ 18507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Mode_Knob_VOR#10 (L:switch_185_a) - 10 div s0 :1 l0 0 > if{ 18507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_POS_Button_Press#20001 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Range_Knob_10#0 (L:switch_187_a) - 10 div s0 :1 l0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Range_Knob_160#40 (L:switch_187_a) - 10 div s0 :1 l0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Range_Knob_20#10 (L:switch_187_a) - 10 div s0 :1 l0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Range_Knob_320#50 (L:switch_187_a) - 10 div s0 :1 l0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Range_Knob_40#20 (L:switch_187_a) - 10 div s0 :1 l0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Range_Knob_640#60 (L:switch_187_a) - 10 div s0 :1 l0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Range_Knob_80#30 (L:switch_187_a) - 10 div s0 :1 l0 0 > if{ 18707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 18708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_EFIS_L_Range_Knob_Dec#18708 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Range_Knob_Inc#18707 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_Range_Knob_TFC_Press#18801 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_STA_Button_Press#19601 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_TERR_Button_Press#20101 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_VOR_ADF_L_SWITCH_ADF_L#100 (L:switch_184_a) - 50 div sp0 :1 l0 0 < if{ 18402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 18401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }
PMDG_B777_EFIS_L_VOR_ADF_L_SWITCH_OFF#50 (L:switch_184_a) - 50 div sp0 :1 l0 0 < if{ 18402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 18401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }
PMDG_B777_EFIS_L_VOR_ADF_L_SWITCH_VOR_L#0 (L:switch_184_a) - 50 div sp0 :1 l0 0 < if{ 18402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 18401 (>K:ROTOR_BRAKE) l0 -- s0 g1 }
PMDG_B777_EFIS_L_VOR_ADF_R_SWITCH_ADF_R#100 (L:switch_189_a) - 50 div sp0 :1 l0 0 < if{ 18902 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 18901 (>K:ROTOR_BRAKE) l0 -- s0 g1 }
PMDG_B777_EFIS_L_VOR_ADF_R_SWITCH_OFF#50 (L:switch_189_a) - 50 div sp0 :1 l0 0 < if{ 18902 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 18901 (>K:ROTOR_BRAKE) l0 -- s0 g1 }
PMDG_B777_EFIS_L_VOR_ADF_R_SWITCH_VOR_R#0 (L:switch_189_a) - 50 div sp0 :1 l0 0 < if{ 18902 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } l0 0 > if{ 18901 (>K:ROTOR_BRAKE) l0 -- s0 g1 }
PMDG_B777_EFIS_L_WPT_Button_Press#19701 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_L_WXR_Button_Press#19501 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_ARPT_Button_Press#26501 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_Baro_Dec#(L:FOBaroKnob, number) 5 - -50 max (>L:FOBaroKnob, number) (E:SIMULATION TIME, second) 0.04 + (>L:myBaroTimer)
PMDG_B777_EFIS_R_Baro_Inc#(L:FOBaroKnob, number) 5 + 50 min (>L:FOBaroKnob, number) (E:SIMULATION TIME, second) 0.04 + (>L:myBaroTimer)
PMDG_B777_EFIS_R_Baro_Ref_Toggle#25701 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_DATA_Button_Press#26601 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_FPV_Button_Press#26001 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_MTRS_Button_Press#26101 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_POS_Button_Press#26701 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_Range_Knob_TFC_Press#25501 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_STA_Button_Press#26301 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_TERR_Button_Press#26801 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_WPT_Button_Press#26401 (>K:ROTOR_BRAKE)
PMDG_B777_EFIS_R_WXR_Button_Press#26201 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Electrical
PMDG_B777_Battery_Off#(L:switch_01_a) if{ 101 (>K:ROTOR_BRAKE) }
PMDG_B777_Battery_On#(L:switch_01_a) ! if{ 101 (>K:ROTOR_BRAKE) }
PMDG_B777_Battery_Toggle#101 (>K:ROTOR_BRAKE)
PMDG_B777_Cabin_Utility_Off#(L:switch_17_a) if{ 1701 (>K:ROTOR_BRAKE) }
PMDG_B777_Cabin_Utility_On#(L:switch_18_a) ! if{ 1801 (>K:ROTOR_BRAKE) }
PMDG_B777_Cabin_Utility_Toggle#1801 (>K:ROTOR_BRAKE)
PMDG_B777_Ife_Pass_Seats_Off#(L:switch_17_a) if{ 1701 (>K:ROTOR_BRAKE) }
PMDG_B777_Ife_Pass_Seats_On#(L:switch_17_a) ! if{ 1701 (>K:ROTOR_BRAKE) }
PMDG_B777_Ife_Pass_Seats_Toggle#1701 (>K:ROTOR_BRAKE)
PMDG_B777_OVHD_APU_Power_Test_Guard_Toggle#16001 (>K:ROTOR_BRAKE)
PMDG_B777_OVHD_APU_Power_Test_Switch_NORM#(L:switch_159_a) 100 == if{ 15901 (>K:ROTOR_BRAKE) }
PMDG_B777_OVHD_APU_Power_Test_Switch_TEST#(L:switch_159_a) 0 == if{ 15901 (>K:ROTOR_BRAKE) }
PMDG_B777_OVHD_APU_Power_Test_Toggle#15901 (>K:ROTOR_BRAKE)
PMDG_B777_OVHD_GND_Test_Switch_Guard_Toggle#15302 (>K:ROTOR_BRAKE)
PMDG_B777_OVHD_L_ENG_Power_Test_Guard_Toggle#16201 (>K:ROTOR_BRAKE)
PMDG_B777_OVHD_L_ENG_Power_Test_Switch_NORM#(L:switch_161_a) 100 == if{ 16101 (>K:ROTOR_BRAKE) }
PMDG_B777_OVHD_L_ENG_Power_Test_Switch_TEST#(L:switch_161_a) 0 == if{ 16101 (>K:ROTOR_BRAKE) }
PMDG_B777_OVHD_L_ENG_Power_Test_Switch_Toggle#16101 (>K:ROTOR_BRAKE)
PMDG_B777_OVHD_R_ENG_Power_Test_Guard_Toggle#16401 (>K:ROTOR_BRAKE)
PMDG_B777_OVHD_R_ENG_Power_Test_Switch_NORM#(L:switch_163_a) 100 == if{ 16301 (>K:ROTOR_BRAKE) }
PMDG_B777_OVHD_R_ENG_Power_Test_Switch_TEST#(L:switch_163_a) 0 == if{ 16301 (>K:ROTOR_BRAKE) }
PMDG_B777_OVHD_R_ENG_Power_Test_Switch_Toggle#16301 (>K:ROTOR_BRAKE)
PMDG_B777_OVHD_Towing_Power_Switch_BATT#100 (L:switch_150_a) != if{ 15001 (>K:ROTOR_BRAKE) }
PMDG_B777_OVHD_Towing_Power_Switch_Guard_Toggle#15101 (>K:ROTOR_BRAKE) }
PMDG_B777_OVHD_Towing_Power_Switch_OFF#0 (L:switch_150_a) != if{ 15002 (>K:ROTOR_BRAKE) }
PMDG_B777_APU_Dec#308 (>K:ROTOR_BRAKE)
PMDG_B777_APU_Gen_Off#(L:switch_02_a) if{ 201 (>K:ROTOR_BRAKE) }
PMDG_B777_APU_Gen_On#(L:switch_02_a) ! if{ 201 (>K:ROTOR_BRAKE) }
PMDG_B777_APU_Gen_Toggle#201 (>K:ROTOR_BRAKE)
PMDG_B777_APU_Inc#307 (>K:ROTOR_BRAKE)
PMDG_B777_APU_Off#0 (L:switch_03_a) - 50 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_APU_On_#50 (L:switch_03_a) - 50 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_APU_Start#100 (L:switch_03_a) - 50 div s0 :1 l0 0 > if{ 307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Backup_Gen_L_Off#(L:switch_11_a) if{ 1101 (>K:ROTOR_BRAKE) }
PMDG_B777_Backup_Gen_L_On#(L:switch_11_a) ! if{ 1101 (>K:ROTOR_BRAKE) }
PMDG_B777_Backup_Gen_L_Toggle#1101 (>K:ROTOR_BRAKE)
PMDG_B777_Backup_Gen_R_Off#(L:switch_12_a) if{ 1201 (>K:ROTOR_BRAKE) }
PMDG_B777_Backup_Gen_R_On#(L:switch_12_a) ! if{ 1201 (>K:ROTOR_BRAKE) }
PMDG_B777_Backup_Gen_R_Toggle#1201 (>K:ROTOR_BRAKE)
PMDG_B777_L_Bus_Tie_Off#(L:switch_05_a) if{ 501 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Bus_Tie_On#(L:switch_05_a) ! if{ 501 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Bus_Tie_Toggle#501 (>K:ROTOR_BRAKE)
PMDG_B777_L_Gen_Drive_Disc_Press#1301 (>K:ROTOR_BRAKE)
PMDG_B777_L_Gen_Drive_Disc_Switch_Guard_Close#(L:switch_14_a) if{ 1401 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Gen_Drive_Disc_Switch_Guard_Open#(L:switch_14_a) ! if{ 1401 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Gen_Drive_Disc_Switch_Guard_Toggle#1401 (>K:ROTOR_BRAKE)
PMDG_B777_L_Main_Gen_Off#(L:switch_09_a) if{ 901 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Main_Gen_On#(L:switch_09_a) ! if{ 901 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Main_Gen_Toggle#901 (>K:ROTOR_BRAKE)
PMDG_B777_Primary_Ext_Power_Press#801 (>K:ROTOR_BRAKE)
PMDG_B777_R_Bus_Tie_Off#(L:switch_06_a) if{ 601 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Bus_Tie_On#(L:switch_06_a) ! if{ 601 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Bus_Tie_Toggle#601 (>K:ROTOR_BRAKE)
PMDG_B777_R_Gen_Drive_Disc_Press#1501 (>K:ROTOR_BRAKE)
PMDG_B777_R_Gen_Drive_Disc_Switch_Guard_Close#(L:switch_16_a) if{ 1601 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Gen_Drive_Disc_Switch_Guard_Open#(L:switch_16_a) ! if{ 1601 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Gen_Drive_Disc_Switch_Guard_Toggle#1601 (>K:ROTOR_BRAKE)
PMDG_B777_R_Main_Gen_Off#(L:switch_10_a) if{ 1001 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Main_Gen_On#(L:switch_10_a) ! if{ 1001 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Main_Gen_Toggle#1001 (>K:ROTOR_BRAKE)
PMDG_B777_Ram_Air_Turbine_Press#4301 (>K:ROTOR_BRAKE)
PMDG_B777_Secondary_Ext_Power_Press#701 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Engine
PMDG_777_Engine1_Start_Switch#9408 (>K:ROTOR_BRAKE)
PMDG_777_Engine2_Start_Switch#9508 (>K:ROTOR_BRAKE)
PMDG_777_FUEL_CUT_OFF_ENGINE_1_TOGGLE#52001 (>K:ROTOR_BRAKE)
PMDG_777_FUEL_CUT_OFF_ENGINE_2_TOGGLE#52101 (>K:ROTOR_BRAKE)
PMDG_B777_FUEL_CONTROL_LEVER_L_CUTOFF#(L:switch_520_a) 0 == if{ 52001 (>K:ROTOR_BRAKE) }
PMDG_B777_FUEL_CONTROL_LEVER_L_RUN#(L:switch_520_a) 100 == if{ 52001 (>K:ROTOR_BRAKE) }
PMDG_B777_FUEL_CONTROL_LEVER_R_CUTOFF#(L:switch_521_a) 0 == if{ 52101 (>K:ROTOR_BRAKE) }
PMDG_B777_FUEL_CONTROL_LEVER_R_RUN#(L:switch_521_a) 100 == if{ 52101 (>K:ROTOR_BRAKE) }
//PMDG/B777 300ER/Engines
PMDG_B777_Eng_1_Reverse_Arm#49903 (>K:ROTOR_BRAKE)
PMDG_B777_Eng_2_Reverse_Arm#507103 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_Autostart_Off#(L:switch_96_a) if{ 9601 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_Autostart_On#(L:switch_96_a) ! if{ 9601 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_Autostart_Toggle#9601 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_EEC_Mode_L_Switch_Guard_Close#(L:switch_91_a) if{ 9101 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_EEC_Mode_L_Switch_Guard_Open#(L:switch_91_a) ! if{ 9101 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_EEC_Mode_L_Switch_Guard_Toggle#9101 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_EEC_Mode_R_Switch_Guard_Close#(L:switch_93_a) if{ 9301 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_EEC_Mode_R_Switch_Guard_Open#(L:switch_93_a) ! if{ 9301 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_EEC_Mode_R_Switch_Guard_Toggle#9301 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_Start_L_Norm#(L:switch_94_a) ! if{ 9407 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_Start_L_Start#(L:switch_94_a) if{ 9401 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_Start_L_Toggle#9401 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_Start_R_Norm#(L:switch_95_a) ! if{ 9507 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_Start_R_Start#(L:switch_95_a) if{ 9501 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_Start_R_Toggle#9501 (>K:ROTOR_BRAKE)
PMDG_B777_Enigne_EEC_Mode_L_Off#(L:switch_90_a) if{ 9001 (>K:ROTOR_BRAKE) }
PMDG_B777_Enigne_EEC_Mode_L_On#(L:switch_90_a) ! if{ 9001 (>K:ROTOR_BRAKE) }
PMDG_B777_Enigne_EEC_Mode_L_Toggle#9001 (>K:ROTOR_BRAKE)
PMDG_B777_Enigne_EEC_Mode_R_Off#(L:switch_92_a) if{ 9201 (>K:ROTOR_BRAKE) }
PMDG_B777_Enigne_EEC_Mode_R_On#(L:switch_92_a) ! if{ 9201 (>K:ROTOR_BRAKE) }
PMDG_B777_Enigne_EEC_Mode_R_Toggle#9201 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/FMS
PMDG_B777_FMS_Left__-#36501 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_0#36401 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_1#35401 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_2#35501 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_3#35601 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_4#35701 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_5#35801 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_6#35901 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_7#36001 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_8#36101 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_9#36201 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_A#36601 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_ALT#34301 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_B#36701 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_BRT_Push#40002 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_BRT_Release#40004 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_C#36801 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_CLR#39501 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_D#36901 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_DEL#39301 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_DEP_ARR#34201 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_DIM_Push#40001 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_DIM_Release#40004 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_DOT#36301 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_E#37001 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_EXEC#34901 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_F#37101 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_FIX#34501 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_FMC_COMM#347101 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_G#37201 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_H#37301 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_HOLD#34701 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_I#37401 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_INIT_REF#34001 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_J#37501 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_K#37601 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_L#37701 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LEGS#34601 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_L1#32801 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_L2#32901 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_L3#33001 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_L4#33101 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_L5#33201 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_L6#33301 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_R1#33401 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_R2#33501 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_R3#33601 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_R4#33701 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_R5#33801 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_LSK_R6#33901 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_M#37801 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_MENU#35001 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_N#37901 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_NAV_RAD#35101 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_NEXT_PAGE#35301 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_O#38001 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_P#38101 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_PREV_PAGE#35201 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_PROG#34801 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_Q#38201 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_R#38301 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_RTE#34101 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_S#38401 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_SLASH#39401 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_SP#39201 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_T#38501 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_U#38601 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_V#38701 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_VNAV#34401 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_W#38801 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_X#38901 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_Y#39001 (>K:ROTOR_BRAKE)
PMDG_B777_FMS_Left_Z#39101 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Flight Controls
PMDG_B777_Aileron_Trim_Left_Wing_Down#72701 (>K:ROTOR_BRAKE)
PMDG_B777_Aileron_Trim_Release#72704 (>K:ROTOR_BRAKE)
PMDG_B777_Aileron_Trim_Right_Wing_Down#72702 (>K:ROTOR_BRAKE)
PMDG_B777_Manual_Rudder_Trim_Cancel_Press#72901 (>K:ROTOR_BRAKE)
PMDG_B777_Rudder_Trim_Nose_Left#(E:SIMULATION TIME, second) (>L:myRudderTimer) (L:RudderTrimKnob, number) 11 - -50 max (>L:RudderTrimKnob, number)
PMDG_B777_Rudder_Trim_Nose_Right#(E:SIMULATION TIME, second) (>L:myRudderTimer) (L:RudderTrimKnob, number) 11 + 50 min (>L:RudderTrimKnob, number)
//PMDG/B777 300ER/Fuel
PMDG_B777_Fuel_Center_Pumps_L_Off#(L:switch_109_a) if{ 10901 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Center_Pumps_L_On#(L:switch_109_a) ! if{ 10901 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Center_Pumps_L_Toggle#10901 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_Center_Pumps_R_Off#(L:switch_110_a) if{ 11001 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Center_Pumps_R_On#(L:switch_110_a) ! if{ 11001 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Center_Pumps_R_Toggle#11001 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_Crossfeed_Aft_Off#(L:switch_108_a) if{ 10801 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Crossfeed_Aft_On#(L:switch_108_a) ! if{ 10801 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Crossfeed_Aft_Toggle#10801 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_Crossfeed_Fwd_Off#(L:switch_107_a) if{ 10701 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Crossfeed_Fwd_On#(L:switch_107_a) ! if{ 10701 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Crossfeed_Fwd_Toggle#10701 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_Jettison_Arm_Off#(L:switch_102_a) if{ 10201 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_Arm_On#(L:switch_102_a) ! if{ 10201 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_Arm_Toggle#10201 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_Jettison_L_Nozzle_Off#(L:switch_97_a) if{ 9701 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_L_Nozzle_On#(L:switch_97_a) ! if{ 9701 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_L_Nozzle_Switch_Guard_Close#(L:switch_98_a) if{ 9801 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_L_Nozzle_Switch_Guard_Open#(L:switch_98_a) ! if{ 9801 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_L_Nozzle_Switch_Guard_Toggle#9801 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_Jettison_L_Nozzle_Toggle#9701 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_Jettison_R_Nozzle_Off#(L:switch_99_a) if{ 9901 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_R_Nozzle_On#(L:switch_99_a) ! if{ 9901 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_R_Nozzle_Switch_Guard_Close#(L:switch_100_a) if{ 10001 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_R_Nozzle_Switch_Guard_Open#(L:switch_100_a) ! if{ 10001 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_Jettison_R_Nozzle_Switch_Guard_Toggle#10001 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_Jettison_R_Nozzle_Toggle#9901 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_L_Pumps_Aft_Off#(L:switch_105_a) if{ 10501 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_L_Pumps_Aft_On#(L:switch_105_a) ! if{ 10501 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_L_Pumps_Aft_Toggle#10501 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_L_Pumps_Fwd_Off#(L:switch_103_a) if{ 10301 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_L_Pumps_Fwd_On#(L:switch_103_a) ! if{ 10301 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_L_Pumps_Fwd_Toggle#10301 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_R_Pumps_Aft_Off#(L:switch_106_a) if{ 10601 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_R_Pumps_Aft_On#(L:switch_106_a) ! if{ 10601 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_R_Pumps_Aft_Toggle#10601 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_R_Pumps_Fwd_Off#(L:switch_104_a) if{ 10401 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_R_Pumps_Fwd_On#(L:switch_104_a) ! if{ 10401 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_R_Pumps_Fwd_Toggle#10401 (>K:ROTOR_BRAKE)
PMDG_B777_Fuel_To_Remain_Dec#(L:switch_1011_a, number) 50 > if{ (L:FuelToRemainRotate, number) 5 - -50 max (>L:FuelToRemainRotate, number) }
PMDG_B777_Fuel_To_Remain_Inc#(L:switch_1011_a, number) 50 > if{ (L:FuelToRemainRotate, number) 5 + 50 min (>L:FuelToRemainRotate, number) }
PMDG_B777_Fuel_to_Remain_Off#(L:switch_1011_a) if{ 101101 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_to_Remain_On#(L:switch_1011_a) ! if{ 101101 (>K:ROTOR_BRAKE) }
PMDG_B777_Fuel_to_Remain_Toggle#101101 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Gear
PMDG_B777_Autobrake_1#30 (L:switch_292_a) - 10 div s0 :1 l0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Autobrake_2#40 (L:switch_292_a) - 10 div s0 :1 l0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Autobrake_3#50 (L:switch_292_a) - 10 div s0 :1 l0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Autobrake_4#60 (L:switch_292_a) - 10 div s0 :1 l0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Autobrake_Dec#29208 (>K:ROTOR_BRAKE)
PMDG_B777_Autobrake_Disarm#20 (L:switch_292_a) - 10 div s0 :1 l0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Autobrake_Inc#29207 (>K:ROTOR_BRAKE)
PMDG_B777_Autobrake_Max_Auto#70 (L:switch_292_a) - 10 div s0 :1 l0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Autobrake_Off#10 (L:switch_292_a) - 10 div s0 :1 l0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Autobrake_RTO#0 (L:switch_292_a) - 10 div s0 :1 l0 0 > if{ 29207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 29208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_MIP_ALTN_GEAR_Press#29301 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_ALTN_GEAR_Release#29304 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_GEAR_OVRD_GUARD_Toggle#30001 (>K:ROTOR_BRAKE) 
PMDG_B777_MIP_GEAR_OVRD_Toggle#29901 (>K:ROTOR_BRAKE) 
PMDG_B777_PARKING_BRAKE_LEVER_PULL#51501 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Hydraulic
PMDG_B777_C1_Air_Demand_Pump_Auto_#50 (L:switch_36_a) - 50 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_C1_Air_Demand_Pump_Dec#3608 (>K:ROTOR_BRAKE)
PMDG_B777_C1_Air_Demand_Pump_Inc#3607 (>K:ROTOR_BRAKE)
PMDG_B777_C1_Air_Demand_Pump_Off#0 (L:switch_36_a) - 50 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_C1_Air_Demand_Pump_On#100 (L:switch_36_a) - 50 div s0 :1 l0 0 > if{ 3607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_C1_Elec_Primary_Pump_Off#(L:switch_40_a) if{ 4001 (>K:ROTOR_BRAKE) }
PMDG_B777_C1_Elec_Primary_Pump_On#(L:switch_40_a) ! if{ 4001 (>K:ROTOR_BRAKE) }
PMDG_B777_C1_Elec_Primary_Pump_Toggle#4001 (>K:ROTOR_BRAKE)
PMDG_B777_C2_Air_Demand_Pump_Auto_#50 (L:switch_37_a) - 50 div s0 :1 l0 0 > if{ 3707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_C2_Air_Demand_Pump_Dec#3708 (>K:ROTOR_BRAKE)
PMDG_B777_C2_Air_Demand_Pump_Inc#3707 (>K:ROTOR_BRAKE)
PMDG_B777_C2_Air_Demand_Pump_Off#0 (L:switch_37_a) - 50 div s0 :1 l0 0 > if{ 3707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_C2_Air_Demand_Pump_On#100 (L:switch_37_a) - 50 div s0 :1 l0 0 > if{ 3707 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3708 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_C2_Elec_Primary_Pump_Off#(L:switch_41_a) if{ 4101 (>K:ROTOR_BRAKE) }
PMDG_B777_C2_Elec_Primary_Pump_On#(L:switch_41_a) ! if{ 4101 (>K:ROTOR_BRAKE) }
PMDG_B777_C2_Elec_Primary_Pump_Toggle#4101 (>K:ROTOR_BRAKE)
PMDG_B777_L_Elec_Demand_Pump_Auto_#50 (L:switch_35_a) - 50 div s0 :1 l0 0 > if{ 3507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_L_Elec_Demand_Pump_Dec#3508 (>K:ROTOR_BRAKE)
PMDG_B777_L_Elec_Demand_Pump_Inc#3507 (>K:ROTOR_BRAKE)
PMDG_B777_L_Elec_Demand_Pump_Off#0 (L:switch_35_a) - 50 div s0 :1 l0 0 > if{ 3507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_L_Elec_Demand_Pump_On#100 (L:switch_35_a) - 50 div s0 :1 l0 0 > if{ 3507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_L_Eng_Primary_Pump_Off#(L:switch_39_a) if{ 3901 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Eng_Primary_Pump_On#(L:switch_39_a) ! if{ 3901 (>K:ROTOR_BRAKE) }
PMDG_B777_L_Eng_Primary_Pump_Toggle#3901 (>K:ROTOR_BRAKE)
PMDG_B777_R_Elec_Demand_Pump_Auto_#50 (L:switch_38_a) - 50 div s0 :1 l0 0 > if{ 3807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Elec_Demand_Pump_Dec#3808 (>K:ROTOR_BRAKE)
PMDG_B777_R_Elec_Demand_Pump_Inc#3807 (>K:ROTOR_BRAKE)
PMDG_B777_R_Elec_Demand_Pump_Off#0 (L:switch_38_a) - 50 div s0 :1 l0 0 > if{ 3807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Elec_Demand_Pump_On#100 (L:switch_38_a) - 50 div s0 :1 l0 0 > if{ 3807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Eng_Primary_Pump_Off#(L:switch_42_a) if{ 4201 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Eng_Primary_Pump_On#(L:switch_42_a) ! if{ 4201 (>K:ROTOR_BRAKE) }
PMDG_B777_R_Eng_Primary_Pump_Toggle#4201 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Lights
PMDG_B777_FWD_LEFT_FLOOD_Brightness_Knob_Dec#(L:LEFT_FLOOD_LIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_FLOOD_LIGHT_CONTROL)
PMDG_B777_FWD_LEFT_FLOOD_Brightness_Knob_Inc#(L:LEFT_FLOOD_LIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_FLOOD_LIGHT_CONTROL)
PMDG_B777_FWD_LEFT_INBD_DSPL_Brightness_Knob_Dec#(L:LEFT_INBD_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_INBD_BRIGHT_CONTROL)
PMDG_B777_FWD_LEFT_INBD_DSPL_Brightness_Knob_Inc#(L:LEFT_INBD_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_INBD_BRIGHT_CONTROL)
PMDG_B777_FWD_LEFT_INBD_TERR_DSPL_Brightness_Knob_Dec#(L:LEFT_INBD_TERR_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_INBD_TERR_BRIGHT_CONTROL)
PMDG_B777_FWD_LEFT_INBD_TERR_DSPL_Brightness_Knob_Inc#(L:LEFT_INBD_TERR_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_INBD_TERR_BRIGHT_CONTROL)
PMDG_B777_FWD_LEFT_OUTBD_DSPL_Brightness_Knob_Dec#(L:LEFT_OUTBD_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_OUTBD_BRIGHT_CONTROL)
PMDG_B777_FWD_LEFT_OUTBD_DSPL_Brightness_Knob_Inc#(L:LEFT_OUTBD_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_OUTBD_BRIGHT_CONTROL)
PMDG_B777_FWD_LEFT_PNL_Brightness_Knob_Dec#(L:LEFT_PANEL_LIGHT_CONTROL) 5 - 0 max 100 min (>L:LEFT_PANEL_LIGHT_CONTROL)
PMDG_B777_FWD_LEFT_PNL_Brightness_Knob_Dec#(L:RIGHT_PANEL_LIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_PANEL_LIGHT_CONTROL)
PMDG_B777_FWD_LEFT_PNL_Brightness_Knob_Inc#(L:LEFT_PANEL_LIGHT_CONTROL) 5 + 0 max 100 min (>L:LEFT_PANEL_LIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_FLOOD_Brightness_Knob_Dec#(L:RIGHT_FLOOD_LIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_FLOOD_LIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_FLOOD_Brightness_Knob_Inc#(L:RIGHT_FLOOD_LIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_FLOOD_LIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_INBD_DSPL_Brightness_Knob_Dec#(L:RIGHT_INBD_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_INBD_BRIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_INBD_DSPL_Brightness_Knob_Inc#(L:RIGHT_INBD_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_INBD_BRIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_INBD_TERR_DSPL_Brightness_Knob_Dec#(L:RIGHT_INBD_TERR_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_INBD_TERR_BRIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_INBD_TERR_DSPL_Brightness_Knob_Inc#(L:RIGHT_INBD_TERR_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_INBD_TERR_BRIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_OUTBD_DSPL_Brightness_Knob_Dec#(L:RIGHT_OUTBD_BRIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_OUTBD_BRIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_OUTBD_DSPL_Brightness_Knob_Inc#(L:RIGHT_OUTBD_BRIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_OUTBD_BRIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_PNL_Brightness_Knob_Dec#(L:RIGHT_PANEL_LIGHT_CONTROL) 5 - 0 max 100 min (>L:RIGHT_PANEL_LIGHT_CONTROL)
PMDG_B777_FWD_RIGHT_PNL_Brightness_Knob_Inc#(L:RIGHT_PANEL_LIGHT_CONTROL) 5 + 0 max 100 min (>L:RIGHT_PANEL_LIGHT_CONTROL)
PMDG_B777_Glareshield_PNL_Light_Brightness_Dec#(L:OH_GS_PANEL_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_GS_PANEL_LIGHT_CONTROL)
PMDG_B777_Glareshield_PNL_Light_Brightness_Inc#(L:OH_GS_PANEL_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_GS_PANEL_LIGHT_CONTROL)
PMDG_B777_Nav_Light_Toggle#11501 (>K:ROTOR_BRAKE)
PMDG_B777_Taxi_Lights_Toggle#12101 (>K:ROTOR_BRAKE)
PMDG_B777_Toggle_All_Landing_Lights#234101 (>K:ROTOR_BRAKE)
PMDG_B777_Aisle_Stand_Flood_Light_Brightness_Dec#(L:PED_FLOOD_LIGHT_CONTROL, number) 1 - 0 max (>L:PED_FLOOD_LIGHT_CONTROL)
PMDG_B777_Aisle_Stand_Flood_Light_Brightness_Inc#(L:PED_FLOOD_LIGHT_CONTROL, number) 1 + 100 min (>L:PED_FLOOD_LIGHT_CONTROL)
PMDG_B777_Aisle_Stand_Panel_Light_Brightness_Dec#(L:PED_PANEL_LIGHT_CONTROL, number) 1 - 0 max (>L:PED_PANEL_LIGHT_CONTROL)
PMDG_B777_Aisle_Stand_Panel_Light_Brightness_Inc#(L:PED_PANEL_LIGHT_CONTROL, number) 1 + 100 min (>L:PED_PANEL_LIGHT_CONTROL)
PMDG_B777_Beacon_Light_Off#(L:switch_114_a) if{ 11401 (>K:ROTOR_BRAKE) }
PMDG_B777_Beacon_Light_On#(L:switch_114_a) ! if{ 11401 (>K:ROTOR_BRAKE) }
PMDG_B777_Beacon_Light_Toggle#11401 (>K:ROTOR_BRAKE)
PMDG_B777_CB_Flood_Light_Brightness_Dec#(L:OH_CB_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_CB_LIGHT_CONTROL)
PMDG_B777_CB_Flood_Light_Brightness_Inc#(L:OH_CB_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_CB_LIGHT_CONTROL)
PMDG_B777_Camera_Lts_Off#(L:switch_19_a) if{ 1901 (>K:ROTOR_BRAKE) }
PMDG_B777_Camera_Lts_On#(L:switch_19_a) ! if{ 1901 (>K:ROTOR_BRAKE) }
PMDG_B777_Camera_Lts_Toggle#1901 (>K:ROTOR_BRAKE)
PMDG_B777_Dome_Flood_Light_Brightness_Dec#(L:OH_DOME_SWITCH, number) 1 - 0 max (>L:OH_DOME_SWITCH)
PMDG_B777_Dome_Flood_Light_Brightness_Inc#(L:OH_DOME_SWITCH, number) 1 + 100 min (>L:OH_DOME_SWITCH)
PMDG_B777_Emer_Lights_Armed#50 (L:switch_49_a) - 50 div s0 :1 l0 0 > if{ 4907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 4908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Emer_Lights_Dec#4908 (>K:ROTOR_BRAKE)
PMDG_B777_Emer_Lights_Inc#4907 (>K:ROTOR_BRAKE)
PMDG_B777_Emer_Lights_Off#0 (L:switch_49_a) - 50 div s0 :1 l0 0 > if{ 4907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 4908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Emer_Lights_On#100 (L:switch_49_a) - 50 div s0 :1 l0 0 > if{ 4907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 4908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Emer_Lights_Switch_Guard_Close#(L:switch_50_a) if{ 5001 (>K:ROTOR_BRAKE) }
PMDG_B777_Emer_Lights_Switch_Guard_Open#(L:switch_50_a) ! if{ 5001 (>K:ROTOR_BRAKE) }
PMDG_B777_Emer_Lights_Switch_Guard_Toggle#5001 (>K:ROTOR_BRAKE)
PMDG_B777_Floor_Lights_Brt#0 (L:switch_735_a) - 50 div s0 :1 l0 0 > if{ 73501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 73502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Floor_Lights_Dec#73502 (>K:ROTOR_BRAKE)
PMDG_B777_Floor_Lights_Dim#100 (L:switch_735_a) - 50 div s0 :1 l0 0 > if{ 73501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 73502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Floor_Lights_Inc#73501 (>K:ROTOR_BRAKE)
PMDG_B777_Floor_Lights_Off#50 (L:switch_735_a) - 50 div s0 :1 l0 0 > if{ 73501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 73502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Glareshield_Flood_Light_Brightness_Dec#(L:OH_GS_FLOOD_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_GS_FLOOD_LIGHT_CONTROL)
PMDG_B777_Glareshield_Flood_Light_Brightness_Inc#(L:OH_GS_FLOOD_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_GS_FLOOD_LIGHT_CONTROL)
PMDG_B777_Ind_Lts_Brt#50 (L:switch_118_a) - 50 div s0 :1 l0 0 > if{ 11808 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11807 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Ind_Lts_Dec#11808 (>K:ROTOR_BRAKE)
PMDG_B777_Ind_Lts_Dim#100 (L:switch_118_a) - 50 div s0 :1 l0 0 > if{ 11808 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11807 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Ind_Lts_Inc#11807 (>K:ROTOR_BRAKE)
PMDG_B777_Ind_Lts_Test#0 (L:switch_118_a) - 50 div s0 :1 l0 0 > if{ 11808 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 11807 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Landing_Light_Left_Off#(L:switch_22_a) if{ 2201 (>K:ROTOR_BRAKE) }
PMDG_B777_Landing_Light_Left_On#(L:switch_22_a) ! if{ 2201 (>K:ROTOR_BRAKE) }
PMDG_B777_Landing_Light_Left_Toggle#2201 (>K:ROTOR_BRAKE)
PMDG_B777_Landing_Light_Nose_Off#(L:switch_23_a) if{ 2301 (>K:ROTOR_BRAKE) }
PMDG_B777_Landing_Light_Nose_On#(L:switch_23_a) ! if{ 2301 (>K:ROTOR_BRAKE) }
PMDG_B777_Landing_Light_Nose_Toggle#2301 (>K:ROTOR_BRAKE)
PMDG_B777_Landing_Light_Right_Off#(L:switch_24_a) if{ 2401 (>K:ROTOR_BRAKE) }
PMDG_B777_Landing_Light_Right_On#(L:switch_24_a) ! if{ 2401 (>K:ROTOR_BRAKE) }
PMDG_B777_Landing_Light_Right_Toggle#2401 (>K:ROTOR_BRAKE)
PMDG_B777_Logo_Light_Off#(L:switch_116_a) if{ 11601 (>K:ROTOR_BRAKE) }
PMDG_B777_Logo_Light_On#(L:switch_116_a) ! if{ 11601 (>K:ROTOR_BRAKE) }
PMDG_B777_Logo_Light_Toggle#11601 (>K:ROTOR_BRAKE)
PMDG_B777_Master_Bright_Off#(L:switch_2801_a) if{ 280101 (>K:ROTOR_BRAKE) }
PMDG_B777_Master_Bright_On#(L:switch_2801_a) ! if{ 280101 (>K:ROTOR_BRAKE) }
PMDG_B777_Master_Bright_Toggle#280101 (>K:ROTOR_BRAKE)
PMDG_B777_Master_Brightness_Dec#(L:OH_MASTER_BRIGHT_ROTATE, number) 1 - 0 max (>L:OH_MASTER_BRIGHT_ROTATE)
PMDG_B777_Master_Brightness_Inc#(L:OH_MASTER_BRIGHT_ROTATE, number) 1 + 100 min (>L:OH_MASTER_BRIGHT_ROTATE)
PMDG_B777_Nav_Light_Off#(L:switch_115_a) if{ 11501 (>K:ROTOR_BRAKE) }
PMDG_B777_Nav_Light_On#(L:switch_115_a) ! if{ 11501 (>K:ROTOR_BRAKE) }
PMDG_B777_Ovhd_Flood_Light_Brightness_Dec#(L:OH_PANEL_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_PANEL_LIGHT_CONTROL)
PMDG_B777_Ovhd_Flood_Light_Brightness_Inc#(L:OH_PANEL_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_PANEL_LIGHT_CONTROL)
PMDG_B777_Panel_Flood_Light_Brightness_Dec#(L:OH_GS_PANEL_LIGHT_CONTROL, number) 1 - 0 max (>L:OH_GS_PANEL_LIGHT_CONTROL)
PMDG_B777_Panel_Flood_Light_Brightness_Inc#(L:OH_GS_PANEL_LIGHT_CONTROL, number) 1 + 100 min (>L:OH_GS_PANEL_LIGHT_CONTROL)
PMDG_B777_Pedestal_Lower_Display_Brightness_Dec#(L:PED_LOWER_BRIGHT_CONTROL, number) 1 - 0 max (>L:PED_LOWER_BRIGHT_CONTROL)
PMDG_B777_Pedestal_Lower_Display_Brightness_Inc#(L:PED_LOWER_BRIGHT_CONTROL, number) 1 + 100 min (>L:PED_LOWER_BRIGHT_CONTROL)
PMDG_B777_Pedestal_Lower_Terr_Display_Brightness_Dec#(L:PED_LOWER_TERR_BRIGHT_CONTROL, number) 1 - 0 max (>L:PED_LOWER_TERR_BRIGHT_CONTROL)
PMDG_B777_Pedestal_Lower_Terr_Display_Brightness_Inc#(L:PED_LOWER_TERR_BRIGHT_CONTROL, number) 1 + 100 min (>L:PED_LOWER_TERR_BRIGHT_CONTROL)
PMDG_B777_Pedestal_Upper_Display_Brightness_Dec#(L:PED_UPPER_BRIGHT_CONTROL, number) 1 - 0 max (>L:PED_UPPER_BRIGHT_CONTROL)
PMDG_B777_Pedestal_Upper_Display_Brightness_Inc#(L:PED_UPPER_BRIGHT_CONTROL, number) 1 + 100 min (>L:PED_UPPER_BRIGHT_CONTROL)
PMDG_B777_Runway_Turnoff_Light_L_Off#(L:switch_119_a) if{ 11901 (>K:ROTOR_BRAKE) }
PMDG_B777_Runway_Turnoff_Light_L_On#(L:switch_119_a) ! if{ 11901 (>K:ROTOR_BRAKE) }
PMDG_B777_Runway_Turnoff_Light_L_Toggle#11901 (>K:ROTOR_BRAKE)
PMDG_B777_Runway_Turnoff_Light_R_Off#(L:switch_120_a) if{ 12001 (>K:ROTOR_BRAKE) }
PMDG_B777_Runway_Turnoff_Light_R_On#(L:switch_120_a) ! if{ 12001 (>K:ROTOR_BRAKE) }
PMDG_B777_Runway_Turnoff_Light_R_Toggle#12001 (>K:ROTOR_BRAKE)
PMDG_B777_Storm_Off#(L:switch_27_a) if{ 2701 (>K:ROTOR_BRAKE) }
PMDG_B777_Storm_On#(L:switch_27_a) ! if{ 2701 (>K:ROTOR_BRAKE) }
PMDG_B777_Storm_Toggle#2701 (>K:ROTOR_BRAKE)
PMDG_B777_Strobe_Lights_Off#(L:switch_122_a) if{ 12201 (>K:ROTOR_BRAKE) }
PMDG_B777_Strobe_Lights_On#(L:switch_122_a) ! if{ 12201 (>K:ROTOR_BRAKE) }
PMDG_B777_Strobe_Lights_Toggle#12201 (>K:ROTOR_BRAKE)
PMDG_B777_Taxi_Lights_Off#(L:switch_121_a) if{ 12101 (>K:ROTOR_BRAKE) }
PMDG_B777_Taxi_Lights_On#(L:switch_121_a) ! if{ 12101 (>K:ROTOR_BRAKE) }
PMDG_B777_Wing_Light_Off#(L:switch_117_a) if{ 11701 (>K:ROTOR_BRAKE) }
PMDG_B777_Wing_Light_On#(L:switch_117_a) ! if{ 11701 (>K:ROTOR_BRAKE) }
PMDG_B777_Wing_Light_Toggle#11701 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/MCDU
PMDG_B777_CDU_CENTER_BRT_Release#72504 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_BRT_SWITCH_DEC#72501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_BRT_SWITCH_INC#72502 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_CLR_Press#72001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_CLR_Release#72004 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_BRT_Release#40004 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_BRT_SWITCH_DEC#40001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_BRT_SWITCH_INC#40002 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_CLR_Press#39501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_CLR_Release#39504 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_BRT_Release#47304 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_BRT_SWITCH_DEC#47301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_BRT_SWITCH_INC#47302 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_CLR_Press#46801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_CLR_Release#46804 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_A#69101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_B#69201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_C#69301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_D#69401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_DECIMAL#68801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_DEL#71801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_DEP_ARR#66701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_E#69501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_EXEC#67401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_F#69601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_FIX#67001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_FMC_COMM#672101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_G#69701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_H#69801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_HOLD#67201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_I#69901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_INIT_REF#66501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_J#70001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_K#70101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_L#70201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_L1#65301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_L2#65401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_L3#65501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_L4#65601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_L5#65701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_L6#65801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_LEGS#67101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_M#70301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_MENU#67501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_N#70401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NAV_RAD#67601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NEXT_PAGE#67801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_0#68901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_1#67901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_2#68001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_3#68101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_4#68201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_5#68301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_6#68401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_7#68501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_8#68601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_NUM_9#68701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_O#70501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_P#70601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_PLAN#66801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_PLUS_MINUS#69001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_PREV_PAGE#67701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_PROG#67301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_Q#70701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_R#70801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_R1#65901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_R2#66001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_R3#66101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_R4#66201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_R5#66301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_R6#66401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_RTE#66601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_S#70901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_SLASH#71901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_SP#71701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_T#71001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_U#71101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_V#71201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_VNAV#66901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_W#71301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_X#71401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_Y#71501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_CENTER_KEY_Z#71601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_A#36601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_B#36701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_C#36801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_D#36901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_DECIMAL#36301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_DEL#39301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_DEP_ARR#34201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_E#37001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_EXEC#34901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_F#37101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_FIX#34501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_FMC_COMM#347101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_G#37201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_H#37301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_HOLD#34701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_I#37401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_INIT_REF#34001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_J#37501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_K#37601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_L#37701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_L1#32801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_L2#32901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_L3#33001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_L4#33101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_L5#33201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_L6#33301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_LEGS#34601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_M#37801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_MENU#35001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_N#37901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NAV_RAD#35101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NEXT_PAGE#35301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_0#36401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_1#35401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_2#35501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_3#35601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_4#35701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_5#35801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_6#35901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_7#36001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_8#36101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_NUM_9#36201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_O#38001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_P#38101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_PLAN#34301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_PLUS_MINUS#36501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_PREV_PAGE#35201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_PROG#34801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_Q#38201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_R#38301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_R1#33401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_R2#33501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_R3#33601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_R4#33701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_R5#33801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_R6#33901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_RTE#34101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_S#38401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_SLASH#39401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_SP#39201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_T#38501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_U#38601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_V#38701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_VNAV#34401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_W#38801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_X#38901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_Y#39001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_LEFT_KEY_Z#39101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_A#43901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_B#44001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_C#44101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_D#44201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_DECIMAL#43601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_DEL#46601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_DEP_ARR#41501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_E#44301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_EXEC#42201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_F#44401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_FIX#41801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_FMC_COMM#420101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_G#44501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_H#44601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_HOLD#42001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_I#44701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_INIT_REF#41301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_J#44801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_K#44901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_L#45001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_L1#40101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_L2#40201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_L3#40301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_L4#40401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_L5#40501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_L6#40601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_LEGS#41901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_M#45101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_MENU#42301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_N#45201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NAV_RAD#42401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NEXT_PAGE#42601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_0#43701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_1#42701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_2#42801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_3#42901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_4#43001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_5#43101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_6#43201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_7#43301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_8#43401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_NUM_9#43501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_O#45301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_P#45401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_PLAN#41601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_PLUS_MINUS#43801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_PREV_PAGE#42501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_PROG#42101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_Q#45501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_R#45601 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_R1#40701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_R2#40801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_R3#40901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_R4#41001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_R5#41101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_R6#41201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_RTE#41401 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_S#45701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_SLASH#46701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_SP#46501 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_T#45801 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_U#45901 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_V#46001 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_VNAV#41701 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_W#46101 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_X#46201 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_Y#46301 (>K:ROTOR_BRAKE)
PMDG_B777_CDU_RIGHT_KEY_Z#46401 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Miscellaneous
PMDG_B777_CCD_L_INBD_Switch_Press#48301 (>K:ROTOR_BRAKE)
PMDG_B777_CCD_L_LWR_CTR_Switch_Press#48401 (>K:ROTOR_BRAKE)
PMDG_B777_CCD_L_SIDE_Switch_Press#48201 (>K:ROTOR_BRAKE)
PMDG_B777_CCD_R_INBD_Switch_Press#49001 (>K:ROTOR_BRAKE)
PMDG_B777_CCD_R_LWR_CTR_Switch_Press#48901 (>K:ROTOR_BRAKE)
PMDG_B777_CCD_R_SIDE_Switch_Press#49101 (>K:ROTOR_BRAKE)
PMDG_B777_GS_LEFT_CLOCK_Button_Press#16501 (>K:ROTOR_BRAKE)
PMDG_B777_GS_LEFT_MAP_Knob_Toggle#16601 (>K:ROTOR_BRAKE)
PMDG_B777_GS_LEFT_MIC_Button_Press#16701 (>K:ROTOR_BRAKE)
PMDG_B777_GS_RIGHT_CLOCK_Button_Press#27501 (>K:ROTOR_BRAKE)
PMDG_B777_GS_RIGHT_MAP_Knob_Toggle#27401 (>K:ROTOR_BRAKE)
PMDG_B777_GS_RIGHT_MIC_Button_Press#27301 (>K:ROTOR_BRAKE)
PMDG_B777_HEATER_LEFT_FOOT_Knob_High#100 (L:switch_319_a) - 50 div s0 :1 l0 0 > if{ 31907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_HEATER_LEFT_FOOT_Knob_Low#50 (L:switch_319_a) - 50 div s0 :1 l0 0 > if{ 31907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_HEATER_LEFT_FOOT_Knob_Off#0 (L:switch_319_a) - 50 div s0 :1 l0 0 > if{ 31907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 31908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_HEATER_LEFT_SHOULDER_Knob_Dec#(L:LEFT_SHOULDER_HEATER) 5 - 0 max 100 min (>L:LEFT_SHOULDER_HEATER)
PMDG_B777_HEATER_LEFT_SHOULDER_Knob_Inc#(L:LEFT_SHOULDER_HEATER) 5 + 0 max 100 min (>L:LEFT_SHOULDER_HEATER)
PMDG_B777_HEATER_RIGHT_FOOT_Knob_High#100 (L:switch_288_a) - 50 div s0 :1 l0 0 > if{ 28807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 28808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_HEATER_RIGHT_FOOT_Knob_Low#50 (L:switch_288_a) - 50 div s0 :1 l0 0 > if{ 28807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 28808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_HEATER_RIGHT_FOOT_Knob_Off#0 (L:switch_288_a) - 50 div s0 :1 l0 0 > if{ 28807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 28808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_HEATER_RIGHT_SHOULDER_Knob_Dec#(L:RIGHT_SHOULDER_HEATER) 5 + 0 max 100 min (>L:RIGHT_SHOULDER_HEATER)
PMDG_B777_HEATER_RIGHT_SHOULDER_Knob_Inc#(L:RIGHT_SHOULDER_HEATER) 5 + 0 max 100 min (>L:RIGHT_SHOULDER_HEATER)
PMDG_B777_MIP_CLOCK_ET_HLD#50 (L:switch_173_a) - 50 div s0 :1 l0 0 > if{ 17307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 17308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B777_MIP_CLOCK_ET_RESET#0 (L:switch_173_a) - 50 div s0 :1 l0 0 > if{ 17307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 17308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B777_MIP_CLOCK_ET_RUN#100 (L:switch_173_a) - 50 div s0 :1 l0 0 > if{ 17307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 17308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 } 
PMDG_B777_L_Wiper_Dec#2008 (>K:ROTOR_BRAKE)
PMDG_B777_L_Wiper_High#30 (L:switch_20_a) - 10 div s0 :1 l0 0 > if{ 2007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_L_Wiper_Inc#2007 (>K:ROTOR_BRAKE)
PMDG_B777_L_Wiper_Int#10 (L:switch_20_a) - 10 div s0 :1 l0 0 > if{ 2007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_L_Wiper_Low#20 (L:switch_20_a) - 10 div s0 :1 l0 0 > if{ 2007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_L_Wiper_Off#0 (L:switch_20_a) - 10 div s0 :1 l0 0 > if{ 2007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Wiper_Dec#12308 (>K:ROTOR_BRAKE)
PMDG_B777_R_Wiper_High#30 (L:switch_123_a) - 10 div s0 :1 l0 0 > if{ 12307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Wiper_Inc#12307 (>K:ROTOR_BRAKE)
PMDG_B777_R_Wiper_Int#10 (L:switch_123_a) - 10 div s0 :1 l0 0 > if{ 12307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Wiper_Low#20 (L:switch_123_a) - 10 div s0 :1 l0 0 > if{ 12307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_R_Wiper_Off#0 (L:switch_123_a) - 10 div s0 :1 l0 0 > if{ 12307 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 12308 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Serv_Intph_Off#(L:switch_51_a) if{ 5101 (>K:ROTOR_BRAKE) }
PMDG_B777_Serv_Intph_On#(L:switch_51_a) ! if{ 5101 (>K:ROTOR_BRAKE) }
PMDG_B777_Serv_Intph_Toggle#5101 (>K:ROTOR_BRAKE)
PMDG_B777_Voice_Recorder_Auto#(L:voicerec_switch) if{ 100 (>L:voicerec_switch) }
PMDG_B777_Voice_Recorder_On#(L:voicerec_switch) ! if{ 100 (>L:voicerec_switch) }
PMDG_B777_Voice_Recorder_Toggle#(L:voicerec_switch) ! if{ 100 (>L:voicerec_switch) } els{ 0 (>L:voicerec_switch) }
//PMDG/B777 300ER/Navigation
PMDG_B777_ATC_TCAS_Mode_ALT_RPTG_OFF#10 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_Alt_Source_Altn#(L:switch_743_a) ! if{ 74301 (>K:ROTOR_BRAKE) }
PMDG_B777_ATC_Alt_Source_Norm#(L:switch_743_a) if{ 74301 (>K:ROTOR_BRAKE) }
PMDG_B777_ATC_Alt_Source_Toggle#74301 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Code_Selector_Left_Inner_Dec#74508 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Code_Selector_Left_Inner_Inc#74507 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Code_Selector_Left_Outer_Dec#74408 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Code_Selector_Left_Outer_Inc#74407 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Code_Selector_Right_Inner_Dec#74808 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Code_Selector_Right_Inner_Inc#74807 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Code_Selector_Right_Outer_Dec#74708 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Code_Selector_Right_Outer_Inc#74707 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Ident_Press#74601 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Left_ABS_REL_Abs#(L:switch_7432_a) if{ 743201 (>K:ROTOR_BRAKE) }
PMDG_B777_ATC_Left_ABS_REL_Rel#(L:switch_7432_a) ! if{ 743201 (>K:ROTOR_BRAKE) }
PMDG_B777_ATC_Left_ABS_REL_Toggle#743201 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Left_ABV_BLW_ABV#0 (L:switch_7431_a) - 50 div s0 :1 l0 0 > if{ 743101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_Left_ABV_BLW_BLW#100 (L:switch_7431_a) - 50 div s0 :1 l0 0 > if{ 743101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_Left_ABV_BLW_Dec#743102 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Left_ABV_BLW_Inc#743101 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Left_ABV_BLW_N#50 (L:switch_7431_a) - 50 div s0 :1 l0 0 > if{ 743101 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743102 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_Right_ABS_REL_Abs#(L:switch_7434_a) if{ 743401 (>K:ROTOR_BRAKE) }
PMDG_B777_ATC_Right_ABS_REL_Rel#(L:switch_7434_a) ! if{ 743401 (>K:ROTOR_BRAKE) }
PMDG_B777_ATC_Right_ABS_REL_Toggle#743401 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Right_ABV_BLW_ABV#0 (L:switch_7433_a) - 50 div s0 :1 l0 0 > if{ 743301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_Right_ABV_BLW_BLW#100 (L:switch_7433_a) - 50 div s0 :1 l0 0 > if{ 743301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_Right_ABV_BLW_Dec#743302 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Right_ABV_BLW_Inc#743301 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_Right_ABV_BLW_N#50 (L:switch_7433_a) - 50 div s0 :1 l0 0 > if{ 743301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 743302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_TCAS_Mode_Dec#74908 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_TCAS_Mode_Inc#74907 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_TCAS_Mode_OFF#10 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_TCAS_Mode_STBY#0 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_TCAS_Mode_TA_ONLY#30 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_TCAS_Mode_TARA#40 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_TCAS_Mode_XPNDR#20 (L:switch_749_a) - 10 div s0 :1 l0 0 > if{ 74907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 74908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_ATC_TCAS_Test_Press#749101 (>K:ROTOR_BRAKE)
PMDG_B777_ATC_XPNDR_L_R_L#(L:switch_751_a) if{ 75101 (>K:ROTOR_BRAKE) }
PMDG_B777_ATC_XPNDR_L_R_R#(L:switch_751_a) ! if{ 75101 (>K:ROTOR_BRAKE) }
PMDG_B777_ATC_XPNDR_L_R_Toggle#75101 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Radio
PMDG_B777_COM1_FREQ_FRAC_DEC#52808 (>K:ROTOR_BRAKE)
PMDG_B777_COM1_FREQ_FRAC_INC#52807 (>K:ROTOR_BRAKE)
PMDG_B777_COM1_FREQ_WHOLE_DEC#52708 (>K:ROTOR_BRAKE)
PMDG_B777_COM1_FREQ_WHOLE_INC#52707 (>K:ROTOR_BRAKE)
PMDG_B777_COM1_TRANSFER_SWITCH#52601 (>K:ROTOR_BRAKE)
PMDG_B777_COM2_FREQ_FRAC_DEC#79908 (>K:ROTOR_BRAKE)
PMDG_B777_COM2_FREQ_FRAC_INC#79907 (>K:ROTOR_BRAKE)
PMDG_B777_COM2_FREQ_WHOLE_DEC#80008 (>K:ROTOR_BRAKE)
PMDG_B777_COM2_FREQ_WHOLE_INC#80007 (>K:ROTOR_BRAKE)
PMDG_B777_COM2_TRANSFER_SWITCH#80101 (>K:ROTOR_BRAKE)
PMDG_B777_COM3_FREQ_FRAC_DEC#59808 (>K:ROTOR_BRAKE)
PMDG_B777_COM3_FREQ_FRAC_INC#59807 (>K:ROTOR_BRAKE)
PMDG_B777_COM3_FREQ_WHOLE_DEC#59908 (>K:ROTOR_BRAKE)
PMDG_B777_COM3_FREQ_WHOLE_INC#59907 (>K:ROTOR_BRAKE)
PMDG_B777_COM3_TRANSFER_SWITCH#59701 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_APP_C#10 (L:switch_575_a) - 10 div s0 :1 l0 0 > if{ 57507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_APP_Dec#57508 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_APP_Inc#57507 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_APP_L#0 (L:switch_575_a) - 10 div s0 :1 l0 0 > if{ 57507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_APP_MKR#30 (L:switch_575_a) - 10 div s0 :1 l0 0 > if{ 57507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_APP_R#20 (L:switch_575_a) - 10 div s0 :1 l0 0 > if{ 57507 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57508 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_APP_Receive_Off#(L:switch_573_a) if{ 57301 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_APP_Receive_On#(L:switch_573_a) ! if{ 57301 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_APP_Receive_Toggle#57301 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_CAB_MIC_Selector_Press#54001 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_CAB_Receive_Off#(L:switch_552_a) if{ 55201 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_CAB_Receive_On#(L:switch_552_a) ! if{ 55201 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_CAB_Receive_Toggle#55201 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_FLT_MIC_Selector_Press#53901 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_FLT_Receive_Off#(L:switch_551_a) if{ 55101 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_FLT_Receive_On#(L:switch_551_a) ! if{ 55101 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_FLT_Receive_Toggle#55101 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_Filter_Select_B#50 (L:switch_572_a) - 50 div s0 :1 l0 0 > if{ 57201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_Filter_Select_Dec#57202 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_Filter_Select_Inc#57201 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_Filter_Select_R#100 (L:switch_572_a) - 50 div s0 :1 l0 0 > if{ 57201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_Filter_Select_V#0 (L:switch_572_a) - 50 div s0 :1 l0 0 > if{ 57201 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 57202 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_HF_L_MIC_Selector_Press#55501 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_HF_L_Receive_Off#(L:switch_565_a) if{ 56501 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_HF_L_Receive_On#(L:switch_565_a) ! if{ 56501 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_HF_L_Receive_Toggle#56501 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_HF_R_MIC_Selector_Press#55601 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_HF_R_Receive_Off#(L:switch_566_a) if{ 56601 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_HF_R_Receive_On#(L:switch_566_a) ! if{ 56601 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_HF_R_Receive_Toggle#56601 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_MIC_INT_-----#50 (L:switch_554_a) - 50 div s0 :1 l0 0 > if{ 55401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 55402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_MIC_INT_Dec#55402 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_MIC_INT_Inc#55401 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_MIC_INT_Int#100 (L:switch_554_a) - 50 div s0 :1 l0 0 > if{ 55401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 55402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_MIC_INT_Mic#0 (L:switch_554_a) - 50 div s0 :1 l0 0 > if{ 55401 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 55402 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_PA_MIC_Selector_Press#54101 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_PA_Receive_Off#(L:switch_553_a) if{ 55301 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_PA_Receive_On#(L:switch_553_a) ! if{ 55301 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_PA_Receive_Toggle#55301 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_SAT_1_MIC_Selector_Press#55701 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_SAT_1_Receive_Off#(L:switch_567_a) if{ 56701 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_SAT_1_Receive_On#(L:switch_567_a) ! if{ 56701 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_SAT_1_Receive_Toggle#56701 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_SAT_2_MIC_Selector_Press#55801 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_SAT_2_Receive_Off#(L:switch_568_a) if{ 56801 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_SAT_2_Receive_On#(L:switch_568_a) ! if{ 56801 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_SAT_2_Receive_Toggle#56801 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_Speaker_Off#(L:switch_564_a) if{ 56401 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_Speaker_On#(L:switch_564_a) ! if{ 56401 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_Speaker_Toggle#56401 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VHF_C_MIC_Selector_Press#53701 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VHF_C_Receive_Off#(L:switch_549_a) if{ 54901 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_VHF_C_Receive_On#(L:switch_549_a) ! if{ 54901 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_VHF_C_Receive_Toggle#54901 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VHF_L_MIC_Selector_Press#53601 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VHF_L_Receive_Off#(L:switch_548_a) if{ 54801 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_VHF_L_Receive_On#(L:switch_548_a) ! if{ 54801 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_VHF_L_Receive_Toggle#54801 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VHF_R_MIC_Selector_Press#53801 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VHF_R_Receive_Off#(L:switch_550_a) if{ 55001 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_VHF_R_Receive_On#(L:switch_550_a) ! if{ 55001 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_VHF_R_Receive_Toggle#55001 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VOR_ADF_ADF_L#20 (L:switch_569_a) - 10 div s0 :1 l0 0 > if{ 56907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 56908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_VOR_ADF_ADF_R#30 (L:switch_569_a) - 10 div s0 :1 l0 0 > if{ 56907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 56908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_VOR_ADF_Dec#56908 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VOR_ADF_Inc#56907 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VOR_ADF_Receive_Off#(L:switch_571_a) if{ 57101 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_VOR_ADF_Receive_On#(L:switch_571_a) ! if{ 57101 (>K:ROTOR_BRAKE) }
PMDG_B777_CPT_ACP_VOR_ADF_Receive_Toggle#57101 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_ACP_VOR_ADF_VOR_L#0 (L:switch_569_a) - 10 div s0 :1 l0 0 > if{ 56907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 56908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_ACP_VOR_ADF_VOR_R#10 (L:switch_569_a) - 10 div s0 :1 l0 0 > if{ 56907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 56908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_CPT_RMP_AM_Press#53401 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_RMP_HF_L_Press#53301 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_RMP_HF_R_Press#53501 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_RMP_HF_Sens_Dec#52508 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_RMP_HF_Sens_Inc#52507 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_RMP_PNL_Press#53201 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_RMP_VHF_C_Press#53001 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_RMP_VHF_L_Press#52901 (>K:ROTOR_BRAKE)
PMDG_B777_CPT_RMP_VHF_R_Press#53101 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_APP_C#10 (L:switch_752_a) - 10 div s0 :1 l0 0 > if{ 75207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_APP_Dec#75208 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_APP_Inc#75207 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_APP_L#0 (L:switch_752_a) - 10 div s0 :1 l0 0 > if{ 75207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_APP_MKR#30 (L:switch_752_a) - 10 div s0 :1 l0 0 > if{ 75207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_APP_R#20 (L:switch_752_a) - 10 div s0 :1 l0 0 > if{ 75207 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75208 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_APP_Receive_Off#(L:switch_754_a) if{ 75401 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_APP_Receive_On#(L:switch_754_a) ! if{ 75401 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_APP_Receive_Toggle#75401 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_CAB_MIC_Selector_Press#78701 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_CAB_Receive_Off#(L:switch_775_a) if{ 77501 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_CAB_Receive_On#(L:switch_775_a) ! if{ 77501 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_CAB_Receive_Toggle#77501 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_FLT_MIC_Selector_Press#78801 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_FLT_Receive_Off#(L:switch_776_a) if{ 77601 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_FLT_Receive_On#(L:switch_776_a) ! if{ 77601 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_FLT_Receive_Toggle#77601 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_Filter_Select_B#50 (L:switch_755_a) - 50 div s0 :1 l0 0 > if{ 75501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_Filter_Select_Dec#75502 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_Filter_Select_Inc#75501 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_Filter_Select_R#100 (L:switch_755_a) - 50 div s0 :1 l0 0 > if{ 75501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_Filter_Select_V#0 (L:switch_755_a) - 50 div s0 :1 l0 0 > if{ 75501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_HF_L_MIC_Selector_Press#77201 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_HF_L_Receive_Off#(L:switch_762_a) if{ 76201 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_HF_L_Receive_On#(L:switch_762_a) ! if{ 76201 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_HF_L_Receive_Toggle#76201 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_HF_R_MIC_Selector_Press#77101 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_HF_R_Receive_Off#(L:switch_761_a) if{ 76101 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_HF_R_Receive_On#(L:switch_761_a) ! if{ 76101 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_HF_R_Receive_Toggle#76101 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_MIC_INT_-----#50 (L:switch_773_a) - 50 div s0 :1 l0 0 > if{ 77301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 77302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_MIC_INT_Dec#77302 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_MIC_INT_Inc#77301 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_MIC_INT_Int#100 (L:switch_773_a) - 50 div s0 :1 l0 0 > if{ 77301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 77302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_MIC_INT_Mic#0 (L:switch_773_a) - 50 div s0 :1 l0 0 > if{ 77301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 77302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_PA_MIC_Selector_Press#78601 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_PA_Receive_Off#(L:switch_774_a) if{ 77401 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_PA_Receive_On#(L:switch_774_a) ! if{ 77401 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_PA_Receive_Toggle#77401 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_SAT_1_MIC_Selector_Press#77001 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_SAT_1_Receive_Off#(L:switch_760_a) if{ 76001 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_SAT_1_Receive_On#(L:switch_760_a) ! if{ 76001 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_SAT_1_Receive_Toggle#76001 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_SAT_2_MIC_Selector_Press#76901 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_SAT_2_Receive_Off#(L:switch_759_a) if{ 75901 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_SAT_2_Receive_On#(L:switch_759_a) ! if{ 75901 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_SAT_2_Receive_Toggle#75901 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_Speaker_Off#(L:switch_763_a) if{ 76301 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_Speaker_On#(L:switch_763_a) ! if{ 76301 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_Speaker_Toggle#76301 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VHF_C_MIC_Selector_Press#79001 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VHF_C_Receive_Off#(L:switch_778_a) if{ 77801 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_VHF_C_Receive_On#(L:switch_778_a) ! if{ 77801 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_VHF_C_Receive_Toggle#77801 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VHF_L_MIC_Selector_Press#79101 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VHF_L_Receive_Off#(L:switch_779_a) if{ 77901 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_VHF_L_Receive_On#(L:switch_779_a) ! if{ 77901 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_VHF_L_Receive_Toggle#77901 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VHF_R_MIC_Selector_Press#78901 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VHF_R_Receive_Off#(L:switch_777_a) if{ 77701 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_VHF_R_Receive_On#(L:switch_777_a) ! if{ 77701 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_VHF_R_Receive_Toggle#77701 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VOR_ADF_ADF_L#20 (L:switch_758_a) - 10 div s0 :1 l0 0 > if{ 75807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_VOR_ADF_ADF_R#30 (L:switch_758_a) - 10 div s0 :1 l0 0 > if{ 75807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_VOR_ADF_Dec#75808 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VOR_ADF_Inc#75807 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VOR_ADF_Receive_Off#(L:switch_756_a) if{ 75601 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_VOR_ADF_Receive_On#(L:switch_756_a) ! if{ 75601 (>K:ROTOR_BRAKE) }
PMDG_B777_FO_ACP_VOR_ADF_Receive_Toggle#75601 (>K:ROTOR_BRAKE)
PMDG_B777_FO_ACP_VOR_ADF_VOR_L#0 (L:switch_758_a) - 10 div s0 :1 l0 0 > if{ 75807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_ACP_VOR_ADF_VOR_R#10 (L:switch_758_a) - 10 div s0 :1 l0 0 > if{ 75807 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 75808 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_FO_RMP_AM_Press#79301 (>K:ROTOR_BRAKE)
PMDG_B777_FO_RMP_HF_L_Press#79401 (>K:ROTOR_BRAKE)
PMDG_B777_FO_RMP_HF_R_Press#79201 (>K:ROTOR_BRAKE)
PMDG_B777_FO_RMP_HF_Sens_Dec#80208 (>K:ROTOR_BRAKE)
PMDG_B777_FO_RMP_HF_Sens_Inc#80207 (>K:ROTOR_BRAKE)
PMDG_B777_FO_RMP_PNL_Press#79501 (>K:ROTOR_BRAKE)
PMDG_B777_FO_RMP_VHF_C_Press#79701 (>K:ROTOR_BRAKE)
PMDG_B777_FO_RMP_VHF_L_Press#79801 (>K:ROTOR_BRAKE)
PMDG_B777_FO_RMP_VHF_R_Press#79601 (>K:ROTOR_BRAKE)
PMDG_B777_OBS_Audio_Capt#0 (L:switch_648_a) - 50 div s0 :1 l0 0 > if{ 64801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_OBS_Audio_Dec#64802 (>K:ROTOR_BRAKE)
PMDG_B777_OBS_Audio_Fo#100 (L:switch_648_a) - 50 div s0 :1 l0 0 > if{ 64801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_OBS_Audio_Inc#64801 (>K:ROTOR_BRAKE)
PMDG_B777_OBS_Audio_Norm#50 (L:switch_648_a) - 50 div s0 :1 l0 0 > if{ 64801 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64802 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_APP_C#10 (L:switch_646_a) - 10 div s0 :1 l0 0 > if{ 64607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_APP_Dec#64608 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_APP_Inc#64607 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_APP_L#0 (L:switch_646_a) - 10 div s0 :1 l0 0 > if{ 64607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_APP_MKR#30 (L:switch_646_a) - 10 div s0 :1 l0 0 > if{ 64607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_APP_R#20 (L:switch_646_a) - 10 div s0 :1 l0 0 > if{ 64607 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64608 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_APP_Receive_Off#(L:switch_644_a) if{ 64401 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_APP_Receive_On#(L:switch_644_a) ! if{ 64401 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_APP_Receive_Toggle#64401 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_CAB_MIC_Selector_Press#61101 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_CAB_Receive_Off#(L:switch_623_a) if{ 62301 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_CAB_Receive_On#(L:switch_623_a) ! if{ 62301 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_CAB_Receive_Toggle#62301 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_FLT_MIC_Selector_Press#61001 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_FLT_Receive_Off#(L:switch_622_a) if{ 62201 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_FLT_Receive_On#(L:switch_622_a) ! if{ 62201 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_FLT_Receive_Toggle#62201 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_Filter_Select_B#50 (L:switch_643_a) - 50 div s0 :1 l0 0 > if{ 64301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_Filter_Select_Dec#64302 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_Filter_Select_Inc#64301 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_Filter_Select_R#100 (L:switch_643_a) - 50 div s0 :1 l0 0 > if{ 64301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_Filter_Select_V#0 (L:switch_643_a) - 50 div s0 :1 l0 0 > if{ 64301 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64302 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_HF_L_MIC_Selector_Press#62601 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_HF_L_Receive_Off#(L:switch_636_a) if{ 63601 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_HF_L_Receive_On#(L:switch_636_a) ! if{ 63601 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_HF_L_Receive_Toggle#63601 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_HF_R_MIC_Selector_Press#62701 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_HF_R_Receive_Off#(L:switch_637_a) if{ 63701 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_HF_R_Receive_On#(L:switch_637_a) ! if{ 63701 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_HF_R_Receive_Toggle#63701 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_MIC_INT_-----#50 (L:switch_625_a) - 50 div s0 :1 l0 0 > if{ 62501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 62502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_MIC_INT_Dec#62502 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_MIC_INT_Inc#62501 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_MIC_INT_Int#100 (L:switch_625_a) - 50 div s0 :1 l0 0 > if{ 62501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 62502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_MIC_INT_Mic#0 (L:switch_625_a) - 50 div s0 :1 l0 0 > if{ 62501 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 62502 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_PA_MIC_Selector_Press#61201 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_PA_Receive_Off#(L:switch_624_a) if{ 62401 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_PA_Receive_On#(L:switch_624_a) ! if{ 62401 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_PA_Receive_Toggle#62401 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_SAT_1_MIC_Selector_Press#62801 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_SAT_1_Receive_Off#(L:switch_638_a) if{ 63801 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_SAT_1_Receive_On#(L:switch_638_a) ! if{ 63801 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_SAT_1_Receive_Toggle#63801 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_SAT_2_MIC_Selector_Press#62901 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_SAT_2_Receive_Off#(L:switch_639_a) if{ 63901 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_SAT_2_Receive_On#(L:switch_639_a) ! if{ 63901 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_SAT_2_Receive_Toggle#63901 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_Speaker_Off#(L:switch_635_a) if{ 63501 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_Speaker_On#(L:switch_635_a) ! if{ 63501 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_Speaker_Toggle#63501 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VHF_C_MIC_Selector_Press#60801 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VHF_C_Receive_Off#(L:switch_620_a) if{ 62001 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_VHF_C_Receive_On#(L:switch_620_a) ! if{ 62001 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_VHF_C_Receive_Toggle#62001 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VHF_L_MIC_Selector_Press#60701 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VHF_L_Receive_Off#(L:switch_619_a) if{ 61901 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_VHF_L_Receive_On#(L:switch_619_a) ! if{ 61901 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_VHF_L_Receive_Toggle#61901 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VHF_R_MIC_Selector_Press#60901 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VHF_R_Receive_Off#(L:switch_621_a) if{ 62101 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_VHF_R_Receive_On#(L:switch_621_a) ! if{ 62101 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_VHF_R_Receive_Toggle#62101 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VOR_ADF_ADF_L#20 (L:switch_640_a) - 10 div s0 :1 l0 0 > if{ 64007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_VOR_ADF_ADF_R#30 (L:switch_640_a) - 10 div s0 :1 l0 0 > if{ 64007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_VOR_ADF_Dec#64008 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VOR_ADF_Inc#64007 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VOR_ADF_Receive_Off#(L:switch_642_a) if{ 64201 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_VOR_ADF_Receive_On#(L:switch_642_a) ! if{ 64201 (>K:ROTOR_BRAKE) }
PMDG_B777_Observer_ACP_VOR_ADF_Receive_Toggle#64201 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_ACP_VOR_ADF_VOR_L#0 (L:switch_640_a) - 10 div s0 :1 l0 0 > if{ 64007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_ACP_VOR_ADF_VOR_R#10 (L:switch_640_a) - 10 div s0 :1 l0 0 > if{ 64007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 64008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Observer_RMP_AM_Press#60501 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_RMP_HF_L_Press#60401 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_RMP_HF_R_Press#60601 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_RMP_HF_Sens_Dec#59608 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_RMP_HF_Sens_Inc#59607 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_RMP_PNL_Press#60301 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_RMP_VHF_C_Press#60101 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_RMP_VHF_L_Press#60001 (>K:ROTOR_BRAKE)
PMDG_B777_Observer_RMP_VHF_R_Press#60201 (>K:ROTOR_BRAKE)
//PMDG/B777 300ER/Safety
PMDG_B777_APU_Fire_Handle_Left#8401 (>K:ROTOR_BRAKE)
PMDG_B777_APU_Fire_Handle_Right#8402 (>K:ROTOR_BRAKE)
PMDG_B777_Apu_Fire_Handle_Lock_Press#(L:switch_8402_a) ! if{ 840201 (>K:ROTOR_BRAKE) }
PMDG_B777_Apu_Fire_Handle_Lock_Release#(L:switch_8402_a) if{ 840201 (>K:ROTOR_BRAKE) }
PMDG_B777_Apu_Fire_Handle_Lock_Toggle#840201 (>K:ROTOR_BRAKE)
PMDG_B777_Apu_Fire_Handle_Pull#(L:switch_84_a) ! if{ 840101 (>K:ROTOR_BRAKE) }
PMDG_B777_Apu_Fire_Handle_Push#(L:switch_84_a) if{ 840101 (>K:ROTOR_BRAKE) }
PMDG_B777_Apu_Fire_Handle_Toggle#840101 (>K:ROTOR_BRAKE)
PMDG_B777_Cargo_Fire_Arm_Aft_Off#(L:switch_86_a) if{ 8601 (>K:ROTOR_BRAKE) }
PMDG_B777_Cargo_Fire_Arm_Aft_On#(L:switch_86_a) ! if{ 8601 (>K:ROTOR_BRAKE) }
PMDG_B777_Cargo_Fire_Arm_Aft_Toggle#8601 (>K:ROTOR_BRAKE)
PMDG_B777_Cargo_Fire_Arm_Fwd_Off#(L:switch_85_a) if{ 8501 (>K:ROTOR_BRAKE) }
PMDG_B777_Cargo_Fire_Arm_Fwd_On#(L:switch_85_a) ! if{ 8501 (>K:ROTOR_BRAKE) }
PMDG_B777_Cargo_Fire_Arm_Fwd_Toggle#8501 (>K:ROTOR_BRAKE)
PMDG_B777_Cargo_Fire_Disch_Press#8701 (>K:ROTOR_BRAKE)
PMDG_B777_Cargo_Fire_Disch_Switch_Guard_Close#(L:switch_88_a) if{ 8801 (>K:ROTOR_BRAKE) }
PMDG_B777_Cargo_Fire_Disch_Switch_Guard_Open#(L:switch_88_a) ! if{ 8801 (>K:ROTOR_BRAKE) }
PMDG_B777_Cargo_Fire_Disch_Switch_Guard_Toggle#8801 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_1_Fire_Handle_Left#8401 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_1_Fire_Handle_Lock_Press#(L:switch_6512_a) ! if{ 651201 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_1_Fire_Handle_Lock_Release#(L:switch_6512_a) if{ 651201 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_1_Fire_Handle_Lock_Toggle#651201 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_1_Fire_Handle_Pull#(L:switch_651_a) ! if{ 65101 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_1_Fire_Handle_Push#(L:switch_651_a) if{ 65101 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_1_Fire_Handle_Right#65102 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_1_Fire_Handle_Toggle#65101 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_2_Fire_Handle_Left#65101 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_2_Fire_Handle_Lock_Press#(L:switch_6522_a) ! if{ 652201 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_2_Fire_Handle_Lock_Release#(L:switch_6522_a) if{ 652201 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_2_Fire_Handle_Lock_Toggle#652201 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_2_Fire_Handle_Pull#(L:switch_652_a) ! if{ 65201 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_2_Fire_Handle_Push#(L:switch_652_a) if{ 65201 (>K:ROTOR_BRAKE) }
PMDG_B777_Engine_2_Fire_Handle_Right#65102 (>K:ROTOR_BRAKE)
PMDG_B777_Engine_2_Fire_Handle_Toggle#65201 (>K:ROTOR_BRAKE)
PMDG_B777_Evac_Signal_Command_Off#(L:switch_739_a) if{ 73901 (>K:ROTOR_BRAKE) }
PMDG_B777_Evac_Signal_Command_On#(L:switch_739_a) ! if{ 73901 (>K:ROTOR_BRAKE) }
PMDG_B777_Evac_Signal_Command_Switch_Guard_Close#(L:switch_740_a) if{ 74001 (>K:ROTOR_BRAKE) }
PMDG_B777_Evac_Signal_Command_Switch_Guard_Open#(L:switch_740_a) ! if{ 74001 (>K:ROTOR_BRAKE) }
PMDG_B777_Evac_Signal_Command_Switch_Guard_Toggle#74001 (>K:ROTOR_BRAKE)
PMDG_B777_Evac_Signal_Command_Toggle#73901 (>K:ROTOR_BRAKE)
PMDG_B777_Evac_Signal_Horn_Shutoff_Pull#(L:switch_741_a) if{ 74101 (>K:ROTOR_BRAKE) }
PMDG_B777_Evac_Signal_Horn_Shutoff_Push#(L:switch_741_a) ! if{ 74101 (>K:ROTOR_BRAKE) }
PMDG_B777_Evac_Signal_Horn_Shutoff_Toggle#74101 (>K:ROTOR_BRAKE)
PMDG_B777_Evac_Signal_Test_Press#74201 (>K:ROTOR_BRAKE)
PMDG_B777_Fire_Ovht_Test_Off#(L:switch_89_a) if{ 8901 (>K:ROTOR_BRAKE) }
PMDG_B777_Fire_Ovht_Test_On#(L:switch_89_a) ! if{ 8901 (>K:ROTOR_BRAKE) }
PMDG_B777_Fire_Ovht_Test_Toggle#8901 (>K:ROTOR_BRAKE)
PMDG_B777_No_Smoking_Auto_#50 (L:switch_29_a) - 50 div s0 :1 l0 0 > if{ 2907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_No_Smoking_Dec#2908 (>K:ROTOR_BRAKE)
PMDG_B777_No_Smoking_Inc#2907 (>K:ROTOR_BRAKE)
PMDG_B777_No_Smoking_Off_#0 (L:switch_29_a) - 50 div s0 :1 l0 0 > if{ 2907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_No_Smoking_On#100 (L:switch_29_a) - 50 div s0 :1 l0 0 > if{ 2907 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 2908 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Pass_Oxygen_Press#5201 (>K:ROTOR_BRAKE)
PMDG_B777_Pass_Oxygen_Switch_Guard_Close#(L:switch_53_a) if{ 5301 (>K:ROTOR_BRAKE) }
PMDG_B777_Pass_Oxygen_Switch_Guard_Open#(L:switch_53_a) ! if{ 5301 (>K:ROTOR_BRAKE) }
PMDG_B777_Pass_Oxygen_Switch_Guard_Toggle#5301 (>K:ROTOR_BRAKE)
PMDG_B777_Seat_Belts_Auto_#50 (L:switch_30_a) - 50 div s0 :1 l0 0 > if{ 3007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Seat_Belts_Dec#3008 (>K:ROTOR_BRAKE)
PMDG_B777_Seat_Belts_Inc#3007 (>K:ROTOR_BRAKE)
PMDG_B777_Seat_Belts_Off#0 (L:switch_30_a) - 50 div s0 :1 l0 0 > if{ 3007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
PMDG_B777_Seat_Belts_On#100 (L:switch_30_a) - 50 div s0 :1 l0 0 > if{ 3007 (>K:ROTOR_BRAKE) l0 -- s0 g1 } l0 0 < if{ 3008 (>K:ROTOR_BRAKE) l0 ++ s0 g1 }
//PMDG/B777 300ER/Warning
PMDG_B777_LEFT_WARNING_CAUTION_Button_Press#17701 (>K:ROTOR_BRAKE)
PMDG_B777_RIGHT_WARNING_CAUTION_Button_Press#27201 (>K:ROTOR_BRAKE)
//PMDG/DC-6/Anti-Ice
PMDGDC6_AIRFOIL_HEAT_TOGGLE#21601 (>K:ROTOR_BRAKE)
PMDGDC6_CABIN_HEAT_TOGGLE#21401 (>K:ROTOR_BRAKE
PMDGDC6_CARB_1_TOGGLE#21801 (>K:ROTOR_BRAKE)
PMDGDC6_CARB_2_TOGGLE#21901 (>K:ROTOR_BRAKE)
PMDGDC6_CARB_3_TOGGLE#22001 (>K:ROTOR_BRAKE)
PMDGDC6_CARB_4_TOGGLE#22101 (>K:ROTOR_BRAKE)
PMDGDC6_ENG_1_COWL_DEC#12408 (>K:ROTOR_BRAKE)
PMDGDC6_ENG_1_COWL_INC#12407 (>K:ROTOR_BRAKE)
PMDGDC6_ENG_2_COWL_DEC#12508 (>K:ROTOR_BRAKE)
PMDGDC6_ENG_2_COWL_INC#12507 (>K:ROTOR_BRAKE)
PMDGDC6_ENG_3_COWL_DEC#12608 (>K:ROTOR_BRAKE)
PMDGDC6_ENG_3_COWL_INC#12607 (>K:ROTOR_BRAKE)
PMDGDC6_ENG_4_COWL_DEC#12708 (>K:ROTOR_BRAKE)
PMDGDC6_ENG_4_COWL_INC#12707 (>K:ROTOR_BRAKE)
PMDGDC6_PITOT_TOGGLE#09601 (>K:ROTOR_BRAKE)
PMDGDC6_PROP_DEICE_TOGGLE#21701 (>K:ROTOR_BRAKE)
//PMDG/DC-6/Autopilot
PMDGDC6_AP_APPR#44508 (>K:ROTOR_BRAKE) 44508 (>K:ROTOR_BRAKE) 44507 (>K:ROTOR_BRAKE) 44507 (>K:ROTOR_BRAKE)
PMDGDC6_AP_LEVER_OFF#40404 (>K:ROTOR_BRAKE)
PMDGDC6_AP_LEVER_ON#40403 (>K:ROTOR_BRAKE)
PMDGDC6_AP_LOC#44508 (>K:ROTOR_BRAKE) 44508 (>K:ROTOR_BRAKE) 44507 (>K:ROTOR_BRAKE)
PMDGDC6_AP_NEUTRAL#95701 (>K:ROTOR_BRAKE)
PMDGDC6_AP_ALT_HOLD_TOGGLE#43607 (>K:ROTOR_BRAKE)
PMDGDC6_AP_GYROPILOT#(L:dc6_445_obj, enum) 1 == if{ 44508 (>K:ROTOR_BRAKE) } 
PMDGDC6_AP_HDG_DOWN#44208 (>K:ROTOR_BRAKE)
PMDGDC6_AP_HDG_UP#44207 (>K:ROTOR_BRAKE)
PMDGDC6_AP_LEVER_TOGGLE#40401 (>K:ROTOR_BRAKE)
PMDGDC6_AP_MODE_DEC#44508 (>K:ROTOR_BRAKE)
PMDGDC6_AP_MODE_INC#44507 (>K:ROTOR_BRAKE)
PMDGDC6_AP_MODE_TOGGLE#(L:dc6_445_dir) s1 (L:dc6_445_obj, enum) 2 == if{ 44508 s1 } (L:dc6_445_obj, enum) 0 == if{ 44507 s1 } (L:dc6_445_obj, enum) 1 == (L:dc6_445_dir) 0 == and if{ 44507 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_445_dir)
PMDGDC6_AP_NAV_OFF#(L:dc6_445_obj, enum) 1 == if{ 44508 (>K:ROTOR_BRAKE) } 
PMDGDC6_AP_NAV_ON#(L:dc6_445_obj, enum) 0 == if{ 44507 (>K:ROTOR_BRAKE) } els{ (L:dc6_445_obj, enum) 2 == if{ 44508 (>K:ROTOR_BRAKE) } }
PMDGDC6_AP_PITCH_DOWN#44007 (>K:ROTOR_BRAKE)
PMDGDC6_AP_PITCH_UP#44008 (>K:ROTOR_BRAKE)
PMDGDC6_AP_TOGGLE#43407 (>K:ROTOR_BRAKE)
PMDGDC6_AUTOPILOT_LEVER_TOGGLE#40401 (>K:ROTOR_BRAKE)
PMDGDC6_AUTOPILOT_TOGGLE#43401 (>K:ROTOR_BRAKE)
//PMDG/DC-6/Electrical
PMDGDC6_BATT___GND_POWER___OFF#8201 (>K:ROTOR_BRAKE)
PMDGDC6_Generator_1#8301 (>K:ROTOR_BRAKE)
PMDGDC6_Generator_2#8401 (>K:ROTOR_BRAKE)
PMDGDC6_Generator_3#8501 (>K:ROTOR_BRAKE)
PMDGDC6_Generator_4#8601 (>K:ROTOR_BRAKE)
PMDGDC6_Inverter_1#6301 (>K:ROTOR_BRAKE)
PMDGDC6_Plane_batt_Ground#7801 (>K:ROTOR_BRAKE)
//PMDG/DC-6/Engines
PMDGDC6_MIXTURE_1#OFF - onPress: 40008 (>K:ROTOR_BRAKE) onRelease: 40007 (>K:ROTOR_BRAKE) RICH - onPress: 40007 (>K:ROTOR_BRAKE) onRelease 40008 (>K:ROTOR_BRAKE)
PMDGDC6_MIXTURE_2#OFF - onPress: 40108 (>K:ROTOR_BRAKE) onRelease: 40107 (>K:ROTOR_BRAKE) RICH - onPress: 40107 (>K:ROTOR_BRAKE) onRelease 40108 (>K:ROTOR_BRAKE)
PMDGDC6_MIXTURE_3#OFF - onPress: 40208 (>K:ROTOR_BRAKE) onRelease: 40207 (>K:ROTOR_BRAKE) RICH - onPress: 40207 (>K:ROTOR_BRAKE) onRelease 40208 (>K:ROTOR_BRAKE)
PMDGDC6_MIXTURE_4#OFF - onPress: 40308 (>K:ROTOR_BRAKE) onRelease: 40307 (>K:ROTOR_BRAKE) RICH - onPress: 40307 (>K:ROTOR_BRAKE) onRelease 40308 (>K:ROTOR_BRAKE)
PMDGDC6_SUPERCHARGER_1_TOGGLE#128101 (>K:ROTOR_BRAKE)
PMDGDC6_WATER_INJECTION_1#onPress: 2301 (>K:ROTOR_BRAKE) onRelease: 2301 (>:ROTOR_BRAKE)
PMDGDC6_WATER_INJECTION_2#onPress: 2401 (>K:ROTOR_BRAKE) onRelease: 2401 (>:ROTOR_BRAKE)
PMDGDC6_WATER_INJECTION_3#onPress: 2501 (>K:ROTOR_BRAKE) onRelease: 2501 (>:ROTOR_BRAKE)
PMDGDC6_WATER_INJECTION_4#onPress: 2601 (>K:ROTOR_BRAKE) onRelease: 2601 (>:ROTOR_BRAKE)
PMDGDC6_XFEED_LEFT#OFF - onPress: 53907 (>K:ROTOR_BRAKE) onRelease: 53908 (>K:ROTOR_BRAKE) ALL - onPress: 53908 (>K:ROTOR_BRAKE) onRelease: 53907 (>K:ROTOR_BRAKE) 
PMDGDC6_XFEED_RIGHT#OFF - onPress: 54007 (>K:ROTOR_BRAKE) onRelease: 54008 (>K:ROTOR_BRAKE) ALL - onPress: 54008 (>K:ROTOR_BRAKE) onRelease: 54007 (>K:ROTOR_BRAKE)
PMDGDC6_SUPERCHARGER_2_TOGGLE#128201 (>K:ROTOR_BRAKE)
PMDGDC6_SUPERCHARGER_3_TOGGLE#128301 (>K:ROTOR_BRAKE)
PMDGDC6_SUPERCHARGER_4_TOGGLE#128401 (>K:ROTOR_BRAKE)
//PMDG/DC-6/Fuel
PMDGDC6_FUEL_TANK_SELECTOR_1#OFF onPress: 52008 (>K:ROTOR_BRAKE) onRelease: 52007 (>K:ROTOR_BRAKE) MAIN onPress: 52007 (>K:ROTOR_BRAKE) onRelease: 52008 (>K:ROTOR_BRAKE)
PMDGDC6_FUEL_TANK_SELECTOR_2#OFF - onPress: 52108 (>K:ROTOR_BRAKE) onRelease: 52107 (>K:ROTOR_BRAKE) MAIN - onPress: 52107 (>K:ROTOR_BRAKE) onRelease: 52108 (>K:ROTOR_BRAKE)
PMDGDC6_FUEL_TANK_SELECTOR_3#OFF - onPress: 52208 (>K:ROTOR_BRAKE) onRelease: 52207 (>K:ROTOR_BRAKE) MAIN - onPress: 52207 (>K:ROTOR_BRAKE) onRelease: 52208 (>K:ROTOR_BRAKE)
PMDGDC6_FUEL_TANK_SELECTOR_4#OFF - onPress: 52308 (>K:ROTOR_BRAKE) onRelease: 52307 (>K:ROTOR_BRAKE) MAIN - onPress: 52307 (>K:ROTOR_BRAKE) onRelease: 52308 (>K:ROTOR_BRAKE)
PMDGDC-_Main_Fuel_Boost_1_#(L:dc6_069, number) 0 (>L:dc6_069_obj, number) to set low (L:dc6_069, number) 1 (>L:dc6_069_obj, number) to set off (L:dc6_069, number) 2 (>L:dc6_069_obj, number) to set high
PMDGDC6_ALT_FUEL_BOOST_1_TOGGLE#(L:dc6_073_dir) s1 (L:dc6_073_obj, enum) 2 == if{ 07308 s1 } (L:dc6_073_obj, enum) 0 == if{ 07307 s1 } (L:dc6_073_obj, enum) 1 == (L:dc6_073_dir) 0 == and if{ 07307 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_073_dir)
PMDGDC6_ALT_FUEL_BOOST_2_TOGGLE#(L:dc6_074_dir) s1 (L:dc6_074_obj, enum) 2 == if{ 07408 s1 } (L:dc6_074_obj, enum) 0 == if{ 07407 s1 } (L:dc6_074_obj, enum) 1 == (L:dc6_074_dir) 0 == and if{ 07407 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_074_dir)
PMDGDC6_ALT_FUEL_BOOST_3_TOGGLE#(L:dc6_075_dir) s1 (L:dc6_075_obj, enum) 2 == if{ 07508 s1 } (L:dc6_075_obj, enum) 0 == if{ 07507 s1 } (L:dc6_075_obj, enum) 1 == (L:dc6_075_dir) 0 == and if{ 07507 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_075_dir)
PMDGDC6_ALT_FUEL_BOOST_4_TOGGLE#(L:dc6_076_dir) s1 (L:dc6_076_obj, enum) 2 == if{ 07608 s1 } (L:dc6_076_obj, enum) 0 == if{ 07607 s1 } (L:dc6_076_obj, enum) 1 == (L:dc6_076_dir) 0 == and if{ 07607 s1 } l1 (>K:ROTOR_BRAKE) l1 (>L:dc6_076_dir)
PMDGDC6_Main_Fuel_Booster_Pump_High__1#6907 (>K:ROTOR_BRAKE) 6908 (>K:ROTOR_BRAKE)
PMDGDC6_Main_Fuel_Booster_Pump_High__2#7007 (>K:ROTOR_BRAKE) 7008 (>K:ROTOR_BRAKE)
PMDGDC6_Main_Fuel_Booster_Pump_High__3#7107 (>K:ROTOR_BRAKE) 7108 (>K:ROTOR_BRAKE)
PMDGDC6_Main_Fuel_Booster_Pump_High__4#7207 (>K:ROTOR_BRAKE) 7208 (>K:ROTOR_BRAKE)
PMDGDC6_Main_Fuel_Booster_Pump_Low__1#6901 (>K:ROTOR_BRAKE) 6902 (>K:ROTOR_BRAKE)
PMDGDC6_Main_Fuel_Booster_Pump_Low__2#7001 (>K:ROTOR_BRAKE) 7002 (>K:ROTOR_BRAKE)
PMDGDC6_Main_Fuel_Booster_Pump_Low__3#7101 (>K:ROTOR_BRAKE) 7102 (>K:ROTOR_BRAKE) 
PMDGDC6_Main_Fuel_Booster_Pump_Low__4#7201 (>K:ROTOR_BRAKE) 7202 (>K:ROTOR_BRAKE)
//PMDG/DC-6/Gear
PMDGDC6_GEAR_DOWN#40507 (>K:ROTOR_BRAKE)
PMDGDC6_GEAR_UP#40508 (>K:ROTOR_BRAKE)
PMDGDC6_GUST_LOCK_OFF#0 (>L:dc6_398_obj, bool)
PMDGDC6_GUST_LOCK_ON#1 (>L:dc6_398_obj, bool)
//PMDG/DC-6/Lights
PMDGDC6_LANDING_LIGHTS#onPress: 12101 (>K:ROTOR_BRAKE) onRelease: 12101 (>K:ROTOR_BRAKE)
PMDGDC6_LANDING_LIGHTS_POSITION#Extend - onPress: 12208 (>K:ROTOR_BRAKE) onRelease: 12207 (>K:ROTOR_BRAKE) Retract - onPress: 12207 (>K:ROTOR_BRAKE) onRelease: 12208 (>K:ROTOR_BRAKE)
PMDGDC6_PositionLights#Steady - onPress: 4008 (>K:ROTOR_BRAKE) onRelease: 4007 (>K:ROTOR_BRAKE) Flashing - onPress: 4007 (>K:ROTOR_BRAKE) onRelease: 04008 (>K:ROTOR_BRAKE)
PMDGDC6_TABLET_LIGHTING_FLOOD#3 (>L:CockpitLighting, enum) 1 (>L:SetCockpitLights, bool)
PMDGDC6_TABLET_LIGHTING_OFF#0 (>L:CockpitLighting, enum) 1 (>L:SetCockpitLights, bool)
PMDGDC6_TABLET_LIGHTING_RED#2 (>L:CockpitLighting, enum) 1 (>L:SetCockpitLights, bool)
PMDGDC6_TABLET_LIGHTING_WHITE#1 (>L:CockpitLighting, enum) 1 (>L:SetCockpitLights, bool)
PMDGDC6_Beacon#(L:dc6_041_obj, number) ! (>L:dc6_041_obj, number)
PMDGDC6_Emer_LTS_No_smoking#0 (L:dc6_038_obj, number) ! (>L:dc6_038_obj, number) 1
PMDGDC6_Entrance_Lights#0 (L:dc6_036_obj, number) ! (>L:dc6_036_obj, number) 1
PMDGDC6_Main_J_box_Flood_light#0 (L:dc6_037_obj, number) ! (>L:dc6_037_obj, number) 1
PMDGDC6_Position_Lights_Steady#(L:dc6_040_obj, number) ! (>L:dc6_040_obj, number) 
//PMDG/DC-6/Miscellaneous
PMDGDC6_TABLET_AFTER_LANDING#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeParking, bool) (L:AfeAfterLanding, bool) ! (>L:AfeAfterLanding, bool) (L:AfeAfterLanding, bool) ! if{ 25 (>K:ROTOR_BRAKE) } els{ 26 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_AFTER_START#0 (>L:AfeBeforeStart, number) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeAfterStart, bool) ! (>L:AfeAfterStart, bool) (L:AfeAfterStart, bool) ! if{ 9 (>K:ROTOR_BRAKE) } els{ 10 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_BEFORE_LANDING#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeBeforeLanding, bool) ! (>L:AfeBeforeLanding, bool) (L:AfeBeforeLanding, bool) ! if{ 23 (>K:ROTOR_BRAKE) } els{ 24 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_BEFORE_START#0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeBeforeStart, bool) ! (>L:AfeBeforeStart, bool) (L:AfeBeforeStart, bool) ! if{ 7 (>K:ROTOR_BRAKE) } els{ 8 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_BEFORE_TAKEOFF#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeBeforeTakeoff, bool) ! (>L:AfeBeforeTakeoff, bool) (L:AfeBeforeTakeoff, bool) ! if{ 11 (>K:ROTOR_BRAKE) } els{ 12 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_CRUISE#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeCruise, bool) ! (>L:AfeCruise, bool) (L:AfeCruise, bool) ! if{ 17 (>K:ROTOR_BRAKE) } els{ 18 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_DESCENT#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeDescent, bool) ! (>L:AfeDescent, bool) (L:AfeDescent, bool) ! if{ 19 (>K:ROTOR_BRAKE) } els{ 20 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_IN_RANGE#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeInRange, bool) ! (>L:AfeInRange, bool) (L:AfeInRange, bool) ! if{ 21 (>K:ROTOR_BRAKE) } els{ 22 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_PARKING#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) (L:AfeParking, bool) ! (>L:AfeParking, bool) (L:AfeParking, bool) ! if{ 27 (>K:ROTOR_BRAKE) } els{ 28 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_TAKEOFF_DRY#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeTakeoffDry, bool) ! (>L:AfeTakeoffDry, bool) (L:AfeTakeoffDry, bool) ! if{ 13 (>K:ROTOR_BRAKE) } els{ 14 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_TAKEOFF_WET#0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) (L:AfeTakeoffWet, bool) ! (>L:AfeTakeoffWet, bool) (L:AfeTakeoffWet, bool) ! if{ 15 (>K:ROTOR_BRAKE) } els{ 16 (>K:ROTOR_BRAKE) }
PMDGDC6_TABLET_ABORT#>0 (>L:AfeBeforeStart, number) 0 (>L:AfeAfterStart, bool) 0 (>L:AfeBeforeTakeoff, bool) 0 (>L:AfeTakeoffDry, bool) 0 (>L:AfeTakeoffWet, bool) 0 (>L:AfeCruise, bool) 0 (>L:AfeDescent, bool) 0 (>L:AfeInRange, bool) 0 (>L:AfeBeforeLanding, bool) 0 (>L:AfeAfterLanding, bool) 0 (>L:AfeParking, bool) 29 (>K:ROTOR_BRAKE)
//PMDG/DC-6/Safety
PMDGDC6_Seat_Belt#0 (L:dc6_039_obj, number) ! (>L:dc6_039_obj, number) 1
//PMS50/APGA/Autopilot
Autopilot_ALT_mode#(>H:APGA_ALT)
Autopilot_ARM#(>H:APGA_ARM)
Autopilot_Approach_mode#(>H:APGA_APR)
Autopilot_Back_course_mode#(>H:APGA_REV)
Autopilot_CGA_Mode#(>H:APGA_CGA)
Autopilot_CLVL_mode#(>H:APGA_CLVL)
Autopilot_DOWN#(>H:APGA_DOWN)
Autopilot_FLC_mode#(>H:APGA_FLC)
Autopilot_Flight_director#(>H:APGA_FD)
Autopilot_HDG#(>H:APGA_HDG)
Autopilot_LVL_mode#(>H:APGA_LVL)
Autopilot_NAV#(>H:APGA_NAV)
Autopilot_Selected_VS_large_dec#(>H:APGA_SEL_VS_LARGE_DEC)
Autopilot_Selected_VS_large_inc#(>H:APGA_SEL_VS_LARGE_INC)
Autopilot_Selected_VS_small_dec#(>H:APGA_SEL_VS_SMALL_DEC)
Autopilot_Selected_VS_small_inc#(>H:APGA_SEL_VS_SMALL_INC)
Autopilot_Selected_altitude_large_dec#(>H:APGA_SEL_ALT_LARGE_DEC)
Autopilot_Selected_altitude_large_inc#(>H:APGA_SEL_ALT_LARGE_INC)
Autopilot_Selected_altitude_small_dec#(>H:APGA_SEL_ALT_SMALL_DEC)
Autopilot_Selected_altitude_small_inc#(>H:APGA_SEL_ALT_SMALL_INC)
Autopilot_Selected_altitude_very_large_dec#(>H:APGA_SEL_ALT_VERY_LARGE_DEC)
Autopilot_Selected_altitude_very_large_inc#(>H:APGA_SEL_ALT_VERY_LARGE_INC)
Autopilot_UP#(>H:APGA_UP)
Autopilot_VS_mode#(>H:APGA_VS)
Autopilot_Yaw_damper#(>H:APGA_YD)
Autopilot_master#(>H:APGA_AP)
//PMS50/GTN750/Navigation
GTN750_PANEL_DirectToPush#1 (>L:GTN750_PANEL_DirectToPush)
GTN750_PANEL_HomePush#1 (>L:GTN750_PANEL_HomePush)
GTN750_PANEL_HomePushLong#1 (>L:GTN750_PANEL_HomePushLong)
GTN750_PANEL_KnobLargeDec#1 (>L:GTN750_PANEL_KnobLargeDec)
GTN750_PANEL_KnobLargeInc#1 (>L:GTN750_PANEL_KnobLargeInc)
GTN750_PANEL_KnobPush#1 (>L:GTN750_PANEL_KnobPush)
GTN750_PANEL_KnobSmallDec#1 (>L:GTN750_PANEL_KnobSmallDec)
GTN750_PANEL_KnobSmallInc#1 (>L:GTN750_PANEL_KnobSmallInc)
GTN750_PANEL_VolDec#1 (>L:GTN750_PANEL_VolDec)
GTN750_PANEL_VolInc#1 (>L:GTN750_PANEL_VolInc)
GTN750_PANEL_VolPush#1 (>L:GTN750_PANEL_VolPush)
Map_Zoom_In#(>H:GTN750_ZOOM_IN)
Map_Zoom_Out#(>H:GTN750_ZOOM_OUT)
//Parallel42/FreedomFox / Fox2/Avionics
Avionics_BUS_1_OFF#0 (>K:AVIONICS_MASTER_SET)
Avionics_BUS_1_ON#1 (>K:AVIONICS_MASTER_SET)
//Parallel42/FreedomFox / Fox2/Controls
Elevator_Trim_DN#(A:ELEVATOR TRIM PCT, percent) 1.428571 - 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET)
Elevator_Trim_UP#(A:ELEVATOR TRIM PCT, percent) 1.428571 + 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET)
Flaps_DECR#(>K:FLAPS_DECR)
Flaps_INC#(>K:FLAPS_INCR)
//Parallel42/FreedomFox / Fox2/Fuel
Fuel_Pumps_A___B__Toggle__#1 1 (>K:2:TOGGLE_ELECT_FUEL_PUMP1)
Fuel_Switch_Toggle#(>K:TOGGLE_FUEL_VALVE_ALL)
//Parallel42/FreedomFox / Fox2/Lights
LANDING_Lights_OFF#(>K:LANDING_LIGHTS_OFF)
LANDING_Lights_ON#(>K:LANDING_LIGHTS_ON)
NAV_Lights_OFF#0 (>K:NAV_LIGHTS_SET)
NAV_Lights_ON#1 (>K:NAV_LIGHTS_SET)
PANEL_Lights_OFF#(>K:PANEL_LIGHTS_OFF)
PANEL_Lights_ON#(>K:PANEL_LIGHTS_ON)
STROBE_Lights_OFF#(>K:STROBES_OFF)
STROBE_Lights_ON#(>K:STROBES_ON)
WigWag_Lights_OFF#1 0 (>K:2:WING_LIGHTS_SET)
WigWag_Lights_ON#1 1 (>K:2:WING_LIGHTS_SET)
//Parallel42/FreedomFox / Fox2/Miscellaneous
Smoke_OFF#(>K:SMOKE_OFF)
Smoke_ON#(>K:SMOKE_ON)
//PropAir Flight/Shark 600 (MSFS2024)/Anti-ice
PITOT_HEAT_breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_Button_PITOTHEAT_G3X_Set)
PITOT_HEAT_breaker_switch_ON__G3X_#1 (>B:INSTRUMENT_IE_F_P_Button_PITOTHEAT_G3X_Set)
PITOT_HEAT_breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_Button_PITOTHEAT_G3X_Toggle)
//PropAir Flight/Shark 600 (MSFS2024)/Avionics
G5_knob_DEC#1 (>B:AS5_1_Knob_Dec) 
G5_knob_INC#1 (>B:AS5_1_Knob_Inc) 
//PropAir Flight/Shark 600 (MSFS2024)/Electrical
AUTOPILOT__breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_BUTTON_AP_G3X_Set)
AUTOPILOT__breaker_switch_ON__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_AP_G3X_Set)
AUTOPILOT__breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_AP_G3X_Toggle)
BCKP_G5_breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_BUTTON_BCKPG5_G3X_Set)
BCKP_G5_breaker_switch_ON__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_BCKPG5_G3X_Set)
BCKP_G5_breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_BCKPG5_G3X_Toggle)
EFIS_G3X__breaker_switch_OFF#0 (>B:INSTRUMENT_IE_F_P_Button_EFIS_G3X_Set)
EFIS_G3X__breaker_switch_Toggle#1 (>B:INSTRUMENT_IE_F_P_Button_EFIS_G3X_Toggle)
EFIS_G3X_breaker_switch_ON#1 (>B:INSTRUMENT_IE_F_P_Button_EFIS_G3X_Set)
ENG_START_breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_BUTTON_ENGSTART_G3X_Set)
ENG_START_breaker_switch_ON__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_ENGSTART_G3X_Set)
ENG_START_breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_ENGSTART_G3X_Toggle)
FLAPS_breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_BUTTON_FLAPS_G3X_Set)
FLAPS_breaker_switch_ON__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_FLAPS_G3X_Set)
FLAPS_breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_FLAPS_G3X_Toggle)
FUEL_PUMP_breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_BUTTON_FUELPUMP_G3X_Set)
FUEL_PUMP_breaker_switch_ON__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_FUELPUMP_G3X_Set)
FUEL_PUMP_breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_FUELPUMP_G3X_Toggle)
LAND_GEAR__breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_BUTTON_LANDGEAR_G3X_Set)
LAND_GEAR__breaker_switch_ON#1 (>B:INSTRUMENT_IE_F_P_BUTTON_LANDGEAR_G3X_Set)
LAND_GEAR__breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_LANDGEAR_G3X_Toggle)
Landing_gear_lights_dimmer__Arduino_potentiometer_#@ 10.23 / 0 max 100 min (>L:GEAR_DIMMER) @ 10.23 / 0 max 100 min (>K:LIGHT_POTENTIOMETER_1_SET) 
RADIO_breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_BUTTON_RADIO_G3X_Set)
RADIO_breaker_switch_ON__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_RADIO_G3X_Set)
RADIO_breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_RADIO_G3X_Toggle)
TRIM_breaker_switch_OFF__G3X_#0 (>B:INSTRUMENT_IE_F_P_BUTTON_TRIM_G3X_Set)
TRIM_breaker_switch_ON__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_TRIM_G3X_Set)
TRIM_breaker_switch_TOGGLE__G3X_#1 (>B:INSTRUMENT_IE_F_P_BUTTON_TRIM_G3X_Toggle)
//PropAir Flight/Shark 600 (MSFS2024)/Flaps
Flaps_0__up_#(>K:FLAPS_UP) 1 (>L:BLINK_FLAPS_CHECKED) 
Flaps_1#(>K:FLAPS_1)
Flaps_2#(>K:FLAPS_2)
Flaps_3#(>K:FLAPS_3)
//PropAir Flight/Shark 600 (MSFS2024)/Fuel
Fuel_selector_LEFT#0 (>B:INSTRUMENT_CPT_FUEL_SELECTOR_Set)
Fuel_selector_OFF__center_#1 (>B:INSTRUMENT_CPT_FUEL_SELECTOR_Set)
Fuel_selector_RIGHT#2 (>B:INSTRUMENT_CPT_FUEL_SELECTOR_Set)
//PropAir Flight/Shark 600 (MSFS2024)/Gear
Landing_gear_circuit_breaker_switch_OFF#0 (>B:INSTRUMENT_IE_F_P_Button_LANDGEAR_G3X_Set)
Landing_gear_circuit_breaker_switch_ON#1 (>B:INSTRUMENT_IE_F_P_Button_LANDGEAR_G3X_Set)
Landing_gear_circuit_breaker_switch_TOGGLE#1 (>B:INSTRUMENT_IE_F_P_Button_LANDGEAR_G3X_Toggle)
//PropAir Flight/Shark 600 (MSFS2024)/Lights (exterior)
POS_LIGHT_breaker_switch_OFF#0 (>B:INSTRUMENT_IE_F_P_BUTTON_POSLIGHT_Set)
POS_LIGHT_breaker_switch_ON#1 (>B:INSTRUMENT_IE_F_P_BUTTON_POSLIGHT_Set)
POS_LIGHT_breaker_switch_TOGGLE#1 (>B:INSTRUMENT_IE_F_P_BUTTON_POSLIGHT_Toggle)
//PropAir Flight/Shark 600 (MSFS2024)/Safety
Emergency_parachute_pin_INSERT#0 (>B:INSTRUMENT_CPT_Parachute_pin_Set)
Emergency_parachute_pin_REMOVE#1 (>B:INSTRUMENT_CPT_Parachute_pin_Set)
Emergency_parachute_pin_TOGGLE#1 (>B:INSTRUMENT_CPT_Parachute_pin_Toggle)
//SC Designs/F16C/Air Conditioning and Pressurization
F16C_RIGHT_AIRCOND_TEMP_0#0 (>L:AIRCOND)
F16C_RIGHT_AIRCOND_TEMP_1#1 (>L:AIRCOND)
F16C_RIGHT_AIRCOND_TEMP_2#2 (>L:AIRCOND)
F16C_RIGHT_AIRCOND_TEMP_3#3 (>L:AIRCOND)
F16C_RIGHT_AIRCOND_TEMP_4#4 (>L:AIRCOND)
F16C_RIGHT_AIRCOND_TEMP_5#5 (>L:AIRCOND)
F16C_RIGHT_AIRCOND_TEMP_6#6 (>L:AIRCOND)
F16C_RIGHT_AIRCOND_TEMP_DEC#(L:AIRCOND) -- 0 max (>L:AIRCOND)
F16C_RIGHT_AIRCOND_TEMP_INC#(L:AIRCOND) ++ 6 min (>L:AIRCOND)
F16C_RIGHT_AIR_SOURCE_DEC#(L:Air_Source) -- 0 max (>L:Air_Source)
F16C_RIGHT_AIR_SOURCE_DUMP#2 (>L:Air_Source)
F16C_RIGHT_AIR_SOURCE_INC#(L:Air_Source) ++ 3 min (>L:Air_Source)
F16C_RIGHT_AIR_SOURCE_NORM#1 (>L:Air_Source)
F16C_RIGHT_AIR_SOURCE_OFF#0 (>L:Air_Source)
F16C_RIGHT_AIR_SOURCE_RAM#3 (>L:Air_Source)
//SC Designs/F16C/Anti-Ice
F16C_RIGHT_PITOT_HEAT_TOGGLE#(>K:PITOT_HEAT_TOGGLE)
F16C_RIGHT_WINDSHIELD_DEICE_LOWER#2 (>L:XMLVAR_DeiceWindshield_1) (A:WINDSHIELD DEICE SWITCH,bool) if{ (>K:WINDSHIELD_DEICE_TOGGLE)
F16C_RIGHT_WINDSHIELD_DEICE_NORM#1 (>L:XMLVAR_DeiceWindshield_1) (A:WINDSHIELD DEICE SWITCH,bool) if{ (>K:WINDSHIELD_DEICE_TOGGLE)
F16C_RIGHT_WINDSHIELD_DEICE_UPPER#0 (>L:XMLVAR_DeiceWindshield_1) (A:WINDSHIELD DEICE SWITCH,bool) ! if{ (>K:WINDSHIELD_DEICE_TOGGLE)
//SC Designs/F16C/Autopilot
F16C_FRONT_AP_BARO_PUSH#1 (>K:BAROMETRIC)
F16C_FRONT_AP_CRS_DEC#(A:NAV OBS:1, degree) -- dnor (>K:VOR1_SET)
F16C_FRONT_AP_CRS_INC#(A:NAV OBS:1, degree) ++ dnor (>K:VOR1_SET)
F16C_FRONT_AP_CRS_SYNC_PUSH#(A:HEADING INDICATOR, degrees) (>K:VOR1_SET)
F16C_FRONT_AP_HDG_DEC#(A:AUTOPILOT HEADING LOCK DIR:1, degrees) -- dnor (>K:2:HEADING_BUG_SET)
F16C_FRONT_AP_HDG_INC#(A:AUTOPILOT HEADING LOCK DIR:1, degrees) ++ dnor (>K:2:HEADING_BUG_SET)
F16C_FRONT_AP_HDG_SYNC_PUSH#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
F16C_FRONT_PITCH_ALT_HOLD#0 (>L:PITCH_ALT_HOLD) (A:AUTOPILOT MASTER,bool) ! If{ (>K:AUTOPILOT_ON) } (A:AUTOPILOT ALTITUDE LOCK,bool) ! If{ (>K:AP_ALT_HOLD) }
F16C_FRONT_PITCH_AP_OFF#1 (>L:PITCH_ALT_HOLD) (A:AUTOPILOT MASTER,bool) if{ (>K:AUTOPILOT_OFF) } 0 (>K:AP_ALT_VAR_SET_ENGLISH) (>K:AP_ALT_HOLD_OFF) (A:AUTOPILOT PITCH HOLD,bool) if{ (>K:AP_PITCH_LEVELER_OFF) }
F16C_FRONT_PITCH_ATT_HOLD#2 (>L:PITCH_ALT_HOLD) (A:AUTOPILOT MASTER,bool) ! If{ (>K:AUTOPILOT_ON) } (A:AUTOPILOT PITCH HOLD,bool) ! If{ (>K:AP_PITCH_LEVELER_ON) }
F16C_FRONT_ROLL_HDG_SEL#0 (>L:MODE_HEADING)
F16C_FRONT_ROLL_STRG_SEL#1 (>L:MODE_HEADING)
F16C_LEFT_AP_ALT_HOLD_OFF#(>K:AP_ALT_HOLD_OFF)
F16C_LEFT_AP_ALT_HOLD_ON#(>K:AP_ALT_HOLD_ON)
F16C_LEFT_AP_ALT_HOLD_TOGGLE#(>K:AP_ALT_HOLD)
F16C_LEFT_AP_APP_HOLD_OFF#(A:AUTOPILOT APPROACH HOLD, Bool) if{ (>K:AP_APR_HOLD) }
F16C_LEFT_AP_APP_HOLD_ON#(A:AUTOPILOT APPROACH HOLD, Bool) ! if{ (>K:AP_APR_HOLD) }
F16C_LEFT_AP_APP_HOLD_TOGGLE#(>K:AP_APR_HOLD)
F16C_LEFT_AP_BC_HOLD_OFF#(A:AUTOPILOT BACKCOURSE HOLD, Bool) If{ (>K:AP_BC_HOLD) }
F16C_LEFT_AP_BC_HOLD_ON#(A:AUTOPILOT BACKCOURSE HOLD, Bool) ! If{ (>K:AP_BC_HOLD) }
F16C_LEFT_AP_BC_HOLD_TOGGLE#(>K:AP_BC_HOLD)
F16C_LEFT_AP_HDG_HOLD_OFF#(>K:AP_HDG_HOLD_OFF)
F16C_LEFT_AP_HDG_HOLD_ON#(>K:AP_HDG_HOLD_ON)
F16C_LEFT_AP_HDG_HOLD_TOGGLE#(>K:AP_PANEL_HEADING_HOLD)
F16C_LEFT_AP_IAS_HOLD_OFF#(A:AUTOPILOT THROTTLE ARM,bool) If{ (>K:AUTO_THROTTLE_ARM) 0 (>L:SIMVAR,bool) }
F16C_LEFT_AP_IAS_HOLD_ON#(A:AUTOPILOT THROTTLE ARM,bool) ! If{ (>K:AUTO_THROTTLE_ARM) 1 (>L:SIMVAR,bool) }
F16C_LEFT_AP_IAS_HOLD_TOGGLE#(>K:AUTO_THROTTLE_ARM) (L:SIMVAR,bool) ! (>L:SIMVAR,bool)
F16C_LEFT_AP_MASTER_OFF#(A:AUTOPILOT MASTER, Bool) if{ (>K:AP_MASTER) (>H:Generic_Autopilot_Manual_Off) }
F16C_LEFT_AP_MASTER_ON#(A:AUTOPILOT MASTER, Bool) ! if{ (>K:AP_MASTER) }
F16C_LEFT_AP_MASTER_TOGGLE#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } }
F16C_MFD_1_BUTTON_10_GpsNav1#(>K:TOGGLE_GPS_DRIVES_NAV1)
F16C_MFD_1_BUTTON_2_HdgHold#(>K:AP_PANEL_HEADING_HOLD)
F16C_MFD_1_BUTTON_9_Nav1Hold#(>K:AP_NAV1_HOLD)
F16C_MFD_2_BUTTON_10_FD#1 (>K:TOGGLE_FLIGHT_DIRECTOR)
F16C_MFD_2_BUTTON_1_ApSpdMod#(L:MODE_SPEED,bool) ! (>L:MODE_SPEED,bool)
F16C_MFD_2_BUTTON_2_ApAltMod#(L:MODE_ALTITUDE,bool) ! (>L:MODE_ALTITUDE,bool)
F16C_MFD_2_BUTTON_3_ApAltDec#(>K:AP_ALT_VAR_DEC)
F16C_MFD_2_BUTTON_4_ApAltHld#(>K:AP_ALT_HOLD)
F16C_MFD_2_BUTTON_5_ApAltInc#(>K:AP_ALT_VAR_INC)
F16C_MFD_2_BUTTON_6_ApLocHld#(>K:AP_LOC_HOLD) 
F16C_MFD_2_BUTTON_7_ApAprHld#(>K:AP_APR_HOLD)
F16C_MFD_2_BUTTON_8_ApBcHld#(>K:AP_BC_HOLD) 
F16C_MFD_2_BUTTON_9_ApTrkFpa#(L:XMLVAR_TRK_FPA_MODE_ACTIVE,bool) ! (>L:XMLVAR_TRK_FPA_MODE_ACTIVE,bool)
F16C_MFD_2_BUTTON_L1_ApSpdInc#(>K:AP_SPD_VAR_INC)
F16C_MFD_2_BUTTON_L2_ApSpdHld#(>K:AP_AIRSPEED_HOLD)
F16C_MFD_2_BUTTON_L3_ApSpdDec#(>K:AP_SPD_VAR_DEC)
F16C_MFD_2_BUTTON_L4_ApThrArm#(>K:AUTO_THROTTLE_ARM)
F16C_MFD_2_BUTTON_L5_SpdMach#(L:XMLVAR_AirSpeedIsInMach) ! (>L:XMLVAR_AirSpeedIsInMach)
F16C_MFD_2_BUTTON_R1_ApVsInc#(>K:AP_VS_VAR_INC)
F16C_MFD_2_BUTTON_R2_ApVsHld#(>K:AP_PANEL_VS_HOLD)
F16C_MFD_2_BUTTON_R3_ApVsDec#(>K:AP_VS_VAR_DEC)
F16C_MFD_2_BUTTON_R4_ApFlc#(>K:FLIGHT_LEVEL_CHANGE)
F16C_MFD_2_BUTTON_R5_Gcas#(L:GCAS) ! (>L:GCAS)
F16C_FRONT_AP_BARO_DEC#(>K:KOHLSMAN_DEC) (>H:AP_BARO_Down)
F16C_FRONT_AP_BARO_INC#(>K:KOHLSMAN_INC) (>H:AP_BARO_Up)
//SC Designs/F16C/Avionics
F16C_LEFT_CNI_MODE_AB#0 (>L:CNI_MODE)
F16C_LEFT_CNI_MODE_BACKUP#1 (>L:CNI_MODE)
F16C_LEFT_IFF_SELECTOR_DEC#(L:IFF_Selector) -- 0 max (>L:IFF_Selector)
F16C_LEFT_IFF_SELECTOR_EMER#4 (>L:IFF_Selector)
F16C_LEFT_IFF_SELECTOR_INC#(L:IFF_Selector) ++ 4 min (>L:IFF_Selector)
F16C_LEFT_IFF_SELECTOR_LOW#2 (>L:IFF_Selector)
F16C_LEFT_IFF_SELECTOR_NORM#3 (>L:IFF_Selector)
F16C_LEFT_IFF_SELECTOR_OFF#0 (>L:IFF_Selector)
F16C_LEFT_IFF_SELECTOR_STBY#1 (>L:IFF_Selector)
F16C_MFD_1_BUTTON_1_HdgMode#(L:MODE_HEADING,bool) ! (>L:MODE_HEADING,bool)
F16C_MFD_1_BUTTON_3_CurHdgSet#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
F16C_MFD_1_BUTTON_4_HdgVOR1#(A:HEADING INDICATOR, degrees) (>K:VOR1_SET)
F16C_MFD_1_BUTTON_5_YD#(>K:YAW_DAMPER_TOGGLE)
F16C_MFD_1_BUTTON_6_TerronND#(L:BTN_TERRONND_ACTIVE,bool) ! (>L:BTN_TERRONND_ACTIVE,bool)
F16C_MFD_1_BUTTON_7_WX#(L:BTN_WX_ACTIVE,bool) ! (>L:BTN_WX_ACTIVE,bool)
F16C_MFD_1_BUTTON_8_VORD#(>H:A320_Neo_MFD_BTN_VORD) (>H:A320_Neo_PFD_BTN_VORD) and
F16C_MFD_1_BUTTON_L1_MinsInc#(>H:B747_8_PFD_Mins_INC) (>H:B787_10_HUD_Mins_INC)
F16C_MFD_1_BUTTON_L2_MinsDec#(>H:B747_8_PFD_Mins_DEC) (>H:B787_10_HUD_Mins_DEC)
F16C_MFD_1_BUTTON_L3_NavaidOff#0 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
F16C_MFD_1_BUTTON_L4_RDF1#1 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
F16C_MFD_1_BUTTON_L5_VOR1#2 (>L:XMLVAR_NAV_AID_SWITCH_L1_State)
F16C_MFD_1_BUTTON_R1_BaroMinSel#(L:XMLVAR_Mins_Selector_Baro) ! (>L:XMLVAR_Mins_Selector_Baro)
F16C_MFD_1_BUTTON_R2_HpaHgSel#(L:XMLVAR_Baro_Selector_HPA_1) ! (>L:XMLVAR_Baro_Selector_HPA_1)
F16C_MFD_1_BUTTON_R3_NavaidOff#0 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
F16C_MFD_1_BUTTON_R4_RDF2#1 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
F16C_MFD_1_BUTTON_R5_VOR2#2 (>L:XMLVAR_NAV_AID_SWITCH_L2_State)
F16C_MFD_1_CORNER2_Down_RadModInc#(L:XMLVAR_A320_WeatherRadar_Mode) ++ 3 min (>L:XMLVAR_A320_WeatherRadar_Mode)
F16C_MFD_1_CORNER2_Up_RadModDec#(L:XMLVAR_A320_WeatherRadar_Mode) -- 0 max (>L:XMLVAR_A320_WeatherRadar_Mode)
F16C_MFD_1_UPPER_BUTTON_LEFT_Down_RangeInc#(L:A320_Neo_MFD_Range) ++ 5 min (>L:A320_Neo_MFD_Range)
F16C_MFD_1_UPPER_BUTTON_LEFT_Up_RangeDec#(L:A320_Neo_MFD_Range) -- 0 max (>L:A320_Neo_MFD_Range)
F16C_MFD_1_UPPER_BUTTON_RIGHT_Down_NavModeInc#(L:A320_Neo_MFD_NAV_MODE) ++ 4 min (>L:A320_Neo_MFD_NAV_MODE)
F16C_MFD_2_UPPER_BUTTON_LEFT_Down_SVTerr#(>H:B747_8_PFD_SVTTerrain_Toggle)
F16C_MFD_2_UPPER_BUTTON_LEFT_Up_SVTerr#(>H:B747_8_PFD_SVTTerrain_Toggle)
F16C_MFD_1_UPPER_BUTTON_RIGHT_Up_NavModeDec#(L:A320_Neo_MFD_NAV_MODE) -- 0 max (>L:A320_Neo_MFD_NAV_MODE)
//SC Designs/F16C/Controls
F16C_LEFT_ALT_FLAPS_EXTEND#1 (>L:ALT_FLAPS)
F16C_LEFT_ALT_FLAPS_NORM#0 (>L:ALT_FLAPS)
F16C_LEFT_AP_TRIM_Off#1 (>L:AP_TRIM,bool) 0 (>K:AUTOPILOT_DISENGAGE_SET)
F16C_LEFT_AP_TRIM_On#0 (>L:AP_TRIM,bool) 1 (>K:AUTOPILOT_DISENGAGE_SET)
F16C_LEFT_AP_TRIM_Toggle#(L:AP_TRIM,bool) s0 ! (>L:AP_TRIM) l0 (>K:AUTOPILOT_DISENGAGE_SET)
F16C_LEFT_EFLAPS_ENABLE#1 (>L:LE_FLAPS)
F16C_LEFT_EFLAPS_LOCK#0 (>L:LE_FLAPS)
F16C_LEFT_FLCS_BRT_OFF#0 (>L:FLCS_BRT) (L:FLCS_RESET,bool) if{ } els{ (A:FLY BY WIRE ELAC SWITCH:1, bool) ! If{ (>K:FLY_BY_WIRE_ELAC_TOGGLE) } }
F16C_LEFT_FLCS_BRT_ON#1 (>L:FLCS_BRT) (L:FLCS_RESET,bool) if{ } els{ (A:FLY BY WIRE ELAC SWITCH:1, bool) If{ (>K:FLY_BY_WIRE_ELAC_TOGGLE) } }
F16C_LEFT_FLCS_RESET_OFF#0 (>L:FLCS_RESET) (A:FLY BY WIRE ELAC SWITCH:1, bool) ! If{ (>K:FLY_BY_WIRE_ELAC_TOGGLE) } (A:FLY BY WIRE SEC SWITCH:1, bool) ! If{ (>K:FLY_BY_WIRE_SEC_TOGGLE) } (A:FLY BY WIRE FAC SWITCH:1, bool) ! If{ (>K:FLY_BY_WIRE_FAC_TOGGLE) } (L:FLCS_BRT, bool) if{ 0 (>L:FLCS_BRT) }
F16C_LEFT_FLCS_RESET_ON#1 (>L:FLCS_RESET) (A:FLY BY WIRE ELAC SWITCH:1, bool) If{ (>K:FLY_BY_WIRE_ELAC_TOGGLE) } (A:FLY BY WIRE SEC SWITCH:1, bool) If{ (>K:FLY_BY_WIRE_SEC_TOGGLE) } (A:FLY BY WIRE FAC SWITCH:1, bool) If{ (>K:FLY_BY_WIRE_FAC_TOGGLE) } (L:FLCS_BRT, bool) ! if{ 1 (>L:FLCS_BRT) }
F16C_LEFT_PITCH_TRIM_DOWN#(L:HANDLING_ElevatorTrim) 16 + 16384 min s0 (>K:ELEVATOR_TRIM_SET) l0 (>L:HANDLING_ElevatorTrim)
F16C_LEFT_ROLL_TRIM_L#(A:AILERON TRIM PCT,position 16k) 16 - -16384 max s0 (>K:AILERON_TRIM_SET_EX1) l0 (>L:HANDLING_AileronsTrim)
F16C_LEFT_ROLL_TRIM_R#(A:AILERON TRIM PCT,position 16k) 16 + 16384 min s0 (>K:AILERON_TRIM_SET_EX1) l0 (>L:HANDLING_AileronsTrim)
F16C_LEFT_YAW_TRIM_L#(A:RUDDER TRIM PCT, position 16k) 16 - -16384 max s0 (>K:RUDDER_TRIM_SET_EX1) l0 (>L:HANDLING_RudderTrim)
F16C_LEFT_YAW_TRIM_R#(A:RUDDER TRIM PCT, position 16k) 16 + 16384 min s0 (>K:RUDDER_TRIM_SET_EX1) l0 (>L:HANDLING_RudderTrim)
F16C_LEFT_PITCH_TRIM_UP#(L:HANDLING_ElevatorTrim) 16 - -16384 max s0 (>K:ELEVATOR_TRIM_SET) l0 (>L:HANDLING_ElevatorTrim)
//SC Designs/F16C/Electrical
F16C_RIGHT_ATT_FPM_OFF#0 (>L:ATT_FPM) 
F16C_RIGHT_ATT_FPM_ON#1 (>L:ATT_FPM) 
F16C_RIGHT_ATT_FPM_TOGGLE#(L:ATT_FPM) ! (>L:ATT_FPM)
F16C_RIGHT_DED_DATA_OFF#0 (>L:DED_DATA) 
F16C_RIGHT_DED_DATA_ON#1 (>L:DED_DATA) 
F16C_RIGHT_DED_DATA_TOGGLE#(L:DED_DATA) ! (>L:DED_DATA)
F16C_RIGHT_DEPR_RET_OFF#0 (>L:DEPR_RET) 
F16C_RIGHT_DEPR_RET_ON#1 (>L:DEPR_RET) 
F16C_RIGHT_DEPR_RET_TOGGLE#(L:DEPR_RET) ! (>L:DEPR_RET)
F16C_RIGHT_GENERATORS_OFF#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) if{ 1 0 (>K:2:ALTERNATOR_SET) }
F16C_RIGHT_GENERATORS_ON#(A:GENERAL ENG MASTER ALTERNATOR:1, Bool) ! if{ 1 1 (>K:2:ALTERNATOR_SET) }
F16C_RIGHT_GENERATORS_TOGGLE#1 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) ! (>K:2:ALTERNATOR_SET)
F16C_RIGHT_HUD_PWR_OFF#(A:CIRCUIT SWITCH ON:39, Bool) if{ 39 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
F16C_RIGHT_HUD_PWR_ON#(A:CIRCUIT SWITCH ON:39, Bool) ! if{ 39 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
F16C_RIGHT_HUD_PWR_TOGGLE#39 (>K:ELECTRICAL_CIRCUIT_TOGGLE)
F16C_RIGHT_MASTER_AVIONICS_OFF#(A:CIRCUIT SWITCH ON:23, Bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:BUS CONNECTION ON:4, Bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, Bool) if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:BUS CONNECTION ON:5, Bool) if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
F16C_RIGHT_MASTER_AVIONICS_ON#(A:CIRCUIT SWITCH ON:23, Bool) ! if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:BUS CONNECTION ON:4, Bool) ! if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, Bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:BUS CONNECTION ON:5, Bool) ! if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
F16C_RIGHT_MASTER_AVIONICS_TOGGLE#23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
F16C_RIGHT_MASTER_BATTERY_OFF#(A:ELECTRICAL MASTER BATTERY:1,bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
F16C_RIGHT_MASTER_BATTERY_ON#(A:ELECTRICAL MASTER BATTERY:1,bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
F16C_RIGHT_MASTER_BATTERY_TOGGLE#1 (>K:TOGGLE_MASTER_BATTERY)
F16C_RIGHT_RDR_ALT_OFF#0 (>L:RDR_ALT) 
F16C_RIGHT_RDR_ALT_ON#1 (>L:RDR_ALT) 
F16C_RIGHT_RDR_ALT_TOGGLE#(L:RDR_ALT) ! (>L:RDR_ALT)
//SC Designs/F16C/Engines
F16C_LEFT_AB_RESET_ENGDATA#0 (>L:ABRESET)
F16C_LEFT_AB_RESET_ON#1 (>L:ABRESET)
F16C_LEFT_AB_RESET_TOGGLE#(L:ABRESET) ! (>L:ABRESET)
F16C_LEFT_ENG_CONTI_PRI#1 (>L:ENG_CONTI)
F16C_LEFT_ENG_CONTI_SEC#0 (>L:ENG_CONTI)
F16C_LEFT_ENG_CONTI_TOGGLE#(L:ENG_CONTI) ! (>L:ENG_CONTI)
F16C_LEFT_ENG_STARTER_OFF#0 sp5 (A:TURB ENG IGNITION SWITCH EX1:1, enum) l5 != if{ l5 (>K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, Bool) if{ 0 (>K:STARTER1_SET) (>K:TOGGLE_STARTER1)(* Force disable starter *) }
F16C_LEFT_ENG_STARTER_ON#1 sp5 (A:TURB ENG IGNITION SWITCH EX1:1, enum) l5 != if{ l5 (>K:TURBINE_IGNITION_SWITCH_SET1) } (A:GENERAL ENG STARTER:1, Bool) ! if{ 1 (>K:STARTER1_SET) } 
F16C_LEFT_FLCS_OFF#0 (>L:FLCS)
F16C_LEFT_FLCS_ON#1 (>L:FLCS)
F16C_LEFT_FLCS_TOGGLE#(L:FLCS) ! (>L:FLCS)
//SC Designs/F16C/Flight Instrumentation
F16C_RIGHT_ALT_RADAR_0#0 (>L:ALT_RADAR)
F16C_RIGHT_ALT_RADAR_1#1 (>L:ALT_RADAR)
F16C_RIGHT_ALT_RADAR_OFF#2 (>L:ALT_RADAR)
F16C_RIGHT_CAS_GND_SPD#2 (>L:CAS)
F16C_RIGHT_CAS_OFF#1 (>L:CAS)
F16C_RIGHT_CAS_ON#0 (>L:CAS)
F16C_RIGHT_DAY_NIGHT_DOWN#2 (>L:DAY_NIGHT)
F16C_RIGHT_DAY_NIGHT_MID#1 (>L:DAY_NIGHT)
F16C_RIGHT_DAY_NIGHT_UP#0 (>L:DAY_NIGHT)
F16C_RIGHT_TEST_STEP_OFF#0 (>L:TEST_STEP)
F16C_RIGHT_TEST_STEP_ON#1 (>L:TEST_STEP)
//SC Designs/F16C/Fuel
F16C_FRONT_EXT_FUEL_TRANS_NORM#0 (>L:EXT_TRANSF) 16 (>K:FUEL_SELECTOR_SET)
F16C_FRONT_EXT_FUEL_TRANS_OFF#1 (>L:EXT_TRANSF) 1 (>K:FUEL_SELECTOR_SET)
F16C_FRONT_EXT_FUEL_TRANS_WING#2 (>L:EXT_TRANSF) 17 (>K:FUEL_SELECTOR_SET)
F16C_LEFT_AIR_REFUEL_CLOSE#0 (>L:Refuel_Switch,bool) 
F16C_LEFT_AIR_REFUEL_OPEN#1 (>L:Refuel_Switch,bool) (>K:ADD_FUEL_QUANTITY)
F16C_LEFT_ENG_FEED_AFT#2 (>L:ENG_FEED) (>K:SET_FUEL_TRANSFER_AFT)
F16C_LEFT_ENG_FEED_DEC#(L:ENG_FEED) -- 0 max (>L:ENG_FEED) l0 0 == if{ (>K:SET_FUEL_TRANSFER_OFF) } els{ l0 1 == if{ (>K:SET_FUEL_TRANSFER_AUTO) } els{ l0 2 == if{ (>K:SET_FUEL_TRANSFER_AFT) } els{ (>K:SET_FUEL_TRANSFER_FORWARD) } } }
F16C_LEFT_ENG_FEED_FWD#3 (>L:ENG_FEED) (>K:SET_FUEL_TRANSFER_FORWARD)
F16C_LEFT_ENG_FEED_INC#(L:ENG_FEED) ++ 3 min (>L:ENG_FEED) l0 0 == if{ (>K:SET_FUEL_TRANSFER_OFF) } els{ l0 1 == if{ (>K:SET_FUEL_TRANSFER_AUTO) } els{ l0 2 == if{ (>K:SET_FUEL_TRANSFER_AFT) } els{ (>K:SET_FUEL_TRANSFER_FORWARD) } } }
F16C_LEFT_ENG_FEED_NORM#1 (>L:ENG_FEED) (>K:SET_FUEL_TRANSFER_AUTO)
F16C_LEFT_ENG_FEED_OFF#0 (>L:ENG_FEED) (>K:SET_FUEL_TRANSFER_OFF)
F16C_LEFT_FUEL_MASTER_OFF#(A:GENERAL ENG FUEL VALVE:1, Bool) if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
F16C_LEFT_FUEL_MASTER_ON#(A:GENERAL ENG FUEL VALVE:1, Bool) ! if{ (>K:TOGGLE_FUEL_VALVE_ENG1) }
F16C_LEFT_TANK_INERTING_Off#0 (>L:Fuel_Dump_Switch,bool) (A:FUEL DUMP SWITCH,bool) If{ (>K:FUEL_DUMP_TOGGLE) }
F16C_LEFT_TANK_INERTING_On#1 (>L:Fuel_Dump_Switch,bool) (A:FUEL DUMP SWITCH,bool) ! If{ (>K:FUEL_DUMP_TOGGLE) }
F16C_LEFT_TANK_INERTING_Toggle#(L:Fuel_Dump_Switch,bool) ! (>L:Fuel_Dump_Switch,bool) (>K:FUEL_DUMP_TOGGLE)
//SC Designs/F16C/Gear
F16C_LEFT_BRAKE_ANTISKID_OFF#(A:ANTISKID BRAKES ACTIVE, Bool) If{ (>K:ANTISKID_BRAKES_TOGGLE) 0 (>L:HANDLING_Autobrakes_Position) }
F16C_LEFT_BRAKE_ANTISKID_ON#(A:ANTISKID BRAKES ACTIVE, Bool) ! If{ (>K:ANTISKID_BRAKES_TOGGLE) }
F16C_LEFT_BRAKE_ANTISKID_TOGGLE#(>K:ANTISKID_BRAKES_TOGGLE) (A:ANTISKID BRAKES ACTIVE, Bool) ! if{ 0 (>L:HANDLING_Autobrakes_Position) }
F16C_LEFT_LANDING_GEAR_DOWN#1 (>K:GEAR_SET)
F16C_LEFT_LANDING_GEAR_TOGGLE#(A:GEAR HANDLE POSITION, Bool) if{ 0 } els{ 1 } (>K:GEAR_SET)
F16C_LEFT_LANDING_GEAR_UP#0 (>K:GEAR_SET)
F16C_LEFT_PARKING_BRAKE_OFF#0 (>K:PARKING_BRAKE_SET)
F16C_LEFT_PARKING_BRAKE_ON#1 (>K:PARKING_BRAKE_SET)
F16C_LEFT_PARKING_BRAKE_TOGGLE#(>K:PARKING_BRAKES)
//SC Designs/F16C/Lights
F16C_LEFT_EXTLT_ANTICOL_OFF#1 0 (>K:2:STROBES_SET) 0 (>L:LIGHTING_STROBE_1)
F16C_LEFT_EXTLT_ANTICOL_ON#1 1 (>K:2:STROBES_SET) 1 (>L:LIGHTING_STROBE_1)
F16C_LEFT_EXTLT_FORMATION_OFF#0 (>L:Formation Lights)
F16C_LEFT_EXTLT_FORMATION_ON#1 (>L:Formation Lights)
F16C_LEFT_EXTLT_FORMATION_TOGGLE#(L:Formation Lights) ! (>L:Formation Lights)
F16C_LEFT_EXTLT_NAV_Knob_Dec# (L:LIGHTING_NAV_1) 5 - 0 max s0 (>L:LIGHTING_NAV_1) l0 8 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT NAV:1, Bool) s2 (L:LIGHTING_NAV_1) 0 > != if{ l2 ! 1 l0 (>K:2:NAV_LIGHTS_SET) }
F16C_LEFT_EXTLT_NAV_Knob_Inc# (L:LIGHTING_NAV_1) 5 + 100 min s0 (>L:LIGHTING_NAV_1) l0 8 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT NAV:1, Bool) s2 (L:LIGHTING_NAV_1) 0 > != if{ l2 ! 1 l0 (>K:2:NAV_LIGHTS_SET) }
F16C_LEFT_EXTLT_NAV_OFF#0 s0 (>L:LIGHTING_NAV_1) l0 8 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT NAV:1, Bool) s2 (L:LIGHTING_NAV_1) 0 > != if{ l2 ! 1 l0 (>K:2:NAV_LIGHTS_SET) }
F16C_LEFT_EXTLT_NAV_ON#1 s0 (>L:LIGHTING_NAV_1) l0 8 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT NAV:1, Bool) s2 (L:LIGHTING_NAV_1) 0 > != if{ l2 ! 1 l0 (>K:2:NAV_LIGHTS_SET) }
F16C_LEFT_EXTLT_POSITION_FLASH#1 1 (>K:2:LOGO_LIGHTS_SET) 1 (>L:LIGHTING_LOGO_1)
F16C_LEFT_EXTLT_POSITION_STEADY#1 0 (>K:2:LOGO_LIGHTS_SET) 0 (>L:LIGHTING_LOGO_1)
F16C_LEFT_EXTLT_REFUEL_DEC#(L:LIGHTING_RECOGNITION_1) 5 - 0 max s0 (>L:LIGHTING_RECOGNITION_1) l0 7 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT RECOGNITION:1, Bool) s2 (L:LIGHTING_RECOGNITION_1) 0 > != if{ l2 ! 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) }
F16C_LEFT_EXTLT_REFUEL_INC#(L:LIGHTING_RECOGNITION_1) 5 + 100 min s0 (>L:LIGHTING_RECOGNITION_1) l0 7 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT RECOGNITION:1, Bool) s2 (L:LIGHTING_RECOGNITION_1) 0 > != if{ l2 ! 1 l0 (>K:2:RECOGNITION_LIGHTS_SET) }
F16C_LEFT_LANDING_LIGHTS_OFF#1 0 (>K:2:LANDING_LIGHTS_SET)
F16C_LEFT_LANDING_LIGHTS_ON#1 1 (>K:2:LANDING_LIGHTS_SET)
F16C_LEFT_LANDING_LIGHTS_TOGGLE#1 (L:LIGHTING_LANDING_1) if{ 0 } els{ 1 } (>K:2:LANDING_LIGHTS_SET)
F16C_MFD_1_CORNER1_Down_BrtInc#(L:LIGHTING_POTENTIOMETER_11) 10 + 100 min s0 (>L:LIGHTING_POTENTIOMETER_11) l0 11 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_MFD_1_CORNER1_Up_BrtDec#(L:LIGHTING_POTENTIOMETER_11) 10 - 0 max s0 (>L:LIGHTING_POTENTIOMETER_11) l0 11 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_MFD_2_CORNER1_Down_BrtInc# (L:LIGHTING_POTENTIOMETER_12) 10 + 100 min s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_MFD_2_CORNER1_Up_BrtDec# (L:LIGHTING_POTENTIOMETER_12) 10 - 0 max s0 (>L:LIGHTING_POTENTIOMETER_12) l0 12 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_RIGHT_LIGHT_CABIN_DEC#(L:LIGHTING_CABIN_1) 5 - 0 max s0 (>L:LIGHTING_CABIN_1) l0 4 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) s2 (L:LIGHTING_CABIN_1) 0 > != if{ l2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) }
F16C_RIGHT_LIGHT_CABIN_INC#(L:LIGHTING_CABIN_1) 5 + 100 min s0 (>L:LIGHTING_CABIN_1) l0 4 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) s2 (L:LIGHTING_CABIN_1) 0 > != if{ l2 ! 1 l0 (>K:2:CABIN_LIGHTS_SET) }
F16C_RIGHT_LIGHT_CONSOLE_DEC#(>L:LIGHTING_POTENTIOMETER_9) 5 - 0 max s0 (>L:LIGHTING_POTENTIOMETER_9) l0 9 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_RIGHT_LIGHT_CONSOLE_INC#(>L:LIGHTING_POTENTIOMETER_9) 5 + 100 min s0 (>L:LIGHTING_POTENTIOMETER_9) l0 9 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_RIGHT_LIGHT_DED_DEC#(L:LIGHTING_POTENTIOMETER_13) 5 - 0 max s0 (>L:LIGHTING_POTENTIOMETER_13) l0 13 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_RIGHT_LIGHT_DED_INC#(L:LIGHTING_POTENTIOMETER_13) 5 + 100 min s0 (>L:LIGHTING_POTENTIOMETER_13) l0 13 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_RIGHT_LIGHT_INSTR_FLOOD_DEC#(L:LIGHTING_POTENTIOMETER_2) 5 - 0 max s0 (>L:LIGHTING_POTENTIOMETER_2) l0 2 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_RIGHT_LIGHT_INSTR_FLOOD_INC#(L:LIGHTING_POTENTIOMETER_2) 5 + 100 min s0 (>L:LIGHTING_POTENTIOMETER_2) l0 2 (>K:2:LIGHT_POTENTIOMETER_SET)
F16C_RIGHT_LIGHT_MAIL_FLOOD_DEC#(L:LIGHTING_PEDESTRAL_1) 5 - 0 max s0 (>L:LIGHTING_PEDESTRAL_1) l0 6 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT PEDESTRAL:1, Bool) s2 (L:LIGHTING_PEDESTRAL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PEDESTRAL_LIGHTS_SET) }
F16C_RIGHT_LIGHT_MAIL_FLOOD_INC#(L:LIGHTING_PEDESTRAL_1) 5 + 100 min s0 (>L:LIGHTING_PEDESTRAL_1) l0 6 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT PEDESTRAL:1, Bool) s2 (L:LIGHTING_PEDESTRAL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PEDESTRAL_LIGHTS_SET) }
F16C_RIGHT_LIGHT_PANEL_DEC#(L:LIGHTING_PANEL_1) 5 - 0 max s0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT PANEL:1, Bool) s2 (L:LIGHTING_PANEL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }
F16C_RIGHT_LIGHT_PANEL_INC#(L:LIGHTING_PANEL_1) 5 + 100 min s0 (>L:LIGHTING_PANEL_1) l0 3 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT PANEL:1, Bool) s2 (L:LIGHTING_PANEL_1) 0 > != if{ l2 ! 1 l0 (>K:2:PANEL_LIGHTS_SET) }
//SC Designs/F16C/MCDU
F16C_DED_1#(>H:A320_Neo_CDU_BTN_L1)
F16C_DED_10#(>H:A320_Neo_CDU_BTN_R4)
F16C_DED_11#(>H:A320_Neo_CDU_BTN_R5)
F16C_DED_12#(>H:A320_Neo_CDU_BTN_R6)
F16C_DED_2#(>H:A320_Neo_CDU_BTN_L2)
F16C_DED_3#(>H:A320_Neo_CDU_BTN_L3)
F16C_DED_4#(>H:A320_Neo_CDU_BTN_L4)
F16C_DED_5#(>H:A320_Neo_CDU_BTN_L5)
F16C_DED_6#(>H:A320_Neo_CDU_BTN_L6)
F16C_DED_7#(>H:A320_Neo_CDU_BTN_R1)
F16C_DED_8#(>H:A320_Neo_CDU_BTN_R2)
F16C_DED_9#(>H:A320_Neo_CDU_BTN_R3)
F16C_KEYPAD_0#(>H:A320_Neo_CDU_BTN_0)
F16C_KEYPAD_1#(>H:A320_Neo_CDU_BTN_1)
F16C_KEYPAD_2#(>H:A320_Neo_CDU_BTN_2)
F16C_KEYPAD_3#(>H:A320_Neo_CDU_BTN_3)
F16C_KEYPAD_4#(>H:A320_Neo_CDU_BTN_4)
F16C_KEYPAD_5#(>H:A320_Neo_CDU_BTN_5)
F16C_KEYPAD_6#(>H:A320_Neo_CDU_BTN_6)
F16C_KEYPAD_7#(>H:A320_Neo_CDU_BTN_7)
F16C_KEYPAD_8#(>H:A320_Neo_CDU_BTN_8)
F16C_KEYPAD_9#(>H:A320_Neo_CDU_BTN_9)
F16C_KEYPAD_BRT_KNOB_Down#0 (>L:BRT)
F16C_KEYPAD_BRT_KNOB_Up#1 (>L:BRT)
F16C_KEYPAD_CLR_Press#(E:SIMULATION TIME, second) 1 + (>L:MF_Btn_time)
F16C_KEYPAD_CLR_Release#(E:SIMULATION TIME, second) (L:MF_Btn_time) > if{ (>H:A320_Neo_CDU_BTN_CLR) } 0 (>L:MF_Btn_time)
F16C_KEYPAD_CONT_KNOB_Down#0 (>L:CONT)
F16C_KEYPAD_CONT_KNOB_Up#1 (>L:CONT)
F16C_KEYPAD_DATA#(>H:A320_Neo_CDU_BTN_FPLN)
F16C_KEYPAD_DRIFT_SWITCH_Down#2 (>L:DRIFT)
F16C_KEYPAD_DRIFT_SWITCH_Up#0 (>L:DRIFT)
F16C_KEYPAD_GAIN_SWITCH_Down#2 (>L:GAIN)
F16C_KEYPAD_GAIN_SWITCH_Mid#1 (>L:GAIN)
F16C_KEYPAD_GAIN_SWITCH_Up#0 (>L:GAIN)
F16C_KEYPAD_IP#(>H:A320_Neo_CDU_BTN_DATA)
F16C_KEYPAD_MARK#(>H:A320_Neo_CDU_BTN_PROG)
F16C_KEYPAD_MCDUL_OVFR#(>H:A320_Neo_CDU_1_BTN_OVFY)
F16C_KEYPAD_MENU#(>H:A320_Neo_CDU_BTN_DIR)
F16C_KEYPAD_NAV#(>H:A320_Neo_CDU_BTN_RAD)
F16C_KEYPAD_NEXT#(>H:A320_Neo_CDU_BTN_NEXTPAGE)
F16C_KEYPAD_PREV#(>H:A320_Neo_CDU_BTN_PREVPAGE)
F16C_KEYPAD_RET_DEPR_KNOB_Down#0 (>RET_DEPR)
F16C_KEYPAD_RET_DEPR_KNOB_Up#1 (>RET_DEPR)
F16C_KEYPAD_RTN_SEQ_SWITCH_Down#2 (>L:RTN_SEQ) (>H:A320_Neo_CDU_BTN_UP)
F16C_KEYPAD_RTN_SEQ_SWITCH_Up#0 (>L:RTN_SEQ) (>H:A320_Neo_CDU_BTN_DOWN)
F16C_KEYPAD_SHF#(>H:A320_Neo_CDU_BTN_INIT)
F16C_KEYPAD_SYM_KNOB_Down#1 (>L:SYM)
F16C_KEYPAD_SYM_KNOB_Up#0 (>L:SYM)
F16C_KEYPAD_0_-_DUPLICATE#(>H:A320_Neo_CDU_BTN_0)
//SC Designs/F16C/Miscellaneous
F16C_CANOPY_LEVER#(L:Canopy Lever) ! (>L:Canopy Lever)
F16C_LEFT_GND_JETT_ENABLE#1 (>L:GND_JETT,bool)
F16C_LEFT_GND_JETT_OFF#0 (>L:GND_JETT,bool)
F16C_LEFT_GND_JETT_TOGGLE#(L:GND_JETT,bool) ! (>L:GND_JETT,bool)
F16C_LEFT_STORES_CAT_1#0 (>L:STORES_CAT)
F16C_LEFT_STORES_CAT_3#1 (>L:STORES_CAT)
F16C_LEFT_STORES_CAT_TOGGLE#(L:STORES_CAT) ! (>L:STORES_CAT)
F16C_LEFT_TAILHOOK_DOWN#1 (>L:Tailhook,bool)
F16C_LEFT_TAILHOOK_TOGGLE#(L:Tailhook,bool) ! (>L:Tailhook,bool)
F16C_LEFT_TAILHOOK_UP#0 (>L:Tailhook,bool)
F16C_RIGHT_AUDIO_IN_TOGGLE#(L:AUDIO_IN) ! (>L:AUDIO_IN)
F16C_RIGHT_CHOCKS_SWITCH_TOGGLE#(L:Chocks Switch) ! (>L:Chocks Switch)
F16C_RIGHT_COVERS_SWITCH_TOGGLE#(L:Covers Switch) ! (>L:Covers Switch)
F16C_RIGHT_HANDLE_TOGGLE#(L:RIGHT_HANDLE) ! (>L:RIGHT_HANDLE)
F16C_RIGHT_KY_58_VOL_TOGGLE#(L:KY_58_VOL) ! (>L:KY_58_VOL)
F16C_RIGHT_LADDER_SWITCH_TOGGLE#(L:Ladder_Switch) ! (>L:Ladder_Switch)
F16C_RIGHT_MASK_SWITCH_TOGGLE#(L:MaskSwitch) ! (>L:MaskSwitch)
F16C_RIGHT_MODE_C_SET_TOGGLE#(L:MODE_C_SET) ! (>L:MODE_C_SET)
F16C_RIGHT_MODE_C_TOGGLE#(L:MODE_C) ! (>L:MODE_C)
F16C_RIGHT_OXYGEN_REG_L_TOGGLE#(L:OXY_REG) ! (>L:OXY_REG)
F16C_RIGHT_OXYGEN_REG_R_TOGGLE#(L:OXY_REG_R) ! (>L:OXY_REG_R)
F16C_RIGHT_SWITCH_SMOKE_OFF#0 (>L:Smoke Visibility)
F16C_RIGHT_SWITCH_SMOKE_ON#1 (>L:Smoke Visibility)
F16C_RIGHT_SWITCH_SMOKE_TOGGLE#(L:Smoke Visibility) ! (>L:Smoke Visibility)
F16C_RIGHT_TD_ON_TOGGLE#(L:TD_ON) ! (>L:TD_ON)
F16C_RIGHT_VISOR_SWITCH_TOGGLE#(L:VisorSwitch) ! (>L:VisorSwitch)
//SC Designs/F16C/Navigation
F16C_LEFT_GPS_NAV_PUSH#(>K:TOGGLE_GPS_DRIVES_NAV1) (L:NAVGPS,bool) ! (>L:NAVGPS,bool)
//SC Designs/F16C/Radio
F16C_LEFT_ADF_100_DEC#(>K:ADF_100_DEC)
F16C_LEFT_ADF_100_INC#(>K:ADF_100_INC)
F16C_LEFT_ADF_1_10_DEC#(L:XMLVAR_ADF_Frequency_10_Khz) if{ (>K:ADF_10_DEC) } els{ (>K:ADF_1_DEC) } 
F16C_LEFT_ADF_1_10_INC#(L:XMLVAR_ADF_Frequency_10_Khz) if{ (>K:ADF_10_INC) } els{ (>K:ADF_1_INC) } 
F16C_LEFT_ADF_1_10_TOGGLE#(L:XMLVAR_ADF_Frequency_10_Khz) ! (>L:XMLVAR_ADF_Frequency_10_Khz)
F16C_LEFT_ADF_VOL_DEC#(>K:ADF_VOLUME_DEC) 
F16C_LEFT_ADF_VOL_INC#(>K:ADF_VOLUME_INC) 
F16C_LEFT_COM1_KHZ_DEC#(>K:COM_RADIO_FRACT_DEC)
F16C_LEFT_COM1_KHZ_INC#(>K:COM_RADIO_FRACT_INC)
F16C_LEFT_COM1_MHZ_DEC#(>K:COM_RADIO_WHOLE_DEC)
F16C_LEFT_COM1_MHZ_INC#(>K:COM_RADIO_WHOLE_INC)
F16C_LEFT_COM1_SWAP_PUSH#(>K:COM1_RADIO_SWAP)
F16C_LEFT_MSL_TOGGLE#(L:MSL_INC,bool) ! (>L:MSL_INC,bool)
F16C_LEFT_NAV1_KHZ_DEC#(>K:NAV1_RADIO_FRACT_DEC)
F16C_LEFT_NAV1_KHZ_INC#(>K:NAV1_RADIO_FRACT_INC)
F16C_LEFT_NAV1_MHZ_DEC#(>K:NAV1_RADIO_WHOLE_DEC)
F16C_LEFT_NAV1_MHZ_INC#(>K:NAV1_RADIO_WHOLE_INC)
F16C_LEFT_NAV1_SWAP_PUSH#(>K:NAV1_RADIO_SWAP)
F16C_LEFT_THREAT_TOGGLE#(L:THREAT,bool) ! (>L:THREAT,bool)
F16C_LEFT_XPNDR_KNOB_1_DEC#(>K:XPNDR_1000_DEC)
F16C_LEFT_XPNDR_KNOB_1_INC#(>K:XPNDR_1000_INC)
F16C_LEFT_XPNDR_KNOB_2_DEC#(>K:XPNDR_100_DEC)
F16C_LEFT_XPNDR_KNOB_2_INC#(>K:XPNDR_100_INC)
F16C_LEFT_XPNDR_KNOB_3_DEC#(>K:XPNDR_10_DEC)
F16C_LEFT_XPNDR_KNOB_3_INC#(>K:XPNDR_10_INC)
F16C_LEFT_XPNDR_KNOB_4_DEC#(>K:XPNDR_1_DEC)
F16C_LEFT_XPNDR_KNOB_4_INC#(>K:XPNDR_1_INC)
F16C_LEFT_XPNDR_MODE_OFF#0 (>A:TRANSPONDER STATE:1, enum)
F16C_LEFT_XPNDR_MODE_STBY#1 (>A:TRANSPONDER STATE:1, enum)
F16C_LEFT_XPNDR_MODE_TA#3 (>A:TRANSPONDER STATE:1, enum)
F16C_LEFT_XPNDR_MODE_TARA#4 (>A:TRANSPONDER STATE:1, enum)
F16C_LEFT_XPNDR_MODE_XPNDR#2 (>A:TRANSPONDER STATE:1, enum)
//SC Designs/F16C/Warning System
F16C_LEFT_CMDS_01_OFF#0 (>L:01_ON,bool)
F16C_LEFT_CMDS_01_ON#1 (>L:01_ON,bool)
F16C_LEFT_CMDS_01_TOGGLE#(L:01_ON,bool) ! (>L:01_ON,bool)
F16C_LEFT_CMDS_02_OFF#0 (>L:02_ON,bool)
F16C_LEFT_CMDS_02_ON#1 (>L:02_ON,bool)
F16C_LEFT_CMDS_02_TOGGLE#(L:02_ON,bool) ! (>L:02_ON,bool)
F16C_LEFT_CMDS_CH_OFF#0 (>L:03_ON,bool)
F16C_LEFT_CMDS_CH_ON#1 (>L:03_ON,bool)
F16C_LEFT_CMDS_CH_TOGGLE#(L:03_ON,bool) ! (>L:03_ON,bool)
F16C_LEFT_CMDS_FL_OFF#0 (>L:04_ON,bool)
F16C_LEFT_CMDS_FL_ON#1 (>L:04_ON,bool)
F16C_LEFT_CMDS_FL_TOGGLE#(L:04_ON,bool) ! (>L:04_ON,bool)
F16C_LEFT_JETT_OFF#0 (>L:JETT,bool)
F16C_LEFT_JETT_ON#1 (>L:JETT,bool)
F16C_LEFT_JETT_TOGGLE#(L:JETT,bool) ! (>L:JETT,bool)
F16C_LEFT_MODE_AUTO#4 (>L:CMDS_MODE)
F16C_LEFT_MODE_BYP#5 (>L:CMDS_MODE)
F16C_LEFT_MODE_DEC#(L:CMDS_MODE) -- 0 max (>L:CMDS_MODE)
F16C_LEFT_MODE_INC#(L:CMDS_MODE) ++ 5 min (>L:CMDS_MODE)
F16C_LEFT_MODE_MAN#2 (>L:CMDS_MODE)
F16C_LEFT_MODE_OFF#0 (>L:CMDS_MODE)
F16C_LEFT_MODE_SEM#3 (>L:CMDS_MODE)
F16C_LEFT_MODE_STBY#1 (>L:CMDS_MODE)
F16C_LEFT_MWS_B_OFF#0 (>L:MWS_ON_B,bool)
F16C_LEFT_MWS_B_ON#1 (>L:MWS_ON_B,bool)
F16C_LEFT_MWS_B_TOGGLE#(L:MWS_ON_B,bool) ! (>L:MWS_ON_B,bool)
F16C_LEFT_MWS_OFF#0 (>L:MWS_ON,bool)
F16C_LEFT_MWS_ON#1 (>L:MWS_ON,bool)
F16C_LEFT_MWS_TOGGLE#(L:MWS_ON,bool) ! (>L:MWS_ON,bool)
F16C_LEFT_PRGM_1#1 (>L:PRGM)
F16C_LEFT_PRGM_2#2 (>L:PRGM)
F16C_LEFT_PRGM_3#3 (>L:PRGM)
F16C_LEFT_PRGM_4#4 (>L:PRGM)
F16C_LEFT_PRGM_DEC#(L:PRGM) -- 0 max (>L:PRGM)
F16C_LEFT_PRGM_INC#(L:PRGM) ++ 4 min (>L:PRGM)
F16C_LEFT_PRGM_OFF#0 (>L:PRGM)
F16C_LEFT_RWR_OFF#0 (>L:RWR_ON,bool)
F16C_LEFT_RWR_ON#1 (>L:RWR_ON,bool)
F16C_LEFT_RWR_TOGGLE#(L:RWR_ON,bool) ! (>L:RWR_ON,bool)
F16C_LEFT_SYMBOLOGY_OFF#0 (>L:CYLINDER1,bool)
F16C_LEFT_SYMBOLOGY_ON#1 (>L:CYLINDER1,bool)
F16C_LEFT_SYMBOLOGY_TOGGLE#(L:CYLINDER1,bool) ! (>L:CYLINDER1,bool)
F16C_LEFT_TWR_SET_OFF#0 (>L:TWR_SET,bool)
F16C_LEFT_TWR_SET_ON#1 (>L:TWR_SET,bool)
F16C_LEFT_TWR_SET_TOGGLE#(L:TWR_SET,bool) ! (>L:TWR_SET,bool)
F16C_LEFT_TWR_VOL_OFF#0 (>L:TWR_VOL,bool)
F16C_LEFT_TWR_VOL_ON#1 (>L:TWR_VOL,bool)
F16C_LEFT_TWR_VOL_TOGGLE#(L:TWR_VOL,bool) ! (>L:TWR_VOL,bool)
//SC Designs/F16C/Weapons
F16C_FRONT_LASER_ARM#0 (>L:LASER_ARM)
F16C_FRONT_LASER_OFF#1 (>L:LASER_ARM)
F16C_FRONT_LASER_TOGGLE#(L:LASER_ARM) ! (>L:LASER_ARM)
F16C_FRONT_RF_ECM#2 (>L:ECM_ARM)
F16C_FRONT_RF_NORM#0 (>L:ECM_ARM)
F16C_FRONT_RF_SILENT#1 (>L:ECM_ARM)
F16C_FRONT_ARM_SIMULATE#2 (>L:MASTER_ARM)
F16C_FRONT_MASTER_ARM_OFF#1 (>L:MASTER_ARM)
F16C_FRONT_MASTER_ARM_ON#0 (>L:MASTER_ARM)
//Salty/747-8i/ADIRS
IRS_1_NAV#2 (>L:B748_IRS_Knob_State:1)
IRS_2_NAV#2 (>L:B748_IRS_Knob_State:2)
IRS_3_NAV#2 (>L:B748_IRS_Knob_State:3)
//Salty/747-8i/Autopilot
Autopilot_Speed_Knob_Dec#(L:XMLVAR_AirSpeedIsInMach) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 - 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 - 0 max (>K:2:AP_SPD_VAR_SET) } 
Autopilot_Speed_Knob_Inc#(L:XMLVAR_AirSpeedIsInMach) if{ 1 (A:AUTOPILOT MACH HOLD VAR:1, mach) 0.01 + 100 * (>K:2:AP_MACH_VAR_SET) } els{ 1 (A:AUTOPILOT AIRSPEED HOLD VAR:1, knots) 1 + 0 max (>K:2:AP_SPD_VAR_SET) } 
//SimWorks Studios/Kodiak 100/Air Conditioning
Kodiak100_Aircon_ACCS_Passenger_toggle#(L:KodiakAC_ACCS_Passenger, Bool) ! (>L:KodiakAC_ACCS_Passenger, Bool)
Kodiak100_Aircon_ACCS_Pilot_toggle#(L:KodiakAC_ACCS_Pilot, Bool) ! (>L:KodiakAC_ACCS_Pilot, Bool)
Kodiak100_Aircon_AC_toggle#(L:KodiakAC_Compressor, Bool) ! (>L:KodiakAC_Compressor, Bool)
Kodiak100_Aircon_Defog_toggle#(L:KodiakAC_Defog, Bool) ! (>L:KodiakAC_Defog, Bool)
Kodiak100_Aircon_Fan_Passenger_Auto_toggle#(L:KodiakAC_Auto_Passenger, Bool) ! (>L:KodiakAC_Auto_Passenger, Bool)
Kodiak100_Aircon_Fan_Passenger_dec#-1 (L:KodiakAC_Fanspeed_Passenger, enum) + 0 max 10 min (>L:KodiakAC_FanSpeed_Passenger, Enum)
Kodiak100_Aircon_Fan_Passenger_inc#1 (L:KodiakAC_Fanspeed_Passenger, enum) + 0 max 10 min (>L:KodiakAC_FanSpeed_Passenger, Enum)
Kodiak100_Aircon_Fan_Pilot_Auto_toggle#(L:KodiakAC_Auto_Pilot, Bool) ! (>L:KodiakAC_Auto_Pilot, Bool)
Kodiak100_Aircon_Fan_Pilot_dec#-1 (L:KodiakAC_Fanspeed_Pilot, enum) + 0 max 10 min (>L:KodiakAC_FanSpeed_Pilot, Enum)
Kodiak100_Aircon_Fan_Pilot_inc#1 (L:KodiakAC_Fanspeed_Pilot, enum) + 0 max 10 min (>L:KodiakAC_FanSpeed_Pilot, Enum)
Kodiak100_Aircon_Floor_Vent_toggle#(L:KodiakAC_FloorVentOpen, Bool) ! (>L:KodiakAC_FloorVentOpen, Bool)
Kodiak100_Aircon_Heater_L1_toggle#(L:KodiakAC_HeaterL1, Bool) ! (>L:KodiakAC_HeaterL1, Bool)
Kodiak100_Aircon_Heater_L2_toggle#(L:KodiakAC_HeaterL2, Bool) ! (>L:KodiakAC_HeaterL2, Bool)
Kodiak100_Aircon_Heater_L3_toggle#(L:KodiakAC_HeaterL3, Bool) ! (>L:KodiakAC_HeaterL3, Bool)
Kodiak100_Aircon_Heater_R1_toggle#(L:KodiakAC_HeaterR1, Bool) ! (>L:KodiakAC_HeaterR1, Bool)
Kodiak100_Aircon_Heater_R2_toggle#(L:KodiakAC_HeaterR2, Bool) ! (>L:KodiakAC_HeaterR2, Bool)
Kodiak100_Aircon_Heater_R3_toggle#(L:KodiakAC_HeaterR3, Bool) ! (>L:KodiakAC_HeaterR3, Bool)
Kodiak100_Aircon_Heater_R4_toggle#(L:KodiakAC_HeaterR4, Bool) ! (>L:KodiakAC_HeaterR4, Bool)
Kodiak100_Aircon_Heater_R5_toggle#(L:KodiakAC_HeaterR5, Bool) ! (>L:KodiakAC_HeaterR5, Bool)
Kodiak100_Aircon_Max_Fresh_Air_Aft_toggle#(L:KodiakAC_MaxFreshAirAft, Bool) ! (>L:KodiakAC_MaxFreshAirAft, Bool)
Kodiak100_Aircon_Max_Fresh_Air_Fwd_toggle#(L:KodiakAC_MaxFreshAirFwd, Bool) ! (>L:KodiakAC_MaxFreshAirFwd, Bool)
Kodiak100_Aircon_Page_toggle#(L:KodiakAC_SwitchPage, Bool) ! (>L:KodiakAC_SwitchPage, Bool)
Kodiak100_Aircon_Temp_Passenger_dec#(L:KodiakAC_TemperatureUnitsSel, Bool) if{ -1 (L:KodiakAC_TempSet_Passenger, Fahrenheit) near + 66 max 84 min (>L:KodiakAC_TempSet_Passenger, Fahrenheit) } els{ -1 (L:KodiakAC_TempSet_Passenger, Celsius) near + 19 max 29 min (>L:KodiakAC_TempSet_Passenger, Celsius) }
Kodiak100_Aircon_Temp_Passenger_inc#(L:KodiakAC_TemperatureUnitsSel, Bool) if{ 1 (L:KodiakAC_TempSet_Passenger, Fahrenheit) near + 66 max 84 min (>L:KodiakAC_TempSet_Passenger, Fahrenheit) } els{ 1 (L:KodiakAC_TempSet_Passenger, Celsius) near + 19 max 29 min (>L:KodiakAC_TempSet_Passenger, Celsius) }
Kodiak100_Aircon_Temp_Pilot_dec#(L:KodiakAC_TemperatureUnitsSel, Bool) if{ -1 (L:KodiakAC_TempSet_Pilot, Fahrenheit) near + 66 max 84 min (>L:KodiakAC_TempSet_Pilot, Fahrenheit) } els{ -1 (L:KodiakAC_TempSet_Pilot, Celsius) near + 19 max 29 min (>L:KodiakAC_TempSet_Pilot, Celsius) }
Kodiak100_Aircon_Temp_Pilot_inc#(L:KodiakAC_TemperatureUnitsSel, Bool) if{ 1 (L:KodiakAC_TempSet_Pilot, Fahrenheit) near + 66 max 84 min (>L:KodiakAC_TempSet_Pilot, Fahrenheit) } els{ 1 (L:KodiakAC_TempSet_Pilot, Celsius) near + 19 max 29 min (>L:KodiakAC_TempSet_Pilot, Celsius) }
Kodiak100_Aircon_Temp_Unit_toggle#(L:KodiakAC_TemperatureUnitsSel, Bool) ! (>L:KodiakAC_TemperatureUnitsSel, Bool)
//SimWorks Studios/Kodiak 100/Anti-Ice
Kodiak100_DEICE_Pitot_1_OFF#1 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_1)
Kodiak100_DEICE_Pitot_1_ON#1 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_1)
Kodiak100_DEICE_Pitot_2_OFF#2 0 (>K:2:PITOT_HEAT_SET) 0 (>L:DEICE_Pitot_2)
Kodiak100_DEICE_Pitot_2_ON#2 1 (>K:2:PITOT_HEAT_SET) 1 (>L:DEICE_Pitot_2)
KODIAK_100_DEICE_WINDSHIELD_OFF#(A:WINDSHIELD DEICE SWITCH, Bool) if{ (>K:WINDSHIELD_DEICE_TOGGLE) }
KODIAK_100_DEICE_WINDSHIELD_ON#(A:WINDSHIELD DEICE SWITCH, Bool) ! if{ (>K:WINDSHIELD_DEICE_TOGGLE) }
KODIAK_100_DEICE_WINDSHIELD_TOGGLE#(>K:WINDSHIELD_DEICE_TOGGLE)
//SimWorks Studios/Kodiak 100/Autopilot
Kodiak_100_AP_VS_control_DN#(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{  (L:XMLVAR_AirSpeedIsInMach, Bool) if{  (A:AUTOPILOT MACH HOLD VAR, Number) 1 + 0 max (>K:AP_MACH_VAR_SET)  } els{  (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 + 0 max (>K:AP_SPD_VAR_SET)  } } els{  (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{  1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 - (>K:2:AP_VS_VAR_SET_ENGLISH)  } els{  (A:AUTOPILOT PITCH HOLD REF, degrees) 0.2 + 25 / 1 min -1 max 16348 * (>K:AP_PITCH_REF_SET)  } }
Kodiak_100_AP_VS_control_UP#(A:AUTOPILOT FLIGHT LEVEL CHANGE, Bool) if{  (L:XMLVAR_AirSpeedIsInMach, Bool) if{  (A:AUTOPILOT MACH HOLD VAR, Number) 1 - 0 max (>K:AP_MACH_VAR_SET)  } els{  (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 1 - 0 max (>K:AP_SPD_VAR_SET)  } } els{  (A:AUTOPILOT VERTICAL HOLD:1, Bool) if{  1 (A:AUTOPILOT VERTICAL HOLD VAR:1, Feet per minute) 100 + (>K:2:AP_VS_VAR_SET_ENGLISH)  } els{  (A:AUTOPILOT PITCH HOLD REF, degrees) -0.2 + 25 / 1 min -1 max 16348 * (>K:AP_PITCH_REF_SET)  } }
//SimWorks Studios/Kodiak 100/Electrical
Battery_Master_Off#(A:ELECTRICAL MASTER BATTERY:1, Bool) 1 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
Battery_Master_On#(A:ELECTRICAL MASTER BATTERY:1, Bool) 0 == if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
Cabin_Lights_OFF#0 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Bool)
Cabin_Lights_ON#2 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Bool)
ELT_ON#2(>L:Switch_ELT_1, Enum)
KODIAK_100_Starter_Switch_Low#0 (>L:SWS_ENGINE_Switch_Starter_ThreeState_1, Enum)
Kodiak100_Alternator_Off#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) } 
Kodiak100_Alternator_On#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) } 
Kodiak100_Generator_Off#0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 0 (>K:2:ALTERNATOR_SET) } 
Kodiak100_Generator_On#1 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 1 (>K:2:ALTERNATOR_SET) }
KODIAK_100_AUX_BUS_OFF#0 (>L:XMLVAR_AUX_Bus_ON, Bool)
KODIAK_100_AUX_BUS_ON#1 (>L:XMLVAR_AUX_Bus_ON, Bool)
KODIAK_100_AUX_BUS_TOGGLE#(L:XMLVAR_AUX_Bus_ON, Bool) ! (>L:XMLVAR_AUX_Bus_ON, Bool)
KODIAK_BREAKER_STBYATT#7 (>A:BUS LOOKUP INDEX, Number) 1 (>A:CIRCUIT BREAKER PULLED:61, Bool) 100 *
//SimWorks Studios/Kodiak 100/Engine
Kodiak_100_Ignition_Off#0 (>L:SWS_ENGINE_Switch_Ignition_1, Bool)
Kodiak_100_Ignition_On#1 (>L:SWS_ENGINE_Switch_Ignition_1, Bool)
Kodiak_100_Ignition_toggle#(L:SWS_ENGINE_Switch_Ignition_1, Bool) ! (>L:SWS_ENGINE_Switch_Ignition_1, Bool)
KODIAK_100_IGNITION_SWITCH_OFF#1 (>K:TURBINE_IGNITION_SWITCH_SET1)
KODIAK_100_IGNITION_SWITCH_ON#2 (>K:TURBINE_IGNITION_SWITCH_SET1)
KODIAK_100_IGNITION_SWITCH_TOGGLE#1 2 (A:TURB ENG IGNITION SWITCH EX1:1, enum) 2 == ? (>K:TURBINE_IGNITION_SWITCH_SET1)
//SimWorks Studios/Kodiak 100/Engines
KODIAK_100_Starter_Switch_High#2 (>L:SWS_ENGINE_Switch_Starter_ThreeState_1, Enum)
KODIAK_100_Starter_Switch_Off#1 (>L:SWS_ENGINE_Switch_Starter_ThreeState_1, Enum)
//SimWorks Studios/Kodiak 100/Fuel
Fuel_Tank_Selectors__overhead_#(>L:SWS_Kodiak_TankSelector_x, Bool)
KODIAK_100_TANK_SELECT_L_CLOSE#0 (>L:SWS_Kodiak_TankSelector_1, Bool)
KODIAK_100_TANK_SELECT_L_OPEN#1 (>L:SWS_Kodiak_TankSelector_1, Bool)
KODIAK_100_TANK_SELECT_R_CLOSE#0 (>L:SWS_Kodiak_TankSelector_2, Bool)
KODIAK_100_TANK_SELECT_R_OPEN#1 (>L:SWS_Kodiak_TankSelector_2, Bool)
Kodiak_100_Firewall_Fuel_Cutoff_Off#0 (>K:SET_FUEL_VALVE_ENG1)
Kodiak_100_Firewall_Fuel_Cutoff_On#1 (>K:SET_FUEL_VALVE_ENG1)
Kodiak_100_Fuel_Pump_Switch_Off#0 (>L:SWS_FUEL_Switch_Pump_1, Enum)
Kodiak_100_Fuel_Pump_Switch_On#2 (>L:SWS_FUEL_Switch_Pump_1, Enum)
Kodiak_100_Fuel_Pump_Switch_Stby#0 (>L:SWS_FUEL_Switch_Pump_1, Enum)
Kodiak100_FirerwallFuel_ShutOff_Off#0 (>K:SET_FUEL_VALVE_ENG1)
Kodiak100_FirerwallFuel_ShutOff_On#1 (>K:SET_FUEL_VALVE_ENG1)
KODIAK_100_FUEL_PUMP_OFF#0 (>L:SWS_FUEL_Switch_Pump_1)
KODIAK_100_FUEL_PUMP_ON#2 (>L:SWS_FUEL_Switch_Pump_1)
KODIAK_100_FUEL_PUMP_STANDBY#1 (>L:SWS_FUEL_Switch_Pump_1)
KODIAK_100_FIREW_FUEL_CUTOFF_TOGGLE#(>K:TOGGLE_FUEL_VALVE_ENG1)
//SimWorks Studios/Kodiak 100/Lights
CABIN_LIGHT_NORMAL#1 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Enum)
CABIN_LIGHT_OFF#0 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Enum)
CABIN_LIGHT_ON#2 (>L:SWS_LIGHTING_Switch_Light_Cabin_12, Enum)
READING_LIGHT_COPILOT#(L:SWS_LIGHTING_Switch_Light_Cabin_2, Bool) ! (>L:SWS_LIGHTING_Switch_Light_Cabin_2, Bool)
READING_LIGHT_PILOT#(L:SWS_LIGHTING_Switch_Light_Cabin_1, Bool) ! (>L:SWS_LIGHTING_Switch_Light_Cabin_1, Bool)
Landing_Lights_Off#0 (>L:SWS_LIGHTING_Switch_Light_Landing, Enum)
Landing_Lights_On#2 (>L:SWS_LIGHTING_Switch_Light_Landing, Enum)
Landing_Lights_Pulse#1 (>L:SWS_LIGHTING_Switch_Light_Landing, Enum)
//SimWorks Studios/Kodiak 100/Safety
KODIAK_100_Harness_L_lock#1 (>L:Lever_Harness_1)
KODIAK_100_Harness_L_unlock#0 (>L:Lever_Harness_1)
KODIAK_100_Harness_R_lock#1 (>L:Lever_Harness_2)
KODIAK_100_Harness_R_unlock#0 (>L:Lever_Harness_2)
//SimWorks Studios/PC-12/Autopilot System
KAS297B_Mode_PUSH_PULL#(L:Autopilot_KAS297B_Mode) ! (>L:Autopilot_KAS297B_Mode)
KAS_297B_ALT_ARM_Select#(>H:Autopilot_KAS297B_Push_AltitudeSelect_1)
KAS_297B_VS_ENG_Select#(>H:AUTOPILOT_KAS297B_Push_VerticalSpeed_1) 
KAS_297B_inner_knob_decrease#(>H:SWS_KAS297_Inner_Knob_CCW)
KAS_297B_inner_knob_increase#(>H:SWS_KAS297_Inner_Knob_CW)
KAS_297B_outer_knob_decrease#(>H:SWS_KAS297_Outer_Knob_CCW)
KAS_297B_outer_knob_increase#(>H:SWS_KAS297_Outer_Knob_CW)
NAV_GPS_SWAP__NAV__button_on_EFIS_Control_Panel__LEFT_SIDE__CAPTAIN_#(>H:SWS_EFIS50_Push_Nav_1)
NAV_GPS_SWAP__NAV__button_on_EFIS_Control_Panel__RIGHT__SIDE__FIRST_OFFICER_#(>H:SWS_EFIS50_Push_Nav_2)
//SimWorks Studios/PC-12/Avionics
ALT_VS_preselect_toggle#(L:AUTOPILOT_KAS297B_MODE, Number) ! (>L:AUTOPILOT_KAS297B_MODE, Number)
//SimWorks Studios/PC-12/Electrical
Battery_1_Off#0 (>L:ELECTRICAL_Switch_BATTERY_Bus_1, Bool)
Battery_1_On#1 (>L:ELECTRICAL_Switch_BATTERY_Bus_1, Bool)
LAMP_TEST_PRESS#1 (>L:SAFETY_Push_TestLamp)
LAMP_TEST_RELEASE#0 (>L:SAFETY_Push_TestLamp)
//SimWorks Studios/PC-12/Flight Controls
Aileron_Trim_Left#(L:AILERON_TRIM_PCT) 1 - (>L:AILERON_TRIM_PCT)
Aileron_Trim_Right#(L:AILERON_TRIM_PCT) 1 + (>L:AILERON_TRIM_PCT)
Elevator_Trim_Down#0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN) 0 (>K:ELEV_TRIM_DN)
Elevator_Trim_Up#0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP) 0 (>K:ELEV_TRIM_UP)
//SimWorks Studios/PC-12/Safety
FIRE_Test_Release#0 (>L:SAFETY_Push_TestFireWarning)
Fire_Test_Push#1 (>L:SAFETY_Push_TestFireWarning)
//SimWorks Studios/RV-14/Lights
Flasher_Switch_for_Landing_Lights__WigWag__Off#0 (>L:LIGHTING_Switch_Light_WigWag, Bool)
Flasher_Switch_for_Landing_Lights__WigWag__On#1 (>L:LIGHTING_Switch_Light_WigWag, Bool)
//Skyward Sim/DA50RG/Anti Ice
DA50RG_DEICE_ALTERNATE_SWITCH_COVER_CLOSE#0 (>L:DEICE_AlternateCoverOpened)
DA50RG_DEICE_ALTERNATE_SWITCH_COVER_OPEN#1 (>L:DEICE_AlternateCoverOpened)
DA50RG_DEICE_ALTERNATE_SWITCH_OFF#0 (>L:DEICE_ALT)
DA50RG_DEICE_ALTERNATE_SWITCH_ON#1 (>L:DEICE_ALT)
DA50RG_DEICE_WINGS_ICELIGHT_HIGH#2 (>L:DEICE_SWITCH)
DA50RG_DEICE_WINGS_ICELIGHT_NORM#1 (>L:DEICE_SWITCH)
DA50RG_DEICE_WINGS_ICELIGHT_OFF#0 (>L:DEICE_SWITCH)
DA50RG_PITOT_STALL_HEAT_SWITCH_OFF#0 s0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)
DA50RG_PITOT_STALL_HEAT_SWITCH_ON#1 s0 (>K:2:PITOT_HEAT_SET) l0 (>L:DEICE_Pitot_1)
DA50RG_PROP_DEICE_SWITCH_OFF#0 (>L:DEICE_PROP)
DA50RG_PROP_DEICE_SWITCH_ON#1 (>L:DEICE_PROP)
//Skyward Sim/DA50RG/Electrical
DA50RG_ELECTRICAL_ALTERNATOR_1_SWITCH_OFF#0 s0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 l0 (>K:2:ALTERNATOR_SET) }
DA50RG_ELECTRICAL_ALTERNATOR_1_SWITCH_ON#1 s0 (A:GENERAL ENG MASTER ALTERNATOR:1, Bool) != if{ 1 l0 (>K:2:ALTERNATOR_SET) }
DA50RG_ELECTRICAL_ALTERNATOR_2_SWITCH_OFF#0 s0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ 2 l0 (>K:2:ALTERNATOR_SET) }
DA50RG_ELECTRICAL_ALTERNATOR_2_SWITCH_ON#1 s0 (A:GENERAL ENG MASTER ALTERNATOR:2, Bool) != if{ 2 l0 (>K:2:ALTERNATOR_SET) }
DA50RG_ELECTRICAL_AVIONICS_MASTER_SWITCH_OFF#0 (A:CIRCUIT SWITCH ON:33, Bool) != if{ 33 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:33, Bool) 4 (A:1:BUS CONNECTION ON:5, Bool) != if{ 5 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
DA50RG_ELECTRICAL_AVIONICS_MASTER_SWITCH_ON#1 (A:CIRCUIT SWITCH ON:33, Bool) != if{ 33 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:33, Bool) 4 (A:1:BUS CONNECTION ON:5, Bool) != if{ 5 4 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) }
DA50RG_ELECTRICAL_ENGINE_START_BUTTON_PRESS#1 s0 (>K:SET_STARTER1_HELD) l0 (>L:ELECTRICAL_Starter_1)
DA50RG_ELECTRICAL_ENGINE_START_BUTTON_RELEASE#0 s0 (>K:STARTER1_SET) l0 (>K:SET_STARTER1_HELD) l0 (>L:ELECTRICAL_Starter_1)
DA50RG_ELECTRICAL_ESS_BUS_SWITCH_OFF#0 (>L:ESS_BUS)
DA50RG_ELECTRICAL_ESS_BUS_SWITCH_ON#1 (>L:ESS_BUS)
DA50RG_ELECTRICAL_MASTER_SWITCH_OFF#0 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
DA50RG_ELECTRICAL_MASTER_SWITCH_ON#1 (A:ELECTRICAL MASTER BATTERY:1, Bool) != if{ 1 (>K:TOGGLE_MASTER_BATTERY) }
//Skyward Sim/DA50RG/Engine
DA50RG_COWL_FLAPS_SWITCH_CLOSED#1 (>L:COWL_FLAPS)
DA50RG_COWL_FLAPS_SWITCH_OPEN#0 (>L:COWL_FLAPS)
DA50RG_ENGINE_MASTER_SWITCH_OFF#(A:RECIP ENG ENGINE MASTER SWITCH:1, Bool) if{ (>K:ENGINE_MASTER_1_TOGGLE) }
DA50RG_ENGINE_MASTER_SWITCH_ON#(A:RECIP ENG ENGINE MASTER SWITCH:1, Bool) ! if{ (>K:ENGINE_MASTER_1_TOGGLE) }
//Skyward Sim/DA50RG/FADEC
DA50RG_FADEC_SWITCH_AUTO#0 (>L:ECU_VOTER) (A:GENERAL ENG PCT MAX RPM:1, percent) 0.95 * (>A:GENERAL ENG PCT MAX RPM:1, percent)
DA50RG_FADEC_SWITCH_FORCE_B#1 (>L:ECU_VOTER) (A:GENERAL ENG PCT MAX RPM:1, percent) 0.95 * (>A:GENERAL ENG PCT MAX RPM:1, percent)
DA50RG_FADEC_TEST_BUTTON_PRESS#1 (>L:FADEC_ECUTEST_BUTTON_IsDown) (E:SIMULATION TIME, seconds) (>L:FADEC_ECUTEST_BUTTON_MinReleaseTime)
DA50RG_FADEC_TEST_BUTTON_RELEASE#0 (>L:FADEC_ECUTEST_BUTTON_IsDown)
//Skyward Sim/DA50RG/Fuel
DA50RG_EMERG_FUEL_PUMP_SWITCH_OFF#0 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET)
DA50RG_EMERG_FUEL_PUMP_SWITCH_ON#1 s0 (A:GENERAL ENG FUEL PUMP SWITCH EX1:1, Enum) != if{ l0 (>K:ELECT_FUEL_PUMP1_SET)
DA50RG_FUEL_SELECTOR_KNOB_EMERGENCY#3 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }
DA50RG_FUEL_SELECTOR_KNOB_NORMAL#2 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }
DA50RG_FUEL_SELECTOR_KNOB_OFF#0 s0 (A:FUEL TANK SELECTOR:1, Enum) != if{ l0 (>K:FUEL_SELECTOR_SET) }
DA50RG_FUEL_TRANSFER_PUMP_OFF#0 (A:FUEL TRANSFER PUMP ON:1, Bool) != if{ 1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE) }
DA50RG_FUEL_TRANSFER_PUMP_ON#1 (A:FUEL TRANSFER PUMP ON:1, Bool) != if{ 1 (>K:FUEL_TRANSFER_CUSTOM_INDEX_TOGGLE) }
//Skyward Sim/DA50RG/Gear
DA50RG_Landing_Gear_Lever_Down# 1 s0 (>K:GEAR_SET) l0 (>L:LANDING_GEAR_Gear)
DA50RG_Landing_Gear_Lever_Up# 0 s0 (>K:GEAR_SET) l0 (>L:LANDING_GEAR_Gear)
//Skyward Sim/DA50RG/Safety
DA50RG_ELT_Switch_ARMED#1 s0 l0 0 == if{ 2 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second) (>L:XMLVAR_ELT_ACTIVATION_TIME) g1 } l0 1 == if{ 1 (>L:XMLVAR_ELT_STATE) g1 } l0 2 == if{ 3 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second) (>L:XMLVAR_ELT_TEST_TIME) g1 } :1 (L:XMLVAR_ELT_STATE) 2 == (A:ELT ACTIVATED, Bool) s0 != if{ l0 if{ (>K:ELT_OFF) } els{ (>K:ELT_ON) }
DA50RG_ELT_Switch_ON#0 s0 l0 0 == if{ 2 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second) (>L:XMLVAR_ELT_ACTIVATION_TIME) g1 } l0 1 == if{ 1 (>L:XMLVAR_ELT_STATE) g1 } l0 2 == if{ 3 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second) (>L:XMLVAR_ELT_TEST_TIME) g1 } :1 (L:XMLVAR_ELT_STATE) 2 == (A:ELT ACTIVATED, Bool) s0 != if{ l0 if{ (>K:ELT_OFF) } els{ (>K:ELT_ON) }
DA50RG_ELT_Switch_RESET_TEST#2 s0 l0 0 == if{ 2 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second) (>L:XMLVAR_ELT_ACTIVATION_TIME) g1 } l0 1 == if{ 1 (>L:XMLVAR_ELT_STATE) g1 } l0 2 == if{ 3 (>L:XMLVAR_ELT_STATE) (E:SIMULATION TIME, second) (>L:XMLVAR_ELT_TEST_TIME) g1 } :1 (L:XMLVAR_ELT_STATE) 2 == (A:ELT ACTIVATED, Bool) s0 != if{ l0 if{ (>K:ELT_OFF) } els{ (>K:ELT_ON) }
//TDS Sim/GTNXi 650 2/Navigation
TDS_GTN650U2_Direct_to_Press#1 (>L:TDSGTNXI650U2_DTOKEY)
TDS_GTN650U2_Direct_to_Rls#0 (>L:TDSGTNXI650U2_DTOKEY)
TDS_GTN650U2_Home_Press#1 (>L:TDSGTNXI650U2_HomeKEY)
TDS_GTN650U2_Home_Rls#0 (>L:TDSGTNXI650U2_HomeKEY)
TDS_GTN650U2_Knob_Push_Press#1 (>L:TDSGTNXI650U2_RKnobCRSR) 
TDS_GTN650U2_Knob_Push_Rls#0 (>L:TDSGTNXI650U2_RKnobCRSR) 
TDS_GTN650U2_Large_Knob_Dec#1 (>L:TDSGTNXI650U2_RKnobOuterDec)
TDS_GTN650U2_Large_Knob_Inc#1 (>L:TDSGTNXI650U2_RKnobOuterInc)
TDS_GTN650U2_Small_Knob_Dec#1 (>L:TDSGTNXI650U2_RKnobInnerDec)
TDS_GTN650U2_Small_Knob_Inc#1 (>L:TDSGTNXI650U2_RKnobInnerInc)
TDS_GTN650U2_Vol_Dec#1 (>L:TDSGTNXI650U2_LKnobDec)
TDS_GTN650U2_Vol_Inc#1 (>L:TDSGTNXI650U2_LKnobInc)
TDS_GTN650U2_Vol_Press#1 (>L:TDSGTNXI650U2_LKnobCRSR) 
TDS_GTN650U2_Vol_Rls#0 (>L:TDSGTNXI650U2_LKnobCRSR) 
//TDS Sim/GTNXi 750 1/Navigation
TDS_GTN750U1_Direct_to_Press#1 (>L:TDSGTNXI750U1_DTOKEY)
TDS_GTN750U1_Direct_to_Rls#0 (>L:TDSGTNXI750U1_DTOKEY)
TDS_GTN750U1_Home_Press#1 (>L:TDSGTNXI750U1_HomeKEY)
TDS_GTN750U1_Home_Rls#0 (>L:TDSGTNXI750U1_HomeKEY)
TDS_GTN750U1_Knob_Push_Press#1 (>L:TDSGTNXI750U1_RKnobCRSR) 
TDS_GTN750U1_Knob_Push_Rls#0 (>L:TDSGTNXI750U1_RKnobCRSR) 
TDS_GTN750U1_Large_Knob_Dec#1 (>L:TDSGTNXI750U1_RKnobOuterDec)
TDS_GTN750U1_Large_Knob_Inc#1 (>L:TDSGTNXI750U1_RKnobOuterInc)
TDS_GTN750U1_Small_Knob_Dec#1 (>L:TDSGTNXI750U1_RKnobInnerDec)
TDS_GTN750U1_Small_Knob_Inc#1 (>L:TDSGTNXI750U1_RKnobInnerInc)
TDS_GTN750U1_Vol_Dec#1 (>L:TDSGTNXI750U1_LKnobDec)
TDS_GTN750U1_Vol_Inc#1 (>L:TDSGTNXI750U1_LKnobInc)
TDS_GTN750U1_Vol_Press#1 (>L:TDSGTNXI750U1_LKnobCRSR) 
TDS_GTN750U1_Vol_Rls#0 (>L:TDSGTNXI750U1_LKnobCRSR) 
//TDS Sim/GTNXi 750 2/Navigation
TDS_GTN750U2_Direct_to_Press#1 (>L:TDSGTNXI750U2_DTOKEY)
TDS_GTN750U2_Direct_to_Rls#0 (>L:TDSGTNXI750U2_DTOKEY)
TDS_GTN750U2_Home_Press#1 (>L:TDSGTNXI750U2_HomeKEY)
TDS_GTN750U2_Home_Rls#0 (>L:TDSGTNXI750U2_HomeKEY)
TDS_GTN750U2_Knob_Push_Press#1 (>L:TDSGTNXI750U2_RKnobCRSR) 
TDS_GTN750U2_Knob_Push_Rls#0 (>L:TDSGTNXI750U2_RKnobCRSR) 
TDS_GTN750U2_Large_Knob_Dec#1 (>L:TDSGTNXI750U2_RKnobOuterDec)
TDS_GTN750U2_Large_Knob_Inc#1 (>L:TDSGTNXI750U2_RKnobOuterInc)
TDS_GTN750U2_Small_Knob_Dec#1 (>L:TDSGTNXI750U2_RKnobInnerDec)
TDS_GTN750U2_Small_Knob_Inc#1 (>L:TDSGTNXI750U2_RKnobInnerInc)
TDS_GTN750U2_Vol_Dec#1 (>L:TDSGTNXI750U2_LKnobDec)
TDS_GTN750U2_Vol_Inc#1 (>L:TDSGTNXI750U2_LKnobInc)
TDS_GTN750U2_Vol_Press#1 (>L:TDSGTNXI750U2_LKnobCRSR) 
TDS_GTN750U2_Vol_Rls#0 (>L:TDSGTNXI750U2_LKnobCRSR) 
//TDS Sim/GTNxi 650/Navigation
GPS_BUTTON1#10 (>K:GPS_BUTTON1) 12 (>K:GPS_BUTTON1)
GPS_BUTTON2#10 (>K:GPS_BUTTON2) 12 (>K:GPS_BUTTON2)
GPS_CURSOR_BUTTON#10 (>K:GPS_CURSOR_BUTTON) 12 (>K:GPS_CURSOR_BUTTON)
GPS_DIRECTTO_BUTTON#10 (>K:GPS_DIRECTTO_BUTTON) 12 (>K:GPS_DIRECTTO_BUTTON)
GPS_MENU_BUTTON#10 (>K:GPS_MENU_BUTTON) 12 (>K:GPS_MENU_BUTTON)
//TDS Sim/GTNxi 750/Navigation
GPS_BUTTON1#2 (>K:GPS_BUTTON1) 4 (>K:GPS_BUTTON1)
GPS_BUTTON2#2 (>K:GPS_BUTTON2) 4 (>K:GPS_BUTTON2)
GPS_CURSOR_BUTTON#2 (>K:GPS_CURSOR_BUTTON) 4 (>K:GPS_CURSOR_BUTTON)
GPS_DIRECTTO_BUTTON#2 (>K:GPS_DIRECTTO_BUTTON) 4 (>K:GPS_DIRECTTO_BUTTON)
GPS_MENU_BUTTON#2 (>K:GPS_MENU_BUTTON) 4 (>K:GPS_MENU_BUTTON)
//TFDi/MD11/Autopilot
FGS__ALT_Knob_Dec#86081 (>L:CEVENT)
FGS__Speed_Knob_Push_Release#86071 (>L:CEVENT)
FGS_AFS_OVRD_1_Toggle#86106 (>L:CEVENT)
FGS_AFS_OVRD_2_Toggle#86107 (>L:CEVENT)
FGS_ALT_Knob_Inc#86080 (>L:CEVENT)
FGS_ALT_Knob_Pull#86082 (>L:CEVENT)
FGS_ALT_Knob_Pull_Release#86083 (>L:CEVENT)
FGS_ALT_Knob_Push#86084 (>L:CEVENT)
FGS_ALT_Knob_Push_Release#86085 (>L:CEVENT)
FGS_APPR_LAND_Button_Press#86092 (>L:CEVENT)
FGS_APPR_LAND_Button_Release#86093 (>L:CEVENT)
FGS_AUTOFLIGHT_Button_Press#86094 (>L:CEVENT)
FGS_AUTOFLIGHT_Button_Release#86095 (>L:CEVENT)
FGS_Bank_Angle_Knob_Anti_Clockwise_Turn#86072 (>L:CEVENT)
FGS_Bank_Angle_Knob_Clockwise_Turn#86073 (>L:CEVENT)
FGS_FMS_SPD_Button_Press#86088 (>L:CEVENT)
FGS_FMS_SPD_Button_Release#86089 (>L:CEVENT)
FGS_Feet_Meter_Button_Press#86102 (>L:CEVENT)
FGS_Feet_Meter_Button_Release#86103 (>L:CEVENT)
FGS_HDG_Knob_Dec#86075 (>L:CEVENT)
FGS_HDG_Knob_Inc#86074 (>L:CEVENT)
FGS_HDG_Knob_Pull#86076 (>L:CEVENT)
FGS_HDG_Knob_Pull_Release#86077 (>L:CEVENT)
FGS_HDG_Knob_Push#86078 (>L:CEVENT)
FGS_HDG_Knob_Push_Release#86079 (>L:CEVENT)
FGS_HDG_TRK_Button_Press#86100 (>L:CEVENT)
FGS_HDG_TRK_Button_Release#86101 (>L:CEVENT)
FGS_IAS_MACH_Button_Press#86098 (>L:CEVENT)
FGS_IAS_MACH_Button_Release#86099 (>L:CEVENT)
FGS_NAV_Button_Press#86090 (>L:CEVENT)
FGS_NAV_Button_Release#86091 (>L:CEVENT)
FGS_PROF_Button_Press#86096 (>L:CEVENT)
FGS_PROF_Button_Release#86097 (>L:CEVENT)
FGS_Speed_Knob_Dec#86067 (>L:CEVENT)
FGS_Speed_Knob_Inc#86066 (>L:CEVENT)
FGS_Speed_Knob_Pull#86068 (>L:CEVENT)
FGS_Speed_Knob_Pull_Release#86069 (>L:CEVENT)
FGS_Speed_Knob_Push#86070 (>L:CEVENT)
FGS_VS_FPA_Button_Press#86104 (>L:CEVENT)
FGS_VS_FPA_Button_Release#86105 (>L:CEVENT)
FGS_VS_Wheel_Dec#86087 (>L:CEVENT)
FGS_VS_Wheel_Inc#86086 (>L:CEVENT)
Throttle_A_T_Disconnect_Push#77844 (>L:CEVENT)
Throttle_A_T_Disconnect_Release#77845 (>L:CEVENT)
YOKE_A_P_Disconnect_Push#94727 (>L:CEVENT)
YOKE_A_P_Disconnect_Release#94728 (>L:CEVENT)
//TFDi/MD11/Engine
FUEL_CONTROL_ENG_1_ON#77834 (>L:CEVENT)
FUEL_CONTROL_ENG_2_ON#77835 (>L:CEVENT)
FUEL_CONTROL_ENG_3_ON#77836 (>L:CEVENT)
START_SWITCH_ENG_1_#77837 (>L:CEVENT)
START_SWITCH_ENG_2#77838 (>L:CEVENT)
START_SWITCH_ENG_3#77839 (>L:CEVENT)
//TFDi/MD11/Lights (exterior)
Both_Landing_Light_Retracted#0 (L:md11_ovhd_lts_ldg_l_sw,number) - s0 0 (L:md11_ovhd_lts_ldg_r_sw,number) - s1 :1 l0 0 > if{ 1 90258 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90257 (>F:KeyEvent) l0 ++ s0 g1 } l1 0 > if{ 1 90260 (>F:KeyEvent) l1 -- s1 g1 } l1 0 < if{ 1 90259 (>F:KeyEvent) l1 ++ s1 g1 }
Both_Landing_Lights_Extended#1 (L:md11_ovhd_lts_ldg_l_sw,number) - s0 1 (L:md11_ovhd_lts_ldg_r_sw,number) - s1 :1 l0 0 > if{ 1 90258 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90257 (>F:KeyEvent) l0 ++ s0 g1 } l1 0 > if{ 1 90260 (>F:KeyEvent) l1 -- s1 g1 } l1 0 < if{ 1 90259 (>F:KeyEvent) l1 ++ s1 g1 }
Both_Landing_Lights_On#2 (L:md11_ovhd_lts_ldg_l_sw,number) - s0 2 (L:md11_ovhd_lts_ldg_r_sw,number) - s1 :1 l0 0 > if{ 1 90258 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90257 (>F:KeyEvent) l0 ++ s0 g1 } l1 0 > if{ 1 90260 (>F:KeyEvent) l1 -- s1 g1 } l1 0 < if{ 1 90259 (>F:KeyEvent) l1 ++ s1 g1 }
High_intensity_light_button_press#90273 (>L:CEVENT)
High_intensity_light_button_release#90274 (>L:CEVENT)
Landing_Light_L_Extended#1 (L:md11_ovhd_lts_ldg_l_sw,number) - s0 :1 l0 0 > if{ 1 90258 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90257 (>F:KeyEvent) l0 ++ s0 g1 }
Landing_Light_L_On#2 (L:md11_ovhd_lts_ldg_l_sw,number) - s0 :1 l0 0 > if{ 1 90258 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90257 (>F:KeyEvent) l0 ++ s0 g1 }
Landing_Light_L_Retracted#0 (L:md11_ovhd_lts_ldg_l_sw,number) - s0 :1 l0 0 > if{ 1 90258 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90257 (>F:KeyEvent) l0 ++ s0 g1 }
Landing_Light_R_Extended#1 (L:md11_ovhd_lts_ldg_r_sw,number) - s0 :1 l0 0 > if{ 1 90260 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90259 (>F:KeyEvent) l0 ++ s0 g1 }
Landing_Light_R_On#2 (L:md11_ovhd_lts_ldg_r_sw,number) - s0 :1 l0 0 > if{ 1 90260 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90259 (>F:KeyEvent) l0 ++ s0 g1 }
Landing_Light_R_Retracted#0 (L:md11_ovhd_lts_ldg_r_sw,number) - s0 :1 l0 0 > if{ 1 90260 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90259 (>F:KeyEvent) l0 ++ s0 g1 }
Left_landing_light_switch_press__left_#90257 (>L:CEVENT)
Nose_Light_Switch_Press__left_#90261 (>L:CEVENT)
Nose_Light_Switch_Press__right_#90262 (>L:CEVENT)
Nose_Lights_Land#2 (L:md11_ovhd_lts_nose_sw,number) - s0 :1 l0 0 > if{ 1 90262 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90261 (>F:KeyEvent) l0 ++ s0 g1 }
Nose_Lights_Off#0 (L:md11_ovhd_lts_nose_sw,number) - s0 :1 l0 0 > if{ 1 90262 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90261 (>F:KeyEvent) l0 ++ s0 g1 }
Nose_Lights_Taxi#1 (L:md11_ovhd_lts_nose_sw,number) - s0 :1 l0 0 > if{ 1 90262 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 90261 (>F:KeyEvent) l0 ++ s0 g1 }
Runway_turnoff_light_left_button_press#90263 (>L:CEVENT)
Runway_turnoff_light_left_button_release#90264 (>L:CEVENT)
Runway_turnoff_light_right_button_press#90265 (>L:CEVENT)
Runway_turnoff_light_right_button_release#90266 (>L:CEVENT)
//TFDi/MD11/Lights (interior)
Nose_gear_light_switch_press__left_#90261 (>L:CEVENT)
Nose_gear_light_switch_press__right_#90262 (>L:CEVENT)
//TFDi/MD11/Lights
FGS_Flood_Light_Brightness_Dec#86123 (>L:CEVENT)
FGS_Flood_Light_Brightness_Inc#86122 (>L:CEVENT)
FGS_Panel_Light_Brightness_Dec#86121 (>L:CEVENT)
FGS_Panel_Light_Brightness_Inc#86120 (>L:CEVENT)
//TFDi/MD11/Main instrument panel
Main_instrument_panel_standby_attitude_indicator_cage_button_release#94987(>:CEVENT)
//TFDi/MD11/Radio
PED_CPT_RADIO_PNL_XFER_BT_LEFT_BUTTON_DOWN#69644 (>L:CEVENT)
PED_CPT_RADIO_PNL_XFER_BT_LEFT_BUTTON_UP#69645 (>L:CEVENT)
//TFDi/MD11/Throttle Quadrant
Parking_brake_lever_toggle#77848 (>L:CEVENT)
Throttle_quadrant_go-around_button_release#77852 (>L:CEVENT)
//TFDi/MD11/Transponder
Transponder_ABV_BLW_Switch_ABV#0 (L:md11_ped_xpndr_abv_blw_sw, number) - s0 :1 l0 0 > if{ 1 69875 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 69874 (>F:KeyEvent) l0 ++ s0 g1 }
Transponder_ABV_BLW_Switch_BLW#2 (L:md11_ped_xpndr_abv_blw_sw, number) - s0 :1 l0 0 > if{ 1 69875 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 69874 (>F:KeyEvent) l0 ++ s0 g1 }
Transponder_ABV_BLW_Switch_N#1 (L:md11_ped_xpndr_abv_blw_sw, number) - s0 :1 l0 0 > if{ 1 69875 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 69874 (>F:KeyEvent) l0 ++ s0 g1 }
Transponder_Mode_Knob_STBY#0 (L:md11_ped_xpndr_mode_kb, number) - s0 :1 l0 0 > if{ 1 69877 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 69876 (>F:KeyEvent) l0 ++ s0 g1 }
Transponder_Mode_Knob_TA_ONLY#2 (L:md11_ped_xpndr_mode_kb, number) - s0 :1 l0 0 > if{ 1 69877 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 69876 (>F:KeyEvent) l0 ++ s0 g1 }
Transponder_Mode_Knob_TA_RA#3 (L:md11_ped_xpndr_mode_kb, number) - s0 :1 l0 0 > if{ 1 69877 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 69876 (>F:KeyEvent) l0 ++ s0 g1 }
Transponder_Mode_Knob_XPNDR#1 (L:md11_ped_xpndr_mode_kb, number) - s0 :1 l0 0 > if{ 1 69877 (>F:KeyEvent) l0 -- s0 g1 } l0 0 < if{ 1 69876 (>F:KeyEvent) l0 ++ s0 g1 }
//WB Sim/Cessna 152X/Autopilot
C152X-Instruments-AP-toggle#(L:C152X_APVIZ, Number) ! (>L:C152X_APVIZ, Number)
//WB Sim/Cessna 152X/Interaction
C152X-Door-Copilot-toggle#(L:C152X_DOOR_COPILOT, Bool) ! (>L:C152X_DOOR_COPILOT, Bool)
C152X-Door-Pilot-toggle#(L:C152X_DOOR_PILOT, Bool) ! (>L:C152X_DOOR_PILOT, Bool)
//WB Sim/Cessna 172 Classic/Autopilot
KAP140_ALT_PRESS#(>H:KAP140_ALT_PRESS)
KAP140_ALT_RELEASE#(>H:KAP140_ALT_RELEASE)
KAP140_AP_PRESS#(>H:KAP140_AP_PRESS)
KAP140_AP_RELEASE#(>H:KAP140_AP_RELEASE)
KAP140_APR_PRESS#(>H:KAP140_APR_PRESS)
KAP140_APR_RELEASE#(>H:KAP140_APR_RELEASE)
KAP140_ARM_PRESS#(>H:KAP140_ARM_PRESS)
KAP140_ARM_RELEASE#(>H:KAP140_ARM_RELEASE)
KAP140_BARO_PRESS#(>H:KAP140_BARO_PRESS)
KAP140_BARO_RELEASE#(>H:KAP140_BARO_RELEASE)
KAP140_DN_PRESS#(>H:KAP140_DN_PRESS)
KAP140_DN_RELEASE#(>H:KAP140_DN_RELEASE)
KAP140_HDG_PRESS#(>H:KAP140_HDG_PRESS)
KAP140_HDG_RELEASE#(>H:KAP140_HDG_RELEASE)
KAP140_KNOB_INNER_DEC#(>H:KAP140_KNOB_INNER_DEC)
KAP140_KNOB_INNER_INC#(>H:KAP140_KNOB_INNER_INC)
KAP140_KNOB_OUTER_DEC#(>H:KAP140_KNOB_OUTER_DEC)
KAP140_KNOB_OUTER_INC#(>H:KAP140_KNOB_OUTER_INC)
KAP140_NAV_PRESS#(>H:KAP140_NAV_PRESS)
KAP140_NAV_RELEASE#(>H:KAP140_NAV_RELEASE)
KAP140_REV_PRESS#(>H:KAP140_REV_PRESS)
KAP140_REV_RELEASE#(>H:KAP140_REV_RELEASE)
KAP140_UP_PRESS#(>H:KAP140_UP_PRESS)
KAP140_UP_RELEASE#(>H:KAP140_UP_RELEASE)
//WB Sim/Cessna 172 Classic/Avionics
C172-analog-transponder-dec#(L:172X_XPNDR_KNOB, Number) 0 > if{  (L:172X_XPNDR_KNOB, Number) 1 - (>L:172X_XPNDR_KNOB, Number) }
C172-analog-transponder-inc#(L:172X_XPNDR_KNOB, Number) 4 < if{  (L:172X_XPNDR_KNOB, Number) 1 + (>L:172X_XPNDR_KNOB, Number) }
GNS530_GNS430#H:C172X_530_COMSWAP_PRESS H:C172X_530_COMSWAP_RELEASE H:C172X_530_NAVSWAP_PRESS H:C172X_530_NAVSWAP_RELEASE H:C172X_530_CDI_PRESS H:C172X_530_CDI_RELEASE H:C172X_530_OBS_PRESS H:C172X_530_OBS_RELEASE H:C172X_530_MSG_PRESS H:C172X_530_MSG_RELEASE H:C172X_530_FPL_PRESS H:C172X_530_FPL_RELEASE H:C172X_530_VNAV_PRESS H:C172X_530_VNAV_RELEASE H:C172X_530_PROC_PRESS H:C172X_530_PROC_RELEASE H:C172X_530_ENT_PRESS H:C172X_530_ENT_RELEASE H:C172X_530_CLR_PRESS H:C172X_530_CLR_RELEASE H:C172X_530_MENU_PRESS H:C172X_530_MENU_RELEASE H:C172X_530_DTO_PRESS H:C172X_530_DTO_RELEASE H:C172X_530_RNG_DEZOOM_PRESS H:C172X_530_RNG_RELEASE H:C172X_530_RNG_ZOOM_PRESS H:C172X_530_RNG_RELEASE H:C172X_530_CV_LARGE_INC H:C172X_530_CV_LARGE_DEC H:C172X_530_CV_SMALL_INC H:C172X_530_CV_SMALL_DEC H:C172X_530_CV_PRESS H:C172X_530_CV_RELEASE H:C172X_530_CRSR_LARGE_INC H:C172X_530_CRSR_LARGE_DEC H:C172X_530_CRSR_SMALL_INC H:C172X_530_CRSR_SMALL_DEC H:C172X_530_CRSR_PRESS H:C172X_530_CRSR_RELEASE  H:C172X_430_COMSWAP_PRESS H:C172X_430_COMSWAP_RELEASE H:C172X_430_NAVSWAP_PRESS H:C172X_430_NAVSWAP_RELEASE H:C172X_430_CDI_PRESS H:C172X_430_CDI_RELEASE H:C172X_430_OBS_PRESS H:C172X_430_OBS_RELEASE H:C172X_430_MSG_PRESS H:C172X_430_MSG_RELEASE H:C172X_430_FPL_PRESS H:C172X_430_FPL_RELEASE H:C172X_430_PROC_PRESS H:C172X_430_PROC_RELEASE H:C172X_430_ENT_PRESS H:C172X_430_ENT_RELEASE H:C172X_430_CLR_PRESS H:C172X_430_CLR_RELEASE H:C172X_430_MENU_PRESS H:C172X_430_MENU_RELEASE H:C172X_430_DTO_PRESS H:C172X_430_DTO_RELEASE H:C172X_430_RNG_DEZOOM_PRESS H:C172X_430_RNG_RELEASE H:C172X_430_RNG_ZOOM_PRESS H:C172X_430_RNG_RELEASE H:C172X_430_CV_LARGE_INC H:C172X_430_CV_LARGE_DEC H:C172X_430_CV_SMALL_INC H:C172X_430_CV_SMALL_DEC H:C172X_430_CV_PRESS H:C172X_430_CV_RELEASE H:C172X_430_CRSR_LARGE_INC H:C172X_430_CRSR_LARGE_DEC H:C172X_430_CRSR_SMALL_INC H:C172X_430_CRSR_SMALL_DEC H:C172X_430_CRSR_PRESS H:C172X_430_CRSR_RELEASE
Transponder_Standby#(L:172X_XPNDR_KNOB, Number) 3 > if{  (L:172X_XPNDR_KNOB, Number) 3 - (>L:172X_XPNDR_KNOB, Number) }
Transponder_mode_ALT#(L:172X_XPNDR_KNOB, Number) 4 < if{  4 (>L:172X_XPNDR_KNOB, Number) }
//Working Title/C172 (2024)/Lights (interior)
Panel_color_shifter#//define pins #define BLUE 44 #define GREEN 45 #define RED 46 #define button 51  //define color mode int mode = 0;  void setup() {  //setup LED lights  pinMode (RED, OUTPUT);  pinMode (GREEN, OUTPUT);  pinMode (BLUE, OUTPUT);   //setup buttons  pinMode(button, INPUT_PULLUP); }  void loop() {  if (digitalRead(button) == LOW) {  mode = mode + 1;  delay(400);  } // off  if (mode == 0) {  analogWrite(BLUE, 0);  analogWrite(GREEN, 0);  analogWrite(RED, 0);  }  // White  if (mode == 1) {  analogWrite(BLUE, 250);  analogWrite(GREEN, 255);  analogWrite(RED, 255);  }  // Red  if (mode == 2) {  analogWrite(BLUE, 0);  analogWrite(GREEN, 0);  analogWrite(RED, 255);  }  // Orange  if (mode == 3) {  analogWrite(BLUE, 0);  analogWrite(GREEN, 75);  analogWrite(RED, 255);  }  // Yellow  if (mode == 4) {  analogWrite(BLUE, 0);  analogWrite(GREEN, 220);  analogWrite(RED, 255);  }  // Green  if (mode == 5) {  analogWrite(BLUE, 0);  analogWrite(GREEN, 255);  analogWrite(RED, 0);  } // Blue  if (mode == 6) {  analogWrite(BLUE, 255);  analogWrite(GREEN, 0);  analogWrite(RED, 0);  } // Violet  if (mode == 7) {  analogWrite(BLUE, 255);  analogWrite(GREEN, 0);  analogWrite(RED, 150);  } // Switch Off  if (mode == 8) {  mode = 0;  } } 
//Working Title/CJ4/Air Condition / Pressurization
WT_CJ4_CABIN_TEMP_DEC#(L:PASSENGER_KNOB_HEAT_2) 4 - 0 max (>L:PASSENGER_KNOB_HEAT_2)
WT_CJ4_CABIN_TEMP_INC#(L:PASSENGER_KNOB_HEAT_2) 4 + 100 min (>L:PASSENGER_KNOB_HEAT_2)
WT_CJ4_COCKPIT_TEMP_DEC#(L:PASSENGER_KNOB_HEAT_1) 4 - 0 max (>L:PASSENGER_KNOB_HEAT_1)
WT_CJ4_COCKPIT_TEMP_INC#(L:PASSENGER_KNOB_HEAT_1) 4 + 100 min (>L:PASSENGER_KNOB_HEAT_1)
WT_CJ4_COPILOT_FAN_DEC#(L:PASSENGER_KNOB_AIR_2) 4 - 0 max (>L:PASSENGER_KNOB_AIR_2)
WT_CJ4_COPILOT_FAN_INC#(L:PASSENGER_KNOB_AIR_2) 4 + 100 min (>L:PASSENGER_KNOB_AIR_2)
WT_CJ4_PILOT_FAN_DEC#(L:PASSENGER_KNOB_AIR_1) 4 - 0 max (>L:PASSENGER_KNOB_AIR_1)
WT_CJ4_PILOT_FAN_INC#(L:PASSENGER_KNOB_AIR_1) 4 + 100 min (>L:PASSENGER_KNOB_AIR_1)
WT_CJ4_PRESSOURCE_FRESH#4 (>L:PRESSOURCE) (* FRESH *) 4
WT_CJ4_PRESSOURCE_L#1 (>L:PRESSOURCE) (* LEFT *) 1
WT_CJ4_PRESSOURCE_NORM#2 (>L:PRESSOURCE) (* NORM *) 2
WT_CJ4_PRESSOURCE_OFF#0 (>L:PRESSOURCE) (* OFF *) 0
WT_CJ4_PRESSOURCE_R#3 (>L:PRESSOURCE) (* RIGHT *) 3
WT_CJ4_PRESSURE_DUMP_PUSH#(>K:PRESSURIZATION_PRESSURE_DUMP_SWITCH)
//Working Title/CJ4/Anti-Ice
WT_CJ4_ANTIICE_WINGENG_LEFT_TOG#(L:DEICE_Airframe_1) ! (>L:DEICE_Airframe_1) (L:DEICE_Airframe_1) ! (L:DEICE_Airframe_2) ! and (A:STRUCTURAL DEICE SWITCH, Bool) == if{ (>K:TOGGLE_STRUCTURAL_DEICE) }
WT_CJ4_ANTIICE_WINGENG_RIGHT_TOG#(L:DEICE_Airframe_2) ! (>L:DEICE_Airframe_2) (L:DEICE_Airframe_1) ! (L:DEICE_Airframe_2) ! and (A:STRUCTURAL DEICE SWITCH, Bool) == if{ (>K:TOGGLE_STRUCTURAL_DEICE) }
WT_CJ4_ANTIICE_ENG_LEFT_TOG#(>K:ANTI_ICE_TOGGLE_ENG1)
WT_CJ4_ANTIICE_ENG_LR_TOG#(>K:ANTI_ICE_TOGGLE_ENG1) (>K:ANTI_ICE_TOGGLE_ENG2)
WT_CJ4_ANTIICE_ENG_RIGHT_TOG#(>K:ANTI_ICE_TOGGLE_ENG2)
WT_CJ4_ANTIICE_PITOTS_TOG#(>K:PITOT_HEAT_TOGGLE)
WT_CJ4_ANTIICE_PITOT_1_OFF#1 (>K:PITOT_HEAT_OFF)
WT_CJ4_ANTIICE_PITOT_1_ON#1 (>K:PITOT_HEAT_ON)
WT_CJ4_ANTIICE_PITOT_1_TOG#1 (>K:PITOT_HEAT_TOGGLE) 
WT_CJ4_ANTIICE_PITOT_2_OFF#2 (>K:PITOT_HEAT_OFF)
WT_CJ4_ANTIICE_PITOT_2_ON#2 (>K:PITOT_HEAT_ON)
WT_CJ4_ANTIICE_PITOT_2_TOG#2 (>K:PITOT_HEAT_TOGGLE) 
WT_CJ4_ANTIICE_WINGENG_LR_OFF#0 (>L:DEICE_Airframe_1) 0 (>L:DEICE_Airframe_2)
WT_CJ4_ANTIICE_WINGENG_LR_ON#1 (>L:DEICE_Airframe_1) 1 (>L:DEICE_Airframe_2)
WT_CJ4_ANTIICE_WINGENG_LR_TOG#(L:DEICE_Airframe_1) ! d (>L:DEICE_Airframe_1) (>L:DEICE_Airframe_2) (L:DEICE_Airframe_1) ! (A:STRUCTURAL DEICE SWITCH, Bool) == if{ (>K:TOGGLE_STRUCTURAL_DEICE) }
WT_CJ4_WING_LIGHT_TOG#1 (L:LIGHTING_WING_1) ! d (>L:LIGHTING_WING_1) (>K:2:WING_LIGHTS_SET)
//Working Title/CJ4/Autopilot
WT_CJ4_AP_Disengage_Bar_Down#0 (>K:AUTOPILOT_DISENGAGE_SET)
WT_CJ4_AP_Disengage_Bar_Up#1 (>K:AUTOPILOT_DISENGAGE_SET)
WT_CJ4_AP_ALT_ALERT_CANCEL# 0 (>L:WT_CJ4_Altitude_Alerter_Active) 1 (>L:WT_CJ4_Altitude_Alerter_Cancel)
WT_CJ4_AP_ALT_VAR_INC#100 (>K:AP_ALT_VAR_INC)
WT_CJ4_AP_BUTTON_PRESSED#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) (A:AUTOPILOT YAW DAMPER, bool) if{ (>K:YAW_DAMPER_TOGGLE) } } els{ (A:AUTOPILOT YAW DAMPER, bool) ! if{ (>K:YAW_DAMPER_TOGGLE) } } }
WT_CJ4_AP_CRS1_DEC#(L:WT_CJ4_LNAV_MODE, Number) 2 == if{ (A:NAV OBS:2, degree) 1 - dnor (>K:VOR2_SET) } els{ (A:NAV OBS:1, degree) 1 - dnor (>K:VOR1_SET) }
WT_CJ4_AP_CRS1_INC#(L:WT_CJ4_LNAV_MODE, Number) 2 == if{ (A:NAV OBS:2, degree) 1 + dnor (>K:VOR2_SET) } els{ (A:NAV OBS:1, degree) 1 + dnor (>K:VOR1_SET) }
WT_CJ4_AP_CRS1_PRESSED#(A:HEADING INDICATOR, degrees) sp0 (L:WT_CJ4_LNAV_MODE, Number) 2 == if{ l0 (>K:VOR2_SET) } els{ l0 (>K:VOR1_SET) }
WT_CJ4_AP_CRS2_PRESSED#(A:HEADING INDICATOR, degrees) sp0 (L:WT_CJ4_LNAV_MODE, Number) 2 == if{ l0 (>K:VOR2_SET) } els{ l0 (>K:VOR1_SET) }
WT_CJ4_AP_DISENGAGE_BAR_TOGGLE#(A:AUTOPILOT DISENGAGED, Bool) if{ 0 } els{ 1 } (>K:AUTOPILOT_DISENGAGE_SET) 
WT_CJ4_AP_FLC_PRESSED#(>H:WT_CJ4_AP_FLC_PRESSED) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)
WT_CJ4_AP_SPEED_DEC#(L:XMLVar_AirspeedIsInMach, Bool) if{ (>K:AP_MACH_VAR_DEC) }  els{ (>K:AP_SPD_VAR_DEC) }
WT_CJ4_AP_SPEED_INC#(L:XMLVar_AirspeedIsInMach, Bool) if{ (>K:AP_MACH_VAR_INC) } els{ (>K:AP_SPD_VAR_INC) }
WT_CJ4_AP_VS_DEC#(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_DEC) }  els{ (>K:AP_PITCH_REF_INC_DN) }
WT_CJ4_AP_VS_INC#(A:AUTOPILOT VERTICAL HOLD, bool) if{ (>K:AP_VS_VAR_INC) } els{ (>K:AP_PITCH_REF_INC_UP) }
WT_CJ4_AP_ALT_FAST_DEC#1000 (>K:AP_ALT_VAR_DEC)
WT_CJ4_AP_ALT_FAST_INC#1000 (>K:AP_ALT_VAR_INC)
WT_CJ4_AP_ALT_PRESSED#(>H:WT_CJ4_AP_ALT_PRESSED)
WT_CJ4_AP_ALT_VAR_DEC#100 (>K:AP_ALT_VAR_DEC)
WT_CJ4_AP_APPR_PRESSED#(>H:WT_CJ4_AP_APPR_PRESSED)
WT_CJ4_AP_BC_PRESSED#(>H:WT_CJ4_AP_BC_PRESSED)
WT_CJ4_AP_FD_PRESSED#(>H:WT_CJ4_AP_FD_TOGGLE)
WT_CJ4_AP_HALFBANK_PRESSED#(A:AUTOPILOT MAX BANK, degrees) 16 < if{ (>K:AP_MAX_BANK_INC) } els{ (>K:AP_MAX_BANK_DEC) }
WT_CJ4_AP_HDG_DEC#1 (>K:HEADING_BUG_DEC)
WT_CJ4_AP_HDG_FAST_DEC#(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 - dnor (>K:1:HEADING_BUG_SET)
WT_CJ4_AP_HDG_FAST_INC#(A:AUTOPILOT HEADING LOCK DIR:1, Degrees) 5 + dnor (>K:1:HEADING_BUG_SET)
WT_CJ4_AP_HDG_INC#1 (>K:HEADING_BUG_INC)
WT_CJ4_AP_HDG_PRESSED#(>H:WT_CJ4_AP_HDG_PRESSED)
WT_CJ4_AP_HDG_SYNC#(A:HEADING INDICATOR, degrees) (>K:HEADING_BUG_SET)
WT_CJ4_AP_NAV_PRESSED#(>H:WT_CJ4_AP_NAV_PRESSED)
WT_CJ4_AP_SPEED_FAST_DEC#(L:XMLVAR_AirSpeedIsInMach) if{ (>K:AP_MACH_VAR_DEC) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 10 - 10 / near 10 * 0 max (>K:AP_SPD_VAR_SET) }
WT_CJ4_AP_SPEED_FAST_INC#(L:XMLVAR_AirSpeedIsInMach) if{ (>K:AP_MACH_VAR_INC) } els{ (A:AUTOPILOT AIRSPEED HOLD VAR, knot) 10 + 10 / ceil 10 * 0 max (>K:AP_SPD_VAR_SET) }
WT_CJ4_AP_SPEED_PRESSED#(L:XMLVAR_AirSpeedIsInMach, Bool) ! (>L:XMLVAR_AirSpeedIsInMach, Bool)
WT_CJ4_AP_VNAV_PRESSED#(>H:WT_CJ4_AP_VNAV_PRESSED)
WT_CJ4_AP_VS_PRESSED#(>H:WT_CJ4_AP_VS_PRESSED)
WT_CJ4_AP_XFR_PRESSED#(L:XMLVAR_PushXFR) ! (>L:XMLVAR_PushXFR)
WT_CJ4_AP_YD_OFF#0 (A:AUTOPILOT YAW DAMPER, Bool) != if{ (>K:YAW_DAMPER_TOGGLE) }
WT_CJ4_AP_YD_ON#1 (A:AUTOPILOT YAW DAMPER, Bool) != if{ (>K:YAW_DAMPER_TOGGLE) }
WT_CJ4_AP_YD_PRESSED#(>K:YAW_DAMPER_TOGGLE)
//Working Title/CJ4/Avionics
CJ4_Generic_Upr_TILT_DEC#(>H:CJ4_Generic_Upr_TILT_DEC)
CJ4_Generic_Upr_TILT_INC#(>H:CJ4_Generic_Upr_TILT_INC)
Generic_Lwr_DATA_DEC#(>H:Generic_Lwr_DATA_DEC)
Generic_Lwr_DATA_INC#(>H:Generic_Lwr_DATA_INC)
Generic_Lwr_DATA_PUSH#(>H:Generic_Lwr_DATA_PUSH)
Generic_Lwr_DATA_PUSH_LONG#(>H:Generic_Lwr_DATA_PUSH_LONG)
Generic_Lwr_DATA_SHORT_LONG_PRESS#(E:SIMULATION TIME, second) 0.25 + (>L:MF_timer)
Generic_Lwr_DATA_SHORT_LONG_RELEASE#(E:SIMULATION TIME, second) (L:MF_timer) < if{ (>H:Generic_Lwr_DATA_PUSH) } els{ (>H:Generic_Lwr_DATA_PUSH_LONG) } 
Generic_Lwr_Hold_MEM1_1#(>H:Generic_Lwr_Hold_MEM1_1)
Generic_Lwr_Hold_MEM2_1#(>H:Generic_Lwr_Hold_MEM2_1)
Generic_Lwr_Hold_MEM3_1#(>H:Generic_Lwr_Hold_MEM3_1)
Generic_Lwr_JOYSTICK_DOWN#(>H:Generic_Lwr_JOYSTICK_DOWN)
Generic_Lwr_JOYSTICK_LEFT#(>H:Generic_Lwr_JOYSTICK_LEFT)
Generic_Lwr_JOYSTICK_RIGHT#(>H:Generic_Lwr_JOYSTICK_RIGHT)
Generic_Lwr_JOYSTICK_UP#(>H:Generic_Lwr_JOYSTICK_UP)
Generic_Lwr_MENU_ADV_DEC#(>H:Generic_Lwr_MENU_ADV_DEC)
Generic_Lwr_MENU_ADV_INC#(>H:Generic_Lwr_MENU_ADV_INC)
Generic_Lwr_Push_CAS_PAGE#(>H:Generic_Lwr_Push_CAS_PAGE)
Generic_Lwr_Push_CKLST_1#(>H:Generic_Lwr_Push_CKLST_1)
Generic_Lwr_Push_ENG#(>H:Generic_Lwr_Push_ENG)
Generic_Lwr_Push_ESC#(>H:Generic_Lwr_Push_ESC)
Generic_Lwr_Push_LWR_MENU#(>H:Generic_Lwr_Push_LWR_MENU)
Generic_Lwr_Push_MEM1_1#(>H:Generic_Lwr_Push_MEM1_1)
Generic_Lwr_Push_MEM2_1#(>H:Generic_Lwr_Push_MEM2_1)
Generic_Lwr_Push_MEM3_1#(>H:Generic_Lwr_Push_MEM3_1)
Generic_Lwr_Push_NAV_DATA#(>H:Generic_Lwr_Push_NAV_DATA)
Generic_Lwr_Push_PASSBRIEF_1#(>H:Generic_Lwr_Push_PASSBRIEF_1)
Generic_Lwr_Push_SYS#(>H:Generic_Lwr_Push_SYS)
Generic_Lwr_Push_TERR_WX#(>H:Generic_Lwr_Push_TERR_WX)
Generic_Lwr_Push_TFC#(>H:Generic_Lwr_Push_TFC)
Generic_Lwr_Push_UPR_MENU#(>H:Generic_Lwr_Push_UPR_MENU)
Generic_Lwr_Push_ZOOM_DEC#(>H:Generic_Lwr_Push_ZOOM_DEC)
Generic_Lwr_Push_ZOOM_INC#(>H:Generic_Lwr_Push_ZOOM_INC)
Generic_Upr_Data_DEC#(>H:Generic_Upr_Data_DEC)
Generic_Upr_Data_INC#(>H:Generic_Upr_Data_INC)
Generic_Upr_Data_PUSH#(>H:Generic_Upr_Data_PUSH)
Generic_Upr_MENU_ADV_DEC#(>H:Generic_Upr_MENU_ADV_DEC)
Generic_Upr_MENU_ADV_INC#(>H:Generic_Upr_MENU_ADV_INC)
Generic_Upr_Push_ESC#(>H:Generic_Upr_Push_ESC)
Generic_Upr_Push_ET#(>H:Generic_Upr_Push_ET)
Generic_Upr_Push_FRMT#(>H:Generic_Upr_Push_FRMT)
Generic_Upr_Push_NAV#(>H:Generic_Upr_Push_NAV)
Generic_Upr_Push_PFD_MENU#(>H:Generic_Upr_Push_PFD_MENU)
Generic_Upr_Push_REFS_MENU#(>H:Generic_Upr_Push_REFS_MENU)
Generic_Upr_Push_TERR_WX#(>H:Generic_Upr_Push_TERR_WX)
Generic_Upr_Push_TFC#(>H:Generic_Upr_Push_TFC)
Generic_Upr_RANGE_DEC#(>H:Generic_Upr_RANGE_DEC)
Generic_Upr_RANGE_INC#(>H:Generic_Upr_RANGE_INC)
Generic_Lwr_Push_Chart_1#(>H:Generic_Lwr_Push_Chart_1)
WT_CJ4_BARO1_DEC#(L:XMLVAR_Baro1_ForcedToSTD, bool) ! if{ 1 (>K:KOHLSMAN_DEC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) } els{ (L:XMLVAR_Baro1_SavedPressure, number) 5 - (>L:XMLVAR_Baro1_SavedPressure) }
WT_CJ4_BARO1_INC#(L:XMLVAR_Baro1_ForcedToSTD, bool) ! if{ 1 (>K:KOHLSMAN_INC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) } els{ (L:XMLVAR_Baro1_SavedPressure, Number) 5 + (>L:XMLVAR_Baro1_SavedPressure) } 
WT_CJ4_BARO1_STD_PUSH#(L:XMLVAR_Baro1_ForcedToSTD, bool) ! (>L:XMLVAR_Baro1_ForcedToSTD, bool) (L:XMLVAR_Baro1_ForcedToSTD, bool) if{ (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure, number) 1 (>K:BAROMETRIC_STD_PRESSURE) } els{ 1 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) 2 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) }
WT_CJ4_BARO2_DEC#(L:XMLVAR_Baro1_ForcedToSTD, bool) ! if{ 1 (>K:KOHLSMAN_DEC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) } els{ (L:XMLVAR_Baro1_SavedPressure, number) 5 - (>L:XMLVAR_Baro1_SavedPressure) }
WT_CJ4_BARO2_INC#(L:XMLVAR_Baro1_ForcedToSTD, bool) ! if{ 1 (>K:KOHLSMAN_INC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) } els{ (L:XMLVAR_Baro1_SavedPressure, number) 5 + (>L:XMLVAR_Baro1_SavedPressure) }
WT_CJ4_BARO2_STD_PUSH#(L:XMLVAR_Baro1_ForcedToSTD, bool) ! (>L:XMLVAR_Baro1_ForcedToSTD, bool) (L:XMLVAR_Baro1_ForcedToSTD, bool) if{ (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro1_SavedPressure) 1 (>K:BAROMETRIC_STD_PRESSURE) } els{ 1 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) 2 (L:XMLVAR_Baro1_SavedPressure, number) (>K:2:KOHLSMAN_SET) } 
WT_CJ4_BARO3_DEC#(L:XMLVAR_Baro2_ForcedToSTD, bool) ! if{ 2 (>K:KOHLSMAN_DEC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro2_SavedPressure) } els{ (L:XMLVAR_Baro2_SavedPressure, number) 5 - (>L:XMLVAR_Baro2_SavedPressure) } 
WT_CJ4_BARO3_INC#(L:XMLVAR_Baro2_ForcedToSTD, bool) ! if{ 2 (>K:KOHLSMAN_INC) (A:KOHLSMAN SETTING MB:1, mbars) 16 * (>L:XMLVAR_Baro2_SavedPressure) } els{ (L:XMLVAR_Baro2_SavedPressure, number) 5 + (>L:XMLVAR_Baro2_SavedPressure) } 
WT_CJ4_LNAV_MODE_PRESSED#(>H:Generic_Upr_Push_NAV)
MFD1_MEM1-1_Button_Short_Long_Press#(E:SIMULATION TIME, second) 0.25 + (>L:MEM1_Press)
MFD1_MEM1-1_Button_Short_Long_Release#(E:SIMULATION TIME, second) (L:MEM1_Press) < if{ (>H:Generic_Lwr_Push_MEM1_1) } els{ (>H:Generic_Lwr_Hold_MEM1_1) }
MFD1_MEM2-1_Button_Short_Long_Press_#(E:SIMULATION TIME, second) 0.25 + (>L:MEM2_Press)
MFD1_MEM2-1_Button_Short_Long_Release#(E:SIMULATION TIME, second) (L:MEM2_Press) < if{ (>H:Generic_Lwr_Push_MEM2_1) } els{ (>H:Generic_Lwr_Hold_MEM2_1) }
MFD1_MEM3-1_Button_Short_Long_Press#(E:SIMULATION TIME, second) 0.25 + (>L:MEM3_Press)
MFD1_MEM3-1_Short_Long_Release#(E:SIMULATION TIME, second) (L:MEM3_Press) < if{ (>H:Generic_Lwr_Push_MEM3_1) } els{ (>H:Generic_Lwr_Hold_MEM3_1) }
//Working Title/CJ4/Controls
AILERON_TRIM_LEFT_WING_DN#(A:AILERON TRIM PCT, percent) 1 - 163.83 * -16383 max 16383 min (>K:AILERON_TRIM_SET_EX1) 
AILERON_TRIM_RIGHT_WING_DN#(A:AILERON TRIM PCT, percent) 1 + 163.83 * -16383 max 16383 min (>K:AILERON_TRIM_SET_EX1) 
SEC_ELEV_TRIM_ENABLE_TOGGLE#(L:SEC_ELEV_TRIM_ENABLE) ! (>L:SEC_ELEV_TRIM_ENABLE)
SECONDARY_ELEV_TRIM_NOSE_DOWN#(L:SEC_ELEV_TRIM_ENABLE) if{ (A:ELEVATOR TRIM PCT, percent) 0.666667 - 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET) 
SECONDARY_ELEV_TRIM_NOSE_UP#(L:SEC_ELEV_TRIM_ENABLE) if{ (A:ELEVATOR TRIM PCT, percent) 0.666667 + 163.83 * 16383 min -16383 max (>K:ELEVATOR_TRIM_SET) 
RUDDER_TRIM_NOSE_LEFT#(A:AUTOPILOT MASTER, bool) ! if{ (A:RUDDER TRIM PCT, percent) 0.6250 - 163.83 * -16383 max 16383 min (>K:RUDDER_TRIM_SET_EX1) }
RUDDER_TRIM_NOSE_RIGHT#(A:AUTOPILOT MASTER, bool) ! if{ (A:RUDDER TRIM PCT, percent) 0.6250 + 163.83 * -16383 max 16383 min (>K:RUDDER_TRIM_SET_EX1) }
//Working Title/CJ4/Electrical
WT_CJ4_AVIONICS_FTL_EMER_TOG#4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) 0 (>L:XMLVAR_AVIONICS_IsComposite) 49 (>K:ELECTRICAL_CIRCUIT_TOGGLE) (L:WT_CJ4_EMER_LIGHT_ARMED) ! (>L:WT_CJ4_EMER_LIGHT_ARMED)
WT_CJ4_AVIONICS_MASTER_DSP#1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) ! if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 1 (>L:XMLVAR_AVIONICS_IsComposite)
WT_CJ4_AVIONICS_MASTER_OFF#1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 0 (>L:XMLVAR_AVIONICS_IsComposite)
WT_CJ4_AVIONICS_MASTER_ON#1 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:4, bool) ! if{ 4 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:23, bool) ! if{ 23 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, number) (A:BUS CONNECTION ON:5, bool) ! if{ 5 2 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (A:CIRCUIT SWITCH ON:24, bool) ! if{ 24 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } 0 (>L:XMLVAR_AVIONICS_IsComposite)
WT_CJ4_EMER_LIGHT_ARM#1 (>L:WT_CJ4_EMER_LIGHT_ARMED) }
WT_CJ4_EMER_LIGHT_OFF#0 (>L:WT_CJ4_EMER_LIGHT_ARMED) }
WT_CJ4_EMER_LIGHT_TOG#(L:WT_CJ4_EMER_LIGHT_ARMED) ! (>L:WT_CJ4_EMER_LIGHT_ARMED)
WT_CJ4_GENERATOR_L_OFF#(A:GENERAL ENG MASTER ALTERNATOR:1, bool) if{ (>K:TOGGLE_ALTERNATOR1) }
WT_CJ4_GENERATOR_L_ON#(A:GENERAL ENG MASTER ALTERNATOR:1, bool) ! if{ (>K:TOGGLE_ALTERNATOR1) }
WT_CJ4_GENERATOR_R_OFF#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) if{ (>K:TOGGLE_ALTERNATOR2) }
WT_CJ4_GENERATOR_R_ON#(A:GENERAL ENG MASTER ALTERNATOR:2, bool) ! if{ (>K:TOGGLE_ALTERNATOR2) }
WT_CJ4_GEN_LR_TOG#(>K:TOGGLE_ALTERNATOR1) (>K:TOGGLE_ALTERNATOR2)
WT_CJ4_GEN_L_RESET#1 (>L:MF_WTCJ4_Alternator_1_Reset,bool)
WT_CJ4_GEN_R_RESET#1 (>L:MF_WTCJ4_Alternator_2_Reset,bool)
WT_CJ4_MASTER_BATTERY_EMER#(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 1 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (L:XMLVAR_Essential_Bus_ON) if{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
WT_CJ4_MASTER_BATTERY_OFF#(A:ELECTRICAL MASTER BATTERY:1, bool) if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 0 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (L:XMLVAR_Essential_Bus_ON) if{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
WT_CJ4_MASTER_BATTERY_ON#(A:ELECTRICAL MASTER BATTERY:1, bool) ! if{ 1 (>K:TOGGLE_MASTER_BATTERY) } 0 (>L:XMLVAR_Essential_Bus_ON) 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:2, Bool) (L:XMLVAR_Essential_Bus_ON) == if{ 2 1 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } (L:XMLVAR_Essential_Bus_ON) if{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } } els{ 1 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) ! if{ 1 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } 2 (>A:BUS LOOKUP INDEX, Number) (A:BUS CONNECTION ON:3, Bool) if{ 2 3 (>K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE) } }
WT_CJ4_STBY_FTL_OFF#(A:CIRCUIT SWITCH ON:49,bool) if{ 49 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
WT_CJ4_STBY_FTL_ON#(A:CIRCUIT SWITCH ON:49,bool) ! if{ 49 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
WT_CJ4_STBY_FTL_TOG#49 (>K:ELECTRICAL_CIRCUIT_TOGGLE)
//Working Title/CJ4/Engines
WT_CJ4_ENG_RUNSTOP_R_PUSH#(A:GENERAL ENG MIXTURE LEVER POSITION:2, Percent) 0 > if{ 0 (>K:MIXTURE2_SET) 0 (>K:SET_FUEL_VALVE_ENG2) }  els{ 16384 (>K:MIXTURE2_SET) 1 (>K:SET_FUEL_VALVE_ENG2) }
WT_CJ4_ENG_L_RUN_OFF#0 (>K:MIXTURE1_SET) 0 (>K:SET_FUEL_VALVE_ENG1)
WT_CJ4_ENG_L_RUN_ON#16384 (>K:MIXTURE1_SET) 1 (>K:SET_FUEL_VALVE_ENG1)
WT_CJ4_ENG_RUNSTOP_L_PUSH#(A:GENERAL ENG MIXTURE LEVER POSITION:1, Percent) 0 > if{ 0 (>K:MIXTURE1_SET) 0 (>K:SET_FUEL_VALVE_ENG1) } els{ 16384 (>K:MIXTURE1_SET) 1 (>K:SET_FUEL_VALVE_ENG1) }
WT_CJ4_ENG_R_RUN_OFF#0 (>K:MIXTURE2_SET) 0 (>K:SET_FUEL_VALVE_ENG2)
WT_CJ4_ENG_R_RUN_ON#16384 (>K:MIXTURE2_SET) 1 (>K:SET_FUEL_VALVE_ENG2)
WT_CJ4_ENG_START_DISENG#(A:GENERAL ENG STARTER:1, Bool) if{ (>K:TOGGLE_STARTER1) } (A:GENERAL ENG STARTER:2, Bool) if{ (>K:TOGGLE_STARTER2) }
WT_CJ4_ENG_START_LEFT#(>K:TOGGLE_STARTER1)
WT_CJ4_ENG_START_LEFT_OFF#0 (A:GENERAL ENG STARTER:1, Bool) != if{ (>K:TOGGLE_STARTER1) }
WT_CJ4_ENG_START_LEFT_ON#1 (A:GENERAL ENG STARTER:1, Bool) != if{ (>K:TOGGLE_STARTER1) }
WT_CJ4_ENG_START_RIGHT#(>K:TOGGLE_STARTER2)
WT_CJ4_ENG_START_RIGHT_OFF#0 (A:GENERAL ENG STARTER:2, Bool) != if{ (>K:TOGGLE_STARTER2) }
WT_CJ4_ENG_START_RIGHT_ON#1 (A:GENERAL ENG STARTER:2, Bool) != if{ (>K:TOGGLE_STARTER2) }
WT_CJ4_IGNITION_MAN_L_PUSH#2 1 (A:TURB ENG IGNITION SWITCH EX1:1, enum) 1 == ? (>K:TURBINE_IGNITION_SWITCH_SET1)
WT_CJ4_IGNITION_MAN_R_PUSH#2 1 (A:TURB ENG IGNITION SWITCH EX1:2, enum) 1 == ? (>K:TURBINE_IGNITION_SWITCH_SET2)
//Working Title/CJ4/Fuel
WT_CJ4_FUEL_BOOST_MAN_L#(>K:TOGGLE_ELECT_FUEL_PUMP1)
WT_CJ4_FUEL_BOOST_MAN_R#(>K:TOGGLE_ELECT_FUEL_PUMP2)
WT_CJ4_FUEL_XFER_LTK#(A:CIRCUIT SWITCH ON:45, bool) if{ 45 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:46, bool) ! if{ 46 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
WT_CJ4_FUEL_XFER_OFF#(A:CIRCUIT SWITCH ON:45, bool) if{ 45 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:46, bool) if{ 46 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
WT_CJ4_FUEL_XFER_RTK#(A:CIRCUIT SWITCH ON:45, bool) ! if{ 45 (>K:ELECTRICAL_CIRCUIT_TOGGLE) } (A:CIRCUIT SWITCH ON:46, bool) if{ 46 (>K:ELECTRICAL_CIRCUIT_TOGGLE) }
//Working Title/CJ4/Lights
WT_CJ4_BEACON_LIGHT_OFF#0 (>L:LIGHTING_BEACON_1) 1 0 (>K:2:BEACON_LIGHTS_SET)
WT_CJ4_BEACON_LIGHT_ON#1 (>L:LIGHTING_BEACON_1) 1 1 (>K:2:BEACON_LIGHTS_SET)
WT_CJ4_BEACON_LIGHT_TOG#1 (L:LIGHTING_BEACON_1) ! d (>L:LIGHTING_BEACON_1) (>K:2:BEACON_LIGHTS_SET)
WT_CJ4_CABIN1_LIGHT_DEC#(L:LIGHTING_CABIN_1) 5 - 0 max 100 min d (>L:LIGHTING_CABIN_1) 5 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) (L:LIGHTING_CABIN_1) 0 > != if{ 1 (L:LIGHTING_CABIN_1) (>K:2:CABIN_LIGHTS_SET) }
WT_CJ4_CABIN1_LIGHT_INC#(L:LIGHTING_CABIN_1) 5 + 0 max 100 min d (>L:LIGHTING_CABIN_1) 5 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:1, Bool) (L:LIGHTING_CABIN_1) 0 > != if{ 1 (L:LIGHTING_CABIN_1) (>K:2:CABIN_LIGHTS_SET) }
WT_CJ4_CABIN1_LIGHT_TOGGLE#(A:LIGHT CABIN:1, Bool) ! if{ 1 1 (>K:2:CABIN_LIGHTS_SET) 100 5 (>K:2:LIGHT_POTENTIOMETER_SET) } els{ 0 5 (>K:2:LIGHT_POTENTIOMETER_SET) 1 0 (>K:2:CABIN_LIGHTS_SET) }
WT_CJ4_CABIN2_LIGHT_DEC#(L:LIGHTING_CABIN_2) 5 - 0 max 100 min d (>L:LIGHTING_CABIN_2) 6 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:2, Bool) (L:LIGHTING_CABIN_2) 0 > != if{ 2 (L:LIGHTING_CABIN_2) (>K:2:CABIN_LIGHTS_SET)
WT_CJ4_CABIN2_LIGHT_INC#(L:LIGHTING_CABIN_2) 5 + 0 max 100 min d (>L:LIGHTING_CABIN_2) 6 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:2, Bool) (L:LIGHTING_CABIN_2) 0 > != if{ 2 (L:LIGHTING_CABIN_2) (>K:2:CABIN_LIGHTS_SET)
WT_CJ4_CABIN2_LIGHT_TOGGLE#(A:LIGHT CABIN:2, Bool) ! if{ 2 1 (>K:2:CABIN_LIGHTS_SET) 100 6 (>K:2:LIGHT_POTENTIOMETER_SET) } els{ 0 6 (>K:2:LIGHT_POTENTIOMETER_SET) 2 0 (>K:2:CABIN_LIGHTS_SET) }
WT_CJ4_FLOOD_LIGHT_DEC#(L:LIGHTING_CABIN_3) 5 - 0 max 100 min d (>L:LIGHTING_CABIN_3) 4 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:3, Bool) (L:LIGHTING_CABIN_3) 0 > != if{ 3 (L:LIGHTING_CABIN_3) (>K:2:CABIN_LIGHTS_SET)
WT_CJ4_FLOOD_LIGHT_INC#(L:LIGHTING_CABIN_3) 5 + 0 max 100 min d (>L:LIGHTING_CABIN_3) 4 (>K:2:LIGHT_POTENTIOMETER_SET) (A:LIGHT CABIN:3, Bool) (L:LIGHTING_CABIN_3) 0 > != if{ 3 (L:LIGHTING_CABIN_3) (>K:2:CABIN_LIGHTS_SET)
WT_CJ4_FLOOD_LIGHT_TOGGLE#(A:LIGHT CABIN:3, Bool) ! if{ 3 1 (>K:2:CABIN_LIGHTS_SET) 100 4 (>K:2:LIGHT_POTENTIOMETER_SET) } els{ 0 4 (>K:2:LIGHT_POTENTIOMETER_SET) 3 0 (>K:2:CABIN_LIGHTS_SET) }
WT_CJ4_LANDING_LIGHTS_OFF#(A:LIGHT LANDING, Bool) if{ (>K:LANDING_LIGHTS_TOGGLE) }
WT_CJ4_LOGO_LIGHT_TOGGLE#1 (L:LIGHTING_LOGO_1) ! d (>L:LIGHTING_LOGO_1) (>K:2:LOGO_LIGHTS_SET)
WT_CJ4_MFD1_LIGHT_DEC#(L:LIGHTING_POTENTIOMETER_17) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_17) 17 (>K:2:LIGHT_POTENTIOMETER_SET)
WT_CJ4_MFD1_LIGHT_INC#(L:LIGHTING_POTENTIOMETER_17) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_17) 17 (>K:2:LIGHT_POTENTIOMETER_SET)
WT_CJ4_MFD2_LIGHT_DEC#(L:LIGHTING_POTENTIOMETER_18) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_18) 18 (>K:2:LIGHT_POTENTIOMETER_SET)
WT_CJ4_MFD2_LIGHT_INC#(L:LIGHTING_POTENTIOMETER_18) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_18) 18 (>K:2:LIGHT_POTENTIOMETER_SET)
WT_CJ4_NAV_LIGHT_OFF#0 (>L:LIGHTING_NAV_1) 1 0 (>K:2:NAV_LIGHTS_SET)
WT_CJ4_NAV_LIGHT_ON#1 (>L:LIGHTING_NAV_1) 1 1 (>K:2:NAV_LIGHTS_SET)
WT_CJ4_NAV_LIGHT_TOG#1 (L:LIGHTING_NAV_1) ! d (>L:LIGHTING_NAV_1) (>K:2:NAV_LIGHTS_SET)
WT_CJ4_PANEL_LIGHTS_DEC#(L:LIGHTING_Knob_Master, number) 10 - 10 max (>L:LIGHTING_Knob_Master, number) 
WT_CJ4_PANEL_LIGHTS_INC#(L:LIGHTING_Knob_Master, number) 10 + 100 min (>L:LIGHTING_Knob_Master, number)
WT_CJ4_PANEL_LIGHTS_TOGGLE#(L:LIGHTING_Knob_Master, number) 90 > if{ 90 (>L:LIGHTING_Knob_Master, number) } els{ 100 (>L:LIGHTING_Knob_Master, number) }
WT_CJ4_PFD1_LIGHT_DEC#(L:LIGHTING_POTENTIOMETER_15) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_15) 15 (>K:2:LIGHT_POTENTIOMETER_SET)
WT_CJ4_PFD1_LIGHT_INC#(L:LIGHTING_POTENTIOMETER_15) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_15) 15 (>K:2:LIGHT_POTENTIOMETER_SET)
WT_CJ4_PFD2_LIGHT_DEC#(L:LIGHTING_POTENTIOMETER_16) 5 - 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_16) 16 (>K:2:LIGHT_POTENTIOMETER_SET)
WT_CJ4_PFD2_LIGHT_INC#(L:LIGHTING_POTENTIOMETER_16) 5 + 0 max 100 min d (>L:LIGHTING_POTENTIOMETER_16) 16 (>K:2:LIGHT_POTENTIOMETER_SET)
WT_CJ4_SAFETY_LIGHT_TOGGLE#(L:SAFETY_LIGHT_ON) ! (>L:SAFETY_LIGHT_ON)
WT_CJ4_SEATBELT_LIGHT_TOGGLE#(L:SEATBELT_LIGHT_ON) ! (>L:SEATBELT_LIGHT_ON)
WT_CJ4_STROBE_LIGHT_OFF#0 (>L:LIGHTING_STROBE_1) 1 0 (>K:2:STROBES_SET)
WT_CJ4_STROBE_LIGHT_ON#1 (>L:LIGHTING_STROBE_1) 1 1 (>K:2:STROBES_SET)
WT_CJ4_STROBE_LIGHT_TOG#1 (L:LIGHTING_STROBE_1) ! d (>L:LIGHTING_STROBE_1) (>K:2:STROBES_SET)
WT_CJ4_TAXI_LIGHTS_OFF#(A:LIGHT TAXI, Bool) if{ (>K:TOGGLE_TAXI_LIGHTS) }
//Working Title/CJ4/Navigation
CJ4_FMC_1_BTN_0#(>H:CJ4_FMC_1_BTN_0)
CJ4_FMC_1_BTN_1#(>H:CJ4_FMC_1_BTN_1)
CJ4_FMC_1_BTN_2#(>H:CJ4_FMC_1_BTN_2)
CJ4_FMC_1_BTN_3#(>H:CJ4_FMC_1_BTN_3)
CJ4_FMC_1_BTN_4#(>H:CJ4_FMC_1_BTN_4)
CJ4_FMC_1_BTN_5#(>H:CJ4_FMC_1_BTN_5)
CJ4_FMC_1_BTN_6#(>H:CJ4_FMC_1_BTN_6)
CJ4_FMC_1_BTN_7#(>H:CJ4_FMC_1_BTN_7)
CJ4_FMC_1_BTN_8#(>H:CJ4_FMC_1_BTN_8)
CJ4_FMC_1_BTN_9#(>H:CJ4_FMC_1_BTN_9)
CJ4_FMC_1_BTN_A#(>H:CJ4_FMC_1_BTN_A)
CJ4_FMC_1_BTN_B#(>H:CJ4_FMC_1_BTN_B)
CJ4_FMC_1_BTN_C#(>H:CJ4_FMC_1_BTN_C)
CJ4_FMC_1_BTN_CLR#(>H:CJ4_FMC_1_BTN_CLR)
CJ4_FMC_1_BTN_CLR_Long#(>H:CJ4_FMC_1_BTN_CLR_Long)
CJ4_FMC_1_BTN_D#(>H:CJ4_FMC_1_BTN_D)
CJ4_FMC_1_BTN_DEPARR#(>H:CJ4_FMC_1_BTN_DEPARR)
CJ4_FMC_1_BTN_DIR#(>H:CJ4_FMC_1_BTN_DIR)
CJ4_FMC_1_BTN_DIV#(>H:CJ4_FMC_1_BTN_DIV)
CJ4_FMC_1_BTN_DOT#(>H:CJ4_FMC_1_BTN_DOT)
CJ4_FMC_1_BTN_DSPL_MENU#(>H:CJ4_FMC_1_BTN_DSPL_MENU)
CJ4_FMC_1_BTN_E#(>H:CJ4_FMC_1_BTN_E)
CJ4_FMC_1_BTN_EXEC#(>H:CJ4_FMC_1_BTN_EXEC)
CJ4_FMC_1_BTN_F#(>H:CJ4_FMC_1_BTN_F)
CJ4_FMC_1_BTN_FPLN#(>H:CJ4_FMC_1_BTN_FPLN)
CJ4_FMC_1_BTN_G#(>H:CJ4_FMC_1_BTN_G)
CJ4_FMC_1_BTN_H#(>H:CJ4_FMC_1_BTN_H)
CJ4_FMC_1_BTN_I#(>H:CJ4_FMC_1_BTN_I)
CJ4_FMC_1_BTN_IDX#(>H:CJ4_FMC_1_BTN_IDX)
CJ4_FMC_1_BTN_J#(>H:CJ4_FMC_1_BTN_J)
CJ4_FMC_1_BTN_K#(>H:CJ4_FMC_1_BTN_K)
CJ4_FMC_1_BTN_L#(>H:CJ4_FMC_1_BTN_L)
CJ4_FMC_1_BTN_L1#(>H:CJ4_FMC_1_BTN_L1)
CJ4_FMC_1_BTN_L2#(>H:CJ4_FMC_1_BTN_L2)
CJ4_FMC_1_BTN_L3#(>H:CJ4_FMC_1_BTN_L3)
CJ4_FMC_1_BTN_L4#(>H:CJ4_FMC_1_BTN_L4)
CJ4_FMC_1_BTN_L5#(>H:CJ4_FMC_1_BTN_L5)
CJ4_FMC_1_BTN_L6#(>H:CJ4_FMC_1_BTN_L6)
CJ4_FMC_1_BTN_LEGS#(>H:CJ4_FMC_1_BTN_LEGS)
CJ4_FMC_1_BTN_M#(>H:CJ4_FMC_1_BTN_M)
CJ4_FMC_1_BTN_MFD_ADV#(>H:CJ4_FMC_1_BTN_MFD_ADV)
CJ4_FMC_1_BTN_MFD_DATA#(>H:CJ4_FMC_1_BTN_MFD_DATA)
CJ4_FMC_1_BTN_MSG#(>H:CJ4_FMC_1_BTN_MSG)
CJ4_FMC_1_BTN_N#(>H:CJ4_FMC_1_BTN_N)
CJ4_FMC_1_BTN_NEXTPAGE#(>H:CJ4_FMC_1_BTN_NEXTPAGE)
CJ4_FMC_1_BTN_O#(>H:CJ4_FMC_1_BTN_O)
CJ4_FMC_1_BTN_P#(>H:CJ4_FMC_1_BTN_P)
CJ4_FMC_1_BTN_PERF#(>H:CJ4_FMC_1_BTN_PERF)
CJ4_FMC_1_BTN_PLUSMINUS#(>H:CJ4_FMC_1_BTN_PLUSMINUS)
CJ4_FMC_1_BTN_PREVPAGE#(>H:CJ4_FMC_1_BTN_PREVPAGE)
CJ4_FMC_1_BTN_Q#(>H:CJ4_FMC_1_BTN_Q)
CJ4_FMC_1_BTN_R#(>H:CJ4_FMC_1_BTN_R)
CJ4_FMC_1_BTN_R1#(>H:CJ4_FMC_1_BTN_R1)
CJ4_FMC_1_BTN_R2#(>H:CJ4_FMC_1_BTN_R2)
CJ4_FMC_1_BTN_R3#(>H:CJ4_FMC_1_BTN_R3)
CJ4_FMC_1_BTN_R4#(>H:CJ4_FMC_1_BTN_R4)
CJ4_FMC_1_BTN_R5#(>H:CJ4_FMC_1_BTN_R5)
CJ4_FMC_1_BTN_R6#(>H:CJ4_FMC_1_BTN_R6)
CJ4_FMC_1_BTN_S#(>H:CJ4_FMC_1_BTN_S)
CJ4_FMC_1_BTN_SP#(>H:CJ4_FMC_1_BTN_SP)
CJ4_FMC_1_BTN_T#(>H:CJ4_FMC_1_BTN_T)
CJ4_FMC_1_BTN_TUN#(>H:CJ4_FMC_1_BTN_TUN)
CJ4_FMC_1_BTN_U#(>H:CJ4_FMC_1_BTN_U)
CJ4_FMC_1_BTN_V#(>H:CJ4_FMC_1_BTN_V)
CJ4_FMC_1_BTN_W#(>H:CJ4_FMC_1_BTN_W)
CJ4_FMC_1_BTN_X#(>H:CJ4_FMC_1_BTN_X)
CJ4_FMC_1_BTN_Y#(>H:CJ4_FMC_1_BTN_Y)
CJ4_FMC_1_BTN_Z#(>H:CJ4_FMC_1_BTN_Z)
//Working Title/CJ4/Radio
WT_CJ4_COM1_ACTIVE_PUSH#(A:PILOT TRANSMITTER TYPE, Enum) 0 == if{ 4 (>K:PILOT_TRANSMITTER_SET) 0 (>K:COM_RECEIVE_ALL_SET) } els{  0 (>K:PILOT_TRANSMITTER_SET) 1 (>K:COM1_RECEIVE_SELECT) }
WT_CJ4_COM1_VOLUME_ON_TOGGLE#0 100 (A:COM VOLUME:1, Percent) 0 > ? (>K:COM1_VOLUME_SET)
WT_CJ4_COM2_ACTIVE_PUSH#(A:PILOT TRANSMITTER TYPE, Enum) 1 == if{  4 (>K:PILOT_TRANSMITTER_SET) 0 (>K:COM_RECEIVE_ALL_SET) } els{ 1 (>K:PILOT_TRANSMITTER_SET) 1 (>K:COM2_RECEIVE_SELECT) }
WT_CJ4_COM2_VOLUME_ON_TOGGLE#0 100 (A:COM VOLUME:2, Percent) 0 > ? (>K:COM2_VOLUME_SET)
WT_CJ4_ADF1_TOG#(>K:RADIO_ADF_IDENT_TOGGLE)
WT_CJ4_COM1COM2_ACTIVE_TOG#1 0 (A:COM TRANSMIT:1,bool) ? d (>K:PILOT_TRANSMITTER_SET) (>K:COPILOT_TRANSMITTER_SET)
WT_CJ4_COM1_VOLUME_DEC# (>K:COM1_VOLUME_DEC)
WT_CJ4_COM1_VOLUME_INC# (>K:COM1_VOLUME_INC)
WT_CJ4_COM2_VOLUME_DEC# (>K:COM2_VOLUME_DEC)
WT_CJ4_COM2_VOLUME_INC# (>K:COM2_VOLUME_INC)
WT_CJ4_DME1_TOG#(>K:RADIO_DME1_IDENT_TOGGLE)
WT_CJ4_DME2_TOG#(>K:RADIO_DME2_IDENT_TOGGLE)
WT_CJ4_MKR_MUTE_PRESS#1 (>K:MARKER_BEACON_TEST_MUTE)
WT_CJ4_MKR_MUTE_RELEASE#0 (>K:MARKER_BEACON_TEST_MUTE)
WT_CJ4_MKR_TOG#(>K:MARKER_SOUND_TOGGLE)
WT_CJ4_NAV1_TOG#0 1 (A:NAV VOLUME:1, Percent) 0 > ? (>K:NAV1_VOLUME_SET)
WT_CJ4_NAV1_VOLUME_DEC#(>K:NAV1_VOLUME_DEC) 
WT_CJ4_NAV1_VOLUME_INC#(>K:NAV1_VOLUME_INC) 
WT_CJ4_NAV2_TOG#0 1 (A:NAV VOLUME:2, Percent) 0 > ? (>K:NAV2_VOLUME_SET)
WT_CJ4_NAV2_VOLUME_DEC#(>K:NAV2_VOLUME_DEC) 
WT_CJ4_NAV2_VOLUME_INC#(>K:NAV2_VOLUME_INC) 
WT_CJ4_SPKR_TOG#(>K:TOGGLE_SPEAKER)
//Working Title/CJ4/Warning System
WT_CJ4_MASTER_CAUTION_PUSH#1 (>L:MF_Master_Caution_Test) (>K:MASTER_CAUTION_ACKNOWLEDGE)
WT_CJ4_MASTER_CAUTION_RELEASE#0 (>L:MF_Master_Caution_Test)
WT_CJ4_MASTER_WARNING_PUSH#1 (>L:MF_Master_Warning_Test) (>K:MASTER_WARNING_ACKNOWLEDGE)
WT_CJ4_MASTER_WARNING_RELEASE#0 (>L:MF_Master_Warning_Test) 
//Working Title/G1000 NXi/Autopilot
AS1000_PFD_FLC_Push#(>K:FLIGHT_LEVEL_CHANGE) (A:AIRSPEED INDICATED, knots) (>K:AP_SPD_VAR_SET)
PFD_ALT_Push#(>K:AP_ALT_HOLD)
PFD_AP_Push#(A:AUTOPILOT DISENGAGED, Bool) ! if{ (>K:AP_MASTER) (A:AUTOPILOT MASTER, Bool) ! if{ (>H:Generic_Autopilot_Manual_Off) } els{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } (A:AUTOPILOT MASTER, Bool) ! if{ (A:AUTOPILOT FLIGHT DIRECTOR ACTIVE, Bool) ! if{ 1 (>K:TOGGLE_FLIGHT_DIRECTOR) } } 
PFD_FD_Push#(A:AUTOPILOT MASTER, Bool) ! if{ 0 (>K:TOGGLE_FLIGHT_DIRECTOR) }
PFD_HDG_Push#(>K:AP_PANEL_HEADING_HOLD)
//Working Title/G1000 NXi/Avionics
AS1000_VNAV_TOGGLE#(>H:AS1000_VNAV_TOGGLE)
Mid_Display_Backup_Push#(L:AS1000_MID_Display_Backup_Active) ! (>L:AS1000_MID_Display_Backup_Active)
Mid_ICS_Isolation_COPLT_Push#(>H:AS1000_MID_Isolate_Copilot_Push) (A:INTERCOM MODE, Enum) 2 == (A:INTERCOM SYSTEM ACTIVE, Bool) and if{ (>K:TOGGLE_ICS) } els{ (A:INTERCOM SYSTEM ACTIVE, Bool) ! if{ (>K:TOGGLE_ICS) 2 (>K:INTERCOM_MODE_SET) } els{ 2 0 1 3 (A:INTERCOM MODE, Enum) case (>K:INTERCOM_MODE_SET) } } 
Mid_ICS_Isolation_PILOT_Push#(>H:AS1000_MID_Isolate_Pilot_Push) (A:INTERCOM MODE, Enum) 0 == (A:INTERCOM SYSTEM ACTIVE, Bool) and if{ (>K:TOGGLE_ICS) } els{ (A:INTERCOM SYSTEM ACTIVE, Bool) ! if{ (>K:TOGGLE_ICS) 0 (>K:INTERCOM_MODE_SET) } els{ 1 2 0 3 (A:INTERCOM MODE, Enum) case (>K:INTERCOM_MODE_SET) } } 
Mid_PASS_COPLT_Knob_DEC_#(>H:AS1000_MID_Pass_Copilot_DEC)
Mid_PASS_COPLT_Knob_INC#(>H:AS1000_MID_Pass_Copilot_INC)
Mid_PASS_PILOT_Inner_Knob_DEC#(A:AUDIO PANEL VOLUME, percent) -- 0 max (>K:AUDIO_PANEL_VOLUME_SET) 
Mid_PASS_PILOT_Inner_Knob_INC#(A:AUDIO PANEL VOLUME, percent) ++ 100 min (>K:AUDIO_PANEL_VOLUME_SET) 
//Working Title/G1000 NXi/Navigation
G1000_MFD_PAN_JOYSTICK_LONG_PRESS_DOWN_Input_OnPress#1 (>L:myBtnDN,bool) (E:SIMULATION TIME,second) 0.25 + d (>L:myTshortDN) (>L:myTlongDN)
G1000_MFD_PAN_JOYSTICK_LONG_PRESS_DOWN_Input_OnRelease#(E:SIMULATION TIME,second) (L:myTshortDN) < if{ (>H:AS1000_MFD_JOYSTICK_DOWN) } 0 (>L:myBtnDN) 0 (>L:myTshortDN) 0 (>L:myTlongDN)
G1000_MFD_PAN_JOYSTICK_LONG_PRESS_LEFT_Input_OnPress#1 (>L:myBtnLF,bool) (E:SIMULATION TIME,second) 0.25 + d (>L:myTshortLF) (>L:myTlongLF)
G1000_MFD_PAN_JOYSTICK_LONG_PRESS_LEFT_Input_OnRelease#(E:SIMULATION TIME,second) (L:myTshortLF) < if{ (>H:AS1000_MFD_JOYSTICK_LEFT) } 0 (>L:myBtnLF) 0 (>L:myTshortLF) 0 (>L:myTlongLF)
G1000_MFD_PAN_JOYSTICK_LONG_PRESS_RIGHT_Input_OnPress#1 (>L:myBtnRH,bool) (E:SIMULATION TIME,second) 0.25 + d (>L:myTshortRH) (>L:myTlongRH)
G1000_MFD_PAN_JOYSTICK_LONG_PRESS_RIGHT_Input_OnRelease#(E:SIMULATION TIME,second) (L:myTshortRH) < if{ (>H:AS1000_MFD_JOYSTICK_RIGHT) } 0 (>L:myBtnRH) 0 (>L:myTshortRH) 0 (>L:myTlongRH)
G1000_MFD_PAN_JOYSTICK_LONG_PRESS_UP_Input_OnPress#1 (>L:myBtn,bool) (E:SIMULATION TIME,second) 0.25 + d (>L:myTshort) (>L:myTlong)
G1000_MFD_PAN_JOYSTICK_LONG_PRESS_UP_Input_OnRelease#(E:SIMULATION TIME,second) (L:myTshort) < if{ (>H:AS1000_MFD_JOYSTICK_UP) } 0 (>L:myBtn) 0 (>L:myTshort) 0 (>L:myTlong)
//Working Title/G1000 NXi/Radio
Mid_ADF_Push#(>K:RADIO_ADF_IDENT_TOGGLE) (>H:AS1000_MID_ADF_Push)
Mid_AUX_Push#(>H:AS1000_MID_AUX_Push)
Mid_Com1_2_Swap_Push#(>H:AS1000_MID_COM_Swap_1_2_Push)
Mid_DME_Push#(>K:RADIO_DME1_IDENT_TOGGLE) (>H:AS1000_MID_DME_Push) 
Mid_MAN_SQ_Push#(>H:AS1000_MID_MAN_SQ_Push)
Mid_MKR_MUTE_Push#0 (>K:MARKER_BEACON_TEST_MUTE) (>H:AS1000_MID_MKR_Mute_Push) 
Mid_NAV_2_Push#(>K:RADIO_VOR2_IDENT_TOGGLE) (>H:AS1000_MID_NAV_2_Push) 
Mid_NAV1_Push#(>K:RADIO_VOR1_IDENT_TOGGLE) (>H:AS1000_MID_NAV_1_Push)
Mid_PA_Push#(>H:AS1000_MID_PA_Push)
Mid_PLAY_Push#(>H:AS1000_MID_Play_Push)
Mid_SPKR_Push#(>K:TOGGLE_SPEAKER) (>H:AS1000_MID_SPKR_Push)
Mid_COM1_Button_Push#(A:COM RECEIVE:1, Bool) if{ 0 } els{ 1 } (>K:COM1_RECEIVE_SELECT) (>H:AS1000_MID_COM_1_Push) 
Mid_COM1_Mic_Button_Push#(>H:AS1000_MID_COM_Mic_1_Push) 0 (>K:PILOT_TRANSMITTER_SET) 0 (>K:COPILOT_TRANSMITTER_SET)
Mid_COM2_Button_Push#(A:COM RECEIVE:2, Bool) if{ 0 } els{ 1 } (>K:COM2_RECEIVE_SELECT) (>H:AS1000_MID_COM_2_Push) 
Mid_COM2_Mic_Button_Push#(>H:AS1000_MID_COM_Mic_2_Push) 1 (>K:PILOT_TRANSMITTER_SET) 1 (>K:COPILOT_TRANSMITTER_SET) 
Mid_COM3_Button_Push#(>H:AS1000_MID_COM_3_Push)
Mid_COM3_Mic_Button_Push#(>H:AS1000_MID_COM_Mic_3_Push)
//Working Title/G3X-Touch/Avionics
Unit_1_Right_Inner_Knob_Decrease#(>H:AS3X_TOUCH_1_KNOB_INNER_R_DEC)
Unit_1_Right_Inner_Knob_Increase#(>H:AS3X_TOUCH_1_KNOB_INNER_R_INC)
Unit_1_Right_Outer_Knob_Decrease#(>H:AS3X_TOUCH_1_KNOB_OUTER_R_DEC)
Unit_1_Right_Outer_Knob_Increase#(>H:AS3X_TOUCH_1_KNOB_OUTER_R_INC)
Unit_2_Right_Inner_Knob_Decrease#(>H:AS3X_TOUCH_2_KNOB_INNER_R_DEC)
Unit_2_Right_Inner_Knob_Increase#(>H:AS3X_TOUCH_2_KNOB_INNER_R_INC)
Unit_2_Right_Outer_Knob_Decrease#(>H:AS3X_TOUCH_2_KNOB_OUTER_R_DEC)
Unit_2_Right_Outer_Knob_Increase#(>H:AS3X_TOUCH_2_KNOB_OUTER_R_INC)
//iFly/737-Max8/APU
APU_OFF#7 (>L:VC_Engine_APU_trigger_VAL,number)
APU_ON#8 (>L:VC_Engine_APU_trigger_VAL,number)
//iFly/737-Max8/Air Condition and Pressurization
AFT_CAB_TEMP_-_Decrease#17 (>L:VC_Air_Systems_trigger_VAL,number)
AFT_CAB_TEMP_-_Increase#16 (>L:VC_Air_Systems_trigger_VAL,number)
AIR_TEMP_Source_Knob_Decrease#9 (>L:VC_Air_Systems_trigger_VAL,number)
AIR_TEMP_Source_Knob_Increase#8 (>L:VC_Air_Systems_trigger_VAL,number)
ALT_HORN_CUTOUT_-_PRESS#5 (>L:VC_Air_Systems_trigger_VAL,number)
APU_BLEED_-_OFF#36 (>L:VC_Air_Systems_trigger_VAL,number)
APU_BLEED_-_ON#37 (>L:VC_Air_Systems_trigger_VAL,number)
CONT_CAB_TEMP_-_Increase#12 (>L:VC_Air_Systems_trigger_VAL,number)
CONT_CAB_TEMP_=_Decrease#13 (>L:VC_Air_Systems_trigger_VAL,number)
ENG_1_BLEED_-_OFF#32 (>L:VC_Air_Systems_trigger_VAL,number)
ENG_1_BLEED_-_ON#33 (>L:VC_Air_Systems_trigger_VAL,number)
ENG_1_BLEED_-_ON#35 (>L:VC_Air_Systems_trigger_VAL,number)
ENG_2_BLEED_-_OFF#34 (>L:VC_Air_Systems_trigger_VAL,number)
Equip_Cooling_Exhaust_-_ALTN#4 (>L:VC_Air_Systems_trigger_VAL,number)
Equip_Cooling_Exhaust_-_NORM#3 (>L:VC_Air_Systems_trigger_VAL,number)
Equip_Cooling_Supply_-_ALTN#2 (>L:VC_Air_Systems_trigger_VAL,number)
Equip_Cooling_Supply_-_NORM#1 (>L:VC_Air_Systems_trigger_VAL,number)
FLT_ALT_-_Decrease#39 (>L:VC_Air_Systems_trigger_VAL,number)
FLT_ALT_-_Increase#39 (>L:VC_Air_Systems_trigger_VAL,number)
FWD_CAB_TEMP_-_Decrease#15 (>L:VC_Air_Systems_trigger_VAL,number)
FWD_CAB_TEMP_-_Increase#14 (>L:VC_Air_Systems_trigger_VAL,number)
ISOLATION_VALVE_-_OFF#28 (>L:VC_Air_Systems_trigger_VAL,number)
ISOLATION_VALVE_=_ON#29 (>L:VC_Air_Systems_trigger_VAL,number)
L_PACK_-_OFF#24 (>L:VC_Air_Systems_trigger_VAL,number)
L_PACK_-_ON#25 (>L:VC_Air_Systems_trigger_VAL,number)
L_RECIRC_FAN_-_AUTO#19 (>L:VC_Air_Systems_trigger_VAL,number)
L_RECIRC_FAN_-_OFF#18 (>L:VC_Air_Systems_trigger_VAL,number)
LAND_ALT_-_Decrease#40 (>L:VC_Air_Systems_trigger_VAL,number)
LAND_ALT_-_Increase#41 (>L:VC_Air_Systems_trigger_VAL,number)
OUTFLOW_VALVE_-_CLOSE#42 (>L:VC_Air_Systems_trigger_VAL,number)
OUTFLOW_VALVE_-_OPEN#43 (>L:VC_Air_Systems_trigger_VAL,number)
Pressurization_Control_Knob_-_Decrease#44 (>L:VC_Air_Systems_trigger_VAL,number)
Pressurization_Control_Knob_-_Increase#45 (>L:VC_Air_Systems_trigger_VAL,number)
R_PACK_-_OFF#26 (>L:VC_Air_Systems_trigger_VAL,number)
R_PACK_-_ON#27 (>L:VC_Air_Systems_trigger_VAL,number)
R_RECIRC_FAN_-_AUTO#21 (>L:VC_Air_Systems_trigger_VAL,number)
R_RECIRC_FAN_-_OFF#20 (>L:VC_Air_Systems_trigger_VAL,number)
TRIM_AIR_-_OFF#10 (>L:VC_Air_Systems_trigger_VAL,number)
TRIM_AIR_-_ON#11 (>L:VC_Air_Systems_trigger_VAL,number)
//iFly/737-Max8/Anti Ice
Engine_1_Anti_Ice_OFF#21 (>L:VC_Anti_Ice_trigger_VAL, Number) 
Engine_1_Anti_Ice_ON#22 (>L:VC_Anti_Ice_trigger_VAL, Number)
Engine_2_Anti_Ice_OFF#23 (>L:VC_Anti_Ice_trigger_VAL, Number)
Engine_2_Anti_Ice_ON#24 (>L:VC_Anti_Ice_trigger_VAL, Number)
Probe_Heat_A_OFF#15 (>L:VC_Anti_Ice_trigger_VAL, Number)
Probe_Heat_A_ON#16 (>L:VC_Anti_Ice_trigger_VAL, Number)
Probe_Heat_B_OFF#17 (>L:VC_Anti_Ice_trigger_VAL, Number) 
Probe_Heat_B_ON#18 (>L:VC_Anti_Ice_trigger_VAL, Number)
Window_Heat_1_OFF#7 (>L:VC_Anti_Ice_trigger_VAL, Number)
Window_Heat_1_ON#8 (>L:VC_Anti_Ice_trigger_VAL, Number)
Window_Heat_2_OFF#9 (>L:VC_Anti_Ice_trigger_VAL, Number)
Window_Heat_2_ON#10 (>L:VC_Anti_Ice_trigger_VAL, Number)
Window_Heat_3_OFF#11 (>L:VC_Anti_Ice_trigger_VAL, Number)
Window_Heat_3_ON#12 (>L:VC_Anti_Ice_trigger_VAL, Number)
Window_Heat_4_OFF#13 (>L:VC_Anti_Ice_trigger_VAL, Number) 
Window_Heat_4_ON#14 (>L:VC_Anti_Ice_trigger_VAL, Number)
Wing_Anti_Ice_OFF#19 (>L:VC_Anti_Ice_trigger_VAL, Number) 
Wing_Anti_Ice_ON#20 (>L:VC_Anti_Ice_trigger_VAL, Number)
//iFly/737-Max8/Autopilot
A_P_P_RST_Light_PRESS#61 (>L:VC_Automatic_Flight_trigger_VAL)
A_T_ARM_SWITCH_OFF#2 (>L:VC_Automatic_Flight_trigger_VAL,number)
A_T_ARM_SWITCH_ON#1 (>L:VC_Automatic_Flight_trigger_VAL,number)
A_T_P_RST_PRESS#65 (>L:VC_Automatic_Flight_trigger_VAL)
ALT_INTV# 33 (>L:VC_Automatic_Flight_trigger_VAL,number)
AP_CRS_L_DEC#11 (>L:VC_Automatic_Flight_trigger_VAL, 0)
AP_CRS_L_INC#12 (>L:VC_Automatic_Flight_trigger_VAL, 0)
AP_CRS_R_DEC#13 (>L:VC_Automatic_Flight_trigger_VAL, 0)
AP_CRS_R_INC#14 (>L:VC_Automatic_Flight_trigger_VAL, 0)
CAPT_FLIGHT_DIRECTOR_OFF#41 (>L:VC_Automatic_Flight_trigger_VAL,number) 
CAPT_FLIGHT_DIRECTOR_ON#42 (>L:VC_Automatic_Flight_trigger_VAL,number) 
CO#19 (>L:VC_Automatic_Flight_trigger_VAL, 0)
FO_FLIGHT_DIRECTOR_OFF#43 (>L:VC_Automatic_Flight_trigger_VAL,number)
FO_FLIGHT_DIRECTOR_ON#44 (>L:VC_Automatic_Flight_trigger_VAL,number) 
MCP_ALT_Decrease#31 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_ALT_HLD#55 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_ALT_Increase#32 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_AP_A_CMD#7 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_AP_B_CMD#9 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_APP#53 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_CWS_A#37 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_CWS_B#39 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_HDG_Decrease#27 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_HDG_Increase#28 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_HDG_Select#51 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_LNAV#5 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_LVL_CHG#49 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_N1#45 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_SPD#47 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_SPD_Decrease#21 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_SPD_Increase#22 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_V_S#57 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_V_S_Decrease#35 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_V_S_Increase#36 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_VNAV#3 (>L:VC_Automatic_Flight_trigger_VAL, 0)
MCP_VOR_LOC#29 (>L:VC_Automatic_Flight_trigger_VAL, 0)
SPD_INTV#23 (>L:VC_Automatic_Flight_trigger_VAL,number)
//iFly/737-Max8/Autothrust System
TOGA_Press#15 (>L:VC_Automatic_Flight_trigger_VAL,number)
TOGA_Release#16 (>L:VC_Automatic_Flight_trigger_VAL,number)
//iFly/737-Max8/EFIS
ARPT__Capt_#75 (>L:VC_Instruments_trigger_VAL, Number)
ARPT__FO_#77 (>L:VC_Instruments_trigger_VAL, Number)
BARO_DEC#32 (>L:VC_Instruments_Trigger_VAL) 31 (>L:VC_Instruments_Trigger_VAL)
BARO_HPA#27 (>L:VC_Instruments_Trigger_VAL) 28 (>L:VC_Instruments_Trigger_VAL)
BARO_INC#31 (>L:VC_Instruments_Trigger_VAL) 32 (>L:VC_Instruments_Trigger_VAL)
BARO_INHG#28 (>L:VC_Instruments_Trigger_VAL) 27 (>L:VC_Instruments_Trigger_VAL)
BARO_STD#35 (>L:VC_Instruments_Trigger_VAL)
CAPT_VOR_ADF_SWITCH_ADF1#20 (>L:VC_CAPT_EFIS_VORADF_L_SW_VAL)
CAPT_VOR_ADF_SWITCH_OFF#10 (>L:VC_CAPT_EFIS_VORADF_L_SW_VAL) 
CAPT_VOR_ADF_SWITCH_VOR1#0 (>L:VC_CAPT_EFIS_VORADF_L_SW_VAL)
Clock_Button__Capt_#109 (>L:VC_Instruments_trigger_VAL, Number)
Clock_Button__FO_#111 (>L:VC_Instruments_trigger_VAL, Number)
DATA__Capt_#79 (>L:VC_Instruments_trigger_VAL, Number)
DATA__FO_#81 (>L:VC_Instruments_trigger_VAL, Number)
MAP_CTR#47 (>L:VC_Instruments_trigger_VAL, 0)
MAP_CTR__FO_#49 (>L:VC_Instruments_trigger_VAL, Number)
MAP_MODE_DOWN#43 (>L:VC_Instruments_trigger_VAL, number)
MAP_MODE_UP#44 (>L:VC_Instruments_trigger_VAL, number)
MINS_BARO#7 (>L:VC_Instruments_Trigger_VAL) 8 (>L:VC_Instruments_Trigger_VAL)
MINS_DEC#11 (>L:VC_Instruments_Trigger_VAL)
MINS_INC#12 (>L:VC_Instruments_Trigger_VAL)
MINS_RADIO#8 (>L:VC_Instruments_Trigger_VAL) 7 (>L:VC_Instruments_Trigger_VAL)
MINS_RST#15 (>L:VC_Instruments_Trigger_VAL)
POS__Capt_#83 (>L:VC_Instruments_trigger_VAL, Number)
POS__FO_#85 (>L:VC_Instruments_trigger_VAL, Number)
RANGE_DEC#51 (>L:VC_Instruments_trigger_VAL, 0)
RANGE_INC#52 (>L:VC_Instruments_trigger_VAL, 0)
STA__Capt_#67 (>L:VC_Instruments_trigger_VAL, Number)
STA__FO_#69 (>L:VC_Instruments_trigger_VAL, Number)
TERR__Capt_#87 (>L:VC_Instruments_trigger_VAL, Number)
TERR__FO_#89 (>L:VC_Instruments_trigger_VAL, Number)
TFC#55 (>L:VC_Instruments_trigger_VAL, 0)
TFC__FO_#57 (>L:VC_Instruments_trigger_VAL, Number)
VSD__Capt_#91 (>L:VC_Instruments_trigger_VAL, Number)
VSD__FO_#93 (>L:VC_Instruments_trigger_VAL, Number)
WPT__Capt_#71 (>L:VC_Instruments_trigger_VAL, Number)
WPT__FO_#73 (>L:VC_Instruments_trigger_VAL, Number)
WXR__Capt_#63 (>L:VC_Instruments_trigger_VAL, Number)
WXR__FO_#65 (>L:VC_Instruments_trigger_VAL, Number)
//iFly/737-Max8/Electrical
APU_GEN_1#26 (>L:VC_Electrical_trigger_VAL,number)
APU_GEN_2#28 (>L:VC_Electrical_trigger_VAL,number)
Battery_Off#7 (>L:VC_Electrical_trigger_VAL, Number)
Battery_On#8 (>L:VC_Electrical_trigger_VAL, Number)
GEN_1#22 (>L:VC_Electrical_trigger_VAL,number)
GEN_2#24 (>L:VC_Electrical_trigger_VAL,number)
GRD_PWR__OFF#18 (>L:VC_Electrical_trigger_VAL,number)
GRD_PWR_ON#17 (>L:VC_Electrical_trigger_VAL,number)
//iFly/737-Max8/Engine
Engine_1_fuel_control_lever_idle#12 (>L:VC_Engine_APU_trigger_VAL,number)
Engine_1_fule_lever_CUTOFF#11 (>L:VC_Engine_APU_trigger_VAL,number)
Engine_1_starter__clock_wise#4 (>L:VC_Engine_APU_trigger_VAL,number)
Engine_1_starter_counter_clock_wise#3 (>L:VC_Engine_APU_trigger_VAL,number)
Engine_2_Fuel_lever_CUTOFF#13 (>L:VC_Engine_APU_trigger_VAL,number)
Engine_2_Fuel_lever_idle#14 (>L:VC_Engine_APU_trigger_VAL,number)
Engine_2_starter_clock_wise#6 (>L:VC_Engine_APU_trigger_VAL,number)
Engine_2_starter_counter_clock_wise#5 (>L:VC_Engine_APU_trigger_VAL,number)
Engine_Ignition_Both#10 (>L:VC_Ignition_Select_SW_VAL,number)
Engine_Ignition_Left#0 (>L:VC_Ignition_Select_SW_VAL,number)
Engine_Ignition_Right#20 (>L:VC_Ignition_Select_SW_VAL,number)
//iFly/737-Max8/Fuel
Left_AFT_Fuel_Pump_OFF#7 (>L:VC_Fuel_trigger_VAL,number)
Left_AFT_Fuel_Pump_ON#6 (>L:VC_Fuel_trigger_VAL,number)
Left_Aft_Fuel_Pump_On#7 (>L:VC_Fuel_trigger_VAL,number)
Left_CTR_Fuel_Pump_OFF#3 (>L:VC_Fuel_trigger_VAL,number)
Left_CTR_Fuel_Pump_ON#2 (>L:VC_Fuel_trigger_VAL,number)
Left_FWD_Fuel_Pump_OFF#9 (>L:VC_Fuel_trigger_VAL,number)
Left_FWD_Fuel_Pump_ON#8 (>L:VC_Fuel_trigger_VAL,number)
Right_AFT_Fuel_Pump_OFF#13 (>L:VC_Fuel_trigger_VAL,number)
Right_AFT_Fuel_Pump_ON#12 (>L:VC_Fuel_trigger_VAL,number)
Right_CTR_Fuel_Pump_OFF#5 (>L:VC_Fuel_trigger_VAL,number)
Right_CTR_Fuel_Pump_ON#4 (>L:VC_Fuel_trigger_VAL,number)
Right_FWD_Fuel_Pump_OFF#11 (>L:VC_Fuel_trigger_VAL,number)
Right_FWD_Fuel_Pump_ON#10 (>L:VC_Fuel_trigger_VAL,number)
//iFly/737-Max8/Gear
AUTO8BRAKE_RTO#0 (>L:VC_Autobrake_SW_VAL)
AUTOBRAKE_1#20 (>L:VC_Autobrake_SW_VAL)
AUTOBRAKE_2#30 (>L:VC_Autobrake_SW_VAL)
AUTOBRAKE_3#40 (>L:VC_Autobrake_SW_VAL)
AUTOBRAKE_MAX#50 (>L:VC_Autobrake_SW_VAL)
AUTOBRAKE_OFF#50 (>L:VC_Autobrake_SW_VAL)
Autbrake_Off#10 (>L:VC_Autobrake_SW_VAL)
LANDING_GEAR_DOWN#2 (>L:VC_Gear_trigger_VAL,number)
LANDING_GEAR_UP#1 (>L:VC_Gear_trigger_VAL,number)
//iFly/737-Max8/Hydraulics
ELEC_1_Pump_OFF#6 (>L:VC_Hydraulics_trigger_VAL, Number)
ELEC_1_Pump_ON#5 (>L:VC_Hydraulics_trigger_VAL, Number) 
ELEC_2_Pump_OFF#8 (>L:VC_Hydraulics_trigger_VAL, Number) 
ELEC_2_Pump_ON#7 (>L:VC_Hydraulics_trigger_VAL, Number) 
ENG_1_Pump_OFF#2 (>L:VC_Hydraulics_trigger_VAL, Number) 
ENG_1_Pump_ON#1 (>L:VC_Hydraulics_trigger_VAL, Number) 
ENG_2_Pump_OFF#4 (>L:VC_Hydraulics_trigger_VAL, Number)
ENG_2_Pump_ON#3 (>L:VC_Hydraulics_trigger_VAL, Number)
//iFly/737-Max8/Lights (exterior)
ANTI_COLLISION_OFF#32 (>L:VC_Miscellaneous_trigger_VAL,number)
ANTI_COLLISION_ON#33 (>L:VC_Miscellaneous_trigger_VAL,number)
Landing_Light_L_off#18 (>L:VC_Miscellaneous_trigger_VAL,number)
Landing_Light_L_on#19 (>L:VC_Miscellaneous_trigger_VAL,number)
Landing_Light_R_off#20 (>L:VC_Miscellaneous_trigger_VAL,number)
Landing_Light_R_on#21 (>L:VC_Miscellaneous_trigger_VAL,number)
Logo_light_off#28 (>L:VC_Miscellaneous_trigger_VAL,number)
Logo_light_on#29 (>L:VC_Miscellaneous_trigger_VAL,number)
Position___Strobe_backwards#30 (>L:VC_Miscellaneous_trigger_VAL,number)
Position___Strobe_forward#31 (>L:VC_Miscellaneous_trigger_VAL,number)
Position_Light_DOWN_Nav#31 (>L:VCMiscellaneoustriggerVAL,number)
Position_Light_UP_Strobe#30 (>L:VC_Miscellaneous_trigger_VAL,number)
Taxi_light_off#26 (>L:VC_Miscellaneous_trigger_VAL,number)
Taxi_light_on#27 (>L:VC_Miscellaneous_trigger_VAL,number)
Turn_Off_Both_off#22 (>L:VC_Miscellaneous_trigger_VAL,number) 24 (>L:VC_Miscellaneous_trigger_VAL,number)
Turn_Off_Both_on#23 (>L:VC_Miscellaneous_trigger_VAL,number) 25 (>L:VC_Miscellaneous_trigger_VAL,number)
Turn_Off_L_off#22 (>L:VC_Miscellaneous_trigger_VAL,number)
Turn_Off_L_on#23 (>L:VC_Miscellaneous_trigger_VAL,number)
Turn_Off_R_off#24 (>L:VC_Miscellaneous_trigger_VAL,number)
Turn_Off_R_on#25 (>L:VC_Miscellaneous_trigger_VAL,number)
WHEEL_WELL_OFF#36 (>L:VC_Miscellaneous_trigger_VAL,number)
WHEEL_WELL_ON#37 (>L:VC_Miscellaneous_trigger_VAL,number)
WING_OFF#34 (>L:VC_Miscellaneous_trigger_VAL,number)
WING_ON#35 (>L:VC_Miscellaneous_trigger_VAL,number)
//iFly/737-Max8/Lights
ADS_Flood_Decrease#139 (>L:VC_Instruments_trigger_VAL, Number)
ADS_Flood_Increase#140 (>L:VC_Instruments_trigger_VAL, Number)
Background_Lighting_Decrease#137(>L:VC_Instruments_trigger_VAL, Number)
Background_Lighting_Increase#138 (>L:VC_Instruments_trigger_VAL, Number)
Emergency_Exit_Light_off#13 (>L:VC_Miscellaneous_trigger_VAL)
Emergency_Exit_Light_on#12 (>L:VC_Miscellaneous_trigger_VAL)
Inboard_DU_Brightness_Decrease__Capt_#129 (>L:VC_Instruments_trigger_VAL, Number)
Inboard_DU_Brightness_Decrease__FO_#131 (>L:VC_Instruments_trigger_VAL, Number)
Inboard_DU_Brightness_Increase__Capt_#130 (>L:VC_Instruments_trigger_VAL, Number)
Inboard_DU_Brightness_Increase__FO_#132 (>L:VC_Instruments_trigger_VAL, Number)
Inboard_DU_Contrast_Decrease__Capt_#133 (>L:VC_Instruments_trigger_VAL, Number)
Inboard_DU_Contrast_Decrease__FO_#135 (>L:VC_Instruments_trigger_VAL, Number)
Inboard_DU_Contrast_Increase__Capt_#134 (>L:VC_Instruments_trigger_VAL, Number)
Inboard_DU_Contrast_Increase__FO_#136 (>L:VC_Instruments_trigger_VAL, Number)
Main_Panel_Brightness_Decrease__Capt_#113 (>L:VC_Instruments_trigger_VAL, Number)
Main_Panel_Brightness_Decrease__FO_#115 (>L:VC_Instruments_trigger_VAL, Number)
Main_Panel_Brightness_Increase__Capt_#114 (>L:VC_Instruments_trigger_VAL, Number)
Main_Panel_Brightness_Increase__FO_#116 (>L:VC_Instruments_trigger_VAL, Number)
OVHD_Panel_Brightness_Decrease#10 (>L:VC_Miscellaneous_trigger_VAL, Number)
OVHD_Panel_Brightness_Increase#11 (>L:VC_Miscellaneous_trigger_VAL, Number)
Outboard_DU_Brightness_Decrease__Capt_#121 (>L:VC_Instruments_trigger_VAL, Number)
Outboard_DU_Brightness_Decrease__FO_#123 (>L:VC_Instruments_trigger_VAL, Number)
Outboard_DU_Brightness_Increase__Capt_#122 (>L:VC_Instruments_trigger_VAL, Number)
Outboard_DU_Brightness_Increase__FO_#124 (>L:VC_Instruments_trigger_VAL, Number)
Outboard_DU_Contrast_Decrease__Capt_#125 (>L:VC_Instruments_trigger_VAL, Number)
Outboard_DU_Contrast_Decrease__FO_#127 (>L:VC_Instruments_trigger_VAL, Number)
Outboard_DU_Contrast_Increase__Capt_#126 (>L:VC_Instruments_trigger_VAL, Number)
Outboard_DU_Contrast_Increase__FO_#128 (>L:VC_Instruments_trigger_VAL, Number)
Pedestal_Dome_Control_Brightness_Decrease#46 (>L:VC_Miscellaneous_trigger_VAL, Number)
Pedestal_Dome_Control_Brightness_Increase#47 (>L:VC_Miscellaneous_trigger_VAL, Number)
Pedestal_Panel_Brightness_Decrease#48 (>L:VC_Miscellaneous_trigger_VAL, Number)
Pedestal_Panel_Brightness_Increase#49 (>L:VC_Miscellaneous_trigger_VAL, Number)
Taxi_Lights_OFF#26 (>L:VC_Miscellaneous_trigger_VAL)
Taxi_Lights_ON#27 (>L:VC_Miscellaneous_trigger_VAL)
//iFly/737-Max8/MCDU (left)
L_MCDU_Key_EXEC#95 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key___-#178 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key__#176 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key__#172 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_0#96 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_1#98 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_2#100 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_3#102 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_4#104 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_5#106 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_6#108 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_7#110 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_8#112 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_9#114 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_A#116 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_ATC#73 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_B#118 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_BRT__#181 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_BRT_-#180 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_C#120 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_CLR#174 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_D#122 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_DEL#170 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_DEP_ARR#71 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_E#124 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_F#126 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_FIX#77 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_FMC_COMM#83 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_G#128 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_H#130 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_HOLD#81 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_I#132 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_INIT_REF#67 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_J#134 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_K#136 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_L#138 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_LEGS#79 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_M#140 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_MENU#87 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_N#142 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_N1_LIMIT#89 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_NEXT#93 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_O#144 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_P#146 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_PREV#91 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_PROG#85 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_Q#148 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_R#150 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_RTE#69 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_S#152 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_SP#168 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_T#154 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_U#156 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_V#158 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_VNAV#75 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_W#160 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_X#162 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_Y#164 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_Key_Z#166 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_LSK_1#43 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_LSK_2#45 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_LSK_3#47 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_LSK_4#49 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_LSK_5#51 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_LSK_6#53 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_RSK_1#55 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_RSK_2#57 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_RSK_3#59 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_RSK_4#61 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_RSK_5#63 (>L:VC_Navigation_trigger_VAL, Number)
L_MCDU_RSK_6#65 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_LSK_1#182 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_LSK_2#184 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_LSK_3#186 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_LSK_4#188 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_LSK_5#190 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_LSK_6#192 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_RSK_1#194 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_RSK_2#196 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_RSK_3#198 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_RSK_4#200 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_RSK_5#202 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_RSK_6#204 (>L:VC_Navigation_trigger_VAL, Number)
//iFly/737-Max8/MCDU (right)
R_MCDU_Key___-#317 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key__#315 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key__#311 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_0#235 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_1#237 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_2#239 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_3#241 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_4#243 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_5#245 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_6#247 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_7#249 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_8#251 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_9#253 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_A#255 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_ATC#212 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_B#257 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_BRT__#320 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_BRT_-#319 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_C#259 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_CLR#313 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_D#261 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_DEL#309 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_DEP_ARR#210 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_E#263 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_EXEC#234 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_F#265 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_FIX#216 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_FMC_COMM#222 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_G#267 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_H#269 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_HOLD#220 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_I#271 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_INIT_REF#206 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_J#273 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_K#275 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_L#277 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_LEGS#218 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_M#279 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_MENU#226 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_N#281 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_N1_LIMIT#228 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_NEXT#232 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_O#283 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_P#285 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_PREV#230 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_PROG#224 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_Q#287 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_R#289 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_RTE#208 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_S#291 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_SP#307 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_T#293 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_U#295 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_V#297 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_VNAV#214 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_W#299 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_X#301 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_Y#303 (>L:VC_Navigation_trigger_VAL, Number)
R_MCDU_Key_Z#305 (>L:VC_Navigation_trigger_VAL, Number)
//iFly/737-Max8/Miscellaneous
Aft_passenger_door_open_close#6 (>L:Animation_trigger_VAL)
Attendant_Call_Press# 1 (>L:VC_Communications_trigger_VAL,number) 
DOME_LIGHT_DOWN#DOME_LIGHT_DOWN#39 (>L:VC_Miscellaneous_trigger_VAL, Number)
DOME_LIGHT_UP#DOME_LIGHT_UP#38 (>L:VC_Miscellaneous_trigger_VAL, Number)
FLUSH_FORWARD_LAVATORY#225 (>L:Animation_Trigger_VAL, 0)
Forward_passenger_door_open_close#2 (>L:Animation_trigger_VAL)
HUD#158 (>L:VC_Instruments_trigger_VAL,number)
HUD_STOW_DEPLOY#(L:VC_HUD_MOVE_VAL,number)
Parking_Brake_OFF#8 (>L:VC_Gear_trigger_VAL)
Parking_Brake_ON#7 (>L:VC_Gear_trigger_VAL)
//iFly/737-Max8/Navigation
IRS_LEFT_On#36 (>L:VC_Navigation_trigger_VAL,number)
//iFly/737-Max8/Radio
Transponder_Ident#411(>L:VC_Navigation_trigger_VAL,number)
//iFly/737-Max8/Safety
No_Smoking_off#15 (>L:VC_Miscellaneous_trigger_VAL,number)
No_Smoking_on#14 (>L:VC_Miscellaneous_trigger_VAL,number)
Seatbelt_off#17 (>L:VC_Miscellaneous_trigger_VAL,number)
Seatbelt_on#16 (>L:VC_Miscellaneous_trigger_VAL,number)
//iFly/737-Max8/Warning
737Max8_Fire_Warning_1_Light_Switch_Press#9 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Fire_Warning_1_Light_Switch_Release#10 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Mach_Airspeed_1_Warning_Test_Switch_Press#1 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Mach_Airspeed_1_Warning_Test_Switch_Release#2 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Mach_Airspeed_2_Warning_Test_Switch_Press#3 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Mach_Airspeed_2_Warning_Test_Switch_Release#4 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Master_Caution_L_Light_Switch_Press#13 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Master_Caution_L_Light_Switch_Release#14 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Master_Caution_R_Light_Switch_Press#11 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Master_Caution_R_Light_Switch_Release#12 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Stall_1_Warning_Test_Switch_Press#5 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Stall_1_Warning_Test_Switch_Release#6 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Stall_2_Warning_Test_Switch_Press#7 (>L:VC_Warning_Systems_trigger_VAL,number)
737Max8_Stall_2_Warning_Test_Switch_Release#8 (>L:VC_Warning_Systems_trigger_VAL,number)
Captain_Recall_Press#17 (>L:VC_Warning_Systems_trigger_VAL,number)